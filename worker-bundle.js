(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
// Blur filter
//

'use strict';


var _blurKernel = new Uint8Array([
  1, 2, 1,
  2, 4, 2,
  1, 2, 1
]);

var _bkWidth = Math.floor(Math.sqrt(_blurKernel.length));
var _bkHalf = Math.floor(_bkWidth / 2);
var _bkWsum = 0;
for (var wc=0; wc < _blurKernel.length; wc++) { _bkWsum += _blurKernel[wc]; }


function blurPoint(gs, x, y, srcW, srcH) {
  var bx, by, sx, sy, w, wsum, br;
  var bPtr = 0;
  var blurKernel = _blurKernel;
  var bkHalf = _bkHalf;

  wsum = 0; // weight sum to normalize result
  br   = 0;

  if (x >= bkHalf && y >= bkHalf && x + bkHalf < srcW && y + bkHalf < srcH) {
    for (by = 0; by < 3; by++) {
      for (bx = 0; bx < 3; bx++) {
        sx = x + bx - bkHalf;
        sy = y + by - bkHalf;

        br += gs[sx + sy * srcW] * blurKernel[bPtr++];
      }
    }
    return (br - (br % _bkWsum)) / _bkWsum;
  }

  for (by = 0; by < 3; by++) {
    for (bx = 0; bx < 3; bx++) {
      sx = x + bx - bkHalf;
      sy = y + by - bkHalf;

      if (sx >= 0 && sx < srcW && sy >= 0 && sy < srcH) {
        w = blurKernel[bPtr];
        wsum += w;
        br += gs[sx + sy * srcW] * w;
      }
      bPtr++;
    }
  }
  return ((br - (br % wsum)) / wsum)|0;
}

function blur(src, srcW, srcH/*, radius*/) {
  var x, y,
      output = new Uint16Array(src.length);

  for (x = 0; x < srcW; x++) {
    for (y = 0; y < srcH; y++) {
      output[y * srcW + x] = blurPoint(src, x, y, srcW, srcH);
    }
  }

  return output;
}

module.exports = blur;

},{}],2:[function(require,module,exports){
// High speed resize with tuneable speed/quality ratio

'use strict';


var unsharp = require('./unsharp');


// Precision of fixed FP values
var FIXED_FRAC_BITS = 14;
var FIXED_FRAC_VAL  = 1 << FIXED_FRAC_BITS;


//
// Presets for quality 0..3. Filter functions + window size
//
var FILTER_INFO = [
  { // Nearest neibor (Box)
    win: 0.5,
    filter: function (x) {
      return (x >= -0.5 && x < 0.5) ? 1.0 : 0.0;
    }
  },
  { // Hamming
    win: 1.0,
    filter: function (x) {
      if (x <= -1.0 || x >= 1.0) { return 0.0; }
      if (x > -1.19209290E-07 && x < 1.19209290E-07) { return 1.0; }
      var xpi = x * Math.PI;
      return ((Math.sin(xpi) / xpi) *  (0.54 + 0.46 * Math.cos(xpi / 1.0)));
    }
  },
  { // Lanczos, win = 2
    win: 2.0,
    filter: function (x) {
      if (x <= -2.0 || x >= 2.0) { return 0.0; }
      if (x > -1.19209290E-07 && x < 1.19209290E-07) { return 1.0; }
      var xpi = x * Math.PI;
      return (Math.sin(xpi) / xpi) * Math.sin(xpi / 2.0) / (xpi / 2.0);
    }
  },
  { // Lanczos, win = 3
    win: 3.0,
    filter: function (x) {
      if (x <= -3.0 || x >= 3.0) { return 0.0; }
      if (x > -1.19209290E-07 && x < 1.19209290E-07) { return 1.0; }
      var xpi = x * Math.PI;
      return (Math.sin(xpi) / xpi) * Math.sin(xpi / 3.0) / (xpi / 3.0);
    }
  }
];

function clampTo8(i) { return i < 0 ? 0 : (i > 255 ? 255 : i); }

function toFixedPoint(num) { return Math.floor(num * FIXED_FRAC_VAL); }


// Calculate convolution filters for each destination point,
// and pack data to Int16Array:
//
// [ shift, length, data..., shift2, length2, data..., ... ]
//
// - shift - offset in src image
// - length - filter length (in src points)
// - data - filter values sequence
//
function createFilters(quality, srcSize, destSize) {

  var filterFunction = FILTER_INFO[quality].filter;

  var scale         = destSize / srcSize;
  var scaleInverted = 1.0 / scale;
  var scaleClamped  = Math.min(1.0, scale); // For upscale

  // Filter window (averaging interval), scaled to src image
  var srcWindow = FILTER_INFO[quality].win / scaleClamped;

  var destPixel, srcPixel, srcFirst, srcLast, filterElementSize,
      floatFilter, fxpFilter, total, fixedTotal, pxl, idx, floatVal, fixedVal;
  var leftNotEmpty, rightNotEmpty, filterShift, filterSize;

  var maxFilterElementSize = Math.floor((srcWindow + 1) * 2 );
  var packedFilter    = new Int16Array((maxFilterElementSize + 2) * destSize);
  var packedFilterPtr = 0;

  // For each destination pixel calculate source range and built filter values
  for (destPixel = 0; destPixel < destSize; destPixel++) {

    // Scaling should be done relative to central pixel point
    srcPixel = (destPixel + 0.5) * scaleInverted;

    srcFirst = Math.max(0, Math.floor(srcPixel - srcWindow));
    srcLast  = Math.min(srcSize - 1, Math.ceil(srcPixel + srcWindow));

    filterElementSize = srcLast - srcFirst + 1;
    floatFilter = new Float32Array(filterElementSize);
    fxpFilter = new Int16Array(filterElementSize);

    total = 0.0;

    // Fill filter values for calculated range
    for (pxl = srcFirst, idx = 0; pxl <= srcLast; pxl++, idx++) {
      floatVal = filterFunction(((pxl + 0.5) - srcPixel) * scaleClamped);
      total += floatVal;
      floatFilter[idx] = floatVal;
    }

    // Normalize filter, convert to fixed point and accumulate conversion error
    fixedTotal = 0;

    for (idx = 0; idx < floatFilter.length; idx++) {
      fixedVal = toFixedPoint(floatFilter[idx] / total);
      fixedTotal += fixedVal;
      fxpFilter[idx] = fixedVal;
    }

    // Compensate normalization error, to minimize brightness drift
    fxpFilter[destSize >> 1] += toFixedPoint(1.0) - fixedTotal;

    //
    // Now pack filter to useable form
    //
    // 1. Trim heading and tailing zero values, and compensate shitf/length
    // 2. Put all to single array in this format:
    //
    //    [ pos shift, data length, value1, value2, value3, ... ]
    //

    leftNotEmpty = 0;
    while (leftNotEmpty < fxpFilter.length && fxpFilter[leftNotEmpty] === 0) {
      leftNotEmpty++;
    }

    if (leftNotEmpty < fxpFilter.length) {
      rightNotEmpty = fxpFilter.length - 1;
      while (rightNotEmpty > 0 && fxpFilter[rightNotEmpty] === 0) {
        rightNotEmpty--;
      }

      filterShift = srcFirst + leftNotEmpty;
      filterSize = rightNotEmpty - leftNotEmpty + 1;

      packedFilter[packedFilterPtr++] = filterShift; // shift
      packedFilter[packedFilterPtr++] = filterSize; // size

      packedFilter.set(fxpFilter.subarray(leftNotEmpty, rightNotEmpty + 1), packedFilterPtr);
      packedFilterPtr += filterSize;
    } else {
      // zero data, write header only
      packedFilter[packedFilterPtr++] = 0; // shift
      packedFilter[packedFilterPtr++] = 0; // size
    }
  }
  return packedFilter;
}

// Convolve image in horizontal directions and transpose output. In theory,
// transpose allow:
//
// - use the same convolver for both passes (this fails due different
//   types of input array and temporary buffer)
// - making vertical pass by horisonltal lines inprove CPU cache use.
//
// But in real life this doesn't work :)
//
function convolveHorizontally(src, dest, srcW, srcH, destW, filters) {

  var r, g, b, a;
  var filterPtr, filterShift, filterSize;
  var srcPtr, srcY, destX, filterVal;
  var srcOffset = 0, destOffset = 0;

  // For each row
  for (srcY = 0; srcY < srcH; srcY++) {
    filterPtr  = 0;

    // Apply precomputed filters to each destination row point
    for (destX = 0; destX < destW; destX++) {
      // Get the filter that determines the current output pixel.
      filterShift = filters[filterPtr++];
      filterSize  = filters[filterPtr++];

      srcPtr = (srcOffset + (filterShift * 4))|0;

      r = g = b = a = 0;

      // Apply the filter to the row to get the destination pixel r, g, b, a
      for (; filterSize > 0; filterSize--) {
        filterVal = filters[filterPtr++];

        // Use reverse order to workaround deopts in old v8 (node v.10)
        // Big thanks to @mraleph (Vyacheslav Egorov) for the tip.
        a = (a + filterVal * src[srcPtr + 3])|0;
        b = (b + filterVal * src[srcPtr + 2])|0;
        g = (g + filterVal * src[srcPtr + 1])|0;
        r = (r + filterVal * src[srcPtr])|0;
        srcPtr = (srcPtr + 4)|0;
      }

      // Bring this value back in range. All of the filter scaling factors
      // are in fixed point with FIXED_FRAC_BITS bits of fractional part.
      dest[destOffset + 3] = clampTo8(a >> 14/*FIXED_FRAC_BITS*/);
      dest[destOffset + 2] = clampTo8(b >> 14/*FIXED_FRAC_BITS*/);
      dest[destOffset + 1] = clampTo8(g >> 14/*FIXED_FRAC_BITS*/);
      dest[destOffset]     = clampTo8(r >> 14/*FIXED_FRAC_BITS*/);
      destOffset = (destOffset + srcH * 4)|0;
    }

    destOffset = ((srcY + 1) * 4)|0;
    srcOffset  = ((srcY + 1) * srcW * 4)|0;
  }
}

// Technically, convolvers are the same. But input array and temporary
// buffer can be of different type (especially, in old browsers). So,
// keep code in separate functions to avoid deoptimizations & speed loss.

function convolveVertically(src, dest, srcW, srcH, destW, filters) {

  var r, g, b, a;
  var filterPtr, filterShift, filterSize;
  var srcPtr, srcY, destX, filterVal;
  var srcOffset = 0, destOffset = 0;

  // For each row
  for (srcY = 0; srcY < srcH; srcY++) {
    filterPtr  = 0;

    // Apply precomputed filters to each destination row point
    for (destX = 0; destX < destW; destX++) {
      // Get the filter that determines the current output pixel.
      filterShift = filters[filterPtr++];
      filterSize  = filters[filterPtr++];

      srcPtr = (srcOffset + (filterShift * 4))|0;

      r = g = b = a = 0;

      // Apply the filter to the row to get the destination pixel r, g, b, a
      for (; filterSize > 0; filterSize--) {
        filterVal = filters[filterPtr++];

        // Use reverse order to workaround deopts in old v8 (node v.10)
        // Big thanks to @mraleph (Vyacheslav Egorov) for the tip.
        a = (a + filterVal * src[srcPtr + 3])|0;
        b = (b + filterVal * src[srcPtr + 2])|0;
        g = (g + filterVal * src[srcPtr + 1])|0;
        r = (r + filterVal * src[srcPtr])|0;
        srcPtr = (srcPtr + 4)|0;
      }

      // Bring this value back in range. All of the filter scaling factors
      // are in fixed point with FIXED_FRAC_BITS bits of fractional part.
      dest[destOffset + 3] = clampTo8(a >> 14/*FIXED_FRAC_BITS*/);
      dest[destOffset + 2] = clampTo8(b >> 14/*FIXED_FRAC_BITS*/);
      dest[destOffset + 1] = clampTo8(g >> 14/*FIXED_FRAC_BITS*/);
      dest[destOffset]     = clampTo8(r >> 14/*FIXED_FRAC_BITS*/);
      destOffset = (destOffset + srcH * 4)|0;
    }

    destOffset = ((srcY + 1) * 4)|0;
    srcOffset  = ((srcY + 1) * srcW * 4)|0;
  }
}


function resetAlpha(dst, width, height) {
  var ptr = 3, len = (width * height * 4)|0;
  while (ptr < len) { dst[ptr] = 0xFF; ptr = (ptr + 4)|0; }
}


function resize(options) {
  var src   = options.src;
  var srcW  = options.width;
  var srcH  = options.height;
  var destW = options.toWidth;
  var destH = options.toHeight;
  var dest  = options.dest || new Uint8Array(destW * destH * 4);
  var quality = options.quality === undefined ? 3 : options.quality;
  var alpha = options.alpha || false;
  var unsharpAmount = options.unsharpAmount === undefined ? 0 : (options.unsharpAmount|0);
  var unsharpThreshold = options.unsharpThreshold === undefined ? 0 : (options.unsharpThreshold|0);

  if (srcW < 1 || srcH < 1 || destW < 1 || destH < 1) { return []; }

  var filtersX = createFilters(quality, srcW, destW),
      filtersY = createFilters(quality, srcH, destH);

  var tmp  = new Uint8Array(destW * srcH * 4);

  // To use single function we need src & tmp of the same type.
  // But src can be CanvasPixelArray, and tmp - Uint8Array. So, keep
  // vertical and horizontal passes separately to avoid deoptimization.

  convolveHorizontally(src, tmp, srcW, srcH, destW, filtersX);
  convolveVertically(tmp, dest, srcH, destW, destH, filtersY);

  // That's faster than doing checks in convolver.
  // !!! Note, canvas data is not premultipled. We don't need other
  // alpha corrections.

  if (!alpha) {
    resetAlpha(dest, destW, destH);
  }

  if (unsharpAmount) {
    unsharp(dest, destW, destH, unsharpAmount, 1.0, unsharpThreshold);
  }

  return dest;
}


module.exports = resize;

},{"./unsharp":3}],3:[function(require,module,exports){
// Unsharp mask filter
//
// http://stackoverflow.com/a/23322820/1031804
// USM(O) = O + (2 * (Amount / 100) * (O - GB))
// GB - gaussial blur.
//
// brightness = 0.299*R + 0.587*G + 0.114*B
// http://stackoverflow.com/a/596243/1031804
//
// To simplify math, normalize brighness mutipliers to 2^16:
//
// brightness = (19595*R + 38470*G + 7471*B) / 65536

'use strict';


var blur = require('./blur');


function clampTo8(i) { return i < 0 ? 0 : (i > 255 ? 255 : i); }

// Convert image to greyscale, 16bits FP result (8.8)
//
function greyscale(src, srcW, srcH) {
  var size = srcW * srcH;
  var result = new Uint16Array(size); // We don't use sign, but that helps to JIT
  var i, srcPtr;

  for (i = 0, srcPtr = 0; i < size; i++) {
    result[i] = (src[srcPtr + 2] * 7471       // blue
               + src[srcPtr + 1] * 38470      // green
               + src[srcPtr] * 19595) >>> 8;  // red
    srcPtr = (srcPtr + 4)|0;
  }

  return result;
}


// Apply unsharp mask to src
//
// NOTE: radius is ignored to simplify gaussian blur calculation
// on practice we need radius 0.3..2.0. Use 1.0 now.
//
function unsharp(src, srcW, srcH, amount, radius, threshold) {
  var x, y, c, diff = 0, corr, srcPtr;

  // Normalized delta multiplier. Expect that:
  var AMOUNT_NORM = Math.floor(amount * 256 / 50);

  // Convert to grayscale:
  //
  // - prevent color drift
  // - speedup blur calc
  //
  var gs = greyscale(src, srcW, srcH);
  var blured = blur(gs, srcW, srcH, 1);
  var fpThreshold = threshold << 8;
  var gsPtr = 0;

  for (y = 0; y < srcH; y++) {
    for (x = 0; x < srcW; x++) {

      // calculate brightness blur, difference & update source buffer

      diff = gs[gsPtr] - blured[gsPtr];

      // Update source image if thresold exceeded
      if (Math.abs(diff) > fpThreshold) {
        // Calculate correction multiplier
        corr = 65536 + ((diff * AMOUNT_NORM) >> 8);
        srcPtr = gsPtr * 4;

        c = src[srcPtr];
        src[srcPtr++] = clampTo8((c * corr) >> 16);
        c = src[srcPtr];
        src[srcPtr++] = clampTo8((c * corr) >> 16);
        c = src[srcPtr];
        src[srcPtr] = clampTo8((c * corr) >> 16);
      }

      gsPtr++;

    } // end row
  } // end column
}


module.exports = unsharp;

},{"./blur":1}],4:[function(require,module,exports){
var vtflib = require('./vtflib');

/**
 * @return {number}
 */
var getSize = vtflib.cwrap('vlImageGetSize', 'number', []);

/**
 * @return {boolean}
 */
var saveLumb = vtflib.cwrap('vlImageSaveLump', 'boolean', ['number', 'number', 'number']);

/**
 * @return {boolean}
 */
var fromData = vtflib.cwrap('fromData', 'boolean', ['number', 'number', 'number']);

/**
 * get an emscripten pointer to a typed array
 *
 * @param {Uint8Array} sourceData
 * @returns {int}
 */
function pointerFromData(sourceData) {
	var buf = vtflib._malloc(sourceData.length);
	vtflib.HEAPU8.set(sourceData, buf);
	return buf;
}

/**
 *
 * @param pointer
 * @param size
 * @return {Uint8Array}
 */
function getDataFromPointer(pointer, size) {
	return new Uint8Array(vtflib.HEAPU8.buffer, pointer, size);
}

exports.fromRGBA = function (sourceData, width, height) {
	var buf = pointerFromData(sourceData);
	fromData(width, height, buf);
	var targetSize = getSize();
	var targetPointer = vtflib._malloc(targetSize);
	var sizePointer = vtflib._malloc(4);
	saveLumb(targetPointer, targetSize, sizePointer);
	var resultSize = (new Uint32Array(vtflib.HEAPU8.buffer, sizePointer, 1))[0];
	return getDataFromPointer(targetPointer, resultSize);
};

},{"./vtflib":5}],5:[function(require,module,exports){
(function (process,Buffer,__dirname){
var Module;if(!Module)Module=(typeof Module!=="undefined"?Module:null)||{};var moduleOverrides={};for(var key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}ENVIRONMENT_IS_WEB=typeof window==="object";var ENVIRONMENT_IS_WORKER=typeof importScripts==="function";var ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof require==="function"&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;if(typeof module!=="undefined"){module["exports"] = Module;}var ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;if(ENVIRONMENT_IS_NODE){if(!Module["print"])Module["print"]=function print(x){process["stdout"].write(x+"\n")};if(!Module["printErr"])Module["printErr"]=function printErr(x){process["stderr"].write(x+"\n")};var nodeFS=require("fs");var nodePath=require("path");Module["read"]=function read(filename,binary){filename=nodePath["normalize"](filename);var ret=nodeFS["readFileSync"](filename);if(!ret&&filename!=nodePath["resolve"](filename)){filename=path.join(__dirname,"..","src",filename);ret=nodeFS["readFileSync"](filename)}if(ret&&!binary)ret=ret.toString();return ret};Module["readBinary"]=function readBinary(filename){return Module["read"](filename,true)};Module["load"]=function load(f){globalEval(read(f))};if(!Module["thisProgram"]){if(process["argv"].length>1){Module["thisProgram"]=process["argv"][1].replace(/\\/g,"/")}else{Module["thisProgram"]="unknown-program"}}Module["arguments"]=process["argv"].slice(2);if(typeof module!=="undefined"){module["exports"]=Module}process["on"]("uncaughtException",(function(ex){if(!(ex instanceof ExitStatus)){throw ex}}))}else if(ENVIRONMENT_IS_SHELL){if(!Module["print"])Module["print"]=print;if(typeof printErr!="undefined")Module["printErr"]=printErr;if(typeof read!="undefined"){Module["read"]=read}else{Module["read"]=function read(){throw"no read() available (jsc?)"}}Module["readBinary"]=function readBinary(f){if(typeof readbuffer==="function"){return new Uint8Array(readbuffer(f))}var data=read(f,"binary");assert(typeof data==="object");return data};if(typeof scriptArgs!="undefined"){Module["arguments"]=scriptArgs}else if(typeof arguments!="undefined"){Module["arguments"]=arguments}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){Module["read"]=function read(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.send(null);return xhr.responseText};if(typeof arguments!="undefined"){Module["arguments"]=arguments}if(typeof console!=="undefined"){if(!Module["print"])Module["print"]=function print(x){console.log(x)};if(!Module["printErr"])Module["printErr"]=function printErr(x){console.log(x)}}else{var TRY_USE_DUMP=false;if(!Module["print"])Module["print"]=TRY_USE_DUMP&&typeof dump!=="undefined"?(function(x){dump(x)}):(function(x){})}if(ENVIRONMENT_IS_WORKER){Module["load"]=importScripts}if(typeof Module["setWindowTitle"]==="undefined"){Module["setWindowTitle"]=(function(title){document.title=title})}}else{throw"Unknown runtime environment. Where are we?"}function globalEval(x){eval.call(null,x)}if(!Module["load"]&&Module["read"]){Module["load"]=function load(f){globalEval(Module["read"](f))}}if(!Module["print"]){Module["print"]=(function(){})}if(!Module["printErr"]){Module["printErr"]=Module["print"]}if(!Module["arguments"]){Module["arguments"]=[]}if(!Module["thisProgram"]){Module["thisProgram"]="./this.program"}Module.print=Module["print"];Module.printErr=Module["printErr"];Module["preRun"]=[];Module["postRun"]=[];for(var key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}var Runtime={setTempRet0:(function(value){tempRet0=value}),getTempRet0:(function(){return tempRet0}),stackSave:(function(){return STACKTOP}),stackRestore:(function(stackTop){STACKTOP=stackTop}),getNativeTypeSize:(function(type){switch(type){case"i1":case"i8":return 1;case"i16":return 2;case"i32":return 4;case"i64":return 8;case"float":return 4;case"double":return 8;default:{if(type[type.length-1]==="*"){return Runtime.QUANTUM_SIZE}else if(type[0]==="i"){var bits=parseInt(type.substr(1));assert(bits%8===0);return bits/8}else{return 0}}}}),getNativeFieldSize:(function(type){return Math.max(Runtime.getNativeTypeSize(type),Runtime.QUANTUM_SIZE)}),STACK_ALIGN:16,getAlignSize:(function(type,size,vararg){if(!vararg&&(type=="i64"||type=="double"))return 8;if(!type)return Math.min(size,8);return Math.min(size||(type?Runtime.getNativeFieldSize(type):0),Runtime.QUANTUM_SIZE)}),dynCall:(function(sig,ptr,args){if(args&&args.length){if(!args.splice)args=Array.prototype.slice.call(args);args.splice(0,0,ptr);return Module["dynCall_"+sig].apply(null,args)}else{return Module["dynCall_"+sig].call(null,ptr)}}),functionPointers:[],addFunction:(function(func){for(var i=0;i<Runtime.functionPointers.length;i++){if(!Runtime.functionPointers[i]){Runtime.functionPointers[i]=func;return 2*(1+i)}}throw"Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS."}),removeFunction:(function(index){Runtime.functionPointers[(index-2)/2]=null}),getAsmConst:(function(code,numArgs){if(!Runtime.asmConstCache)Runtime.asmConstCache={};var func=Runtime.asmConstCache[code];if(func)return func;var args=[];for(var i=0;i<numArgs;i++){args.push(String.fromCharCode(36)+i)}var source=Pointer_stringify(code);if(source[0]==='"'){if(source.indexOf('"',1)===source.length-1){source=source.substr(1,source.length-2)}else{abort("invalid EM_ASM input |"+source+"|. Please use EM_ASM(..code..) (no quotes) or EM_ASM({ ..code($0).. }, input) (to input values)")}}try{var evalled=eval("(function(Module, FS) { return function("+args.join(",")+"){ "+source+" } })")(Module,typeof FS!=="undefined"?FS:null)}catch(e){Module.printErr("error in executing inline EM_ASM code: "+e+" on: \n\n"+source+"\n\nwith args |"+args+"| (make sure to use the right one out of EM_ASM, EM_ASM_ARGS, etc.)");throw e}return Runtime.asmConstCache[code]=evalled}),warnOnce:(function(text){if(!Runtime.warnOnce.shown)Runtime.warnOnce.shown={};if(!Runtime.warnOnce.shown[text]){Runtime.warnOnce.shown[text]=1;Module.printErr(text)}}),funcWrappers:{},getFuncWrapper:(function(func,sig){assert(sig);if(!Runtime.funcWrappers[sig]){Runtime.funcWrappers[sig]={}}var sigCache=Runtime.funcWrappers[sig];if(!sigCache[func]){sigCache[func]=function dynCall_wrapper(){return Runtime.dynCall(sig,func,arguments)}}return sigCache[func]}),getCompilerSetting:(function(name){throw"You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work"}),stackAlloc:(function(size){var ret=STACKTOP;STACKTOP=STACKTOP+size|0;STACKTOP=STACKTOP+15&-16;return ret}),staticAlloc:(function(size){var ret=STATICTOP;STATICTOP=STATICTOP+size|0;STATICTOP=STATICTOP+15&-16;return ret}),dynamicAlloc:(function(size){var ret=DYNAMICTOP;DYNAMICTOP=DYNAMICTOP+size|0;DYNAMICTOP=DYNAMICTOP+15&-16;if(DYNAMICTOP>=TOTAL_MEMORY)enlargeMemory();return ret}),alignMemory:(function(size,quantum){var ret=size=Math.ceil(size/(quantum?quantum:16))*(quantum?quantum:16);return ret}),makeBigInt:(function(low,high,unsigned){var ret=unsigned?+(low>>>0)+ +(high>>>0)*+4294967296:+(low>>>0)+ +(high|0)*+4294967296;return ret}),GLOBAL_BASE:8,QUANTUM_SIZE:4,__dummy__:0};Module["Runtime"]=Runtime;var __THREW__=0;var ABORT=false;var EXITSTATUS=0;var undef=0;var tempValue,tempInt,tempBigInt,tempInt2,tempBigInt2,tempPair,tempBigIntI,tempBigIntR,tempBigIntS,tempBigIntP,tempBigIntD,tempDouble,tempFloat;var tempI64,tempI64b;var tempRet0,tempRet1,tempRet2,tempRet3,tempRet4,tempRet5,tempRet6,tempRet7,tempRet8,tempRet9;function assert(condition,text){if(!condition){abort("Assertion failed: "+text)}}var globalScope=this;function getCFunc(ident){var func=Module["_"+ident];if(!func){try{func=eval("_"+ident)}catch(e){}}assert(func,"Cannot call unknown function "+ident+" (perhaps LLVM optimizations or closure removed it?)");return func}var cwrap,ccall;((function(){var JSfuncs={"stackSave":(function(){Runtime.stackSave()}),"stackRestore":(function(){Runtime.stackRestore()}),"arrayToC":(function(arr){var ret=Runtime.stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}),"stringToC":(function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){ret=Runtime.stackAlloc((str.length<<2)+1);writeStringToMemory(str,ret)}return ret})};var toC={"string":JSfuncs["stringToC"],"array":JSfuncs["arrayToC"]};ccall=function ccallFunc(ident,returnType,argTypes,args){var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=Runtime.stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);if(returnType==="string")ret=Pointer_stringify(ret);if(stack!==0)Runtime.stackRestore(stack);return ret};var sourceRegex=/^function\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;function parseJSFunc(jsfunc){var parsed=jsfunc.toString().match(sourceRegex).slice(1);return{arguments:parsed[0],body:parsed[1],returnValue:parsed[2]}}var JSsource={};for(var fun in JSfuncs){if(JSfuncs.hasOwnProperty(fun)){JSsource[fun]=parseJSFunc(JSfuncs[fun])}}cwrap=function cwrap(ident,returnType,argTypes){argTypes=argTypes||[];var cfunc=getCFunc(ident);var numericArgs=argTypes.every((function(type){return type==="number"}));var numericRet=returnType!=="string";if(numericRet&&numericArgs){return cfunc}var argNames=argTypes.map((function(x,i){return"$"+i}));var funcstr="(function("+argNames.join(",")+") {";var nargs=argTypes.length;if(!numericArgs){funcstr+="var stack = "+JSsource["stackSave"].body+";";for(var i=0;i<nargs;i++){var arg=argNames[i],type=argTypes[i];if(type==="number")continue;var convertCode=JSsource[type+"ToC"];funcstr+="var "+convertCode.arguments+" = "+arg+";";funcstr+=convertCode.body+";";funcstr+=arg+"="+convertCode.returnValue+";"}}var cfuncname=parseJSFunc((function(){return cfunc})).returnValue;funcstr+="var ret = "+cfuncname+"("+argNames.join(",")+");";if(!numericRet){var strgfy=parseJSFunc((function(){return Pointer_stringify})).returnValue;funcstr+="ret = "+strgfy+"(ret);"}if(!numericArgs){funcstr+=JSsource["stackRestore"].body.replace("()","(stack)")+";"}funcstr+="return ret})";return eval(funcstr)}}))();Module["cwrap"]=cwrap;Module["ccall"]=ccall;function setValue(ptr,value,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":HEAP8[ptr>>0]=value;break;case"i8":HEAP8[ptr>>0]=value;break;case"i16":HEAP16[ptr>>1]=value;break;case"i32":HEAP32[ptr>>2]=value;break;case"i64":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=+1?tempDouble>+0?(Math_min(+Math_floor(tempDouble/+4294967296),+4294967295)|0)>>>0:~~+Math_ceil((tempDouble- +(~~tempDouble>>>0))/+4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case"float":HEAPF32[ptr>>2]=value;break;case"double":HEAPF64[ptr>>3]=value;break;default:abort("invalid type for setValue: "+type)}}Module["setValue"]=setValue;function getValue(ptr,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":return HEAP8[ptr>>0];case"i8":return HEAP8[ptr>>0];case"i16":return HEAP16[ptr>>1];case"i32":return HEAP32[ptr>>2];case"i64":return HEAP32[ptr>>2];case"float":return HEAPF32[ptr>>2];case"double":return HEAPF64[ptr>>3];default:abort("invalid type for setValue: "+type)}return null}Module["getValue"]=getValue;var ALLOC_NORMAL=0;var ALLOC_STACK=1;var ALLOC_STATIC=2;var ALLOC_DYNAMIC=3;var ALLOC_NONE=4;Module["ALLOC_NORMAL"]=ALLOC_NORMAL;Module["ALLOC_STACK"]=ALLOC_STACK;Module["ALLOC_STATIC"]=ALLOC_STATIC;Module["ALLOC_DYNAMIC"]=ALLOC_DYNAMIC;Module["ALLOC_NONE"]=ALLOC_NONE;function allocate(slab,types,allocator,ptr){var zeroinit,size;if(typeof slab==="number"){zeroinit=true;size=slab}else{zeroinit=false;size=slab.length}var singleType=typeof types==="string"?types:null;var ret;if(allocator==ALLOC_NONE){ret=ptr}else{ret=[_malloc,Runtime.stackAlloc,Runtime.staticAlloc,Runtime.dynamicAlloc][allocator===undefined?ALLOC_STATIC:allocator](Math.max(size,singleType?1:types.length))}if(zeroinit){var ptr=ret,stop;assert((ret&3)==0);stop=ret+(size&~3);for(;ptr<stop;ptr+=4){HEAP32[ptr>>2]=0}stop=ret+size;while(ptr<stop){HEAP8[ptr++>>0]=0}return ret}if(singleType==="i8"){if(slab.subarray||slab.slice){HEAPU8.set(slab,ret)}else{HEAPU8.set(new Uint8Array(slab),ret)}return ret}var i=0,type,typeSize,previousType;while(i<size){var curr=slab[i];if(typeof curr==="function"){curr=Runtime.getFunctionIndex(curr)}type=singleType||types[i];if(type===0){i++;continue}if(type=="i64")type="i32";setValue(ret+i,curr,type);if(previousType!==type){typeSize=Runtime.getNativeTypeSize(type);previousType=type}i+=typeSize}return ret}Module["allocate"]=allocate;function Pointer_stringify(ptr,length){if(length===0||!ptr)return"";var hasUtf=0;var t;var i=0;while(1){t=HEAPU8[ptr+i>>0];hasUtf|=t;if(t==0&&!length)break;i++;if(length&&i==length)break}if(!length)length=i;var ret="";if(hasUtf<128){var MAX_CHUNK=1024;var curr;while(length>0){curr=String.fromCharCode.apply(String,HEAPU8.subarray(ptr,ptr+Math.min(length,MAX_CHUNK)));ret=ret?ret+curr:curr;ptr+=MAX_CHUNK;length-=MAX_CHUNK}return ret}return Module["UTF8ToString"](ptr)}Module["Pointer_stringify"]=Pointer_stringify;function AsciiToString(ptr){var str="";while(1){var ch=HEAP8[ptr++>>0];if(!ch)return str;str+=String.fromCharCode(ch)}}Module["AsciiToString"]=AsciiToString;function stringToAscii(str,outPtr){return writeAsciiToMemory(str,outPtr,false)}Module["stringToAscii"]=stringToAscii;function UTF8ArrayToString(u8Array,idx){var u0,u1,u2,u3,u4,u5;var str="";while(1){u0=u8Array[idx++];if(!u0)return str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u3=u8Array[idx++]&63;if((u0&248)==240){u0=(u0&7)<<18|u1<<12|u2<<6|u3}else{u4=u8Array[idx++]&63;if((u0&252)==248){u0=(u0&3)<<24|u1<<18|u2<<12|u3<<6|u4}else{u5=u8Array[idx++]&63;u0=(u0&1)<<30|u1<<24|u2<<18|u3<<12|u4<<6|u5}}}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}Module["UTF8ArrayToString"]=UTF8ArrayToString;function UTF8ToString(ptr){return UTF8ArrayToString(HEAPU8,ptr)}Module["UTF8ToString"]=UTF8ToString;function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=2097151){if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=67108863){if(outIdx+4>=endIdx)break;outU8Array[outIdx++]=248|u>>24;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+5>=endIdx)break;outU8Array[outIdx++]=252|u>>30;outU8Array[outIdx++]=128|u>>24&63;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}Module["stringToUTF8Array"]=stringToUTF8Array;function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}Module["stringToUTF8"]=stringToUTF8;function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){++len}else if(u<=2047){len+=2}else if(u<=65535){len+=3}else if(u<=2097151){len+=4}else if(u<=67108863){len+=5}else{len+=6}}return len}Module["lengthBytesUTF8"]=lengthBytesUTF8;function UTF16ToString(ptr){var i=0;var str="";while(1){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)return str;++i;str+=String.fromCharCode(codeUnit)}}Module["UTF16ToString"]=UTF16ToString;function stringToUTF16(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr}Module["stringToUTF16"]=stringToUTF16;function lengthBytesUTF16(str){return str.length*2}Module["lengthBytesUTF16"]=lengthBytesUTF16;function UTF32ToString(ptr){var i=0;var str="";while(1){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)return str;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}}Module["UTF32ToString"]=UTF32ToString;function stringToUTF32(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr}Module["stringToUTF32"]=stringToUTF32;function lengthBytesUTF32(str){var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len}Module["lengthBytesUTF32"]=lengthBytesUTF32;function demangle(func){var hasLibcxxabi=!!Module["___cxa_demangle"];if(hasLibcxxabi){try{var buf=_malloc(func.length);writeStringToMemory(func.substr(1),buf);var status=_malloc(4);var ret=Module["___cxa_demangle"](buf,0,0,status);if(getValue(status,"i32")===0&&ret){return Pointer_stringify(ret)}}catch(e){}finally{if(buf)_free(buf);if(status)_free(status);if(ret)_free(ret)}}var i=3;var basicTypes={"v":"void","b":"bool","c":"char","s":"short","i":"int","l":"long","f":"float","d":"double","w":"wchar_t","a":"signed char","h":"unsigned char","t":"unsigned short","j":"unsigned int","m":"unsigned long","x":"long long","y":"unsigned long long","z":"..."};var subs=[];var first=true;function dump(x){if(x)Module.print(x);Module.print(func);var pre="";for(var a=0;a<i;a++)pre+=" ";Module.print(pre+"^")}function parseNested(){i++;if(func[i]==="K")i++;var parts=[];while(func[i]!=="E"){if(func[i]==="S"){i++;var next=func.indexOf("_",i);var num=func.substring(i,next)||0;parts.push(subs[num]||"?");i=next+1;continue}if(func[i]==="C"){parts.push(parts[parts.length-1]);i+=2;continue}var size=parseInt(func.substr(i));var pre=size.toString().length;if(!size||!pre){i--;break}var curr=func.substr(i+pre,size);parts.push(curr);subs.push(curr);i+=pre+size}i++;return parts}function parse(rawList,limit,allowVoid){limit=limit||Infinity;var ret="",list=[];function flushList(){return"("+list.join(", ")+")"}var name;if(func[i]==="N"){name=parseNested().join("::");limit--;if(limit===0)return rawList?[name]:name}else{if(func[i]==="K"||first&&func[i]==="L")i++;var size=parseInt(func.substr(i));if(size){var pre=size.toString().length;name=func.substr(i+pre,size);i+=pre+size}}first=false;if(func[i]==="I"){i++;var iList=parse(true);var iRet=parse(true,1,true);ret+=iRet[0]+" "+name+"<"+iList.join(", ")+">"}else{ret=name}paramLoop:while(i<func.length&&limit-->0){var c=func[i++];if(c in basicTypes){list.push(basicTypes[c])}else{switch(c){case"P":list.push(parse(true,1,true)[0]+"*");break;case"R":list.push(parse(true,1,true)[0]+"&");break;case"L":{i++;var end=func.indexOf("E",i);var size=end-i;list.push(func.substr(i,size));i+=size+2;break};case"A":{var size=parseInt(func.substr(i));i+=size.toString().length;if(func[i]!=="_")throw"?";i++;list.push(parse(true,1,true)[0]+" ["+size+"]");break};case"E":break paramLoop;default:ret+="?"+c;break paramLoop}}}if(!allowVoid&&list.length===1&&list[0]==="void")list=[];if(rawList){if(ret){list.push(ret+"?")}return list}else{return ret+flushList()}}var parsed=func;try{if(func=="Object._main"||func=="_main"){return"main()"}if(typeof func==="number")func=Pointer_stringify(func);if(func[0]!=="_")return func;if(func[1]!=="_")return func;if(func[2]!=="Z")return func;switch(func[3]){case"n":return"operator new()";case"d":return"operator delete()"}parsed=parse()}catch(e){parsed+="?"}if(parsed.indexOf("?")>=0&&!hasLibcxxabi){Runtime.warnOnce("warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling")}return parsed}function demangleAll(text){return text.replace(/__Z[\w\d_]+/g,(function(x){var y=demangle(x);return x===y?x:x+" ["+y+"]"}))}function jsStackTrace(){var err=new Error;if(!err.stack){try{throw new Error(0)}catch(e){err=e}if(!err.stack){return"(no stack trace available)"}}return err.stack.toString()}function stackTrace(){return demangleAll(jsStackTrace())}Module["stackTrace"]=stackTrace;var PAGE_SIZE=4096;function alignMemoryPage(x){return x+4095&-4096}var HEAP;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;var STATIC_BASE=0,STATICTOP=0,staticSealed=false;var STACK_BASE=0,STACKTOP=0,STACK_MAX=0;var DYNAMIC_BASE=0,DYNAMICTOP=0;function enlargeMemory(){abort("Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value "+TOTAL_MEMORY+", (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.")}var TOTAL_STACK=Module["TOTAL_STACK"]||5242880;var TOTAL_MEMORY=Module["TOTAL_MEMORY"]||16777216;var FAST_MEMORY=Module["FAST_MEMORY"]||2097152;var totalMemory=64*1024;while(totalMemory<TOTAL_MEMORY||totalMemory<2*TOTAL_STACK){if(totalMemory<16*1024*1024){totalMemory*=2}else{totalMemory+=16*1024*1024}}if(totalMemory!==TOTAL_MEMORY){Module.printErr("increasing TOTAL_MEMORY to "+totalMemory+" to be compliant with the asm.js spec (and given that TOTAL_STACK="+TOTAL_STACK+")");TOTAL_MEMORY=totalMemory}assert(typeof Int32Array!=="undefined"&&typeof Float64Array!=="undefined"&&!!(new Int32Array(1))["subarray"]&&!!(new Int32Array(1))["set"],"JS engine does not provide full typed array support");var buffer=new ArrayBuffer(TOTAL_MEMORY);HEAP8=new Int8Array(buffer);HEAP16=new Int16Array(buffer);HEAP32=new Int32Array(buffer);HEAPU8=new Uint8Array(buffer);HEAPU16=new Uint16Array(buffer);HEAPU32=new Uint32Array(buffer);HEAPF32=new Float32Array(buffer);HEAPF64=new Float64Array(buffer);HEAP32[0]=255;assert(HEAPU8[0]===255&&HEAPU8[3]===0,"Typed arrays 2 must be run on a little-endian system");Module["HEAP"]=HEAP;Module["buffer"]=buffer;Module["HEAP8"]=HEAP8;Module["HEAP16"]=HEAP16;Module["HEAP32"]=HEAP32;Module["HEAPU8"]=HEAPU8;Module["HEAPU16"]=HEAPU16;Module["HEAPU32"]=HEAPU32;Module["HEAPF32"]=HEAPF32;Module["HEAPF64"]=HEAPF64;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback=="function"){callback();continue}var func=callback.func;if(typeof func==="number"){if(callback.arg===undefined){Runtime.dynCall("v",func)}else{Runtime.dynCall("vi",func,[callback.arg])}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){if(runtimeInitialized)return;runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){callRuntimeCallbacks(__ATEXIT__);runtimeExited=true}function postRun(){if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}Module["addOnPreRun"]=Module.addOnPreRun=addOnPreRun;function addOnInit(cb){__ATINIT__.unshift(cb)}Module["addOnInit"]=Module.addOnInit=addOnInit;function addOnPreMain(cb){__ATMAIN__.unshift(cb)}Module["addOnPreMain"]=Module.addOnPreMain=addOnPreMain;function addOnExit(cb){__ATEXIT__.unshift(cb)}Module["addOnExit"]=Module.addOnExit=addOnExit;function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}Module["addOnPostRun"]=Module.addOnPostRun=addOnPostRun;function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}Module["intArrayFromString"]=intArrayFromString;function intArrayToString(array){var ret=[];for(var i=0;i<array.length;i++){var chr=array[i];if(chr>255){chr&=255}ret.push(String.fromCharCode(chr))}return ret.join("")}Module["intArrayToString"]=intArrayToString;function writeStringToMemory(string,buffer,dontAddNull){var array=intArrayFromString(string,dontAddNull);var i=0;while(i<array.length){var chr=array[i];HEAP8[buffer+i>>0]=chr;i=i+1}}Module["writeStringToMemory"]=writeStringToMemory;function writeArrayToMemory(array,buffer){for(var i=0;i<array.length;i++){HEAP8[buffer++>>0]=array[i]}}Module["writeArrayToMemory"]=writeArrayToMemory;function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}Module["writeAsciiToMemory"]=writeAsciiToMemory;function unSign(value,bits,ignore){if(value>=0){return value}return bits<=32?2*Math.abs(1<<bits-1)+value:Math.pow(2,bits)+value}function reSign(value,bits,ignore){if(value<=0){return value}var half=bits<=32?Math.abs(1<<bits-1):Math.pow(2,bits-1);if(value>=half&&(bits<=32||value>half)){value=-2*half+value}return value}if(!Math["imul"]||Math["imul"](4294967295,5)!==-5)Math["imul"]=function imul(a,b){var ah=a>>>16;var al=a&65535;var bh=b>>>16;var bl=b&65535;return al*bl+(ah*bl+al*bh<<16)|0};Math.imul=Math["imul"];if(!Math["clz32"])Math["clz32"]=(function(x){x=x>>>0;for(var i=0;i<32;i++){if(x&1<<31-i)return i}return 32});Math.clz32=Math["clz32"];var Math_abs=Math.abs;var Math_cos=Math.cos;var Math_sin=Math.sin;var Math_tan=Math.tan;var Math_acos=Math.acos;var Math_asin=Math.asin;var Math_atan=Math.atan;var Math_atan2=Math.atan2;var Math_exp=Math.exp;var Math_log=Math.log;var Math_sqrt=Math.sqrt;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_pow=Math.pow;var Math_imul=Math.imul;var Math_fround=Math.fround;var Math_min=Math.min;var Math_clz32=Math.clz32;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}}Module["addRunDependency"]=addRunDependency;function removeRunDependency(id){runDependencies--;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module["removeRunDependency"]=removeRunDependency;Module["preloadedImages"]={};Module["preloadedAudios"]={};var memoryInitializer=null;STATIC_BASE=8;STATICTOP=STATIC_BASE+28624;__ATINIT__.push({func:(function(){__GLOBAL__sub_I_VTFLib_cpp()})},{func:(function(){__GLOBAL__sub_I_iostream_cpp()})});allocate([0,0,0,0,80,0,0,0,1,0,0,0,2,0,0,0,78,54,115,113,117,105,115,104,49,48,67,108,117,115,116,101,114,70,105,116,69,0,0,0,78,54,115,113,117,105,115,104,57,67,111,108,111,117,114,70,105,116,69,0,0,0,0,0,152,104,0,0,48,0,0,0,40,105,0,0,24,0,0,0,72,0,0,0,0,0,0,0,0,0,0,0,72,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,152,0,0,0,3,0,0,0,4,0,0,0,78,54,115,113,117,105,115,104,56,82,97,110,103,101,70,105,116,69,0,0,0,0,0,0,40,105,0,0,128,0,0,0,72,0,0,0,0,0,0,0,0,0,0,0,248,24,0,0,5,0,0,0,6,0,0,0,200,0,0,0,200,6,0,0,200,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,2,0,0,2,0,0,3,0,1,1,0,0,4,0,1,0,1,0,3,0,1,1,1,0,2,0,1,2,1,0,1,0,2,1,1,0,0,0,2,0,1,0,1,0,2,1,1,0,2,0,2,2,1,0,3,0,3,1,1,0,4,0,3,0,2,0,3,0,3,1,2,0,2,0,3,2,2,0,1,0,4,1,2,0,0,0,4,0,2,0,1,0,4,1,2,0,2,0,4,2,2,0,3,0,5,1,2,0,4,0,5,0,3,0,3,0,5,1,3,0,2,0,5,2,3,0,1,0,6,1,3,0,0,0,6,0,3,0,1,0,6,1,3,0,2,0,6,2,3,0,3,0,7,1,3,0,4,0,7,0,4,0,4,0,7,1,4,0,3,0,7,2,4,0,2,1,7,1,4,0,1,1,7,0,4,0,0,0,8,0,4,0,1,0,8,1,4,0,2,2,7,1,4,0,3,2,7,0,4,0,4,0,9,0,5,0,3,0,9,1,5,0,2,3,7,1,5,0,1,3,7,0,5,0,0,0,10,0,5,0,1,0,10,1,5,0,2,0,10,2,5,0,3,0,11,1,5,0,4,0,11,0,6,0,3,0,11,1,6,0,2,0,11,2,6,0,1,0,12,1,6,0,0,0,12,0,6,0,1,0,12,1,6,0,2,0,12,2,6,0,3,0,13,1,6,0,4,0,13,0,7,0,3,0,13,1,7,0,2,0,13,2,7,0,1,0,14,1,7,0,0,0,14,0,7,0,1,0,14,1,7,0,2,0,14,2,7,0,3,0,15,1,7,0,4,0,15,0,8,0,4,0,15,1,8,0,3,0,15,2,8,0,2,1,15,1,8,0,1,1,15,0,8,0,0,0,16,0,8,0,1,0,16,1,8,0,2,2,15,1,8,0,3,2,15,0,8,0,4,0,17,0,9,0,3,0,17,1,9,0,2,3,15,1,9,0,1,3,15,0,9,0,0,0,18,0,9,0,1,0,18,1,9,0,2,0,18,2,9,0,3,0,19,1,9,0,4,0,19,0,10,0,3,0,19,1,10,0,2,0,19,2,10,0,1,0,20,1,10,0,0,0,20,0,10,0,1,0,20,1,10,0,2,0,20,2,10,0,3,0,21,1,10,0,4,0,21,0,11,0,3,0,21,1,11,0,2,0,21,2,11,0,1,0,22,1,11,0,0,0,22,0,11,0,1,0,22,1,11,0,2,0,22,2,11,0,3,0,23,1,11,0,4,0,23,0,12,0,4,0,23,1,12,0,3,0,23,2,12,0,2,1,23,1,12,0,1,1,23,0,12,0,0,0,24,0,12,0,1,0,24,1,12,0,2,2,23,1,12,0,3,2,23,0,12,0,4,0,25,0,13,0,3,0,25,1,13,0,2,3,23,1,13,0,1,3,23,0,13,0,0,0,26,0,13,0,1,0,26,1,13,0,2,0,26,2,13,0,3,0,27,1,13,0,4,0,27,0,14,0,3,0,27,1,14,0,2,0,27,2,14,0,1,0,28,1,14,0,0,0,28,0,14,0,1,0,28,1,14,0,2,0,28,2,14,0,3,0,29,1,14,0,4,0,29,0,15,0,3,0,29,1,15,0,2,0,29,2,15,0,1,0,30,1,15,0,0,0,30,0,15,0,1,0,30,1,15,0,2,0,30,2,15,0,3,0,31,1,15,0,4,0,31,0,16,0,4,0,31,1,16,0,3,0,31,2,16,0,2,1,31,1,16,0,1,1,31,0,16,0,0,4,28,0,16,0,1,4,28,1,16,0,2,2,31,1,16,0,3,2,31,0,16,0,4,4,29,0,17,0,3,4,29,1,17,0,2,3,31,1,17,0,1,3,31,0,17,0,0,4,30,0,17,0,1,4,30,1,17,0,2,4,30,2,17,0,3,4,31,1,17,0,4,4,31,0,18,0,3,4,31,1,18,0,2,4,31,2,18,0,1,5,31,1,18,0,0,5,31,0,18,0,1,5,31,1,18,0,2,5,31,2,18,0,3,6,31,1,18,0,4,6,31,0,19,0,3,6,31,1,19,0,2,6,31,2,19,0,1,7,31,1,19,0,0,7,31,0,19,0,1,7,31,1,19,0,2,7,31,2,19,0,3,8,31,1,19,0,4,8,31,0,20,0,4,8,31,1,20,0,3,8,31,2,20,0,2,9,31,1,20,0,1,9,31,0,20,0,0,12,28,0,20,0,1,12,28,1,20,0,2,10,31,1,20,0,3,10,31,0,20,0,4,12,29,0,21,0,3,12,29,1,21,0,2,11,31,1,21,0,1,11,31,0,21,0,0,12,30,0,21,0,1,12,30,1,21,0,2,12,30,2,21,0,3,12,31,1,21,0,4,12,31,0,22,0,3,12,31,1,22,0,2,12,31,2,22,0,1,13,31,1,22,0,0,13,31,0,22,0,1,13,31,1,22,0,2,13,31,2,22,0,3,14,31,1,22,0,4,14,31,0,23,0,3,14,31,1,23,0,2,14,31,2,23,0,1,15,31,1,23,0,0,15,31,0,23,0,1,15,31,1,23,0,2,15,31,2,23,0,3,16,31,1,23,0,4,16,31,0,24,0,4,16,31,1,24,0,3,16,31,2,24,0,2,17,31,1,24,0,1,17,31,0,24,0,0,20,28,0,24,0,1,20,28,1,24,0,2,18,31,1,24,0,3,18,31,0,24,0,4,20,29,0,25,0,3,20,29,1,25,0,2,19,31,1,25,0,1,19,31,0,25,0,0,20,30,0,25,0,1,20,30,1,25,0,2,20,30,2,25,0,3,20,31,1,25,0,4,20,31,0,26,0,3,20,31,1,26,0,2,20,31,2,26,0,1,21,31,1,26,0,0,21,31,0,26,0,1,21,31,1,26,0,2,21,31,2,26,0,3,22,31,1,26,0,4,22,31,0,27,0,3,22,31,1,27,0,2,22,31,2,27,0,1,23,31,1,27,0,0,23,31,0,27,0,1,23,31,1,27,0,2,23,31,2,27,0,3,24,31,1,27,0,4,24,31,0,28,0,4,24,31,1,28,0,3,24,31,2,28,0,2,25,31,1,28,0,1,25,31,0,28,0,0,28,28,0,28,0,1,28,28,1,28,0,2,26,31,1,28,0,3,26,31,0,28,0,4,28,29,0,29,0,3,28,29,1,29,0,2,27,31,1,29,0,1,27,31,0,29,0,0,28,30,0,29,0,1,28,30,1,29,0,2,28,30,2,29,0,3,28,31,1,29,0,4,28,31,0,30,0,3,28,31,1,30,0,2,28,31,2,30,0,1,29,31,1,30,0,0,29,31,0,30,0,1,29,31,1,30,0,2,29,31,2,30,0,3,30,31,1,30,0,4,30,31,0,31,0,3,30,31,1,31,0,2,30,31,2,31,0,1,31,31,1,31,0,0,31,31,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,2,0,1,0,1,0,1,0,2,1,1,0,0,0,2,0,1,0,1,0,3,1,1,0,2,0,3,0,2,0,1,0,4,1,2,0,0,0,4,0,2,0,1,0,5,1,2,0,2,0,5,0,3,0,1,0,6,1,3,0,0,0,6,0,3,0,1,0,7,1,3,0,2,0,7,0,4,0,1,0,8,1,4,0,0,0,8,0,4,0,1,0,9,1,4,0,2,0,9,0,5,0,1,0,10,1,5,0,0,0,10,0,5,0,1,0,11,1,5,0,2,0,11,0,6,0,1,0,12,1,6,0,0,0,12,0,6,0,1,0,13,1,6,0,2,0,13,0,7,0,1,0,14,1,7,0,0,0,14,0,7,0,1,0,15,1,7,0,2,0,15,0,8,0,1,0,16,1,8,0,0,0,16,0,8,0,1,0,17,1,8,0,2,0,17,0,9,0,1,0,18,1,9,0,0,0,18,0,9,0,1,0,19,1,9,0,2,0,19,0,10,0,1,0,20,1,10,0,0,0,20,0,10,0,1,0,21,1,10,0,2,0,21,0,11,0,1,0,22,1,11,0,0,0,22,0,11,0,1,0,23,1,11,0,2,0,23,0,12,0,1,0,24,1,12,0,0,0,24,0,12,0,1,0,25,1,12,0,2,0,25,0,13,0,1,0,26,1,13,0,0,0,26,0,13,0,1,0,27,1,13,0,2,0,27,0,14,0,1,0,28,1,14,0,0,0,28,0,14,0,1,0,29,1,14,0,2,0,29,0,15,0,1,0,30,1,15,0,0,0,30,0,15,0,1,0,31,1,15,0,2,0,31,0,16,0,2,1,31,1,16,0,1,1,31,0,16,0,0,0,32,0,16,0,1,2,31,0,16,0,2,0,33,0,17,0,1,3,31,0,17,0,0,0,34,0,17,0,1,4,31,0,17,0,2,0,35,0,18,0,1,5,31,0,18,0,0,0,36,0,18,0,1,6,31,0,18,0,2,0,37,0,19,0,1,7,31,0,19,0,0,0,38,0,19,0,1,8,31,0,19,0,2,0,39,0,20,0,1,9,31,0,20,0,0,0,40,0,20,0,1,10,31,0,20,0,2,0,41,0,21,0,1,11,31,0,21,0,0,0,42,0,21,0,1,12,31,0,21,0,2,0,43,0,22,0,1,13,31,0,22,0,0,0,44,0,22,0,1,14,31,0,22,0,2,0,45,0,23,0,1,15,31,0,23,0,0,0,46,0,23,0,1,0,47,1,23,0,2,0,47,0,24,0,1,0,48,1,24,0,0,0,48,0,24,0,1,0,49,1,24,0,2,0,49,0,25,0,1,0,50,1,25,0,0,0,50,0,25,0,1,0,51,1,25,0,2,0,51,0,26,0,1,0,52,1,26,0,0,0,52,0,26,0,1,0,53,1,26,0,2,0,53,0,27,0,1,0,54,1,27,0,0,0,54,0,27,0,1,0,55,1,27,0,2,0,55,0,28,0,1,0,56,1,28,0,0,0,56,0,28,0,1,0,57,1,28,0,2,0,57,0,29,0,1,0,58,1,29,0,0,0,58,0,29,0,1,0,59,1,29,0,2,0,59,0,30,0,1,0,60,1,30,0,0,0,60,0,30,0,1,0,61,1,30,0,2,0,61,0,31,0,1,0,62,1,31,0,0,0,62,0,31,0,1,0,63,1,31,0,2,0,63,0,32,0,2,1,63,1,32,0,1,1,63,0,32,0,0,16,48,0,32,0,1,2,63,0,32,0,2,16,49,0,33,0,1,3,63,0,33,0,0,16,50,0,33,0,1,4,63,0,33,0,2,16,51,0,34,0,1,5,63,0,34,0,0,16,52,0,34,0,1,6,63,0,34,0,2,16,53,0,35,0,1,7,63,0,35,0,0,16,54,0,35,0,1,8,63,0,35,0,2,16,55,0,36,0,1,9,63,0,36,0,0,16,56,0,36,0,1,10,63,0,36,0,2,16,57,0,37,0,1,11,63,0,37,0,0,16,58,0,37,0,1,12,63,0,37,0,2,16,59,0,38,0,1,13,63,0,38,0,0,16,60,0,38,0,1,14,63,0,38,0,2,16,61,0,39,0,1,15,63,0,39,0,0,16,62,0,39,0,1,16,63,1,39,0,2,16,63,0,40,0,1,17,63,1,40,0,0,17,63,0,40,0,1,18,63,1,40,0,2,18,63,0,41,0,1,19,63,1,41,0,0,19,63,0,41,0,1,20,63,1,41,0,2,20,63,0,42,0,1,21,63,1,42,0,0,21,63,0,42,0,1,22,63,1,42,0,2,22,63,0,43,0,1,23,63,1,43,0,0,23,63,0,43,0,1,24,63,1,43,0,2,24,63,0,44,0,1,25,63,1,44,0,0,25,63,0,44,0,1,26,63,1,44,0,2,26,63,0,45,0,1,27,63,1,45,0,0,27,63,0,45,0,1,28,63,1,45,0,2,28,63,0,46,0,1,29,63,1,46,0,0,29,63,0,46,0,1,30,63,1,46,0,2,30,63,0,47,0,1,31,63,1,47,0,0,31,63,0,47,0,1,32,63,1,47,0,2,32,63,0,48,0,2,33,63,1,48,0,1,33,63,0,48,0,0,48,48,0,48,0,1,34,63,0,48,0,2,48,49,0,49,0,1,35,63,0,49,0,0,48,50,0,49,0,1,36,63,0,49,0,2,48,51,0,50,0,1,37,63,0,50,0,0,48,52,0,50,0,1,38,63,0,50,0,2,48,53,0,51,0,1,39,63,0,51,0,0,48,54,0,51,0,1,40,63,0,51,0,2,48,55,0,52,0,1,41,63,0,52,0,0,48,56,0,52,0,1,42,63,0,52,0,2,48,57,0,53,0,1,43,63,0,53,0,0,48,58,0,53,0,1,44,63,0,53,0,2,48,59,0,54,0,1,45,63,0,54,0,0,48,60,0,54,0,1,46,63,0,54,0,2,48,61,0,55,0,1,47,63,0,55,0,0,48,62,0,55,0,1,48,63,1,55,0,2,48,63,0,56,0,1,49,63,1,56,0,0,49,63,0,56,0,1,50,63,1,56,0,2,50,63,0,57,0,1,51,63,1,57,0,0,51,63,0,57,0,1,52,63,1,57,0,2,52,63,0,58,0,1,53,63,1,58,0,0,53,63,0,58,0,1,54,63,1,58,0,2,54,63,0,59,0,1,55,63,1,59,0,0,55,63,0,59,0,1,56,63,1,59,0,2,56,63,0,60,0,1,57,63,1,60,0,0,57,63,0,60,0,1,58,63,1,60,0,2,58,63,0,61,0,1,59,63,1,61,0,0,59,63,0,61,0,1,60,63,1,61,0,2,60,63,0,62,0,1,61,63,1,62,0,0,61,63,0,62,0,1,62,63,1,62,0,2,62,63,0,63,0,1,63,63,1,63,0,0,63,63,0,216,12,0,0,216,18,0,0,216,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,2,0,1,0,0,0,3,0,1,1,0,0,4,0,2,1,1,0,3,0,2,0,1,0,2,0,2,1,1,0,1,0,3,1,1,0,0,0,3,0,1,0,1,1,2,1,1,0,2,1,2,0,1,0,3,0,4,0,1,0,4,0,5,1,2,0,3,0,5,0,2,0,2,0,5,1,2,0,1,0,6,1,2,0,0,0,6,0,2,0,1,2,3,1,2,0,2,2,3,0,2,0,3,0,7,0,2,0,4,1,6,1,3,0,3,1,6,0,3,0,2,0,8,0,3,0,1,0,9,1,3,0,0,0,9,0,3,0,1,0,9,1,3,0,2,0,10,1,3,0,3,0,10,0,3,0,4,2,7,1,4,0,4,2,7,0,4,0,3,0,11,0,4,0,2,1,10,1,4,0,1,1,10,0,4,0,0,0,12,0,4,0,1,0,13,1,4,0,2,0,13,0,4,0,3,0,13,1,4,0,4,0,14,1,5,0,3,0,14,0,5,0,2,2,11,1,5,0,1,2,11,0,5,0,0,0,15,0,5,0,1,1,14,1,5,0,2,1,14,0,5,0,3,0,16,0,5,0,4,0,17,1,6,0,3,0,17,0,6,0,2,0,17,1,6,0,1,0,18,1,6,0,0,0,18,0,6,0,1,2,15,1,6,0,2,2,15,0,6,0,3,0,19,0,6,0,4,1,18,1,7,0,3,1,18,0,7,0,2,0,20,0,7,0,1,0,21,1,7,0,0,0,21,0,7,0,1,0,21,1,7,0,2,0,22,1,7,0,3,0,22,0,7,0,4,2,19,1,8,0,4,2,19,0,8,0,3,0,23,0,8,0,2,1,22,1,8,0,1,1,22,0,8,0,0,0,24,0,8,0,1,0,25,1,8,0,2,0,25,0,8,0,3,0,25,1,8,0,4,0,26,1,9,0,3,0,26,0,9,0,2,2,23,1,9,0,1,2,23,0,9,0,0,0,27,0,9,0,1,1,26,1,9,0,2,1,26,0,9,0,3,0,28,0,9,0,4,0,29,1,10,0,3,0,29,0,10,0,2,0,29,1,10,0,1,0,30,1,10,0,0,0,30,0,10,0,1,2,27,1,10,0,2,2,27,0,10,0,3,0,31,0,10,0,4,1,30,1,11,0,3,1,30,0,11,0,2,4,24,0,11,0,1,1,31,1,11,0,0,1,31,0,11,0,1,1,31,1,11,0,2,2,30,1,11,0,3,2,30,0,11,0,4,2,31,1,12,0,4,2,31,0,12,0,3,4,27,0,12,0,2,3,30,1,12,0,1,3,30,0,12,0,0,4,28,0,12,0,1,3,31,1,12,0,2,3,31,0,12,0,3,3,31,1,12,0,4,4,30,1,13,0,3,4,30,0,13,0,2,6,27,1,13,0,1,6,27,0,13,0,0,4,31,0,13,0,1,5,30,1,13,0,2,5,30,0,13,0,3,8,24,0,13,0,4,5,31,1,14,0,3,5,31,0,14,0,2,5,31,1,14,0,1,6,30,1,14,0,0,6,30,0,14,0,1,6,31,1,14,0,2,6,31,0,14,0,3,8,27,0,14,0,4,7,30,1,15,0,3,7,30,0,15,0,2,8,28,0,15,0,1,7,31,1,15,0,0,7,31,0,15,0,1,7,31,1,15,0,2,8,30,1,15,0,3,8,30,0,15,0,4,10,27,1,16,0,4,10,27,0,16,0,3,8,31,0,16,0,2,9,30,1,16,0,1,9,30,0,16,0,0,12,24,0,16,0,1,9,31,1,16,0,2,9,31,0,16,0,3,9,31,1,16,0,4,10,30,1,17,0,3,10,30,0,17,0,2,10,31,1,17,0,1,10,31,0,17,0,0,12,27,0,17,0,1,11,30,1,17,0,2,11,30,0,17,0,3,12,28,0,17,0,4,11,31,1,18,0,3,11,31,0,18,0,2,11,31,1,18,0,1,12,30,1,18,0,0,12,30,0,18,0,1,14,27,1,18,0,2,14,27,0,18,0,3,12,31,0,18,0,4,13,30,1,19,0,3,13,30,0,19,0,2,16,24,0,19,0,1,13,31,1,19,0,0,13,31,0,19,0,1,13,31,1,19,0,2,14,30,1,19,0,3,14,30,0,19,0,4,14,31,1,20,0,4,14,31,0,20,0,3,16,27,0,20,0,2,15,30,1,20,0,1,15,30,0,20,0,0,16,28,0,20,0,1,15,31,1,20,0,2,15,31,0,20,0,3,15,31,1,20,0,4,16,30,1,21,0,3,16,30,0,21,0,2,18,27,1,21,0,1,18,27,0,21,0,0,16,31,0,21,0,1,17,30,1,21,0,2,17,30,0,21,0,3,20,24,0,21,0,4,17,31,1,22,0,3,17,31,0,22,0,2,17,31,1,22,0,1,18,30,1,22,0,0,18,30,0,22,0,1,18,31,1,22,0,2,18,31,0,22,0,3,20,27,0,22,0,4,19,30,1,23,0,3,19,30,0,23,0,2,20,28,0,23,0,1,19,31,1,23,0,0,19,31,0,23,0,1,19,31,1,23,0,2,20,30,1,23,0,3,20,30,0,23,0,4,22,27,1,24,0,4,22,27,0,24,0,3,20,31,0,24,0,2,21,30,1,24,0,1,21,30,0,24,0,0,24,24,0,24,0,1,21,31,1,24,0,2,21,31,0,24,0,3,21,31,1,24,0,4,22,30,1,25,0,3,22,30,0,25,0,2,22,31,1,25,0,1,22,31,0,25,0,0,24,27,0,25,0,1,23,30,1,25,0,2,23,30,0,25,0,3,24,28,0,25,0,4,23,31,1,26,0,3,23,31,0,26,0,2,23,31,1,26,0,1,24,30,1,26,0,0,24,30,0,26,0,1,26,27,1,26,0,2,26,27,0,26,0,3,24,31,0,26,0,4,25,30,1,27,0,3,25,30,0,27,0,2,28,24,0,27,0,1,25,31,1,27,0,0,25,31,0,27,0,1,25,31,1,27,0,2,26,30,1,27,0,3,26,30,0,27,0,4,26,31,1,28,0,4,26,31,0,28,0,3,28,27,0,28,0,2,27,30,1,28,0,1,27,30,0,28,0,0,28,28,0,28,0,1,27,31,1,28,0,2,27,31,0,28,0,3,27,31,1,28,0,4,28,30,1,29,0,3,28,30,0,29,0,2,30,27,1,29,0,1,30,27,0,29,0,0,28,31,0,29,0,1,29,30,1,29,0,2,29,30,0,29,0,3,29,30,1,29,0,4,29,31,1,30,0,3,29,31,0,30,0,2,29,31,1,30,0,1,30,30,1,30,0,0,30,30,0,30,0,1,30,31,1,30,0,2,30,31,0,30,0,3,30,31,1,30,0,4,31,30,1,31,0,3,31,30,0,31,0,2,31,30,1,31,0,1,31,31,1,31,0,0,31,31,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,2,0,2,0,1,0,1,0,3,1,1,0,0,0,3,0,1,0,1,0,4,0,1,0,2,0,5,0,2,0,1,0,6,1,2,0,0,0,6,0,2,0,1,0,7,0,2,0,2,0,8,0,3,0,1,0,9,1,3,0,0,0,9,0,3,0,1,0,10,0,3,0,2,0,11,0,4,0,1,0,12,1,4,0,0,0,12,0,4,0,1,0,13,0,4,0,2,0,14,0,5,0,1,0,15,1,5,0,0,0,15,0,5,0,1,0,16,0,5,0,2,1,15,0,6,0,1,0,17,0,6,0,0,0,18,0,6,0,1,0,19,0,6,0,2,3,14,0,7,0,1,0,20,0,7,0,0,0,21,0,7,0,1,0,22,0,7,0,2,4,15,0,8,0,1,0,23,0,8,0,0,0,24,0,8,0,1,0,25,0,8,0,2,6,14,0,9,0,1,0,26,0,9,0,0,0,27,0,9,0,1,0,28,0,9,0,2,7,15,0,10,0,1,0,29,0,10,0,0,0,30,0,10,0,1,0,31,0,10,0,2,9,14,0,11,0,1,0,32,0,11,0,0,0,33,0,11,0,1,2,30,0,11,0,2,0,34,0,12,0,1,0,35,0,12,0,0,0,36,0,12,0,1,3,31,0,12,0,2,0,37,0,13,0,1,0,38,0,13,0,0,0,39,0,13,0,1,5,30,0,13,0,2,0,40,0,14,0,1,0,41,0,14,0,0,0,42,0,14,0,1,6,31,0,14,0,2,0,43,0,15,0,1,0,44,0,15,0,0,0,45,0,15,0,1,8,30,0,15,0,2,0,46,0,16,0,2,0,47,0,16,0,1,1,46,0,16,0,0,0,48,0,16,0,1,0,49,0,16,0,2,0,50,0,17,0,1,2,47,0,17,0,0,0,51,0,17,0,1,0,52,0,17,0,2,0,53,0,18,0,1,4,46,0,18,0,0,0,54,0,18,0,1,0,55,0,18,0,2,0,56,0,19,0,1,5,47,0,19,0,0,0,57,0,19,0,1,0,58,0,19,0,2,0,59,0,20,0,1,7,46,0,20,0,0,0,60,0,20,0,1,0,61,0,20,0,2,0,62,0,21,0,1,8,47,0,21,0,0,0,63,0,21,0,1,1,62,0,21,0,2,1,63,0,22,0,1,10,46,0,22,0,0,2,62,0,22,0,1,2,63,0,22,0,2,3,62,0,23,0,1,11,47,0,23,0,0,3,63,0,23,0,1,4,62,0,23,0,2,4,63,0,24,0,1,13,46,0,24,0,0,5,62,0,24,0,1,5,63,0,24,0,2,6,62,0,25,0,1,14,47,0,25,0,0,6,63,0,25,0,1,7,62,0,25,0,2,7,63,0,26,0,1,16,45,0,26,0,0,8,62,0,26,0,1,8,63,0,26,0,2,9,62,0,27,0,1,16,48,0,27,0,0,9,63,0,27,0,1,10,62,0,27,0,2,10,63,0,28,0,1,16,51,0,28,0,0,11,62,0,28,0,1,11,63,0,28,0,2,12,62,0,29,0,1,16,54,0,29,0,0,12,63,0,29,0,1,13,62,0,29,0,2,13,63,0,30,0,1,16,57,0,30,0,0,14,62,0,30,0,1,14,63,0,30,0,2,15,62,0,31,0,1,16,60,0,31,0,0,15,63,0,31,0,1,24,46,0,31,0,2,16,62,0,32,0,2,16,63,0,32,0,1,17,62,0,32,0,0,25,47,0,32,0,1,17,63,0,32,0,2,18,62,0,33,0,1,18,63,0,33,0,0,27,46,0,33,0,1,19,62,0,33,0,2,19,63,0,34,0,1,20,62,0,34,0,0,28,47,0,34,0,1,20,63,0,34,0,2,21,62,0,35,0,1,21,63,0,35,0,0,30,46,0,35,0,1,22,62,0,35,0,2,22,63,0,36,0,1,23,62,0,36,0,0,31,47,0,36,0,1,23,63,0,36,0,2,24,62,0,37,0,1,24,63,0,37,0,0,32,47,0,37,0,1,25,62,0,37,0,2,25,63,0,38,0,1,26,62,0,38,0,0,32,50,0,38,0,1,26,63,0,38,0,2,27,62,0,39,0,1,27,63,0,39,0,0,32,53,0,39,0,1,28,62,0,39,0,2,28,63,0,40,0,1,29,62,0,40,0,0,32,56,0,40,0,1,29,63,0,40,0,2,30,62,0,41,0,1,30,63,0,41,0,0,32,59,0,41,0,1,31,62,0,41,0,2,31,63,0,42,0,1,32,61,0,42,0,0,32,62,0,42,0,1,32,63,0,42,0,2,41,46,0,43,0,1,33,62,0,43,0,0,33,63,0,43,0,1,34,62,0,43,0,2,42,47,0,44,0,1,34,63,0,44,0,0,35,62,0,44,0,1,35,63,0,44,0,2,44,46,0,45,0,1,36,62,0,45,0,0,36,63,0,45,0,1,37,62,0,45,0,2,45,47,0,46,0,1,37,63,0,46,0,0,38,62,0,46,0,1,38,63,0,46,0,2,47,46,0,47,0,1,39,62,0,47,0,0,39,63,0,47,0,1,40,62,0,47,0,2,48,46,0,48,0,2,40,63,0,48,0,1,41,62,0,48,0,0,41,63,0,48,0,1,48,49,0,48,0,2,42,62,0,49,0,1,42,63,0,49,0,0,43,62,0,49,0,1,48,52,0,49,0,2,43,63,0,50,0,1,44,62,0,50,0,0,44,63,0,50,0,1,48,55,0,50,0,2,45,62,0,51,0,1,45,63,0,51,0,0,46,62,0,51,0,1,48,58,0,51,0,2,46,63,0,52,0,1,47,62,0,52,0,0,47,63,0,52,0,1,48,61,0,52,0,2,48,62,0,53,0,1,56,47,0,53,0,0,48,63,0,53,0,1,49,62,0,53,0,2,49,63,0,54,0,1,58,46,0,54,0,0,50,62,0,54,0,1,50,63,0,54,0,2,51,62,0,55,0,1,59,47,0,55,0,0,51,63,0,55,0,1,52,62,0,55,0,2,52,63,0,56,0,1,61,46,0,56,0,0,53,62,0,56,0,1,53,63,0,56,0,2,54,62,0,57,0,1,62,47,0,57,0,0,54,63,0,57,0,1,55,62,0,57,0,2,55,63,0,58,0,1,56,62,1,58,0,0,56,62,0,58,0,1,56,63,0,58,0,2,57,62,0,59,0,1,57,63,1,59,0,0,57,63,0,59,0,1,58,62,0,59,0,2,58,63,0,60,0,1,59,62,1,60,0,0,59,62,0,60,0,1,59,63,0,60,0,2,60,62,0,61,0,1,60,63,1,61,0,0,60,63,0,61,0,1,61,62,0,61,0,2,61,63,0,62,0,1,62,62,1,62,0,0,62,62,0,62,0,1,62,63,0,62,0,2,63,62,0,63,0,1,63,63,1,63,0,0,63,63,0,78,54,115,113,117,105,115,104,49,53,83,105,110,103,108,101,67,111,108,111,117,114,70,105,116,69,0,0,0,0,0,0,40,105,0,0,216,24,0,0,72,0,0,0,0,0,0,0,69,114,114,111,114,58,10,37,115,10,10,83,121,115,116,101,109,32,69,114,114,111,114,58,32,48,120,37,46,56,120,46,0,0,0,0,0,0,0,0,69,114,114,111,114,58,10,37,115,0,0,0,0,0,0,0,0,0,0,0,232,25,0,0,1,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,4,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,77,101,109,111,114,121,32,115,116,114,101,97,109,32,105,115,32,110,117,108,108,46,0,0,69,110,100,32,111,102,32,109,101,109,111,114,121,32,115,116,114,101,97,109,46,0,0,0,78,54,86,84,70,76,105,98,50,73,79,55,87,114,105,116,101,114,115,49,51,67,77,101,109,111,114,121,87,114,105,116,101,114,69,0,0,0,0,0,78,54,86,84,70,76,105,98,50,73,79,55,87,114,105,116,101,114,115,55,73,87,114,105,116,101,114,69,0,0,0,0,152,104,0,0,192,25,0,0,40,105,0,0,152,25,0,0,224,25,0,0,0,0,0,0,73,110,118,97,108,105,100,32,105,109,97,103,101,32,119,105,100,116,104,46,32,32,87,105,100,116,104,32,109,117,115,116,32,98,101,32,110,111,110,122,101,114,111,46,0,0,0,0,73,110,118,97,108,105,100,32,105,109,97,103,101,32,119,105,100,116,104,32,37,117,46,32,32,87,105,100,116,104,32,109,117,115,116,32,98,101,32,97,32,112,111,119,101,114,32,111,102,32,116,119,111,32,40,110,101,97,114,101,115,116,32,112,111,119,101,114,115,32,97,114,101,32,37,117,32,97,110,100,32,37,117,41,46,0,0,0,73,110,118,97,108,105,100,32,105,109,97,103,101,32,104,101,105,103,104,116,46,32,32,72,101,105,103,104,116,32,109,117,115,116,32,98,101,32,110,111,110,122,101,114,111,46,0,0,73,110,118,97,108,105,100,32,105,109,97,103,101,32,104,101,105,103,104,116,32,37,117,46,32,32,72,101,105,103,104,116,32,109,117,115,116,32,98,101,32,97,32,112,111,119,101,114,32,111,102,32,116,119,111,32,40,110,101,97,114,101,115,116,32,112,111,119,101,114,115,32,97,114,101,32,37,117,32,97,110,100,32,37,117,41,46,0,73,110,118,97,108,105,100,32,105,109,97,103,101,32,100,101,112,116,104,32,37,117,46,32,32,68,101,112,116,104,32,109,117,115,116,32,98,101,32,97,32,112,111,119,101,114,32,111,102,32,116,119,111,32,40,110,101,97,114,101,115,116,32,112,111,119,101,114,115,32,97,114,101,32,37,117,32,97,110,100,32,37,117,41,46,0,0,0,73,110,118,97,108,105,100,32,105,109,97,103,101,32,102,111,114,109,97,116,46,0,0,0,73,109,97,103,101,32,102,111,114,109,97,116,32,110,111,116,32,115,117,112,112,111,114,116,101,100,46,0,0,0,0,0,73,110,118,97,108,105,100,32,105,109,97,103,101,32,102,114,97,109,101,32,99,111,117,110,116,32,37,117,46,0,0,0,73,110,118,97,108,105,100,32,105,109,97,103,101,32,102,97,99,101,32,99,111,117,110,116,32,37,117,46,0,0,0,0,73,110,118,97,108,105,100,32,105,109,97,103,101,32,102,114,97,109,101,44,32,102,97,99,101,32,97,110,100,32,115,108,105,99,101,32,99,111,117,110,116,32,99,111,109,98,105,110,97,116,105,111,110,46,32,32,70,117,110,99,116,105,111,110,32,100,111,101,115,32,110,111,116,32,115,117,112,112,111,114,116,32,105,109,97,103,101,115,32,119,105,116,104,32,97,110,121,32,99,111,109,98,105,110,97,116,105,111,110,32,111,102,32,109,117,108,116,105,112,108,101,32,102,114,97,109,101,115,32,111,114,32,102,97,99,101,115,32,111,114,32,115,108,105,99,101,115,46,0,0,0,0,70,105,108,101,32,118,101,114,115,105,111,110,32,37,117,46,37,117,32,100,111,101,115,32,110,111,116,32,109,97,116,99,104,32,37,100,46,37,100,32,116,111,32,37,100,46,37,100,46,0,0,0,0,0,0,0,86,111,108,117,109,101,32,116,101,120,116,117,114,101,115,32,97,114,101,32,111,110,108,121,32,115,117,112,112,111,114,116,101,100,32,105,110,32,118,101,114,115,105,111,110,32,37,100,46,37,100,32,97,110,100,32,117,112,46,0,0,0,0,0,83,112,104,101,114,101,32,109,97,112,115,32,97,114,101,32,111,110,108,121,32,115,117,112,112,111,114,116,101,100,32,105,110,32,118,101,114,115,105,111,110,32,37,100,46,37,100,32,97,110,100,32,117,112,46,0,77,105,112,109,97,112,32,103,101,110,101,114,97,116,105,111,110,32,102,111,114,32,100,101,112,116,104,32,116,101,120,116,117,114,101,115,32,105,115,32,110,111,116,32,115,117,112,112,111,114,116,101,100,46,0,0,40,117,105,78,101,119,87,105,100,116,104,32,38,32,40,117,105,78,101,119,87,105,100,116,104,32,45,32,49,41,41,32,61,61,32,48,0,0,0,0,46,47,86,84,70,70,105,108,101,46,99,112,112,0,0,0,67,114,101,97,116,101,0,0,40,117,105,78,101,119,72,101,105,103,104,116,32,38,32,40,117,105,78,101,119,72,101,105,103,104,116,32,45,32,49,41,41,32,61,61,32,48,0,0,78,86,68,88,84,32,115,117,112,112,111,114,116,32,114,101,113,117,105,114,101,100,32,102,111,114,32,67,86,84,70,70,105,108,101,58,58,71,101,110,101,114,97,116,101,77,105,112,109,97,112,115,40,41,46,0,78,111,32,105,109,97,103,101,32,116,111,32,115,97,118,101,46,0,0,0,0,0,0,0,86,84,70,32,102,105,108,101,32,100,111,101,115,32,110,111,116,32,104,97,118,101,32,97,32,116,104,117,109,98,110,97,105,108,46,0,0,0,0,0,78,111,32,105,109,97,103,101,32,100,97,116,97,32,116,111,32,103,101,110,101,114,97,116,101,32,116,104,117,109,98,110,97,105,108,32,102,114,111,109,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,191,0,0,0,0,0,0,128,63,0,0,0,0,0,0,128,191,0,0,0,0,0,0,0,0,0,0,0,191,0,0,0,191,0,0,0,63,0,0,0,0,0,0,128,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,191,0,0,0,191,0,0,0,191,0,0,0,191,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,0,0,0,0,128,63,0,0,0,0,0,0,128,63,0,0,0,0,0,0,0,0,0,0,0,63,0,0,0,191,0,0,0,191,0,0,0,0,0,0,128,191,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,0,63,0,0,0,191,0,0,0,63,0,0,0,0,0,0,128,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,0,0,0,0,128,63,0,0,0,0,0,0,0,191,0,0,0,63,0,0,0,191,0,0,0,0,0,0,128,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,191,0,0,0,0,0,0,128,191,0,0,0,0,0,0,0,191,0,0,0,191,0,0,0,63,73,109,97,103,101,32,105,115,32,110,111,116,32,97,110,32,101,110,118,105,114,111,109,101,110,116,32,109,97,112,46,0,69,110,118,105,114,111,109,101,110,116,32,109,97,112,32,100,111,101,115,32,110,111,116,32,104,97,118,101,32,97,32,115,112,104,101,114,101,32,109,97,112,46,0,0,0,0,0,0,78,111,32,105,109,97,103,101,32,100,97,116,97,32,116,111,32,103,101,110,101,114,97,116,101,32,115,112,104,101,114,101,32,109,97,112,32,102,114,111,109,46,0,0,0,0,0,0,2,0,0,0,0,0,0,0,5,0,0,0,4,0,0,0,3,0,0,0,1,0,0,0,67,111,117,108,100,32,110,111,116,32,99,111,110,118,101,114,116,32,115,111,117,114,99,101,32,116,111,32,82,71,66,65,56,56,56,56,32,102,111,114,109,97,116,0,0,0,0,0,73,109,97,103,101,70,111,114,109,97,116,32,62,61,32,48,32,38,38,32,73,109,97,103,101,70,111,114,109,97,116,32,60,32,73,77,65,71,69,95,70,79,82,77,65,84,95,67,79,85,78,84,0,0,0,0,71,101,116,73,109,97,103,101,70,111,114,109,97,116,73,110,102,111,0,0,0,0,0,0,0,49,0,0,32,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,0,1,16,49,0,0,32,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,0,1,32,49,0,0,24,0,0,0,3,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,0,0,0,0,0,1,40,49,0,0,24,0,0,0,3,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,0,0,0,0,0,1,48,49,0,0,16,0,0,0,2,0,0,0,5,0,0,0,6,0,0,0,5,0,0,0,0,0,0,0,0,1,56,49,0,0,8,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,64,49,0,0,16,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,1,72,49,0,0,8,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,49,0,0,8,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,1,88,49,0,0,24,0,0,0,3,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,0,0,0,0,0,1,112,49,0,0,24,0,0,0,3,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,0,0,0,0,0,1,136,49,0,0,32,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,0,1,152,49,0,0,32,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,0,1,168,49,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,176,49,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,1,1,184,49,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,1,1,192,49,0,0,32,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,0,0,0,0,0,1,208,49,0,0,16,0,0,0,2,0,0,0,5,0,0,0,6,0,0,0,5,0,0,0,0,0,0,0,0,1,216,49,0,0,16,0,0,0,2,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,0,0,0,0,0,1,232,49,0,0,16,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,0,1,248,49,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,16,50,0,0,16,0,0,0,2,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,1,0,0,0,0,1,32,50,0,0,16,0,0,0,2,0,0,0,8,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,1,40,50,0,0,32,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,0,1,56,50,0,0,64,0,0,0,8,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,0,1,72,50,0,0,64,0,0,0,8,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,0,1,88,50,0,0,32,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,0,1,104,50,0,0,32,0,0,0,4,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,112,50,0,0,96,0,0,0,12,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,0,0,0,0,0,1,128,50,0,0,128,0,0,0,16,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,0,1,144,50,0,0,16,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,160,50,0,0,24,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,176,50,0,0,32,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,192,50,0,0,32,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,208,50,0,0,16,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,224,50,0,0,24,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,240,50,0,0,32,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,51,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,8,51,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,117,105,87,105,100,116,104,32,33,61,32,48,32,38,38,32,117,105,72,101,105,103,104,116,32,33,61,32,48,32,38,38,32,117,105,68,101,112,116,104,32,33,61,32,48,0,0,0,67,111,109,112,117,116,101,73,109,97,103,101,83,105,122,101,0,0,0,0,0,0,0,0,117,105,79,102,102,115,101,116,32,60,32,116,104,105,115,45,62,117,105,73,109,97,103,101,66,117,102,102,101,114,83,105,122,101,0,0,0,0,0,0,67,111,109,112,117,116,101,68,97,116,97,79,102,102,115,101,116,0,0,0,0,0,0,0,68,101,115,116,105,110,97,116,105,111,110,32,105,109,97,103,101,32,102,111,114,109,97,116,32,110,111,116,32,115,117,112,112,111,114,116,101,100,46,0,0,0,0,0,0,0,0,0,108,112,83,111,117,114,99,101,32,33,61,32,48,0,0,0,67,111,110,118,101,114,116,0,108,112,68,101,115,116,32,33,61,32,48,0,0,0,0,0,83,111,117,114,99,101,70,111,114,109,97,116,32,62,61,32,48,32,38,38,32,83,111,117,114,99,101,70,111,114,109,97,116,32,60,32,73,77,65,71,69,95,70,79,82,77,65,84,95,67,79,85,78,84,0,0,68,101,115,116,70,111,114,109,97,116,32,62,61,32,48,32,38,38,32,68,101,115,116,70,111,114,109,97,116,32,60,32,73,77,65,71,69,95,70,79,82,77,65,84,95,67,79,85,78,84,0,0,0,0,0,0,32,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,3,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,24,0,0,0,3,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,255,255,255,255,0,1,0,0,0,0,0,0,0,0,0,0,2,0,0,0,24,0,0,0,3,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,255,255,255,255,0,1,0,0,0,0,0,0,0,0,0,0,3,0,0,0,16,0,0,0,2,0,0,0,5,0,0,0,6,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,255,255,255,255,0,1,0,0,0,0,0,0,0,0,0,0,4,0,0,0,8,0,0,0,1,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,1,0,0,1,0,0,0,2,0,0,0,5,0,0,0,16,0,0,0,2,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8],"i8",ALLOC_NONE,Runtime.GLOBAL_BASE);allocate([255,255,255,255,255,255,255,255,1,0,0,0,0,1,0,0,1,0,0,0,2,0,0,0,6,0,0,0,8,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,8,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,8,0,0,0,24,0,0,0,3,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,255,255,255,255,0,1,0,0,3,0,0,0,4,0,0,0,9,0,0,0,24,0,0,0,3,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,255,255,255,255,0,1,0,0,3,0,0,0,4,0,0,0,10,0,0,0,32,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,3,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,11,0,0,0,32,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,3,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,12,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,1,1,0,0,0,0,0,0,0,0,0,0,13,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,1,1,0,0,0,0,0,0,0,0,0,0,14,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,1,1,0,0,0,0,0,0,0,0,0,0,15,0,0,0,32,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,255,255,255,255,0,1,0,0,0,0,0,0,0,0,0,0,16,0,0,0,16,0,0,0,2,0,0,0,5,0,0,0,6,0,0,0,5,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,255,255,255,255,0,1,0,0,0,0,0,0,0,0,0,0,17,0,0,0,16,0,0,0,2,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,255,255,255,255,0,1,0,0,0,0,0,0,0,0,0,0,18,0,0,0,16,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,3,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,19,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,1,1,0,0,0,0,0,0,0,0,0,0,20,0,0,0,16,0,0,0,2,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,3,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,21,0,0,0,16,0,0,0,2,0,0,0,8,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,255,255,255,255,255,255,255,255,0,1,0,0,0,0,0,0,0,0,0,0,22,0,0,0,32,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,23,0,0,0,64,0,0,0,8,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,0,1,0,0,5,0,0,0,6,0,0,0,24,0,0,0,64,0,0,0,8,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,25,0,0,0,32,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,26,0,0,0,32,0,0,0,4,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,27,0,0,0,96,0,0,0,12,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,128,0,0,0,16,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,0,0,0,16,0,0,0,2,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,1,0,0,0,0,0,0,0,0,0,0,30,0,0,0,24,0,0,0,3,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,1,0,0,0,0,0,0,0,0,0,0,31,0,0,0,32,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,24,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,33,0,0,0,16,0,0,0,2,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,1,0,0,0,0,0,0,0,0,0,0,34,0,0,0,24,0,0,0,3,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,1,0,0,0,0,0,0,0,0,0,0,35,0,0,0,32,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,36,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,1,0,0,0,0,0,0,0,0,0,0,0,38,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,1,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,73,109,97,103,101,32,102,111,114,109,97,116,32,99,111,110,118,101,114,115,105,111,110,32,110,111,116,32,115,117,112,112,111,114,116,101,100,46,0,0,75,101,114,110,101,108,70,105,108,116,101,114,32,62,61,32,48,32,38,38,32,75,101,114,110,101,108,70,105,108,116,101,114,32,60,32,75,69,82,78,69,76,95,70,73,76,84,69,82,95,67,79,85,78,84,0,67,111,110,118,101,114,116,84,111,78,111,114,109,97,108,77,97,112,0,0,0,0,0,0,72,101,105,103,104,116,67,111,110,118,101,114,115,105,111,110,77,101,116,104,111,100,32,62,61,32,48,32,38,38,32,72,101,105,103,104,116,67,111,110,118,101,114,115,105,111,110,77,101,116,104,111,100,32,60,32,72,69,73,71,72,84,95,67,79,78,86,69,82,83,73,79,78,95,77,69,84,72,79,68,95,67,79,85,78,84,0,0,78,111,114,109,97,108,65,108,112,104,97,82,101,115,117,108,116,32,62,61,32,48,32,38,38,32,78,111,114,109,97,108,65,108,112,104,97,82,101,115,117,108,116,32,60,32,78,79,82,77,65,76,95,65,76,80,72,65,95,82,69,83,85,76,84,95,67,79,85,78,84,0,78,86,68,88,84,32,115,117,112,112,111,114,116,32,114,101,113,117,105,114,101,100,32,102,111,114,32,67,86,84,70,70,105,108,101,58,58,67,111,110,118,101,114,116,84,111,78,111,114,109,97,108,77,97,112,40,41,46,0,0,0,0,0,0,82,101,115,105,122,101,70,105,108,116,101,114,32,62,61,32,48,32,38,38,32,82,101,115,105,122,101,70,105,108,116,101,114,32,60,32,77,73,80,77,65,80,95,70,73,76,84,69,82,95,67,79,85,78,84,0,82,101,115,105,122,101,0,0,83,104,97,114,112,101,110,70,105,108,116,101,114,32,62,61,32,48,32,38,38,32,83,104,97,114,112,101,110,70,105,108,116,101,114,32,60,32,83,72,65,82,80,69,78,95,70,73,76,84,69,82,95,67,79,85,78,84,0,0,0,0,0,0,82,71,66,65,56,56,56,56,0,0,0,0,0,0,0,0,65,66,71,82,56,56,56,56,0,0,0,0,0,0,0,0,82,71,66,56,56,56,0,0,66,71,82,56,56,56,0,0,82,71,66,53,54,53,0,0,73,56,0,0,0,0,0,0,73,65,56,56,0,0,0,0,80,56,0,0,0,0,0,0,65,56,0,0,0,0,0,0,82,71,66,56,56,56,32,66,108,117,101,115,99,114,101,101,110,0,0,0,0,0,0,0,66,71,82,56,56,56,32,66,108,117,101,115,99,114,101,101,110,0,0,0,0,0,0,0,65,82,71,66,56,56,56,56,0,0,0,0,0,0,0,0,66,71,82,65,56,56,56,56,0,0,0,0,0,0,0,0,68,88,84,49,0,0,0,0,68,88,84,51,0,0,0,0,68,88,84,53,0,0,0,0,66,71,82,88,56,56,56,56,0,0,0,0,0,0,0,0,66,71,82,53,54,53,0,0,66,71,82,88,53,53,53,49,0,0,0,0,0,0,0,0,66,71,82,65,52,52,52,52,0,0,0,0,0,0,0,0,68,88,84,49,32,79,110,101,32,66,105,116,32,65,108,112,104,97,0,0,0,0,0,0,66,71,82,65,53,53,53,49,0,0,0,0,0,0,0,0,85,86,56,56,0,0,0,0,85,86,87,81,56,56,56,56,0,0,0,0,0,0,0,0,82,71,66,65,49,54,49,54,49,54,49,54,70,0,0,0,82,71,66,65,49,54,49,54,49,54,49,54,0,0,0,0,85,86,76,88,56,56,56,56,0,0,0,0,0,0,0,0,82,51,50,70,0,0,0,0,82,71,66,51,50,51,50,51,50,70,0,0,0,0,0,0,82,71,66,65,51,50,51,50,51,50,51,50,70,0,0,0,110,86,105,100,105,97,32,68,83,84,49,54,0,0,0,0,110,86,105,100,105,97,32,68,83,84,50,52,0,0,0,0,110,86,105,100,105,97,32,73,78,84,90,0,0,0,0,0,110,86,105,100,105,97,32,82,65,87,90,0,0,0,0,0,65,84,73,32,68,83,84,49,54,0,0,0,0,0,0,0,65,84,73,32,68,83,84,50,52,0,0,0,0,0,0,0,110,86,105,100,105,97,32,78,85,76,76,0,0,0,0,0,65,84,73,49,78,0,0,0,65,84,73,50,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,22,153,62,0,0,0,0,162,69,22,63,0,0,0,0,213,120,233,61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,64,0,0,0,0,86,84,70,76,105,98,32,97,108,114,101,97,100,121,32,105,110,105,116,105,97,108,105,122,101,100,46,0,0,0,0,0,86,84,70,76,105,98,32,110,111,116,32,105,110,105,116,105,97,108,105,122,101,100,46,0,73,110,118,97,108,105,100,32,105,109,97,103,101,46,0,0,78,111,32,105,109,97,103,101,32,98,111,117,110,100,46],"i8",ALLOC_NONE,Runtime.GLOBAL_BASE+10244);allocate([112,56,0,0,2,0,0,0,3,0,0,0,7,0,0,0,3,0,0,0,1,0,0,0,7,0,0,0,5,0,0,0,6,0,0,0,4,0,0,0,7,0,0,0,8,0,0,0,2,0,0,0,5,0,0,0,3,0,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,119,69,69,0,0,0,0,0,0,0,0,40,105,0,0,80,56,0,0,232,61,0,0,0,0,0,0,0,0,0,0,216,56,0,0,2,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,1,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,4,0,0,0,10,0,0,0,11,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,119,69,69,0,40,105,0,0,192,56,0,0,232,61,0,0,0,0,0,0,117,110,115,117,112,112,111,114,116,101,100,32,108,111,99,97,108,101,32,102,111,114,32,115,116,97,110,100,97,114,100,32,105,110,112,117,116,0,0,0,0,0,0,0,112,57,0,0,5,0,0,0,6,0,0,0,9,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,12,0,0,0,13,0,0,0,8,0,0,0,14,0,0,0,15,0,0,0,6,0,0,0,9,0,0,0,7,0,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,99,69,69,0,0,0,0,0,0,0,0,40,105,0,0,80,57,0,0,168,61,0,0,0,0,0,0,0,0,0,0,216,57,0,0,5,0,0,0,7,0,0,0,10,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,16,0,0,0,13,0,0,0,8,0,0,0,17,0,0,0,18,0,0,0,8,0,0,0,10,0,0,0,9,0,0,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,99,69,69,0,40,105,0,0,192,57,0,0,168,61,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,115,104,97,114,101,100,95,99,111,117,110,116,69,0,0,0,0,0,0,0,0,152,104,0,0,232,57,0,0,58,32,0,0,0,0,0,0,0,0,0,0,72,58,0,0,8,0,0,0,9,0,0,0,19,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,50,115,121,115,116,101,109,95,101,114,114,111,114,69,0,0,40,105,0,0,48,58,0,0,64,103,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,101,114,114,111,114,95,99,97,116,101,103,111,114,121,69,0,0,0,0,0,0,0,0,152,104,0,0,88,58,0,0,78,83,116,51,95,95,49,49,50,95,95,100,111,95,109,101,115,115,97,103,101,69,0,0,40,105,0,0,128,58,0,0,120,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,98,97,115,105,99,95,115,116,114,105,110,103,0,0,0,0,0,0,0,0,168,61,0,0,10,0,0,0,11,0,0,0,11,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,16,0,0,0,13,0,0,0,8,0,0,0,14,0,0,0,15,0,0,0,6,0,0,0,10,0,0,0,9,0,0,0,0,0,0,0,232,61,0,0,12,0,0,0,13,0,0,0,12,0,0,0,3,0,0,0,1,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,4,0,0,0,7,0,0,0,8,0,0,0,2,0,0,0,6,0,0,0,5,0,0,0,8,0,0,0,0,0,0,0,32,62,0,0,14,0,0,0,15,0,0,0,248,255,255,255,248,255,255,255,32,62,0,0,16,0,0,0,17,0,0,0,8,0,0,0,0,0,0,0,104,62,0,0,18,0,0,0,19,0,0,0,248,255,255,255,248,255,255,255,104,62,0,0,20,0,0,0,21,0,0,0,4,0,0,0,0,0,0,0,176,62,0,0,22,0,0,0,23,0,0,0,252,255,255,255,252,255,255,255,176,62,0,0,24,0,0,0,25,0,0,0,4,0,0,0,0,0,0,0,248,62,0,0,26,0,0,0,27,0,0,0,252,255,255,255,252,255,255,255,248,62,0,0,28,0,0,0,29,0,0,0,105,111,115,116,114,101,97,109,0,0,0,0,0,0,0,0,117,110,115,112,101,99,105,102,105,101,100,32,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,32,101,114,114,111,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,60,0,0,30,0,0,0,31,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,232,60,0,0,32,0,0,0,33,0,0,0,105,111,115,95,98,97,115,101,58,58,99,108,101,97,114,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,55,102,97,105,108,117,114,101,69,0,0,0,0,0,0,0,40,105,0,0,160,60,0,0,72,58,0,0,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,69,0,0,0,0,0,0,0,152,104,0,0,208,60,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,40,105,0,0,240,60,0,0,232,60,0,0,0,0,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,40,105,0,0,48,61,0,0,232,60,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,0,152,104,0,0,112,61,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,0,152,104,0,0,176,61,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,136,105,0,0,240,61,0,0,0,0,0,0,1,0,0,0,32,61,0,0,3,244,255,255,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,136,105,0,0,56,62,0,0,0,0,0,0,1,0,0,0,96,61,0,0,3,244,255,255,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,136,105,0,0,128,62,0,0,0,0,0,0,1,0,0,0,32,61,0,0,3,244,255,255,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,136,105,0,0,200,62,0,0,0,0,0,0,1,0,0,0,96,61,0,0,3,244,255,255,0,0,0,0,88,63,0,0,34,0,0,0,35,0,0,0,20,0,0,0,1,0,0,0,11,0,0,0,12,0,0,0,2,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,57,95,95,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,69,0,0,0,40,105,0,0,56,63,0,0,152,58,0,0,0,0,0,0,0,0,0,0,160,77,0,0,36,0,0,0,37,0,0,0,38,0,0,0,1,0,0,0,9,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,77,0,0,39,0,0,0,40,0,0,0,38,0,0,0,2,0,0,0,10,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,79,0,0,41,0,0,0,42,0,0,0,38,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,65,66,67,68,69,70,120,88,43,45,112,80,105,73,110,78,0,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,48,80,0,0,43,0,0,0,44,0,0,0,38,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,80,0,0,45,0,0,0,46,0,0,0,38,0,0,0,3,0,0,0,4,0,0,0,23,0,0,0,5,0,0,0,24,0,0,0,1,0,0,0,2,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,108,0,0,0,0,0,0,0,108,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0,0,0,0,0,0,0,0,0,0,136,81,0,0,47,0,0,0,48,0,0,0,38,0,0,0,7,0,0,0,8,0,0,0,25,0,0,0,9,0,0,0,26,0,0,0,3,0,0,0,4,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,64,82,0,0,49,0,0,0,50,0,0,0,38,0,0,0,21,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,1,0,0,0,248,255,255,255,64,82,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,72,58,37,77,58,37,83,37,109,47,37,100,47,37,121,37,89,45,37,109,45,37,100,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,37,72,58,37,77,0,0,0,37,72,58,37,77,58,37,83,0,0,0,0,224,82,0,0,51,0,0,0,52,0,0,0,38,0,0,0,29,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,2,0,0,0,248,255,255,255,224,82,0,0,30,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,37,0,0,0,89,0,0,0,45,0,0,0,37,0,0,0,109,0,0,0,45,0,0,0,37,0,0,0,100,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,112,83,0,0,53,0,0,0,54,0,0,0,38,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,83,0,0,55,0,0,0,56,0,0,0,38,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,78,0,0,57,0,0,0,58,0,0,0,38,0,0,0,37,0,0,0,38,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,39,0,0,0,17,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,78,0,0,59,0,0,0,60,0,0,0,38,0,0,0,40,0,0,0,41,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,42,0,0,0,23,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,78,0,0,61,0,0,0,62,0,0,0,38,0,0,0,43,0,0,0,44,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,45,0,0,0,29,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,78,0,0,63,0,0,0,64,0,0,0,38,0,0,0,46,0,0,0,47,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,48,0,0,0,35,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,84,0,0,65,0,0,0,66,0,0,0,38,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,37,76,102,0,0,0,0,0,109,111,110,101,121,95,103,101,116,32,101,114,114,111,114,0,0,0,0,0,248,84,0,0,67,0,0,0,68,0,0,0,38,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,0,0,0,0,136,85,0,0,69,0,0,0,70,0,0,0,38,0,0,0,1,0,0,0,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,46,48,76,102,0,0,0,0,0,0,0,24,86,0,0,71,0,0,0,72,0,0,0,38,0,0,0,2,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,86,0,0,73,0,0,0,74,0,0,0,38,0,0,0,15,0,0,0,11,0,0,0,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,86,0,0,75,0,0,0,76,0,0,0,38,0,0,0,16,0,0,0,12,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,118,101,99,116,111,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,0,0,0,0,0,0,0,0,0,0,0,120,77,0,0,77,0,0,0,78,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,74,0,0,79,0,0,0,80,0,0,0,38,0,0,0,10,0,0,0,17,0,0,0,11,0,0,0,18,0,0,0,12,0,0,0,1,0,0,0,19,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,75,0,0,81,0,0,0,82,0,0,0,38,0,0,0,1,0,0,0,2,0,0,0,4,0,0,0,49,0,0,0,50,0,0,0,5,0,0,0,51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,77,0,0,83,0,0,0,84,0,0,0,38,0,0,0,52,0,0,0,53,0,0,0,39,0,0,0,40,0,0,0,41,0,0,0,0,0,0,0,80,77,0,0,85,0,0,0,86,0,0,0,38,0,0,0,54,0,0,0,55,0,0,0,42,0,0,0,43,0,0,0,44,0,0,0,116,114,117,101,0,0,0,0,116,0,0,0,114,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,102,97,108,115,101,0,0,0,102,0,0,0,97,0,0,0,108,0,0,0,115,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,109,47,37,100,47,37,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,72,58,37,77,58,37,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,97,32,37,98,32,37,100,32,37,72,58,37,77,58,37,83,32,37,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,97,0,0,0,32,0,0,0,37,0,0,0,98,0,0,0,32,0,0,0,37,0,0,0,100,0,0,0,32,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,108,111,99,97,108,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,0,0,0,0,0,136,73,0,0,87,0,0,0,88,0,0,0,38,0,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,102,97,99,101,116,69,0,0,0,40,105,0,0,112,73,0,0,8,58,0,0,0,0,0,0,0,0,0,0,24,74,0,0,87,0,0,0,89,0,0,0,38,0,0,0,20,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,13,0,0,0,21,0,0,0,14,0,0,0,22,0,0,0,15,0,0,0,5,0,0,0,23,0,0,0,6,0,0,0,0,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,99,116,121,112,101,95,98,97,115,101,69,0,0,0,0,152,104,0,0,248,73,0,0,136,105,0,0,224,73,0,0,0,0,0,0,2,0,0,0,136,73,0,0,2,0,0,0,16,74,0,0,2,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,99,69,69,0,0,0,0,0,0,0,136,105,0,0,56,74,0,0,0,0,0,0,2,0,0,0,136,73,0,0,2,0,0,0,16,74,0,0,2,0,0,0,0,0,0,0,232,74,0,0,87,0,0,0,90,0,0,0,38,0,0,0,3,0,0,0,4,0,0,0,7,0,0,0,56,0,0,0,57,0,0,0,8,0,0,0,58,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,99,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,50,99,111,100,101,99,118,116,95,98,97,115,101,69,0,0,152,104,0,0,200,74,0,0,136,105,0,0,160,74,0,0,0,0,0,0,2,0,0,0,136,73,0,0,2,0,0,0,224,74,0,0,2,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,119,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,136,105,0,0,8,75,0,0,0,0,0,0,2,0,0,0,136,73,0,0,2,0,0,0,224,74,0,0,2,0,0,0,0,0,0,0,168,75,0,0,87,0,0,0,91,0,0,0,38,0,0,0,5,0,0,0,6,0,0,0,9,0,0,0,59,0,0,0,60,0,0,0,10,0,0,0,61,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,115,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,136,105,0,0,128,75,0,0,0,0,0,0,2,0,0,0,136,73,0,0,2,0,0,0,224,74,0,0,2,0,0,0,0,0,0,0,32,76,0,0,87,0,0,0,92,0,0,0,38,0,0,0,7,0,0,0,8,0,0,0,11,0,0,0,62,0,0,0,63,0,0,0,12,0,0,0,64,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,105,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,136,105,0,0,248,75,0,0,0,0,0,0,2,0,0,0,136,73,0,0,2,0,0,0,224,74,0,0,2,0,0,0,0,0,0,0,152,76,0,0,87,0,0,0,93,0,0,0,38,0,0,0,7,0,0,0,8,0,0,0,11,0,0,0,62,0,0,0,63,0,0,0,12,0,0,0,64,0,0,0,78,83,116,51,95,95,49,49,54,95,95,110,97,114,114,111,119,95,116,111,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,0,40,105,0,0,112,76,0,0,32,76,0,0,0,0,0,0,0,0,0,0,0,77,0,0,87,0,0,0,94,0,0,0,38,0,0,0,7,0,0,0,8,0,0,0,11,0,0,0,62,0,0,0,63,0,0,0,12,0,0,0,64,0,0,0,78,83,116,51,95,95,49,49,55,95,95,119,105,100,101,110,95,102,114,111,109,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,40,105,0,0,216,76,0,0,32,76,0,0,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,99,69,69,0,0,0,0,40,105,0,0,16,77,0,0,136,73,0,0,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,119,69,69,0,0,0,0,40,105,0,0,56,77,0,0,136,73,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,95,95,105,109,112,69,0,0,0,40,105,0,0,96,77,0,0,136,73,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,99,69,69,0,0,0,0,0,40,105,0,0,136,77,0,0,136,73,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,119,69,69,0,0,0,0,0,40,105,0,0,176,77,0,0,136,73,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,48,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,95,98,97,115,101,69,0,0,0,0,152,104,0,0,248,77,0,0,136,105,0,0,216,77,0,0,0,0,0,0,2,0,0,0,136,73,0,0,2,0,0,0,16,78,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,49,69,69,69,0,0,0,0,0,136,105,0,0,56,78,0,0,0,0,0,0,2,0,0,0,136,73,0,0,2,0,0,0,16,78,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,48,69,69,69,0,0,0,0,0,136,105,0,0,120,78,0,0,0,0,0,0,2,0,0,0,136,73,0,0,2,0,0,0,16,78,0,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,49,69,69,69,0,0,0,0,0,136,105,0,0,184,78,0,0,0,0,0,0,2,0,0,0,136,73,0,0,2,0,0,0,16,78,0,0,2,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,103,101,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,152,104,0,0,88,79,0,0,136,105,0,0,64,79,0,0,0,0,0,0,1,0,0,0,120,79,0,0,0,0,0,0,136,105,0,0,248,78,0,0,0,0,0,0,2,0,0,0,136,73,0,0,2,0,0,0,128,79,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,119,69,69,0,0,0,136,105,0,0,0,80,0,0,0,0,0,0,1,0,0,0,120,79,0,0,0,0,0,0,136,105,0,0,184,79,0,0,0,0,0,0,2,0,0,0,136,73,0,0,2,0,0,0,24,80,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,112,117,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,152,104,0,0,176,80,0,0,136,105,0,0,152,80,0,0,0,0,0,0,1,0,0,0,208,80,0,0,0,0,0,0,136,105,0,0,80,80,0,0,0,0,0,0,2,0,0,0,136,73,0,0,2,0,0,0,216,80,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,119,69,69,0,0,0,136,105,0,0,88,81,0,0,0,0,0,0,1,0,0,0,208,80,0,0,0,0,0,0,136,105,0,0,16,81,0,0,0,0,0,0,2,0,0,0,136,73,0,0,2,0,0,0,112,81,0,0,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,57,116,105,109,101,95,98,97,115,101,69,0,0,0,0,0,0,152,104,0,0,240,81,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,99,69,69,0,0,0,0,0,0,0,152,104,0,0,16,82,0,0,136,105,0,0,168,81,0,0,0,0,0,0,3,0,0,0,136,73,0,0,2,0,0,0,8,82,0,0,2,0,0,0,56,82,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,119,69,69,0,0,0,0,0,0,0,152,104,0,0,176,82,0,0,136,105,0,0,104,82,0,0,0,0,0,0,3,0,0,0,136,73,0,0,2,0,0,0,8,82,0,0,2,0,0,0,216,82,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,116,105,109,101,95,112,117,116,69,0,0,0,0,152,104,0,0,80,83,0,0,136,105,0,0,8,83,0,0,0,0,0,0,2,0,0,0,136,73,0,0,2,0,0,0,104,83,0,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,136,105,0,0,144,83,0,0,0,0,0,0,2,0,0,0,136,73,0,0,2,0,0,0,104,83,0,0,0,8,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,99,69,69,0,0,0,0,0,0,0,0,152,104,0,0,64,84,0,0,136,105,0,0,248,83,0,0,0,0,0,0,2,0,0,0,136,73,0,0,2,0,0,0,96,84,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,119,69,69,0,0,0,0,0,0,0,0,152,104,0,0,208,84,0,0,136,105,0,0,136,84,0,0,0,0,0,0,2,0,0,0,136,73,0,0,2,0,0,0,240,84,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,99,69,69,0,0,0,0,0,0,0,0,152,104,0,0,96,85,0,0,136,105,0,0,24,85,0,0,0,0,0,0,2,0,0,0,136,73,0,0,2,0,0,0,128,85,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,119,69,69,0,0,0,0,0,0,0,0,152,104,0,0,240,85,0,0,136,105,0,0,168,85,0,0,0,0,0,0,2,0,0,0,136,73,0,0,2,0,0,0,16,86,0,0,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,99,69,69,0,0,0,0,78,83,116,51,95,95,49,49,51,109,101,115,115,97,103,101,115,95,98,97,115,101,69,0,152,104,0,0,80,86,0,0,136,105,0,0,56,86,0,0,0,0,0,0,2,0,0,0,136,73,0,0,2,0,0,0,104,86,0,0,2,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,119,69,69,0,0,0,0,136,105,0,0,144,86,0,0,0,0,0,0,2,0,0,0,136,73,0,0,2,0,0,0,104,86,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,80,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,77,0,0,0,0,0,0,80,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,114,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,99,0,0,0,104,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,105,0,0,0,108,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,117,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,116,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,111,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,97,110,117,97,114,121,0,70,101,98,114,117,97,114,121,0,0,0,0,0,0,0,0,77,97,114,99,104,0,0,0,65,112,114,105,108,0,0,0,77,97,121,0,0,0,0,0,74,117,110,101,0,0,0,0,74,117,108,121,0,0,0,0,65,117,103,117,115,116,0,0,83,101,112,116,101,109,98,101,114,0,0,0,0,0,0,0,79,99,116,111,98,101,114,0,78,111,118,101,109,98,101,114,0,0,0,0,0,0,0,0,68,101,99,101,109,98,101,114,0,0,0,0,0,0,0,0,74,97,110],"i8",ALLOC_NONE,Runtime.GLOBAL_BASE+14348);allocate([70,101,98,0,0,0,0,0,77,97,114,0,0,0,0,0,65,112,114,0,0,0,0,0,74,117,110,0,0,0,0,0,74,117,108,0,0,0,0,0,65,117,103,0,0,0,0,0,83,101,112,0,0,0,0,0,79,99,116,0,0,0,0,0,78,111,118,0,0,0,0,0,68,101,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,110,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,114,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,117,0,0,0,114,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,117,110,100,97,121,0,0,77,111,110,100,97,121,0,0,84,117,101,115,100,97,121,0,87,101,100,110,101,115,100,97,121,0,0,0,0,0,0,0,84,104,117,114,115,100,97,121,0,0,0,0,0,0,0,0,70,114,105,100,97,121,0,0,83,97,116,117,114,100,97,121,0,0,0,0,0,0,0,0,83,117,110,0,0,0,0,0,77,111,110,0,0,0,0,0,84,117,101,0,0,0,0,0,87,101,100,0,0,0,0,0,84,104,117,0,0,0,0,0,70,114,105,0,0,0,0,0,83,97,116,0,0,0,0,0,2,0,0,192,3,0,0,192,4,0,0,192,5,0,0,192,6,0,0,192,7,0,0,192,8,0,0,192,9,0,0,192,10,0,0,192,11,0,0,192,12,0,0,192,13,0,0,192,14,0,0,192,15,0,0,192,16,0,0,192,17,0,0,192,18,0,0,192,19,0,0,192,20,0,0,192,21,0,0,192,22,0,0,192,23,0,0,192,24,0,0,192,25,0,0,192,26,0,0,192,27,0,0,192,28,0,0,192,29,0,0,192,30,0,0,192,31,0,0,192,0,0,0,179,1,0,0,195,2,0,0,195,3,0,0,195,4,0,0,195,5,0,0,195,6,0,0,195,7,0,0,195,8,0,0,195,9,0,0,195,10,0,0,195,11,0,0,195,12,0,0,195,13,0,0,211,14,0,0,195,15,0,0,195,0,0,12,187,1,0,12,195,2,0,12,195,3,0,12,195,4,0,12,211,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,168,100,0,0,0,0,0,0,117,110,99,97,117,103,104,116,0,0,0,0,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,58,32,37,115,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,0,0,0,0,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,102,111,114,101,105,103,110,32,101,120,99,101,112,116,105,111,110,0,0,0,116,101,114,109,105,110,97,116,105,110,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,116,104,114,101,97,100,95,111,110,99,101,32,102,97,105,108,117,114,101,32,105,110,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,95,102,97,115,116,40,41,0,0,0,0,0,0,0,0,99,97,110,110,111,116,32,99,114,101,97,116,101,32,112,116,104,114,101,97,100,32,107,101,121,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,0,0,0,0,0,0,99,97,110,110,111,116,32,122,101,114,111,32,111,117,116,32,116,104,114,101,97,100,32,118,97,108,117,101,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,0,0,0,0,0,0,0,64,102,0,0,95,0,0,0,96,0,0,0,65,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,40,105,0,0,48,102,0,0,144,102,0,0,0,0,0,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,114,101,116,117,114,110,101,100,0,0,0,0,0,0,0,0,0,83,116,57,101,120,99,101,112,116,105,111,110,0,0,0,0,152,104,0,0,128,102,0,0,0,0,0,0,216,102,0,0,97,0,0,0,98,0,0,0,66,0,0,0,0,0,0,0,0,0,0,0,64,103,0,0,99,0,0,0,100,0,0,0,19,0,0,0,0,0,0,0,83,116,49,49,108,111,103,105,99,95,101,114,114,111,114,0,40,105,0,0,200,102,0,0,144,102,0,0,0,0,0,0,0,0,0,0,24,103,0,0,97,0,0,0,101,0,0,0,66,0,0,0,0,0,0,0,83,116,49,50,108,101,110,103,116,104,95,101,114,114,111,114,0,0,0,0,0,0,0,0,40,105,0,0,0,103,0,0,216,102,0,0,0,0,0,0,83,116,49,51,114,117,110,116,105,109,101,95,101,114,114,111,114,0,0,0,0,0,0,0,40,105,0,0,40,103,0,0,144,102,0,0,0,0,0,0,0,0,0,0,160,103,0,0,102,0,0,0,103,0,0,0,67,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,99,97,115,116,0,0,0,83,116,57,116,121,112,101,95,105,110,102,111,0,0,0,0,152,104,0,0,120,103,0,0,83,116,56,98,97,100,95,99,97,115,116,0,0,0,0,0,40,105,0,0,144,103,0,0,144,102,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,40,105,0,0,176,103,0,0,136,103,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,40,105,0,0,232,103,0,0,216,103,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,57,95,95,112,111,105,110,116,101,114,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,112,98,97,115,101,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,40,105,0,0,72,104,0,0,216,103,0,0,0,0,0,0,40,105,0,0,32,104,0,0,112,104,0,0,0,0,0,0,0,0,0,0,16,104,0,0,104,0,0,0,105,0,0,0,106,0,0,0,107,0,0,0,24,0,0,0,13,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,0,105,0,0,104,0,0,0,108,0,0,0,106,0,0,0,107,0,0,0,25,0,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,51,95,95,102,117,110,100,97,109,101,110,116,97,108,95,116,121,112,101,95,105,110,102,111,69,0,40,105,0,0,216,104,0,0,216,103,0,0,0,0,0,0,105,0,0,0,0,0,0,0,192,104,0,0,16,105,0,0,0,0,0,0,112,105,0,0,104,0,0,0,109,0,0,0,106,0,0,0,107,0,0,0,24,0,0,0,14,0,0,0,2,0,0,0,12,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,40,105,0,0,72,105,0,0,16,104,0,0,0,0,0,0,0,0,0,0,208,105,0,0,104,0,0,0,110,0,0,0,106,0,0,0,107,0,0,0,24,0,0,0,15,0,0,0,3,0,0,0,13,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,40,105,0,0,168,105,0,0,16,104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,3,4,5,6,7,8,9,255,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,1,2,4,7,3,6,5,0,0,0,0,0,0,0,0,105,110,102,105,110,105,116,121,0,0,0,0,0,0,0,0,95,112,137,0,255,9,47,15,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5,0,0,0,0,0,0,0,0,17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,45,43,32,32,32,48,88,48,120,0,0,0,0,0,0,0,40,110,117,108,108,41,0,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,0,0,0,0,0,105,110,102,0,0,0,0,0,73,78,70,0,0,0,0,0,110,97,110,0,0,0,0,0,78,65,78,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"i8",ALLOC_NONE,Runtime.GLOBAL_BASE+24592);var tempDoublePtr=Runtime.alignMemory(allocate(12,"i8",ALLOC_STATIC),8);assert(tempDoublePtr%8==0);function copyTempFloat(ptr){HEAP8[tempDoublePtr]=HEAP8[ptr];HEAP8[tempDoublePtr+1]=HEAP8[ptr+1];HEAP8[tempDoublePtr+2]=HEAP8[ptr+2];HEAP8[tempDoublePtr+3]=HEAP8[ptr+3]}function copyTempDouble(ptr){HEAP8[tempDoublePtr]=HEAP8[ptr];HEAP8[tempDoublePtr+1]=HEAP8[ptr+1];HEAP8[tempDoublePtr+2]=HEAP8[ptr+2];HEAP8[tempDoublePtr+3]=HEAP8[ptr+3];HEAP8[tempDoublePtr+4]=HEAP8[ptr+4];HEAP8[tempDoublePtr+5]=HEAP8[ptr+5];HEAP8[tempDoublePtr+6]=HEAP8[ptr+6];HEAP8[tempDoublePtr+7]=HEAP8[ptr+7]}function _atexit(func,arg){__ATEXIT__.unshift({func:func,arg:arg})}function ___cxa_atexit(){return _atexit.apply(null,arguments)}Module["_i64Add"]=_i64Add;Module["_i64Subtract"]=_i64Subtract;var _fabsf=Math_abs;var _floorf=Math_floor;function __ZSt18uncaught_exceptionv(){return!!__ZSt18uncaught_exceptionv.uncaught_exception}var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:(function(adjusted){if(!adjusted||EXCEPTIONS.infos[adjusted])return adjusted;for(var ptr in EXCEPTIONS.infos){var info=EXCEPTIONS.infos[ptr];if(info.adjusted===adjusted){return ptr}}return adjusted}),addRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount++}),decRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];assert(info.refcount>0);info.refcount--;if(info.refcount===0){if(info.destructor){Runtime.dynCall("vi",info.destructor,[ptr])}delete EXCEPTIONS.infos[ptr];___cxa_free_exception(ptr)}}),clearRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount=0})};function ___resumeException(ptr){if(!EXCEPTIONS.last){EXCEPTIONS.last=ptr}EXCEPTIONS.clearRef(EXCEPTIONS.deAdjust(ptr));throw ptr+" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch."}function ___cxa_find_matching_catch(){var thrown=EXCEPTIONS.last;if(!thrown){return(asm["setTempRet0"](0),0)|0}var info=EXCEPTIONS.infos[thrown];var throwntype=info.type;if(!throwntype){return(asm["setTempRet0"](0),thrown)|0}var typeArray=Array.prototype.slice.call(arguments);var pointer=Module["___cxa_is_pointer_type"](throwntype);if(!___cxa_find_matching_catch.buffer)___cxa_find_matching_catch.buffer=_malloc(4);HEAP32[___cxa_find_matching_catch.buffer>>2]=thrown;thrown=___cxa_find_matching_catch.buffer;for(var i=0;i<typeArray.length;i++){if(typeArray[i]&&Module["___cxa_can_catch"](typeArray[i],throwntype,thrown)){thrown=HEAP32[thrown>>2];info.adjusted=thrown;return(asm["setTempRet0"](typeArray[i]),thrown)|0}}thrown=HEAP32[thrown>>2];return(asm["setTempRet0"](throwntype),thrown)|0}function ___cxa_throw(ptr,type,destructor){EXCEPTIONS.infos[ptr]={ptr:ptr,adjusted:ptr,type:type,destructor:destructor,refcount:0};EXCEPTIONS.last=ptr;if(!("uncaught_exception"in __ZSt18uncaught_exceptionv)){__ZSt18uncaught_exceptionv.uncaught_exception=1}else{__ZSt18uncaught_exceptionv.uncaught_exception++}throw ptr+" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch."}function _canvasResize(sourceRGBA,targetRGBA,sourceWidth,sourceHeight,targetWidth,targetHeight){var resize=require("pica/lib/pure/resize");var sourceSize=sourceWidth*sourceHeight*4;var sourceData=new Uint8Array(Module.HEAPU8.buffer,sourceRGBA,sourceSize);var resultData=resize({src:sourceData,width:sourceWidth,height:sourceHeight,toWidth:targetWidth,toHeight:targetHeight,alpha:true,quality:3});Module.HEAPU8.set(resultData,targetRGBA);return true}var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};var ___errno_state=0;function ___setErrNo(value){HEAP32[___errno_state>>2]=value;return value}var PATH={splitPath:(function(filename){var splitPathRe=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;return splitPathRe.exec(filename).slice(1)}),normalizeArray:(function(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last==="."){parts.splice(i,1)}else if(last===".."){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up--;up){parts.unshift("..")}}return parts}),normalize:(function(path){var isAbsolute=path.charAt(0)==="/",trailingSlash=path.substr(-1)==="/";path=PATH.normalizeArray(path.split("/").filter((function(p){return!!p})),!isAbsolute).join("/");if(!path&&!isAbsolute){path="."}if(path&&trailingSlash){path+="/"}return(isAbsolute?"/":"")+path}),dirname:(function(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return"."}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir}),basename:(function(path){if(path==="/")return"/";var lastSlash=path.lastIndexOf("/");if(lastSlash===-1)return path;return path.substr(lastSlash+1)}),extname:(function(path){return PATH.splitPath(path)[3]}),join:(function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join("/"))}),join2:(function(l,r){return PATH.normalize(l+"/"+r)}),resolve:(function(){var resolvedPath="",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!=="string"){throw new TypeError("Arguments to path.resolve must be strings")}else if(!path){return""}resolvedPath=path+"/"+resolvedPath;resolvedAbsolute=path.charAt(0)==="/"}resolvedPath=PATH.normalizeArray(resolvedPath.split("/").filter((function(p){return!!p})),!resolvedAbsolute).join("/");return(resolvedAbsolute?"/":"")+resolvedPath||"."}),relative:(function(from,to){from=PATH.resolve(from).substr(1);to=PATH.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!=="")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!=="")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split("/"));var toParts=trim(to.split("/"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push("..")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join("/")})};var TTY={ttys:[],init:(function(){}),shutdown:(function(){}),register:(function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)}),stream_ops:{open:(function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}stream.tty=tty;stream.seekable=false}),close:(function(stream){stream.tty.ops.flush(stream.tty)}),flush:(function(stream){stream.tty.ops.flush(stream.tty)}),read:(function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(ERRNO_CODES.ENXIO)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead}),write:(function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(ERRNO_CODES.ENXIO)}for(var i=0;i<length;i++){try{stream.tty.ops.put_char(stream.tty,buffer[offset+i])}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}}if(length){stream.node.timestamp=Date.now()}return i})},default_tty_ops:{get_char:(function(tty){if(!tty.input.length){var result=null;if(ENVIRONMENT_IS_NODE){var BUFSIZE=256;var buf=new Buffer(BUFSIZE);var bytesRead=0;var fd=process.stdin.fd;var usingDevice=false;try{fd=fs.openSync("/dev/stdin","r");usingDevice=true}catch(e){}bytesRead=fs.readSync(fd,buf,0,BUFSIZE,null);if(usingDevice){fs.closeSync(fd)}if(bytesRead>0){result=buf.slice(0,bytesRead).toString("utf-8")}else{result=null}}else if(typeof window!="undefined"&&typeof window.prompt=="function"){result=window.prompt("Input: ");if(result!==null){result+="\n"}}else if(typeof readline=="function"){result=readline();if(result!==null){result+="\n"}}if(!result){return null}tty.input=intArrayFromString(result,true)}return tty.input.shift()}),put_char:(function(tty,val){if(val===null||val===10){Module["print"](UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}}),flush:(function(tty){if(tty.output&&tty.output.length>0){Module["print"](UTF8ArrayToString(tty.output,0));tty.output=[]}})},default_tty1_ops:{put_char:(function(tty,val){if(val===null||val===10){Module["printErr"](UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}}),flush:(function(tty){if(tty.output&&tty.output.length>0){Module["printErr"](UTF8ArrayToString(tty.output,0));tty.output=[]}})}};var MEMFS={ops_table:null,mount:(function(mount){return MEMFS.createNode(null,"/",16384|511,0)}),createNode:(function(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node}return node}),getFileDataAsRegularArray:(function(node){if(node.contents&&node.contents.subarray){var arr=[];for(var i=0;i<node.usedBytes;++i)arr.push(node.contents[i]);return arr}return node.contents}),getFileDataAsTypedArray:(function(node){if(!node.contents)return new Uint8Array;if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)}),expandFileStorage:(function(node,newCapacity){if(node.contents&&node.contents.subarray&&newCapacity>node.contents.length){node.contents=MEMFS.getFileDataAsRegularArray(node);node.usedBytes=node.contents.length}if(!node.contents||node.contents.subarray){var prevCapacity=node.contents?node.contents.buffer.byteLength:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)|0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0);return}if(!node.contents&&newCapacity>0)node.contents=[];while(node.contents.length<newCapacity)node.contents.push(0)}),resizeFileStorage:(function(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0;return}if(!node.contents||node.contents.subarray){var oldContents=node.contents;node.contents=new Uint8Array(new ArrayBuffer(newSize));if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize;return}if(!node.contents)node.contents=[];if(node.contents.length>newSize)node.contents.length=newSize;else while(node.contents.length<newSize)node.contents.push(0);node.usedBytes=newSize}),node_ops:{getattr:(function(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr}),setattr:(function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}}),lookup:(function(parent,name){throw FS.genericErrors[ERRNO_CODES.ENOENT]}),mknod:(function(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)}),rename:(function(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}}}delete old_node.parent.contents[old_node.name];old_node.name=new_name;new_dir.contents[new_name]=old_node;old_node.parent=new_dir}),unlink:(function(parent,name){delete parent.contents[name]}),rmdir:(function(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}delete parent.contents[name]}),readdir:(function(node){var entries=[".",".."];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries}),symlink:(function(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node}),readlink:(function(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return node.link})},stream_ops:{read:(function(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);assert(size>=0);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size}),write:(function(stream,buffer,offset,length,position,canOwn){if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=new Uint8Array(buffer.subarray(offset,offset+length));node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray)node.contents.set(buffer.subarray(offset,offset+length),position);else for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}node.usedBytes=Math.max(node.usedBytes,position+length);return length}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position}),allocate:(function(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)}),mmap:(function(stream,buffer,offset,length,position,prot,flags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&(contents.buffer===buffer||contents.buffer===buffer.buffer)){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<stream.node.usedBytes){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;ptr=_malloc(length);if(!ptr){throw new FS.ErrnoError(ERRNO_CODES.ENOMEM)}buffer.set(contents,ptr)}return{ptr:ptr,allocated:allocated}})}};var IDBFS={dbs:{},indexedDB:(function(){if(typeof indexedDB!=="undefined")return indexedDB;var ret=null;if(typeof window==="object")ret=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;assert(ret,"IDBFS used, but indexedDB not supported");return ret}),DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:(function(mount){return MEMFS.mount.apply(null,arguments)}),syncfs:(function(mount,populate,callback){IDBFS.getLocalSet(mount,(function(err,local){if(err)return callback(err);IDBFS.getRemoteSet(mount,(function(err,remote){if(err)return callback(err);var src=populate?remote:local;var dst=populate?local:remote;IDBFS.reconcile(src,dst,callback)}))}))}),getDB:(function(name,callback){var db=IDBFS.dbs[name];if(db){return callback(null,db)}var req;try{req=IDBFS.indexedDB().open(name,IDBFS.DB_VERSION)}catch(e){return callback(e)}req.onupgradeneeded=(function(e){var db=e.target.result;var transaction=e.target.transaction;var fileStore;if(db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)){fileStore=transaction.objectStore(IDBFS.DB_STORE_NAME)}else{fileStore=db.createObjectStore(IDBFS.DB_STORE_NAME)}if(!fileStore.indexNames.contains("timestamp")){fileStore.createIndex("timestamp","timestamp",{unique:false})}});req.onsuccess=(function(){db=req.result;IDBFS.dbs[name]=db;callback(null,db)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),getLocalSet:(function(mount,callback){var entries={};function isRealDir(p){return p!=="."&&p!==".."}function toAbsolute(root){return(function(p){return PATH.join2(root,p)})}var check=FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));while(check.length){var path=check.pop();var stat;try{stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){check.push.apply(check,FS.readdir(path).filter(isRealDir).map(toAbsolute(path)))}entries[path]={timestamp:stat.mtime}}return callback(null,{type:"local",entries:entries})}),getRemoteSet:(function(mount,callback){var entries={};IDBFS.getDB(mount.mountpoint,(function(err,db){if(err)return callback(err);var transaction=db.transaction([IDBFS.DB_STORE_NAME],"readonly");transaction.onerror=(function(e){callback(this.error);e.preventDefault()});var store=transaction.objectStore(IDBFS.DB_STORE_NAME);var index=store.index("timestamp");index.openKeyCursor().onsuccess=(function(event){var cursor=event.target.result;if(!cursor){return callback(null,{type:"remote",db:db,entries:entries})}entries[cursor.primaryKey]={timestamp:cursor.key};cursor.continue()})}))}),loadLocalEntry:(function(path,callback){var stat,node;try{var lookup=FS.lookupPath(path);node=lookup.node;stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){return callback(null,{timestamp:stat.mtime,mode:stat.mode})}else if(FS.isFile(stat.mode)){node.contents=MEMFS.getFileDataAsTypedArray(node);return callback(null,{timestamp:stat.mtime,mode:stat.mode,contents:node.contents})}else{return callback(new Error("node type not supported"))}}),storeLocalEntry:(function(path,entry,callback){try{if(FS.isDir(entry.mode)){FS.mkdir(path,entry.mode)}else if(FS.isFile(entry.mode)){FS.writeFile(path,entry.contents,{encoding:"binary",canOwn:true})}else{return callback(new Error("node type not supported"))}FS.chmod(path,entry.mode);FS.utime(path,entry.timestamp,entry.timestamp)}catch(e){return callback(e)}callback(null)}),removeLocalEntry:(function(path,callback){try{var lookup=FS.lookupPath(path);var stat=FS.stat(path);if(FS.isDir(stat.mode)){FS.rmdir(path)}else if(FS.isFile(stat.mode)){FS.unlink(path)}}catch(e){return callback(e)}callback(null)}),loadRemoteEntry:(function(store,path,callback){var req=store.get(path);req.onsuccess=(function(event){callback(null,event.target.result)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),storeRemoteEntry:(function(store,path,entry,callback){var req=store.put(entry,path);req.onsuccess=(function(){callback(null)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),removeRemoteEntry:(function(store,path,callback){var req=store.delete(path);req.onsuccess=(function(){callback(null)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),reconcile:(function(src,dst,callback){var total=0;var create=[];Object.keys(src.entries).forEach((function(key){var e=src.entries[key];var e2=dst.entries[key];if(!e2||e.timestamp>e2.timestamp){create.push(key);total++}}));var remove=[];Object.keys(dst.entries).forEach((function(key){var e=dst.entries[key];var e2=src.entries[key];if(!e2){remove.push(key);total++}}));if(!total){return callback(null)}var errored=false;var completed=0;var db=src.type==="remote"?src.db:dst.db;var transaction=db.transaction([IDBFS.DB_STORE_NAME],"readwrite");var store=transaction.objectStore(IDBFS.DB_STORE_NAME);function done(err){if(err){if(!done.errored){done.errored=true;return callback(err)}return}if(++completed>=total){return callback(null)}}transaction.onerror=(function(e){done(this.error);e.preventDefault()});create.sort().forEach((function(path){if(dst.type==="local"){IDBFS.loadRemoteEntry(store,path,(function(err,entry){if(err)return done(err);IDBFS.storeLocalEntry(path,entry,done)}))}else{IDBFS.loadLocalEntry(path,(function(err,entry){if(err)return done(err);IDBFS.storeRemoteEntry(store,path,entry,done)}))}}));remove.sort().reverse().forEach((function(path){if(dst.type==="local"){IDBFS.removeLocalEntry(path,done)}else{IDBFS.removeRemoteEntry(store,path,done)}}))})};var NODEFS={isWindows:false,staticInit:(function(){NODEFS.isWindows=!!process.platform.match(/^win/)}),mount:(function(mount){assert(ENVIRONMENT_IS_NODE);return NODEFS.createNode(null,"/",NODEFS.getMode(mount.opts.root),0)}),createNode:(function(parent,name,mode,dev){if(!FS.isDir(mode)&&!FS.isFile(mode)&&!FS.isLink(mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node=FS.createNode(parent,name,mode);node.node_ops=NODEFS.node_ops;node.stream_ops=NODEFS.stream_ops;return node}),getMode:(function(path){var stat;try{stat=fs.lstatSync(path);if(NODEFS.isWindows){stat.mode=stat.mode|(stat.mode&146)>>1}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}return stat.mode}),realPath:(function(node){var parts=[];while(node.parent!==node){parts.push(node.name);node=node.parent}parts.push(node.mount.opts.root);parts.reverse();return PATH.join.apply(null,parts)}),flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:(function(flags){if(flags in NODEFS.flagsToPermissionStringMap){return NODEFS.flagsToPermissionStringMap[flags]}else{return flags}}),node_ops:{getattr:(function(node){var path=NODEFS.realPath(node);var stat;try{stat=fs.lstatSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}if(NODEFS.isWindows&&!stat.blksize){stat.blksize=4096}if(NODEFS.isWindows&&!stat.blocks){stat.blocks=(stat.size+stat.blksize-1)/stat.blksize|0}return{dev:stat.dev,ino:stat.ino,mode:stat.mode,nlink:stat.nlink,uid:stat.uid,gid:stat.gid,rdev:stat.rdev,size:stat.size,atime:stat.atime,mtime:stat.mtime,ctime:stat.ctime,blksize:stat.blksize,blocks:stat.blocks}}),setattr:(function(node,attr){var path=NODEFS.realPath(node);try{if(attr.mode!==undefined){fs.chmodSync(path,attr.mode);node.mode=attr.mode}if(attr.timestamp!==undefined){var date=new Date(attr.timestamp);fs.utimesSync(path,date,date)}if(attr.size!==undefined){fs.truncateSync(path,attr.size)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),lookup:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);var mode=NODEFS.getMode(path);return NODEFS.createNode(parent,name,mode)}),mknod:(function(parent,name,mode,dev){var node=NODEFS.createNode(parent,name,mode,dev);var path=NODEFS.realPath(node);try{if(FS.isDir(node.mode)){fs.mkdirSync(path,node.mode)}else{fs.writeFileSync(path,"",{mode:node.mode})}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}return node}),rename:(function(oldNode,newDir,newName){var oldPath=NODEFS.realPath(oldNode);var newPath=PATH.join2(NODEFS.realPath(newDir),newName);try{fs.renameSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),unlink:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.unlinkSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),rmdir:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.rmdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),readdir:(function(node){var path=NODEFS.realPath(node);try{return fs.readdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),symlink:(function(parent,newName,oldPath){var newPath=PATH.join2(NODEFS.realPath(parent),newName);try{fs.symlinkSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),readlink:(function(node){var path=NODEFS.realPath(node);try{return fs.readlinkSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}})},stream_ops:{open:(function(stream){var path=NODEFS.realPath(stream.node);try{if(FS.isFile(stream.node.mode)){stream.nfd=fs.openSync(path,NODEFS.flagsToPermissionString(stream.flags))}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),close:(function(stream){try{if(FS.isFile(stream.node.mode)&&stream.nfd){fs.closeSync(stream.nfd)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),read:(function(stream,buffer,offset,length,position){if(length===0)return 0;var nbuffer=new Buffer(length);var res;try{res=fs.readSync(stream.nfd,nbuffer,0,length,position)}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}if(res>0){for(var i=0;i<res;i++){buffer[offset+i]=nbuffer[i]}}return res}),write:(function(stream,buffer,offset,length,position){var nbuffer=new Buffer(buffer.subarray(offset,offset+length));var res;try{res=fs.writeSync(stream.nfd,nbuffer,0,length,position)}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}return res}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){try{var stat=fs.fstatSync(stream.nfd);position+=stat.size}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position})}};var _stdin=allocate(1,"i32*",ALLOC_STATIC);var _stdout=allocate(1,"i32*",ALLOC_STATIC);var _stderr=allocate(1,"i32*",ALLOC_STATIC);var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},handleFSError:(function(e){if(!(e instanceof FS.ErrnoError))throw e+" : "+stackTrace();return ___setErrNo(e.errno)}),lookupPath:(function(path,opts){path=PATH.resolve(FS.cwd(),path);opts=opts||{};if(!path)return{path:"",node:null};var defaults={follow_mount:true,recurse_count:0};for(var key in defaults){if(opts[key]===undefined){opts[key]=defaults[key]}}if(opts.recurse_count>8){throw new FS.ErrnoError(ERRNO_CODES.ELOOP)}var parts=PATH.normalizeArray(path.split("/").filter((function(p){return!!p})),false);var current=FS.root;var current_path="/";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count});current=lookup.node;if(count++>40){throw new FS.ErrnoError(ERRNO_CODES.ELOOP)}}}}return{path:current_path,node:current}}),getPath:(function(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!=="/"?mount+"/"+path:mount+path}path=path?node.name+"/"+path:node.name;node=node.parent}}),hashName:(function(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length}),hashAddNode:(function(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node}),hashRemoveNode:(function(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}}),lookupNode:(function(parent,name){var err=FS.mayLookup(parent);if(err){throw new FS.ErrnoError(err,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)}),createNode:(function(parent,name,mode,rdev){if(!FS.FSNode){FS.FSNode=(function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev});FS.FSNode.prototype={};var readMode=292|73;var writeMode=146;Object.defineProperties(FS.FSNode.prototype,{read:{get:(function(){return(this.mode&readMode)===readMode}),set:(function(val){val?this.mode|=readMode:this.mode&=~readMode})},write:{get:(function(){return(this.mode&writeMode)===writeMode}),set:(function(val){val?this.mode|=writeMode:this.mode&=~writeMode})},isFolder:{get:(function(){return FS.isDir(this.mode)})},isDevice:{get:(function(){return FS.isChrdev(this.mode)})}})}var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node}),destroyNode:(function(node){FS.hashRemoveNode(node)}),isRoot:(function(node){return node===node.parent}),isMountpoint:(function(node){return!!node.mounted}),isFile:(function(mode){return(mode&61440)===32768}),isDir:(function(mode){return(mode&61440)===16384}),isLink:(function(mode){return(mode&61440)===40960}),isChrdev:(function(mode){return(mode&61440)===8192}),isBlkdev:(function(mode){return(mode&61440)===24576}),isFIFO:(function(mode){return(mode&61440)===4096}),isSocket:(function(mode){return(mode&49152)===49152}),flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:(function(str){var flags=FS.flagModes[str];if(typeof flags==="undefined"){throw new Error("Unknown file open mode: "+str)}return flags}),flagsToPermissionString:(function(flag){var accmode=flag&2097155;var perms=["r","w","rw"][accmode];if(flag&512){perms+="w"}return perms}),nodePermissions:(function(node,perms){if(FS.ignorePermissions){return 0}if(perms.indexOf("r")!==-1&&!(node.mode&292)){return ERRNO_CODES.EACCES}else if(perms.indexOf("w")!==-1&&!(node.mode&146)){return ERRNO_CODES.EACCES}else if(perms.indexOf("x")!==-1&&!(node.mode&73)){return ERRNO_CODES.EACCES}return 0}),mayLookup:(function(dir){var err=FS.nodePermissions(dir,"x");if(err)return err;if(!dir.node_ops.lookup)return ERRNO_CODES.EACCES;return 0}),mayCreate:(function(dir,name){try{var node=FS.lookupNode(dir,name);return ERRNO_CODES.EEXIST}catch(e){}return FS.nodePermissions(dir,"wx")}),mayDelete:(function(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var err=FS.nodePermissions(dir,"wx");if(err){return err}if(isdir){if(!FS.isDir(node.mode)){return ERRNO_CODES.ENOTDIR}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return ERRNO_CODES.EBUSY}}else{if(FS.isDir(node.mode)){return ERRNO_CODES.EISDIR}}return 0}),mayOpen:(function(node,flags){if(!node){return ERRNO_CODES.ENOENT}if(FS.isLink(node.mode)){return ERRNO_CODES.ELOOP}else if(FS.isDir(node.mode)){if((flags&2097155)!==0||flags&512){return ERRNO_CODES.EISDIR}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))}),MAX_OPEN_FDS:4096,nextfd:(function(fd_start,fd_end){fd_start=fd_start||0;fd_end=fd_end||FS.MAX_OPEN_FDS;for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(ERRNO_CODES.EMFILE)}),getStream:(function(fd){return FS.streams[fd]}),createStream:(function(stream,fd_start,fd_end){if(!FS.FSStream){FS.FSStream=(function(){});FS.FSStream.prototype={};Object.defineProperties(FS.FSStream.prototype,{object:{get:(function(){return this.node}),set:(function(val){this.node=val})},isRead:{get:(function(){return(this.flags&2097155)!==1})},isWrite:{get:(function(){return(this.flags&2097155)!==0})},isAppend:{get:(function(){return this.flags&1024})}})}var newStream=new FS.FSStream;for(var p in stream){newStream[p]=stream[p]}stream=newStream;var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream}),closeStream:(function(fd){FS.streams[fd]=null}),getStreamFromPtr:(function(ptr){return FS.streams[ptr-1]}),getPtrForStream:(function(stream){return stream?stream.fd+1:0}),chrdev_stream_ops:{open:(function(stream){var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}}),llseek:(function(){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)})},major:(function(dev){return dev>>8}),minor:(function(dev){return dev&255}),makedev:(function(ma,mi){return ma<<8|mi}),registerDevice:(function(dev,ops){FS.devices[dev]={stream_ops:ops}}),getDevice:(function(dev){return FS.devices[dev]}),getMounts:(function(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts}),syncfs:(function(populate,callback){if(typeof populate==="function"){callback=populate;populate=false}var mounts=FS.getMounts(FS.root.mount);var completed=0;function done(err){if(err){if(!done.errored){done.errored=true;return callback(err)}return}if(++completed>=mounts.length){callback(null)}}mounts.forEach((function(mount){if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)}))}),mount:(function(type,opts,mountpoint){var root=mountpoint==="/";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot}),unmount:(function(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach((function(hash){var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.indexOf(current.mount)!==-1){FS.destroyNode(current)}current=next}}));node.mounted=null;var idx=node.mount.mounts.indexOf(mount);assert(idx!==-1);node.mount.mounts.splice(idx,1)}),lookup:(function(parent,name){return parent.node_ops.lookup(parent,name)}),mknod:(function(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name==="."||name===".."){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var err=FS.mayCreate(parent,name);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return parent.node_ops.mknod(parent,name,mode,dev)}),create:(function(path,mode){mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)}),mkdir:(function(path,mode){mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)}),mkdev:(function(path,mode,dev){if(typeof dev==="undefined"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)}),symlink:(function(oldpath,newpath){if(!PATH.resolve(oldpath)){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}var newname=PATH.basename(newpath);var err=FS.mayCreate(parent,newname);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return parent.node_ops.symlink(parent,newname,oldpath)}),rename:(function(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;try{lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(!old_dir||!new_dir)throw new FS.ErrnoError(ERRNO_CODES.ENOENT);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(ERRNO_CODES.EXDEV)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH.relative(old_path,new_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}relative=PATH.relative(new_path,old_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var err=FS.mayDelete(old_dir,old_name,isdir);if(err){throw new FS.ErrnoError(err)}err=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(err){throw new FS.ErrnoError(err)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(new_dir!==old_dir){err=FS.nodePermissions(old_dir,"w");if(err){throw new FS.ErrnoError(err)}}try{if(FS.trackingDelegate["willMovePath"]){FS.trackingDelegate["willMovePath"](old_path,new_path)}}catch(e){console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: "+e.message)}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}try{if(FS.trackingDelegate["onMovePath"])FS.trackingDelegate["onMovePath"](old_path,new_path)}catch(e){console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: "+e.message)}}),rmdir:(function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,true);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}try{if(FS.trackingDelegate["willDeletePath"]){FS.trackingDelegate["willDeletePath"](path)}}catch(e){console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: "+e.message)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate["onDeletePath"])FS.trackingDelegate["onDeletePath"](path)}catch(e){console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: "+e.message)}}),readdir:(function(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}return node.node_ops.readdir(node)}),unlink:(function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,false);if(err){if(err===ERRNO_CODES.EISDIR)err=ERRNO_CODES.EPERM;throw new FS.ErrnoError(err)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}try{if(FS.trackingDelegate["willDeletePath"]){FS.trackingDelegate["willDeletePath"](path)}}catch(e){console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: "+e.message)}parent.node_ops.unlink(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate["onDeletePath"])FS.trackingDelegate["onDeletePath"](path)}catch(e){console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: "+e.message)}}),readlink:(function(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!link.node_ops.readlink){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return link.node_ops.readlink(link)}),stat:(function(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!node.node_ops.getattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return node.node_ops.getattr(node)}),lstat:(function(path){return FS.stat(path,true)}),chmod:(function(path,mode,dontFollow){var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})}),lchmod:(function(path,mode){FS.chmod(path,mode,true)}),fchmod:(function(fd,mode){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}FS.chmod(stream.node,mode)}),chown:(function(path,uid,gid,dontFollow){var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}node.node_ops.setattr(node,{timestamp:Date.now()})}),lchown:(function(path,uid,gid){FS.chown(path,uid,gid,true)}),fchown:(function(fd,uid,gid){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}FS.chown(stream.node,uid,gid)}),truncate:(function(path,len){if(len<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var err=FS.nodePermissions(node,"w");if(err){throw new FS.ErrnoError(err)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})}),ftruncate:(function(fd,len){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}FS.truncate(stream.node,len)}),utime:(function(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})}),open:(function(path,flags,mode,fd_start,fd_end){if(path===""){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}flags=typeof flags==="string"?FS.modeStringToFlags(flags):flags;mode=typeof mode==="undefined"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path==="object"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(ERRNO_CODES.EEXIST)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(FS.isChrdev(node.mode)){flags&=~512}if(!created){var err=FS.mayOpen(node,flags);if(err){throw new FS.ErrnoError(err)}}if(flags&512){FS.truncate(node,0)}flags&=~(128|512);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false},fd_start,fd_end);if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module["logReadFiles"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1;Module["printErr"]("read file: "+path)}}try{if(FS.trackingDelegate["onOpenFile"]){var trackingFlags=0;if((flags&2097155)!==1){trackingFlags|=FS.tracking.openFlags.READ}if((flags&2097155)!==0){trackingFlags|=FS.tracking.openFlags.WRITE}FS.trackingDelegate["onOpenFile"](path,trackingFlags)}}catch(e){console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: "+e.message)}return stream}),close:(function(stream){try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}}),llseek:(function(stream,offset,whence){if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position}),read:(function(stream,buffer,offset,length,position){if(length<0||position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!stream.stream_ops.read){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var seeking=true;if(typeof position==="undefined"){position=stream.position;seeking=false}else if(!stream.seekable){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead}),write:(function(stream,buffer,offset,length,position,canOwn){if(length<0||position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!stream.stream_ops.write){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if(stream.flags&1024){FS.llseek(stream,0,2)}var seeking=true;if(typeof position==="undefined"){position=stream.position;seeking=false}else if(!stream.seekable){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;try{if(stream.path&&FS.trackingDelegate["onWriteToFile"])FS.trackingDelegate["onWriteToFile"](stream.path)}catch(e){console.log("FS.trackingDelegate['onWriteToFile']('"+path+"') threw an exception: "+e.message)}return bytesWritten}),allocate:(function(stream,offset,length){if(offset<0||length<=0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP)}stream.stream_ops.allocate(stream,offset,length)}),mmap:(function(stream,buffer,offset,length,position,prot,flags){if((stream.flags&2097155)===1){throw new FS.ErrnoError(ERRNO_CODES.EACCES)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}return stream.stream_ops.mmap(stream,buffer,offset,length,position,prot,flags)}),ioctl:(function(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(ERRNO_CODES.ENOTTY)}return stream.stream_ops.ioctl(stream,cmd,arg)}),readFile:(function(path,opts){opts=opts||{};opts.flags=opts.flags||"r";opts.encoding=opts.encoding||"binary";if(opts.encoding!=="utf8"&&opts.encoding!=="binary"){throw new Error('Invalid encoding type "'+opts.encoding+'"')}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding==="utf8"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding==="binary"){ret=buf}FS.close(stream);return ret}),writeFile:(function(path,data,opts){opts=opts||{};opts.flags=opts.flags||"w";opts.encoding=opts.encoding||"utf8";if(opts.encoding!=="utf8"&&opts.encoding!=="binary"){throw new Error('Invalid encoding type "'+opts.encoding+'"')}var stream=FS.open(path,opts.flags,opts.mode);if(opts.encoding==="utf8"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,0,opts.canOwn)}else if(opts.encoding==="binary"){FS.write(stream,data,0,data.length,0,opts.canOwn)}FS.close(stream)}),cwd:(function(){return FS.currentPath}),chdir:(function(path){var lookup=FS.lookupPath(path,{follow:true});if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}var err=FS.nodePermissions(lookup.node,"x");if(err){throw new FS.ErrnoError(err)}FS.currentPath=lookup.path}),createDefaultDirectories:(function(){FS.mkdir("/tmp");FS.mkdir("/home");FS.mkdir("/home/web_user")}),createDefaultDevices:(function(){FS.mkdir("/dev");FS.registerDevice(FS.makedev(1,3),{read:(function(){return 0}),write:(function(){return 0})});FS.mkdev("/dev/null",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev("/dev/tty",FS.makedev(5,0));FS.mkdev("/dev/tty1",FS.makedev(6,0));var random_device;if(typeof crypto!=="undefined"){var randomBuffer=new Uint8Array(1);random_device=(function(){crypto.getRandomValues(randomBuffer);return randomBuffer[0]})}else if(ENVIRONMENT_IS_NODE){random_device=(function(){return require("crypto").randomBytes(1)[0]})}else{random_device=(function(){return Math.random()*256|0})}FS.createDevice("/dev","random",random_device);FS.createDevice("/dev","urandom",random_device);FS.mkdir("/dev/shm");FS.mkdir("/dev/shm/tmp")}),createStandardStreams:(function(){if(Module["stdin"]){FS.createDevice("/dev","stdin",Module["stdin"])}else{FS.symlink("/dev/tty","/dev/stdin")}if(Module["stdout"]){FS.createDevice("/dev","stdout",null,Module["stdout"])}else{FS.symlink("/dev/tty","/dev/stdout")}if(Module["stderr"]){FS.createDevice("/dev","stderr",null,Module["stderr"])}else{FS.symlink("/dev/tty1","/dev/stderr")}var stdin=FS.open("/dev/stdin","r");HEAP32[_stdin>>2]=FS.getPtrForStream(stdin);assert(stdin.fd===0,"invalid handle for stdin ("+stdin.fd+")");var stdout=FS.open("/dev/stdout","w");HEAP32[_stdout>>2]=FS.getPtrForStream(stdout);assert(stdout.fd===1,"invalid handle for stdout ("+stdout.fd+")");var stderr=FS.open("/dev/stderr","w");HEAP32[_stderr>>2]=FS.getPtrForStream(stderr);assert(stderr.fd===2,"invalid handle for stderr ("+stderr.fd+")")}),ensureErrnoError:(function(){if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.node=node;this.setErrno=(function(errno){this.errno=errno;for(var key in ERRNO_CODES){if(ERRNO_CODES[key]===errno){this.code=key;break}}});this.setErrno(errno);this.message=ERRNO_MESSAGES[errno]};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[ERRNO_CODES.ENOENT].forEach((function(code){FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack="<generic error, no stack>"}))}),staticInit:(function(){FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},"/");FS.createDefaultDirectories();FS.createDefaultDevices()}),init:(function(input,output,error){assert(!FS.init.initialized,"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");FS.init.initialized=true;FS.ensureErrnoError();Module["stdin"]=input||Module["stdin"];Module["stdout"]=output||Module["stdout"];Module["stderr"]=error||Module["stderr"];FS.createStandardStreams()}),quit:(function(){FS.init.initialized=false;for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}}),getMode:(function(canRead,canWrite){var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode}),joinPath:(function(parts,forceRelative){var path=PATH.join.apply(null,parts);if(forceRelative&&path[0]=="/")path=path.substr(1);return path}),absolutePath:(function(relative,base){return PATH.resolve(base,relative)}),standardizePath:(function(path){return PATH.normalize(path)}),findObject:(function(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(ret.exists){return ret.object}else{___setErrNo(ret.error);return null}}),analyzePath:(function(path,dontResolveLastLink){try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path==="/"}catch(e){ret.error=e.errno}return ret}),createFolder:(function(parent,name,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.mkdir(path,mode)}),createPath:(function(parent,path,canRead,canWrite){parent=typeof parent==="string"?parent:FS.getPath(parent);var parts=path.split("/").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current}),createFile:(function(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode)}),createDataFile:(function(parent,name,data,canRead,canWrite,canOwn){var path=name?PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name):parent;var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data==="string"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,"w");FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}return node}),createDevice:(function(parent,name,input,output){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:(function(stream){stream.seekable=false}),close:(function(stream){if(output&&output.buffer&&output.buffer.length){output(10)}}),read:(function(stream,buffer,offset,length,pos){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead}),write:(function(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}}if(length){stream.node.timestamp=Date.now()}return i})});return FS.mkdev(path,mode,dev)}),createLink:(function(parent,name,target,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);return FS.symlink(target,path)}),forceLoadFile:(function(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;var success=true;if(typeof XMLHttpRequest!=="undefined"){throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.")}else if(Module["read"]){try{obj.contents=intArrayFromString(Module["read"](obj.url),true);obj.usedBytes=obj.contents.length}catch(e){success=false}}else{throw new Error("Cannot load without read() or XMLHttpRequest.")}if(!success)___setErrNo(ERRNO_CODES.EIO);return success}),createLazyFile:(function(parent,name,url,canRead,canWrite){function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open("HEAD",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);var datalength=Number(xhr.getResponseHeader("Content-length"));var header;var hasByteServing=(header=xhr.getResponseHeader("Accept-Ranges"))&&header==="bytes";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=(function(from,to){if(from>to)throw new Error("invalid range ("+from+", "+to+") or no bytes requested!");if(to>datalength-1)throw new Error("only "+datalength+" bytes available! programmer error!");var xhr=new XMLHttpRequest;xhr.open("GET",url,false);if(datalength!==chunkSize)xhr.setRequestHeader("Range","bytes="+from+"-"+to);if(typeof Uint8Array!="undefined")xhr.responseType="arraybuffer";if(xhr.overrideMimeType){xhr.overrideMimeType("text/plain; charset=x-user-defined")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}else{return intArrayFromString(xhr.responseText||"",true)}});var lazyArray=this;lazyArray.setDataGetter((function(chunkNum){var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]==="undefined"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]==="undefined")throw new Error("doXHR failed!");return lazyArray.chunks[chunkNum]}));this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!=="undefined"){if(!ENVIRONMENT_IS_WORKER)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var lazyArray=new LazyUint8Array;Object.defineProperty(lazyArray,"length",{get:(function(){if(!this.lengthKnown){this.cacheLength()}return this._length})});Object.defineProperty(lazyArray,"chunkSize",{get:(function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize})});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperty(node,"usedBytes",{get:(function(){return this.contents.length})});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach((function(key){var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(ERRNO_CODES.EIO)}return fn.apply(null,arguments)}}));stream_ops.read=function stream_ops_read(stream,buffer,offset,length,position){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(ERRNO_CODES.EIO)}var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);assert(size>=0);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size};node.stream_ops=stream_ops;return node}),createPreloadedFile:(function(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn){Browser.init();var fullname=name?PATH.resolve(PATH.join2(parent,name)):parent;function processData(byteArray){function finish(byteArray){if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency("cp "+fullname)}var handled=false;Module["preloadPlugins"].forEach((function(plugin){if(handled)return;if(plugin["canHandle"](fullname)){plugin["handle"](byteArray,fullname,finish,(function(){if(onerror)onerror();removeRunDependency("cp "+fullname)}));handled=true}}));if(!handled)finish(byteArray)}addRunDependency("cp "+fullname);if(typeof url=="string"){Browser.asyncLoad(url,(function(byteArray){processData(byteArray)}),onerror)}else{processData(url)}}),indexedDB:(function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB}),DB_NAME:(function(){return"EM_FS_"+window.location.pathname}),DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:(function(paths,onload,onerror){onload=onload||(function(){});onerror=onerror||(function(){});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=function openRequest_onupgradeneeded(){console.log("creating db");var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME)};openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],"readwrite");var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach((function(path){var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=function putRequest_onsuccess(){ok++;if(ok+fail==total)finish()};putRequest.onerror=function putRequest_onerror(){fail++;if(ok+fail==total)finish()}}));transaction.onerror=onerror};openRequest.onerror=onerror}),loadFilesFromDB:(function(paths,onload,onerror){onload=onload||(function(){});onerror=onerror||(function(){});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],"readonly")}catch(e){onerror(e);return}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach((function(path){var getRequest=files.get(path);getRequest.onsuccess=function getRequest_onsuccess(){if(FS.analyzePath(path).exists){FS.unlink(path)}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish()};getRequest.onerror=function getRequest_onerror(){fail++;if(ok+fail==total)finish()}}));transaction.onerror=onerror};openRequest.onerror=onerror})};function _fflush(stream){}var _sqrtf=Math_sqrt;function _mkport(){throw"TODO"}var SOCKFS={mount:(function(mount){Module["websocket"]=Module["websocket"]&&"object"===typeof Module["websocket"]?Module["websocket"]:{};Module["websocket"]._callbacks={};Module["websocket"]["on"]=(function(event,callback){if("function"===typeof callback){this._callbacks[event]=callback}return this});Module["websocket"].emit=(function(event,param){if("function"===typeof this._callbacks[event]){this._callbacks[event].call(this,param)}});return FS.createNode(null,"/",16384|511,0)}),createSocket:(function(family,type,protocol){var streaming=type==1;if(protocol){assert(streaming==(protocol==6))}var sock={family:family,type:type,protocol:protocol,server:null,error:null,peers:{},pending:[],recv_queue:[],sock_ops:SOCKFS.websocket_sock_ops};var name=SOCKFS.nextname();var node=FS.createNode(SOCKFS.root,name,49152,0);node.sock=sock;var stream=FS.createStream({path:name,node:node,flags:FS.modeStringToFlags("r+"),seekable:false,stream_ops:SOCKFS.stream_ops});sock.stream=stream;return sock}),getSocket:(function(fd){var stream=FS.getStream(fd);if(!stream||!FS.isSocket(stream.node.mode)){return null}return stream.node.sock}),stream_ops:{poll:(function(stream){var sock=stream.node.sock;return sock.sock_ops.poll(sock)}),ioctl:(function(stream,request,varargs){var sock=stream.node.sock;return sock.sock_ops.ioctl(sock,request,varargs)}),read:(function(stream,buffer,offset,length,position){var sock=stream.node.sock;var msg=sock.sock_ops.recvmsg(sock,length);if(!msg){return 0}buffer.set(msg.buffer,offset);return msg.buffer.length}),write:(function(stream,buffer,offset,length,position){var sock=stream.node.sock;return sock.sock_ops.sendmsg(sock,buffer,offset,length)}),close:(function(stream){var sock=stream.node.sock;sock.sock_ops.close(sock)})},nextname:(function(){if(!SOCKFS.nextname.current){SOCKFS.nextname.current=0}return"socket["+SOCKFS.nextname.current++ +"]"}),websocket_sock_ops:{createPeer:(function(sock,addr,port){var ws;if(typeof addr==="object"){ws=addr;addr=null;port=null}if(ws){if(ws._socket){addr=ws._socket.remoteAddress;port=ws._socket.remotePort}else{var result=/ws[s]?:\/\/([^:]+):(\d+)/.exec(ws.url);if(!result){throw new Error("WebSocket URL must be in the format ws(s)://address:port")}addr=result[1];port=parseInt(result[2],10)}}else{try{var runtimeConfig=Module["websocket"]&&"object"===typeof Module["websocket"];var url="ws:#".replace("#","//");if(runtimeConfig){if("string"===typeof Module["websocket"]["url"]){url=Module["websocket"]["url"]}}if(url==="ws://"||url==="wss://"){var parts=addr.split("/");url=url+parts[0]+":"+port+"/"+parts.slice(1).join("/")}var subProtocols="binary";if(runtimeConfig){if("string"===typeof Module["websocket"]["subprotocol"]){subProtocols=Module["websocket"]["subprotocol"]}}subProtocols=subProtocols.replace(/^ +| +$/g,"").split(/ *, */);var opts=ENVIRONMENT_IS_NODE?{"protocol":subProtocols.toString()}:subProtocols;var WebSocket=ENVIRONMENT_IS_NODE?null:window["WebSocket"];ws=new WebSocket(url,opts);ws.binaryType="arraybuffer"}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH)}}var peer={addr:addr,port:port,socket:ws,dgram_send_queue:[]};SOCKFS.websocket_sock_ops.addPeer(sock,peer);SOCKFS.websocket_sock_ops.handlePeerEvents(sock,peer);if(sock.type===2&&typeof sock.sport!=="undefined"){peer.dgram_send_queue.push(new Uint8Array([255,255,255,255,"p".charCodeAt(0),"o".charCodeAt(0),"r".charCodeAt(0),"t".charCodeAt(0),(sock.sport&65280)>>8,sock.sport&255]))}return peer}),getPeer:(function(sock,addr,port){return sock.peers[addr+":"+port]}),addPeer:(function(sock,peer){sock.peers[peer.addr+":"+peer.port]=peer}),removePeer:(function(sock,peer){delete sock.peers[peer.addr+":"+peer.port]}),handlePeerEvents:(function(sock,peer){var first=true;var handleOpen=(function(){Module["websocket"].emit("open",sock.stream.fd);try{var queued=peer.dgram_send_queue.shift();while(queued){peer.socket.send(queued);queued=peer.dgram_send_queue.shift()}}catch(e){peer.socket.close()}});function handleMessage(data){assert(typeof data!=="string"&&data.byteLength!==undefined);data=new Uint8Array(data);var wasfirst=first;first=false;if(wasfirst&&data.length===10&&data[0]===255&&data[1]===255&&data[2]===255&&data[3]===255&&data[4]==="p".charCodeAt(0)&&data[5]==="o".charCodeAt(0)&&data[6]==="r".charCodeAt(0)&&data[7]==="t".charCodeAt(0)){var newport=data[8]<<8|data[9];SOCKFS.websocket_sock_ops.removePeer(sock,peer);peer.port=newport;SOCKFS.websocket_sock_ops.addPeer(sock,peer);return}sock.recv_queue.push({addr:peer.addr,port:peer.port,data:data});Module["websocket"].emit("message",sock.stream.fd)}if(ENVIRONMENT_IS_NODE){peer.socket.on("open",handleOpen);peer.socket.on("message",(function(data,flags){if(!flags.binary){return}handleMessage((new Uint8Array(data)).buffer)}));peer.socket.on("close",(function(){Module["websocket"].emit("close",sock.stream.fd)}));peer.socket.on("error",(function(error){sock.error=ERRNO_CODES.ECONNREFUSED;Module["websocket"].emit("error",[sock.stream.fd,sock.error,"ECONNREFUSED: Connection refused"])}))}else{peer.socket.onopen=handleOpen;peer.socket.onclose=(function(){Module["websocket"].emit("close",sock.stream.fd)});peer.socket.onmessage=function peer_socket_onmessage(event){handleMessage(event.data)};peer.socket.onerror=(function(error){sock.error=ERRNO_CODES.ECONNREFUSED;Module["websocket"].emit("error",[sock.stream.fd,sock.error,"ECONNREFUSED: Connection refused"])})}}),poll:(function(sock){if(sock.type===1&&sock.server){return sock.pending.length?64|1:0}var mask=0;var dest=sock.type===1?SOCKFS.websocket_sock_ops.getPeer(sock,sock.daddr,sock.dport):null;if(sock.recv_queue.length||!dest||dest&&dest.socket.readyState===dest.socket.CLOSING||dest&&dest.socket.readyState===dest.socket.CLOSED){mask|=64|1}if(!dest||dest&&dest.socket.readyState===dest.socket.OPEN){mask|=4}if(dest&&dest.socket.readyState===dest.socket.CLOSING||dest&&dest.socket.readyState===dest.socket.CLOSED){mask|=16}return mask}),ioctl:(function(sock,request,arg){switch(request){case 21531:var bytes=0;if(sock.recv_queue.length){bytes=sock.recv_queue[0].data.length}HEAP32[arg>>2]=bytes;return 0;default:return ERRNO_CODES.EINVAL}}),close:(function(sock){if(sock.server){try{sock.server.close()}catch(e){}sock.server=null}var peers=Object.keys(sock.peers);for(var i=0;i<peers.length;i++){var peer=sock.peers[peers[i]];try{peer.socket.close()}catch(e){}SOCKFS.websocket_sock_ops.removePeer(sock,peer)}return 0}),bind:(function(sock,addr,port){if(typeof sock.saddr!=="undefined"||typeof sock.sport!=="undefined"){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}sock.saddr=addr;sock.sport=port||_mkport();if(sock.type===2){if(sock.server){sock.server.close();sock.server=null}try{sock.sock_ops.listen(sock,0)}catch(e){if(!(e instanceof FS.ErrnoError))throw e;if(e.errno!==ERRNO_CODES.EOPNOTSUPP)throw e}}}),connect:(function(sock,addr,port){if(sock.server){throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP)}if(typeof sock.daddr!=="undefined"&&typeof sock.dport!=="undefined"){var dest=SOCKFS.websocket_sock_ops.getPeer(sock,sock.daddr,sock.dport);if(dest){if(dest.socket.readyState===dest.socket.CONNECTING){throw new FS.ErrnoError(ERRNO_CODES.EALREADY)}else{throw new FS.ErrnoError(ERRNO_CODES.EISCONN)}}}var peer=SOCKFS.websocket_sock_ops.createPeer(sock,addr,port);sock.daddr=peer.addr;sock.dport=peer.port;throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS)}),listen:(function(sock,backlog){if(!ENVIRONMENT_IS_NODE){throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP)}if(sock.server){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var WebSocketServer=null.Server;var host=sock.saddr;sock.server=new WebSocketServer({host:host,port:sock.sport});Module["websocket"].emit("listen",sock.stream.fd);sock.server.on("connection",(function(ws){if(sock.type===1){var newsock=SOCKFS.createSocket(sock.family,sock.type,sock.protocol);var peer=SOCKFS.websocket_sock_ops.createPeer(newsock,ws);newsock.daddr=peer.addr;newsock.dport=peer.port;sock.pending.push(newsock);Module["websocket"].emit("connection",newsock.stream.fd)}else{SOCKFS.websocket_sock_ops.createPeer(sock,ws);Module["websocket"].emit("connection",sock.stream.fd)}}));sock.server.on("closed",(function(){Module["websocket"].emit("close",sock.stream.fd);sock.server=null}));sock.server.on("error",(function(error){sock.error=ERRNO_CODES.EHOSTUNREACH;Module["websocket"].emit("error",[sock.stream.fd,sock.error,"EHOSTUNREACH: Host is unreachable"])}))}),accept:(function(listensock){if(!listensock.server){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var newsock=listensock.pending.shift();newsock.stream.flags=listensock.stream.flags;return newsock}),getname:(function(sock,peer){var addr,port;if(peer){if(sock.daddr===undefined||sock.dport===undefined){throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN)}addr=sock.daddr;port=sock.dport}else{addr=sock.saddr||0;port=sock.sport||0}return{addr:addr,port:port}}),sendmsg:(function(sock,buffer,offset,length,addr,port){if(sock.type===2){if(addr===undefined||port===undefined){addr=sock.daddr;port=sock.dport}if(addr===undefined||port===undefined){throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ)}}else{addr=sock.daddr;port=sock.dport}var dest=SOCKFS.websocket_sock_ops.getPeer(sock,addr,port);if(sock.type===1){if(!dest||dest.socket.readyState===dest.socket.CLOSING||dest.socket.readyState===dest.socket.CLOSED){throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN)}else if(dest.socket.readyState===dest.socket.CONNECTING){throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}}var data;if(buffer instanceof Array||buffer instanceof ArrayBuffer){data=buffer.slice(offset,offset+length)}else{data=buffer.buffer.slice(buffer.byteOffset+offset,buffer.byteOffset+offset+length)}if(sock.type===2){if(!dest||dest.socket.readyState!==dest.socket.OPEN){if(!dest||dest.socket.readyState===dest.socket.CLOSING||dest.socket.readyState===dest.socket.CLOSED){dest=SOCKFS.websocket_sock_ops.createPeer(sock,addr,port)}dest.dgram_send_queue.push(data);return length}}try{dest.socket.send(data);return length}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}}),recvmsg:(function(sock,length){if(sock.type===1&&sock.server){throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN)}var queued=sock.recv_queue.shift();if(!queued){if(sock.type===1){var dest=SOCKFS.websocket_sock_ops.getPeer(sock,sock.daddr,sock.dport);if(!dest){throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN)}else if(dest.socket.readyState===dest.socket.CLOSING||dest.socket.readyState===dest.socket.CLOSED){return null}else{throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}}else{throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}}var queuedLength=queued.data.byteLength||queued.data.length;var queuedOffset=queued.data.byteOffset||0;var queuedBuffer=queued.data.buffer||queued.data;var bytesRead=Math.min(length,queuedLength);var res={buffer:new Uint8Array(queuedBuffer,queuedOffset,bytesRead),addr:queued.addr,port:queued.port};if(sock.type===1&&bytesRead<queuedLength){var bytesRemaining=queuedLength-bytesRead;queued.data=new Uint8Array(queuedBuffer,queuedOffset+bytesRead,bytesRemaining);sock.recv_queue.unshift(queued)}return res})}};function _send(fd,buf,len,flags){var sock=SOCKFS.getSocket(fd);if(!sock){___setErrNo(ERRNO_CODES.EBADF);return-1}return _write(fd,buf,len)}function _pwrite(fildes,buf,nbyte,offset){var stream=FS.getStream(fildes);if(!stream){___setErrNo(ERRNO_CODES.EBADF);return-1}try{var slab=HEAP8;return FS.write(stream,slab,buf,nbyte,offset)}catch(e){FS.handleFSError(e);return-1}}function _write(fildes,buf,nbyte){var stream=FS.getStream(fildes);if(!stream){___setErrNo(ERRNO_CODES.EBADF);return-1}try{var slab=HEAP8;return FS.write(stream,slab,buf,nbyte)}catch(e){FS.handleFSError(e);return-1}}function _fileno(stream){stream=FS.getStreamFromPtr(stream);if(!stream)return-1;return stream.fd}function _fputc(c,stream){var chr=unSign(c&255);HEAP8[_fputc.ret>>0]=chr;var fd=_fileno(stream);var ret=_write(fd,_fputc.ret,1);if(ret==-1){var streamObj=FS.getStreamFromPtr(stream);if(streamObj)streamObj.error=true;return-1}else{return chr}}function _sysconf(name){switch(name){case 30:return PAGE_SIZE;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 79:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:{if(typeof navigator==="object")return navigator["hardwareConcurrency"]||1;return 1}}___setErrNo(ERRNO_CODES.EINVAL);return-1}function _fwrite(ptr,size,nitems,stream){var bytesToWrite=nitems*size;if(bytesToWrite==0)return 0;var fd=_fileno(stream);var bytesWritten=_write(fd,ptr,bytesToWrite);if(bytesWritten==-1){var streamObj=FS.getStreamFromPtr(stream);if(streamObj)streamObj.error=true;return 0}else{return bytesWritten/size|0}}var _llvm_pow_f32=Math_pow;Module["_bitshift64Lshr"]=_bitshift64Lshr;var _BDtoIHigh=true;function _pthread_cond_broadcast(){return 0}Module["_strlen"]=_strlen;function __reallyNegative(x){return x<0||x===0&&1/x===-Infinity}function __formatString(format,varargs){var textIndex=format;var argIndex=0;function getNextArg(type){var ret;if(type==="double"){ret=(HEAP32[tempDoublePtr>>2]=HEAP32[varargs+argIndex>>2],HEAP32[tempDoublePtr+4>>2]=HEAP32[varargs+(argIndex+4)>>2],+HEAPF64[tempDoublePtr>>3])}else if(type=="i64"){ret=[HEAP32[varargs+argIndex>>2],HEAP32[varargs+(argIndex+4)>>2]]}else{type="i32";ret=HEAP32[varargs+argIndex>>2]}argIndex+=Runtime.getNativeFieldSize(type);return ret}var ret=[];var curr,next,currArg;while(1){var startTextIndex=textIndex;curr=HEAP8[textIndex>>0];if(curr===0)break;next=HEAP8[textIndex+1>>0];if(curr==37){var flagAlwaysSigned=false;var flagLeftAlign=false;var flagAlternative=false;var flagZeroPad=false;var flagPadSign=false;flagsLoop:while(1){switch(next){case 43:flagAlwaysSigned=true;break;case 45:flagLeftAlign=true;break;case 35:flagAlternative=true;break;case 48:if(flagZeroPad){break flagsLoop}else{flagZeroPad=true;break};case 32:flagPadSign=true;break;default:break flagsLoop}textIndex++;next=HEAP8[textIndex+1>>0]}var width=0;if(next==42){width=getNextArg("i32");textIndex++;next=HEAP8[textIndex+1>>0]}else{while(next>=48&&next<=57){width=width*10+(next-48);textIndex++;next=HEAP8[textIndex+1>>0]}}var precisionSet=false,precision=-1;if(next==46){precision=0;precisionSet=true;textIndex++;next=HEAP8[textIndex+1>>0];if(next==42){precision=getNextArg("i32");textIndex++}else{while(1){var precisionChr=HEAP8[textIndex+1>>0];if(precisionChr<48||precisionChr>57)break;precision=precision*10+(precisionChr-48);textIndex++}}next=HEAP8[textIndex+1>>0]}if(precision<0){precision=6;precisionSet=false}var argSize;switch(String.fromCharCode(next)){case"h":var nextNext=HEAP8[textIndex+2>>0];if(nextNext==104){textIndex++;argSize=1}else{argSize=2}break;case"l":var nextNext=HEAP8[textIndex+2>>0];if(nextNext==108){textIndex++;argSize=8}else{argSize=4}break;case"L":case"q":case"j":argSize=8;break;case"z":case"t":case"I":argSize=4;break;default:argSize=null}if(argSize)textIndex++;next=HEAP8[textIndex+1>>0];switch(String.fromCharCode(next)){case"d":case"i":case"u":case"o":case"x":case"X":case"p":{var signed=next==100||next==105;argSize=argSize||4;var currArg=getNextArg("i"+argSize*8);var origArg=currArg;var argText;if(argSize==8){currArg=Runtime.makeBigInt(currArg[0],currArg[1],next==117)}if(argSize<=4){var limit=Math.pow(256,argSize)-1;currArg=(signed?reSign:unSign)(currArg&limit,argSize*8)}var currAbsArg=Math.abs(currArg);var prefix="";if(next==100||next==105){if(argSize==8&&i64Math)argText=i64Math.stringify(origArg[0],origArg[1],null);else argText=reSign(currArg,8*argSize,1).toString(10)}else if(next==117){if(argSize==8&&i64Math)argText=i64Math.stringify(origArg[0],origArg[1],true);else argText=unSign(currArg,8*argSize,1).toString(10);currArg=Math.abs(currArg)}else if(next==111){argText=(flagAlternative?"0":"")+currAbsArg.toString(8)}else if(next==120||next==88){prefix=flagAlternative&&currArg!=0?"0x":"";if(argSize==8&&i64Math){if(origArg[1]){argText=(origArg[1]>>>0).toString(16);var lower=(origArg[0]>>>0).toString(16);while(lower.length<8)lower="0"+lower;argText+=lower}else{argText=(origArg[0]>>>0).toString(16)}}else if(currArg<0){currArg=-currArg;argText=(currAbsArg-1).toString(16);var buffer=[];for(var i=0;i<argText.length;i++){buffer.push((15-parseInt(argText[i],16)).toString(16))}argText=buffer.join("");while(argText.length<argSize*2)argText="f"+argText}else{argText=currAbsArg.toString(16)}if(next==88){prefix=prefix.toUpperCase();argText=argText.toUpperCase()}}else if(next==112){if(currAbsArg===0){argText="(nil)"}else{prefix="0x";argText=currAbsArg.toString(16)}}if(precisionSet){while(argText.length<precision){argText="0"+argText}}if(currArg>=0){if(flagAlwaysSigned){prefix="+"+prefix}else if(flagPadSign){prefix=" "+prefix}}if(argText.charAt(0)=="-"){prefix="-"+prefix;argText=argText.substr(1)}while(prefix.length+argText.length<width){if(flagLeftAlign){argText+=" "}else{if(flagZeroPad){argText="0"+argText}else{prefix=" "+prefix}}}argText=prefix+argText;argText.split("").forEach((function(chr){ret.push(chr.charCodeAt(0))}));break};case"f":case"F":case"e":case"E":case"g":case"G":{var currArg=getNextArg("double");var argText;if(isNaN(currArg)){argText="nan";flagZeroPad=false}else if(!isFinite(currArg)){argText=(currArg<0?"-":"")+"inf";flagZeroPad=false}else{var isGeneral=false;var effectivePrecision=Math.min(precision,20);if(next==103||next==71){isGeneral=true;precision=precision||1;var exponent=parseInt(currArg.toExponential(effectivePrecision).split("e")[1],10);if(precision>exponent&&exponent>=-4){next=(next==103?"f":"F").charCodeAt(0);precision-=exponent+1}else{next=(next==103?"e":"E").charCodeAt(0);precision--}effectivePrecision=Math.min(precision,20)}if(next==101||next==69){argText=currArg.toExponential(effectivePrecision);if(/[eE][-+]\d$/.test(argText)){argText=argText.slice(0,-1)+"0"+argText.slice(-1)}}else if(next==102||next==70){argText=currArg.toFixed(effectivePrecision);if(currArg===0&&__reallyNegative(currArg)){argText="-"+argText}}var parts=argText.split("e");if(isGeneral&&!flagAlternative){while(parts[0].length>1&&parts[0].indexOf(".")!=-1&&(parts[0].slice(-1)=="0"||parts[0].slice(-1)==".")){parts[0]=parts[0].slice(0,-1)}}else{if(flagAlternative&&argText.indexOf(".")==-1)parts[0]+=".";while(precision>effectivePrecision++)parts[0]+="0"}argText=parts[0]+(parts.length>1?"e"+parts[1]:"");if(next==69)argText=argText.toUpperCase();if(currArg>=0){if(flagAlwaysSigned){argText="+"+argText}else if(flagPadSign){argText=" "+argText}}}while(argText.length<width){if(flagLeftAlign){argText+=" "}else{if(flagZeroPad&&(argText[0]=="-"||argText[0]=="+")){argText=argText[0]+"0"+argText.slice(1)}else{argText=(flagZeroPad?"0":" ")+argText}}}if(next<97)argText=argText.toUpperCase();argText.split("").forEach((function(chr){ret.push(chr.charCodeAt(0))}));break};case"s":{var arg=getNextArg("i8*");var argLength=arg?_strlen(arg):"(null)".length;if(precisionSet)argLength=Math.min(argLength,precision);if(!flagLeftAlign){while(argLength<width--){ret.push(32)}}if(arg){for(var i=0;i<argLength;i++){ret.push(HEAPU8[arg++>>0])}}else{ret=ret.concat(intArrayFromString("(null)".substr(0,argLength),true))}if(flagLeftAlign){while(argLength<width--){ret.push(32)}}break};case"c":{if(flagLeftAlign)ret.push(getNextArg("i8"));while(--width>0){ret.push(32)}if(!flagLeftAlign)ret.push(getNextArg("i8"));break};case"n":{var ptr=getNextArg("i32*");HEAP32[ptr>>2]=ret.length;break};case"%":{ret.push(curr);break};default:{for(var i=startTextIndex;i<textIndex+2;i++){ret.push(HEAP8[i>>0])}}}textIndex+=2}else{ret.push(curr);textIndex+=1}}return ret}function _fprintf(stream,format,varargs){var result=__formatString(format,varargs);var stack=Runtime.stackSave();var ret=_fwrite(allocate(result,"i8",ALLOC_STACK),1,result.length,stream);Runtime.stackRestore(stack);return ret}function _vfprintf(s,f,va_arg){return _fprintf(s,f,HEAP32[va_arg>>2])}function _pthread_mutex_unlock(){}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest);return dest}Module["_memcpy"]=_memcpy;function _pthread_mutex_lock(){}var _llvm_pow_f64=Math_pow;function _sbrk(bytes){var self=_sbrk;if(!self.called){DYNAMICTOP=alignMemoryPage(DYNAMICTOP);self.called=true;assert(Runtime.dynamicAlloc);self.alloc=Runtime.dynamicAlloc;Runtime.dynamicAlloc=(function(){abort("cannot dynamically allocate, sbrk now has control")})}var ret=DYNAMICTOP;if(bytes!=0)self.alloc(bytes);return ret}Module["_bitshift64Shl"]=_bitshift64Shl;var LOCALE={curr:0,check:(function(locale){if(locale)locale=Pointer_stringify(locale);return locale==="C"||locale==="POSIX"||!locale})};function _calloc(n,s){var ret=_malloc(n*s);_memset(ret,0,n*s);return ret}Module["_calloc"]=_calloc;function _newlocale(mask,locale,base){if(!LOCALE.check(locale)){___setErrNo(ERRNO_CODES.ENOENT);return 0}if(!base)base=_calloc(1,4);return base}Module["_memmove"]=_memmove;function ___errno_location(){return ___errno_state}var _BItoD=true;function _catclose(catd){return 0}function _free(){}Module["_free"]=_free;function ___cxa_free_exception(ptr){try{return _free(ptr)}catch(e){}}function ___cxa_end_catch(){if(___cxa_end_catch.rethrown){___cxa_end_catch.rethrown=false;return}asm["setThrew"](0);var ptr=EXCEPTIONS.caught.pop();if(ptr){EXCEPTIONS.decRef(EXCEPTIONS.deAdjust(ptr));EXCEPTIONS.last=0}}function ___cxa_rethrow(){___cxa_end_catch.rethrown=true;var ptr=EXCEPTIONS.caught.pop();EXCEPTIONS.last=ptr;throw ptr+" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch."}function ___cxa_guard_release(){}function _ungetc(c,stream){stream=FS.getStreamFromPtr(stream);if(!stream){return-1}if(c===-1){return c}c=unSign(c&255);stream.ungotten.push(c);stream.eof=false;return c}function _uselocale(locale){var old=LOCALE.curr;if(locale)LOCALE.curr=locale;return old}var _cosf=Math_cos;function ___assert_fail(condition,filename,line,func){ABORT=true;throw"Assertion failed: "+Pointer_stringify(condition)+", at: "+[filename?Pointer_stringify(filename):"unknown filename",line,func?Pointer_stringify(func):"unknown function"]+" at "+stackTrace()}Module["_memset"]=_memset;var _BDtoILow=true;function _strerror_r(errnum,strerrbuf,buflen){if(errnum in ERRNO_MESSAGES){if(ERRNO_MESSAGES[errnum].length>buflen-1){return ___setErrNo(ERRNO_CODES.ERANGE)}else{var msg=ERRNO_MESSAGES[errnum];writeAsciiToMemory(msg,strerrbuf);return 0}}else{return ___setErrNo(ERRNO_CODES.EINVAL)}}function _strerror(errnum){if(!_strerror.buffer)_strerror.buffer=_malloc(256);_strerror_r(errnum,_strerror.buffer,256);return _strerror.buffer}function __isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0)}function __arraySum(array,index){var sum=0;for(var i=0;i<=index;sum+=array[i++]);return sum}var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date,days){var newDate=new Date(date.getTime());while(days>0){var leap=__isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1)}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1)}}else{newDate.setDate(newDate.getDate()+days);return newDate}}return newDate}function _strftime(s,maxsize,format,tm){var tm_zone=HEAP32[tm+40>>2];var date={tm_sec:HEAP32[tm>>2],tm_min:HEAP32[tm+4>>2],tm_hour:HEAP32[tm+8>>2],tm_mday:HEAP32[tm+12>>2],tm_mon:HEAP32[tm+16>>2],tm_year:HEAP32[tm+20>>2],tm_wday:HEAP32[tm+24>>2],tm_yday:HEAP32[tm+28>>2],tm_isdst:HEAP32[tm+32>>2],tm_gmtoff:HEAP32[tm+36>>2],tm_zone:tm_zone?Pointer_stringify(tm_zone):""};var pattern=Pointer_stringify(format);var EXPANSION_RULES_1={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_1[rule])}var WEEKDAYS=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];var MONTHS=["January","February","March","April","May","June","July","August","September","October","November","December"];function leadingSomething(value,digits,character){var str=typeof value==="number"?value.toString():value||"";while(str.length<digits){str=character[0]+str}return str}function leadingNulls(value,digits){return leadingSomething(value,digits,"0")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate())}}return compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var thisDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1}else{return thisDate.getFullYear()}}else{return thisDate.getFullYear()-1}}var EXPANSION_RULES_2={"%a":(function(date){return WEEKDAYS[date.tm_wday].substring(0,3)}),"%A":(function(date){return WEEKDAYS[date.tm_wday]}),"%b":(function(date){return MONTHS[date.tm_mon].substring(0,3)}),"%B":(function(date){return MONTHS[date.tm_mon]}),"%C":(function(date){var year=date.tm_year+1900;return leadingNulls(year/100|0,2)}),"%d":(function(date){return leadingNulls(date.tm_mday,2)}),"%e":(function(date){return leadingSomething(date.tm_mday,2," ")}),"%g":(function(date){return getWeekBasedYear(date).toString().substring(2)}),"%G":(function(date){return getWeekBasedYear(date)}),"%H":(function(date){return leadingNulls(date.tm_hour,2)}),"%I":(function(date){return leadingNulls(date.tm_hour<13?date.tm_hour:date.tm_hour-12,2)}),"%j":(function(date){return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900)?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,date.tm_mon-1),3)}),"%m":(function(date){return leadingNulls(date.tm_mon+1,2)}),"%M":(function(date){return leadingNulls(date.tm_min,2)}),"%n":(function(){return"\n"}),"%p":(function(date){if(date.tm_hour>0&&date.tm_hour<13){return"AM"}else{return"PM"}}),"%S":(function(date){return leadingNulls(date.tm_sec,2)}),"%t":(function(){return"\t"}),"%u":(function(date){var day=new Date(date.tm_year+1900,date.tm_mon+1,date.tm_mday,0,0,0,0);return day.getDay()||7}),"%U":(function(date){var janFirst=new Date(date.tm_year+1900,0,1);var firstSunday=janFirst.getDay()===0?janFirst:__addDays(janFirst,7-janFirst.getDay());var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstSunday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstSundayUntilEndJanuary=31-firstSunday.getDate();var days=firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstSunday,janFirst)===0?"01":"00"}),"%V":(function(date){var janFourthThisYear=new Date(date.tm_year+1900,0,4);var janFourthNextYear=new Date(date.tm_year+1901,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);var endDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);if(compareByDay(endDate,firstWeekStartThisYear)<0){return"53"}if(compareByDay(firstWeekStartNextYear,endDate)<=0){return"01"}var daysDifference;if(firstWeekStartThisYear.getFullYear()<date.tm_year+1900){daysDifference=date.tm_yday+32-firstWeekStartThisYear.getDate()}else{daysDifference=date.tm_yday+1-firstWeekStartThisYear.getDate()}return leadingNulls(Math.ceil(daysDifference/7),2)}),"%w":(function(date){var day=new Date(date.tm_year+1900,date.tm_mon+1,date.tm_mday,0,0,0,0);return day.getDay()}),"%W":(function(date){var janFirst=new Date(date.tm_year,0,1);var firstMonday=janFirst.getDay()===1?janFirst:__addDays(janFirst,janFirst.getDay()===0?1:7-janFirst.getDay()+1);var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstMonday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstMondayUntilEndJanuary=31-firstMonday.getDate();var days=firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstMonday,janFirst)===0?"01":"00"}),"%y":(function(date){return(date.tm_year+1900).toString().substring(2)}),"%Y":(function(date){return date.tm_year+1900}),"%z":(function(date){var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?"+":"-")+String("0000"+off).slice(-4)}),"%Z":(function(date){return date.tm_zone}),"%%":(function(){return"%"})};for(var rule in EXPANSION_RULES_2){if(pattern.indexOf(rule)>=0){pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_2[rule](date))}}var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0}writeArrayToMemory(bytes,s);return bytes.length-1}function _strftime_l(s,maxsize,format,tm){return _strftime(s,maxsize,format,tm)}function _abort(){Module["abort"]()}function _pthread_once(ptr,func){if(!_pthread_once.seen)_pthread_once.seen={};if(ptr in _pthread_once.seen)return;Runtime.dynCall("v",func);_pthread_once.seen[ptr]=1}function _pthread_cond_wait(){return 0}var PTHREAD_SPECIFIC={};function _pthread_getspecific(key){return PTHREAD_SPECIFIC[key]||0}var _fabs=Math_abs;function _recv(fd,buf,len,flags){var sock=SOCKFS.getSocket(fd);if(!sock){___setErrNo(ERRNO_CODES.EBADF);return-1}return _read(fd,buf,len)}function _pread(fildes,buf,nbyte,offset){var stream=FS.getStream(fildes);if(!stream){___setErrNo(ERRNO_CODES.EBADF);return-1}try{var slab=HEAP8;return FS.read(stream,slab,buf,nbyte,offset)}catch(e){FS.handleFSError(e);return-1}}function _read(fildes,buf,nbyte){var stream=FS.getStream(fildes);if(!stream){___setErrNo(ERRNO_CODES.EBADF);return-1}try{var slab=HEAP8;return FS.read(stream,slab,buf,nbyte)}catch(e){FS.handleFSError(e);return-1}}function _fread(ptr,size,nitems,stream){var bytesToRead=nitems*size;if(bytesToRead==0){return 0}var bytesRead=0;var streamObj=FS.getStreamFromPtr(stream);if(!streamObj){___setErrNo(ERRNO_CODES.EBADF);return 0}while(streamObj.ungotten.length&&bytesToRead>0){HEAP8[ptr++>>0]=streamObj.ungotten.pop();bytesToRead--;bytesRead++}var err=_read(streamObj.fd,ptr,bytesToRead);if(err==-1){if(streamObj)streamObj.error=true;return 0}bytesRead+=err;if(bytesRead<bytesToRead)streamObj.eof=true;return bytesRead/size|0}function _fgetc(stream){var streamObj=FS.getStreamFromPtr(stream);if(!streamObj)return-1;if(streamObj.eof||streamObj.error)return-1;var ret=_fread(_fgetc.ret,1,1,stream);if(ret==0){return-1}else if(ret==-1){streamObj.error=true;return-1}else{return HEAPU8[_fgetc.ret>>0]}}function _getc(){return _fgetc.apply(null,arguments)}function _emscripten_set_main_loop_timing(mode,value){Browser.mainLoop.timingMode=mode;Browser.mainLoop.timingValue=value;if(!Browser.mainLoop.func){return 1}if(mode==0){Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler(){setTimeout(Browser.mainLoop.runner,value)};Browser.mainLoop.method="timeout"}else if(mode==1){Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler(){Browser.requestAnimationFrame(Browser.mainLoop.runner)};Browser.mainLoop.method="rAF"}return 0}function _emscripten_set_main_loop(func,fps,simulateInfiniteLoop,arg,noSetTiming){Module["noExitRuntime"]=true;assert(!Browser.mainLoop.func,"emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.");Browser.mainLoop.func=func;Browser.mainLoop.arg=arg;var thisMainLoopId=Browser.mainLoop.currentlyRunningMainloop;Browser.mainLoop.runner=function Browser_mainLoop_runner(){if(ABORT)return;if(Browser.mainLoop.queue.length>0){var start=Date.now();var blocker=Browser.mainLoop.queue.shift();blocker.func(blocker.arg);if(Browser.mainLoop.remainingBlockers){var remaining=Browser.mainLoop.remainingBlockers;var next=remaining%1==0?remaining-1:Math.floor(remaining);if(blocker.counted){Browser.mainLoop.remainingBlockers=next}else{next=next+.5;Browser.mainLoop.remainingBlockers=(8*remaining+next)/9}}console.log('main loop blocker "'+blocker.name+'" took '+(Date.now()-start)+" ms");Browser.mainLoop.updateStatus();setTimeout(Browser.mainLoop.runner,0);return}if(thisMainLoopId<Browser.mainLoop.currentlyRunningMainloop)return;Browser.mainLoop.currentFrameNumber=Browser.mainLoop.currentFrameNumber+1|0;if(Browser.mainLoop.timingMode==1&&Browser.mainLoop.timingValue>1&&Browser.mainLoop.currentFrameNumber%Browser.mainLoop.timingValue!=0){Browser.mainLoop.scheduler();return}if(Browser.mainLoop.method==="timeout"&&Module.ctx){Module.printErr("Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!");Browser.mainLoop.method=""}Browser.mainLoop.runIter((function(){if(typeof arg!=="undefined"){Runtime.dynCall("vi",func,[arg])}else{Runtime.dynCall("v",func)}}));if(thisMainLoopId<Browser.mainLoop.currentlyRunningMainloop)return;if(typeof SDL==="object"&&SDL.audio&&SDL.audio.queueNewAudioData)SDL.audio.queueNewAudioData();Browser.mainLoop.scheduler()};if(!noSetTiming){if(fps&&fps>0)_emscripten_set_main_loop_timing(0,1e3/fps);else _emscripten_set_main_loop_timing(1,1);Browser.mainLoop.scheduler()}if(simulateInfiniteLoop){throw"SimulateInfiniteLoop"}}var Browser={mainLoop:{scheduler:null,method:"",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:(function(){Browser.mainLoop.scheduler=null;Browser.mainLoop.currentlyRunningMainloop++}),resume:(function(){Browser.mainLoop.currentlyRunningMainloop++;var timingMode=Browser.mainLoop.timingMode;var timingValue=Browser.mainLoop.timingValue;var func=Browser.mainLoop.func;Browser.mainLoop.func=null;_emscripten_set_main_loop(func,0,false,Browser.mainLoop.arg,true);_emscripten_set_main_loop_timing(timingMode,timingValue);Browser.mainLoop.scheduler()}),updateStatus:(function(){if(Module["setStatus"]){var message=Module["statusMessage"]||"Please wait...";var remaining=Browser.mainLoop.remainingBlockers;var expected=Browser.mainLoop.expectedBlockers;if(remaining){if(remaining<expected){Module["setStatus"](message+" ("+(expected-remaining)+"/"+expected+")")}else{Module["setStatus"](message)}}else{Module["setStatus"]("")}}}),runIter:(function(func){if(ABORT)return;if(Module["preMainLoop"]){var preRet=Module["preMainLoop"]();if(preRet===false){return}}try{func()}catch(e){if(e instanceof ExitStatus){return}else{if(e&&typeof e==="object"&&e.stack)Module.printErr("exception thrown: "+[e,e.stack]);throw e}}if(Module["postMainLoop"])Module["postMainLoop"]()})},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:(function(){if(!Module["preloadPlugins"])Module["preloadPlugins"]=[];if(Browser.initted)return;Browser.initted=true;try{new Blob;Browser.hasBlobConstructor=true}catch(e){Browser.hasBlobConstructor=false;console.log("warning: no blob constructor, cannot create blobs with mimetypes")}Browser.BlobBuilder=typeof MozBlobBuilder!="undefined"?MozBlobBuilder:typeof WebKitBlobBuilder!="undefined"?WebKitBlobBuilder:!Browser.hasBlobConstructor?console.log("warning: no BlobBuilder"):null;Browser.URLObject=typeof window!="undefined"?window.URL?window.URL:window.webkitURL:undefined;if(!Module.noImageDecoding&&typeof Browser.URLObject==="undefined"){console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");Module.noImageDecoding=true}var imagePlugin={};imagePlugin["canHandle"]=function imagePlugin_canHandle(name){return!Module.noImageDecoding&&/\.(jpg|jpeg|png|bmp)$/i.test(name)};imagePlugin["handle"]=function imagePlugin_handle(byteArray,name,onload,onerror){var b=null;if(Browser.hasBlobConstructor){try{b=new Blob([byteArray],{type:Browser.getMimetype(name)});if(b.size!==byteArray.length){b=new Blob([(new Uint8Array(byteArray)).buffer],{type:Browser.getMimetype(name)})}}catch(e){Runtime.warnOnce("Blob constructor present but fails: "+e+"; falling back to blob builder")}}if(!b){var bb=new Browser.BlobBuilder;bb.append((new Uint8Array(byteArray)).buffer);b=bb.getBlob()}var url=Browser.URLObject.createObjectURL(b);var img=new Image;img.onload=function img_onload(){assert(img.complete,"Image "+name+" could not be decoded");var canvas=document.createElement("canvas");canvas.width=img.width;canvas.height=img.height;var ctx=canvas.getContext("2d");ctx.drawImage(img,0,0);Module["preloadedImages"][name]=canvas;Browser.URLObject.revokeObjectURL(url);if(onload)onload(byteArray)};img.onerror=function img_onerror(event){console.log("Image "+url+" could not be decoded");if(onerror)onerror()};img.src=url};Module["preloadPlugins"].push(imagePlugin);var audioPlugin={};audioPlugin["canHandle"]=function audioPlugin_canHandle(name){return!Module.noAudioDecoding&&name.substr(-4)in{".ogg":1,".wav":1,".mp3":1}};audioPlugin["handle"]=function audioPlugin_handle(byteArray,name,onload,onerror){var done=false;function finish(audio){if(done)return;done=true;Module["preloadedAudios"][name]=audio;if(onload)onload(byteArray)}function fail(){if(done)return;done=true;Module["preloadedAudios"][name]=new Audio;if(onerror)onerror()}if(Browser.hasBlobConstructor){try{var b=new Blob([byteArray],{type:Browser.getMimetype(name)})}catch(e){return fail()}var url=Browser.URLObject.createObjectURL(b);var audio=new Audio;audio.addEventListener("canplaythrough",(function(){finish(audio)}),false);audio.onerror=function audio_onerror(event){if(done)return;console.log("warning: browser could not fully decode audio "+name+", trying slower base64 approach");function encode64(data){var BASE="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";var PAD="=";var ret="";var leftchar=0;var leftbits=0;for(var i=0;i<data.length;i++){leftchar=leftchar<<8|data[i];leftbits+=8;while(leftbits>=6){var curr=leftchar>>leftbits-6&63;leftbits-=6;ret+=BASE[curr]}}if(leftbits==2){ret+=BASE[(leftchar&3)<<4];ret+=PAD+PAD}else if(leftbits==4){ret+=BASE[(leftchar&15)<<2];ret+=PAD}return ret}audio.src="data:audio/x-"+name.substr(-3)+";base64,"+encode64(byteArray);finish(audio)};audio.src=url;Browser.safeSetTimeout((function(){finish(audio)}),1e4)}else{return fail()}};Module["preloadPlugins"].push(audioPlugin);var canvas=Module["canvas"];function pointerLockChange(){Browser.pointerLock=document["pointerLockElement"]===canvas||document["mozPointerLockElement"]===canvas||document["webkitPointerLockElement"]===canvas||document["msPointerLockElement"]===canvas}if(canvas){canvas.requestPointerLock=canvas["requestPointerLock"]||canvas["mozRequestPointerLock"]||canvas["webkitRequestPointerLock"]||canvas["msRequestPointerLock"]||(function(){});canvas.exitPointerLock=document["exitPointerLock"]||document["mozExitPointerLock"]||document["webkitExitPointerLock"]||document["msExitPointerLock"]||(function(){});canvas.exitPointerLock=canvas.exitPointerLock.bind(document);document.addEventListener("pointerlockchange",pointerLockChange,false);document.addEventListener("mozpointerlockchange",pointerLockChange,false);document.addEventListener("webkitpointerlockchange",pointerLockChange,false);document.addEventListener("mspointerlockchange",pointerLockChange,false);if(Module["elementPointerLock"]){canvas.addEventListener("click",(function(ev){if(!Browser.pointerLock&&canvas.requestPointerLock){canvas.requestPointerLock();ev.preventDefault()}}),false)}}}),createContext:(function(canvas,useWebGL,setInModule,webGLContextAttributes){if(useWebGL&&Module.ctx&&canvas==Module.canvas)return Module.ctx;var ctx;var contextHandle;if(useWebGL){var contextAttributes={antialias:false,alpha:false};if(webGLContextAttributes){for(var attribute in webGLContextAttributes){contextAttributes[attribute]=webGLContextAttributes[attribute]}}contextHandle=GL.createContext(canvas,contextAttributes);if(contextHandle){ctx=GL.getContext(contextHandle).GLctx}canvas.style.backgroundColor="black"}else{ctx=canvas.getContext("2d")}if(!ctx)return null;if(setInModule){if(!useWebGL)assert(typeof GLctx==="undefined","cannot set in module if GLctx is used, but we are a non-GL context that would replace it");Module.ctx=ctx;if(useWebGL)GL.makeContextCurrent(contextHandle);Module.useWebGL=useWebGL;Browser.moduleContextCreatedCallbacks.forEach((function(callback){callback()}));Browser.init()}return ctx}),destroyContext:(function(canvas,useWebGL,setInModule){}),fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:(function(lockPointer,resizeCanvas,vrDevice){Browser.lockPointer=lockPointer;Browser.resizeCanvas=resizeCanvas;Browser.vrDevice=vrDevice;if(typeof Browser.lockPointer==="undefined")Browser.lockPointer=true;if(typeof Browser.resizeCanvas==="undefined")Browser.resizeCanvas=false;if(typeof Browser.vrDevice==="undefined")Browser.vrDevice=null;var canvas=Module["canvas"];function fullScreenChange(){Browser.isFullScreen=false;var canvasContainer=canvas.parentNode;if((document["webkitFullScreenElement"]||document["webkitFullscreenElement"]||document["mozFullScreenElement"]||document["mozFullscreenElement"]||document["fullScreenElement"]||document["fullscreenElement"]||document["msFullScreenElement"]||document["msFullscreenElement"]||document["webkitCurrentFullScreenElement"])===canvasContainer){canvas.cancelFullScreen=document["cancelFullScreen"]||document["mozCancelFullScreen"]||document["webkitCancelFullScreen"]||document["msExitFullscreen"]||document["exitFullscreen"]||(function(){});canvas.cancelFullScreen=canvas.cancelFullScreen.bind(document);if(Browser.lockPointer)canvas.requestPointerLock();Browser.isFullScreen=true;if(Browser.resizeCanvas)Browser.setFullScreenCanvasSize()}else{canvasContainer.parentNode.insertBefore(canvas,canvasContainer);canvasContainer.parentNode.removeChild(canvasContainer);if(Browser.resizeCanvas)Browser.setWindowedCanvasSize()}if(Module["onFullScreen"])Module["onFullScreen"](Browser.isFullScreen);Browser.updateCanvasDimensions(canvas)}if(!Browser.fullScreenHandlersInstalled){Browser.fullScreenHandlersInstalled=true;document.addEventListener("fullscreenchange",fullScreenChange,false);document.addEventListener("mozfullscreenchange",fullScreenChange,false);document.addEventListener("webkitfullscreenchange",fullScreenChange,false);document.addEventListener("MSFullscreenChange",fullScreenChange,false)}var canvasContainer=document.createElement("div");canvas.parentNode.insertBefore(canvasContainer,canvas);canvasContainer.appendChild(canvas);canvasContainer.requestFullScreen=canvasContainer["requestFullScreen"]||canvasContainer["mozRequestFullScreen"]||canvasContainer["msRequestFullscreen"]||(canvasContainer["webkitRequestFullScreen"]?(function(){canvasContainer["webkitRequestFullScreen"](Element["ALLOW_KEYBOARD_INPUT"])}):null);if(vrDevice){canvasContainer.requestFullScreen({vrDisplay:vrDevice})}else{canvasContainer.requestFullScreen()}}),nextRAF:0,fakeRequestAnimationFrame:(function(func){var now=Date.now();if(Browser.nextRAF===0){Browser.nextRAF=now+1e3/60}else{while(now+2>=Browser.nextRAF){Browser.nextRAF+=1e3/60}}var delay=Math.max(Browser.nextRAF-now,0);setTimeout(func,delay)}),requestAnimationFrame:function requestAnimationFrame(func){if(typeof window==="undefined"){Browser.fakeRequestAnimationFrame(func)}else{if(!window.requestAnimationFrame){window.requestAnimationFrame=window["requestAnimationFrame"]||window["mozRequestAnimationFrame"]||window["webkitRequestAnimationFrame"]||window["msRequestAnimationFrame"]||window["oRequestAnimationFrame"]||Browser.fakeRequestAnimationFrame}window.requestAnimationFrame(func)}},safeCallback:(function(func){return(function(){if(!ABORT)return func.apply(null,arguments)})}),allowAsyncCallbacks:true,queuedAsyncCallbacks:[],pauseAsyncCallbacks:(function(){Browser.allowAsyncCallbacks=false}),resumeAsyncCallbacks:(function(){Browser.allowAsyncCallbacks=true;if(Browser.queuedAsyncCallbacks.length>0){var callbacks=Browser.queuedAsyncCallbacks;Browser.queuedAsyncCallbacks=[];callbacks.forEach((function(func){func()}))}}),safeRequestAnimationFrame:(function(func){return Browser.requestAnimationFrame((function(){if(ABORT)return;if(Browser.allowAsyncCallbacks){func()}else{Browser.queuedAsyncCallbacks.push(func)}}))}),safeSetTimeout:(function(func,timeout){Module["noExitRuntime"]=true;return setTimeout((function(){if(ABORT)return;if(Browser.allowAsyncCallbacks){func()}else{Browser.queuedAsyncCallbacks.push(func)}}),timeout)}),safeSetInterval:(function(func,timeout){Module["noExitRuntime"]=true;return setInterval((function(){if(ABORT)return;if(Browser.allowAsyncCallbacks){func()}}),timeout)}),getMimetype:(function(name){return{"jpg":"image/jpeg","jpeg":"image/jpeg","png":"image/png","bmp":"image/bmp","ogg":"audio/ogg","wav":"audio/wav","mp3":"audio/mpeg"}[name.substr(name.lastIndexOf(".")+1)]}),getUserMedia:(function(func){if(!window.getUserMedia){window.getUserMedia=navigator["getUserMedia"]||navigator["mozGetUserMedia"]}window.getUserMedia(func)}),getMovementX:(function(event){return event["movementX"]||event["mozMovementX"]||event["webkitMovementX"]||0}),getMovementY:(function(event){return event["movementY"]||event["mozMovementY"]||event["webkitMovementY"]||0}),getMouseWheelDelta:(function(event){var delta=0;switch(event.type){case"DOMMouseScroll":delta=event.detail;break;case"mousewheel":delta=event.wheelDelta;break;case"wheel":delta=event["deltaY"];break;default:throw"unrecognized mouse wheel event: "+event.type}return delta}),mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:(function(event){if(Browser.pointerLock){if(event.type!="mousemove"&&"mozMovementX"in event){Browser.mouseMovementX=Browser.mouseMovementY=0}else{Browser.mouseMovementX=Browser.getMovementX(event);Browser.mouseMovementY=Browser.getMovementY(event)}if(typeof SDL!="undefined"){Browser.mouseX=SDL.mouseX+Browser.mouseMovementX;Browser.mouseY=SDL.mouseY+Browser.mouseMovementY}else{Browser.mouseX+=Browser.mouseMovementX;Browser.mouseY+=Browser.mouseMovementY}}else{var rect=Module["canvas"].getBoundingClientRect();var cw=Module["canvas"].width;var ch=Module["canvas"].height;var scrollX=typeof window.scrollX!=="undefined"?window.scrollX:window.pageXOffset;var scrollY=typeof window.scrollY!=="undefined"?window.scrollY:window.pageYOffset;if(event.type==="touchstart"||event.type==="touchend"||event.type==="touchmove"){var touch=event.touch;if(touch===undefined){return}var adjustedX=touch.pageX-(scrollX+rect.left);var adjustedY=touch.pageY-(scrollY+rect.top);adjustedX=adjustedX*(cw/rect.width);adjustedY=adjustedY*(ch/rect.height);var coords={x:adjustedX,y:adjustedY};if(event.type==="touchstart"){Browser.lastTouches[touch.identifier]=coords;Browser.touches[touch.identifier]=coords}else if(event.type==="touchend"||event.type==="touchmove"){Browser.lastTouches[touch.identifier]=Browser.touches[touch.identifier];Browser.touches[touch.identifier]={x:adjustedX,y:adjustedY}}return}var x=event.pageX-(scrollX+rect.left);var y=event.pageY-(scrollY+rect.top);x=x*(cw/rect.width);y=y*(ch/rect.height);Browser.mouseMovementX=x-Browser.mouseX;Browser.mouseMovementY=y-Browser.mouseY;Browser.mouseX=x;Browser.mouseY=y}}),xhrLoad:(function(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response)}else{onerror()}};xhr.onerror=onerror;xhr.send(null)}),asyncLoad:(function(url,onload,onerror,noRunDep){Browser.xhrLoad(url,(function(arrayBuffer){assert(arrayBuffer,'Loading data file "'+url+'" failed (no arrayBuffer).');onload(new Uint8Array(arrayBuffer));if(!noRunDep)removeRunDependency("al "+url)}),(function(event){if(onerror){onerror()}else{throw'Loading data file "'+url+'" failed.'}}));if(!noRunDep)addRunDependency("al "+url)}),resizeListeners:[],updateResizeListeners:(function(){var canvas=Module["canvas"];Browser.resizeListeners.forEach((function(listener){listener(canvas.width,canvas.height)}))}),setCanvasSize:(function(width,height,noUpdates){var canvas=Module["canvas"];Browser.updateCanvasDimensions(canvas,width,height);if(!noUpdates)Browser.updateResizeListeners()}),windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:(function(){if(typeof SDL!="undefined"){var flags=HEAPU32[SDL.screen+Runtime.QUANTUM_SIZE*0>>2];flags=flags|8388608;HEAP32[SDL.screen+Runtime.QUANTUM_SIZE*0>>2]=flags}Browser.updateResizeListeners()}),setWindowedCanvasSize:(function(){if(typeof SDL!="undefined"){var flags=HEAPU32[SDL.screen+Runtime.QUANTUM_SIZE*0>>2];flags=flags&~8388608;HEAP32[SDL.screen+Runtime.QUANTUM_SIZE*0>>2]=flags}Browser.updateResizeListeners()}),updateCanvasDimensions:(function(canvas,wNative,hNative){if(wNative&&hNative){canvas.widthNative=wNative;canvas.heightNative=hNative}else{wNative=canvas.widthNative;hNative=canvas.heightNative}var w=wNative;var h=hNative;if(Module["forcedAspectRatio"]&&Module["forcedAspectRatio"]>0){if(w/h<Module["forcedAspectRatio"]){w=Math.round(h*Module["forcedAspectRatio"])}else{h=Math.round(w/Module["forcedAspectRatio"])}}if((document["webkitFullScreenElement"]||document["webkitFullscreenElement"]||document["mozFullScreenElement"]||document["mozFullscreenElement"]||document["fullScreenElement"]||document["fullscreenElement"]||document["msFullScreenElement"]||document["msFullscreenElement"]||document["webkitCurrentFullScreenElement"])===canvas.parentNode&&typeof screen!="undefined"){var factor=Math.min(screen.width/w,screen.height/h);w=Math.round(w*factor);h=Math.round(h*factor)}if(Browser.resizeCanvas){if(canvas.width!=w)canvas.width=w;if(canvas.height!=h)canvas.height=h;if(typeof canvas.style!="undefined"){canvas.style.removeProperty("width");canvas.style.removeProperty("height")}}else{if(canvas.width!=wNative)canvas.width=wNative;if(canvas.height!=hNative)canvas.height=hNative;if(typeof canvas.style!="undefined"){if(w!=wNative||h!=hNative){canvas.style.setProperty("width",w+"px","important");canvas.style.setProperty("height",h+"px","important")}else{canvas.style.removeProperty("width");canvas.style.removeProperty("height")}}}}),wgetRequests:{},nextWgetRequestHandle:0,getNextWgetRequestHandle:(function(){var handle=Browser.nextWgetRequestHandle;Browser.nextWgetRequestHandle++;return handle})};function _pthread_setspecific(key,value){if(!(key in PTHREAD_SPECIFIC)){return ERRNO_CODES.EINVAL}PTHREAD_SPECIFIC[key]=value;return 0}function ___ctype_b_loc(){var me=___ctype_b_loc;if(!me.ret){var values=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,8195,8194,8194,8194,8194,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24577,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,55304,55304,55304,55304,55304,55304,55304,55304,55304,55304,49156,49156,49156,49156,49156,49156,49156,54536,54536,54536,54536,54536,54536,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,49156,49156,49156,49156,49156,49156,54792,54792,54792,54792,54792,54792,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,49156,49156,49156,49156,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];var i16size=2;var arr=_malloc(values.length*i16size);for(var i=0;i<values.length;i++){HEAP16[arr+i*i16size>>1]=values[i]}me.ret=allocate([arr+128*i16size],"i16*",ALLOC_NORMAL)}return me.ret}function _freelocale(locale){_free(locale)}var _atan2f=Math_atan2;var _ceilf=Math_ceil;function ___cxa_pure_virtual(){ABORT=true;throw"Pure virtual function called!"}function _catgets(catd,set_id,msg_id,s){return s}function _malloc(bytes){var ptr=Runtime.dynamicAlloc(bytes+8);return ptr+8&4294967288}Module["_malloc"]=_malloc;function ___cxa_allocate_exception(size){return _malloc(size)}function _catopen(name,oflag){return-1}function ___ctype_toupper_loc(){var me=___ctype_toupper_loc;if(!me.ret){var values=[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255];var i32size=4;var arr=_malloc(values.length*i32size);for(var i=0;i<values.length;i++){HEAP32[arr+i*i32size>>2]=values[i]}me.ret=allocate([arr+128*i32size],"i32*",ALLOC_NORMAL)}return me.ret}function ___cxa_guard_acquire(variable){if(!HEAP8[variable>>0]){HEAP8[variable>>0]=1;return 1}return 0}function ___ctype_tolower_loc(){var me=___ctype_tolower_loc;if(!me.ret){var values=[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255];var i32size=4;var arr=_malloc(values.length*i32size);for(var i=0;i<values.length;i++){HEAP32[arr+i*i32size>>2]=values[i]}me.ret=allocate([arr+128*i32size],"i32*",ALLOC_NORMAL)}return me.ret}function ___cxa_begin_catch(ptr){__ZSt18uncaught_exceptionv.uncaught_exception--;EXCEPTIONS.caught.push(ptr);EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));return ptr}var _sinf=Math_sin;var _log=Math_log;var PTHREAD_SPECIFIC_NEXT_KEY=1;function _pthread_key_create(key,destructor){if(key==0){return ERRNO_CODES.EINVAL}HEAP32[key>>2]=PTHREAD_SPECIFIC_NEXT_KEY;PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY]=0;PTHREAD_SPECIFIC_NEXT_KEY++;return 0}Module["_strcpy"]=_strcpy;var _exp=Math_exp;function _time(ptr){var ret=Date.now()/1e3|0;if(ptr){HEAP32[ptr>>2]=ret}return ret}var ___dso_handle=allocate(1,"i32*",ALLOC_STATIC);FS.staticInit();__ATINIT__.unshift({func:(function(){if(!Module["noFSInit"]&&!FS.init.initialized)FS.init()})});__ATMAIN__.push({func:(function(){FS.ignorePermissions=false})});__ATEXIT__.push({func:(function(){FS.quit()})});Module["FS_createFolder"]=FS.createFolder;Module["FS_createPath"]=FS.createPath;Module["FS_createDataFile"]=FS.createDataFile;Module["FS_createPreloadedFile"]=FS.createPreloadedFile;Module["FS_createLazyFile"]=FS.createLazyFile;Module["FS_createLink"]=FS.createLink;Module["FS_createDevice"]=FS.createDevice;___errno_state=Runtime.staticAlloc(4);HEAP32[___errno_state>>2]=0;__ATINIT__.unshift({func:(function(){TTY.init()})});__ATEXIT__.push({func:(function(){TTY.shutdown()})});if(ENVIRONMENT_IS_NODE){var fs=require("fs");NODEFS.staticInit()}_fputc.ret=allocate([0],"i8",ALLOC_STATIC);__ATINIT__.push({func:(function(){SOCKFS.root=FS.mount(SOCKFS,{},null)})});_fgetc.ret=allocate([0],"i8",ALLOC_STATIC);Module["requestFullScreen"]=function Module_requestFullScreen(lockPointer,resizeCanvas,vrDevice){Browser.requestFullScreen(lockPointer,resizeCanvas,vrDevice)};Module["requestAnimationFrame"]=function Module_requestAnimationFrame(func){Browser.requestAnimationFrame(func)};Module["setCanvasSize"]=function Module_setCanvasSize(width,height,noUpdates){Browser.setCanvasSize(width,height,noUpdates)};Module["pauseMainLoop"]=function Module_pauseMainLoop(){Browser.mainLoop.pause()};Module["resumeMainLoop"]=function Module_resumeMainLoop(){Browser.mainLoop.resume()};Module["getUserMedia"]=function Module_getUserMedia(){Browser.getUserMedia()};STACK_BASE=STACKTOP=Runtime.alignMemory(STATICTOP);staticSealed=true;STACK_MAX=STACK_BASE+TOTAL_STACK;DYNAMIC_BASE=DYNAMICTOP=Runtime.alignMemory(STACK_MAX);assert(DYNAMIC_BASE<TOTAL_MEMORY,"TOTAL_MEMORY not big enough for stack");var cttz_i8=allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0],"i8",ALLOC_DYNAMIC);function invoke_iiii(index,a1,a2,a3){try{return Module["dynCall_iiii"](index,a1,a2,a3)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7){try{Module["dynCall_viiiiiii"](index,a1,a2,a3,a4,a5,a6,a7)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_viiiii(index,a1,a2,a3,a4,a5){try{Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_vi(index,a1){try{Module["dynCall_vi"](index,a1)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_vii(index,a1,a2){try{Module["dynCall_vii"](index,a1,a2)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9){try{Module["dynCall_viiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_ii(index,a1){try{return Module["dynCall_ii"](index,a1)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_viiiiiid(index,a1,a2,a3,a4,a5,a6,a7){try{Module["dynCall_viiiiiid"](index,a1,a2,a3,a4,a5,a6,a7)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_viii(index,a1,a2,a3){try{Module["dynCall_viii"](index,a1,a2,a3)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_viiiiid(index,a1,a2,a3,a4,a5,a6){try{Module["dynCall_viiiiid"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_v(index){try{Module["dynCall_v"](index)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8){try{return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_iiiii(index,a1,a2,a3,a4){try{return Module["dynCall_iiiii"](index,a1,a2,a3,a4)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8){try{Module["dynCall_viiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6){try{Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_iii(index,a1,a2){try{return Module["dynCall_iii"](index,a1,a2)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_iiiiii(index,a1,a2,a3,a4,a5){try{return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}function invoke_viiii(index,a1,a2,a3,a4){try{Module["dynCall_viiii"](index,a1,a2,a3,a4)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;asm["setThrew"](1,0)}}Module.asmGlobalArg={"Math":Math,"Int8Array":Int8Array,"Int16Array":Int16Array,"Int32Array":Int32Array,"Uint8Array":Uint8Array,"Uint16Array":Uint16Array,"Uint32Array":Uint32Array,"Float32Array":Float32Array,"Float64Array":Float64Array,"NaN":NaN,"Infinity":Infinity};Module.asmLibraryArg={"abort":abort,"assert":assert,"invoke_iiii":invoke_iiii,"invoke_viiiiiii":invoke_viiiiiii,"invoke_viiiii":invoke_viiiii,"invoke_vi":invoke_vi,"invoke_vii":invoke_vii,"invoke_viiiiiiiii":invoke_viiiiiiiii,"invoke_ii":invoke_ii,"invoke_viiiiiid":invoke_viiiiiid,"invoke_viii":invoke_viii,"invoke_viiiiid":invoke_viiiiid,"invoke_v":invoke_v,"invoke_iiiiiiiii":invoke_iiiiiiiii,"invoke_iiiii":invoke_iiiii,"invoke_viiiiiiii":invoke_viiiiiiii,"invoke_viiiiii":invoke_viiiiii,"invoke_iii":invoke_iii,"invoke_iiiiii":invoke_iiiiii,"invoke_viiii":invoke_viiii,"_fabs":_fabs,"_strftime":_strftime,"_pthread_cond_wait":_pthread_cond_wait,"_exp":_exp,"_llvm_pow_f64":_llvm_pow_f64,"_send":_send,"_sqrtf":_sqrtf,"_fread":_fread,"___ctype_b_loc":___ctype_b_loc,"___cxa_allocate_exception":___cxa_allocate_exception,"___cxa_guard_acquire":___cxa_guard_acquire,"___cxa_pure_virtual":___cxa_pure_virtual,"___setErrNo":___setErrNo,"_vfprintf":_vfprintf,"_ungetc":_ungetc,"___assert_fail":___assert_fail,"___cxa_free_exception":___cxa_free_exception,"_atan2f":_atan2f,"__ZSt18uncaught_exceptionv":__ZSt18uncaught_exceptionv,"_sbrk":_sbrk,"___ctype_toupper_loc":___ctype_toupper_loc,"_fflush":_fflush,"___cxa_guard_release":___cxa_guard_release,"__addDays":__addDays,"_pwrite":_pwrite,"_strerror_r":_strerror_r,"_strftime_l":_strftime_l,"_fprintf":_fprintf,"_emscripten_set_main_loop_timing":_emscripten_set_main_loop_timing,"_fabsf":_fabsf,"_ceilf":_ceilf,"_uselocale":_uselocale,"_llvm_pow_f32":_llvm_pow_f32,"_newlocale":_newlocale,"___cxa_begin_catch":___cxa_begin_catch,"_emscripten_memcpy_big":_emscripten_memcpy_big,"___cxa_end_catch":___cxa_end_catch,"___resumeException":___resumeException,"_canvasResize":_canvasResize,"___cxa_find_matching_catch":___cxa_find_matching_catch,"_sysconf":_sysconf,"__reallyNegative":__reallyNegative,"_pthread_getspecific":_pthread_getspecific,"__arraySum":__arraySum,"_sinf":_sinf,"_calloc":_calloc,"___ctype_tolower_loc":___ctype_tolower_loc,"_fileno":_fileno,"_pthread_mutex_unlock":_pthread_mutex_unlock,"_pthread_once":_pthread_once,"_pread":_pread,"_mkport":_mkport,"_floorf":_floorf,"_log":_log,"_getc":_getc,"_write":_write,"__isLeapYear":__isLeapYear,"_emscripten_set_main_loop":_emscripten_set_main_loop,"___errno_location":___errno_location,"_recv":_recv,"_pthread_setspecific":_pthread_setspecific,"_fgetc":_fgetc,"___cxa_atexit":___cxa_atexit,"_fputc":_fputc,"_cosf":_cosf,"_freelocale":_freelocale,"_pthread_cond_broadcast":_pthread_cond_broadcast,"___cxa_rethrow":___cxa_rethrow,"_abort":_abort,"_catclose":_catclose,"_fwrite":_fwrite,"_time":_time,"_pthread_mutex_lock":_pthread_mutex_lock,"_strerror":_strerror,"_pthread_key_create":_pthread_key_create,"__formatString":__formatString,"_atexit":_atexit,"_catopen":_catopen,"___cxa_throw":___cxa_throw,"_read":_read,"_catgets":_catgets,"STACKTOP":STACKTOP,"STACK_MAX":STACK_MAX,"tempDoublePtr":tempDoublePtr,"ABORT":ABORT,"cttz_i8":cttz_i8,"___dso_handle":___dso_handle,"_stderr":_stderr,"_stdin":_stdin,"_stdout":_stdout};// EMSCRIPTEN_START_ASM
var asm=(function(global,env,buffer) {
"use asm";var a=new global.Int8Array(buffer);var b=new global.Int16Array(buffer);var c=new global.Int32Array(buffer);var d=new global.Uint8Array(buffer);var e=new global.Uint16Array(buffer);var f=new global.Uint32Array(buffer);var g=new global.Float32Array(buffer);var h=new global.Float64Array(buffer);var i=env.STACKTOP|0;var j=env.STACK_MAX|0;var k=env.tempDoublePtr|0;var l=env.ABORT|0;var m=env.cttz_i8|0;var n=env.___dso_handle|0;var o=env._stderr|0;var p=env._stdin|0;var q=env._stdout|0;var r=0;var s=0;var t=0;var u=0;var v=global.NaN,w=global.Infinity;var x=0,y=0,z=0,A=0,B=0.0,C=0,D=0,E=0,F=0.0;var G=0;var H=0;var I=0;var J=0;var K=0;var L=0;var M=0;var N=0;var O=0;var P=0;var Q=global.Math.floor;var R=global.Math.abs;var S=global.Math.sqrt;var T=global.Math.pow;var U=global.Math.cos;var V=global.Math.sin;var W=global.Math.tan;var X=global.Math.acos;var Y=global.Math.asin;var Z=global.Math.atan;var _=global.Math.atan2;var $=global.Math.exp;var aa=global.Math.log;var ba=global.Math.ceil;var ca=global.Math.imul;var da=global.Math.min;var ea=global.Math.clz32;var fa=env.abort;var ga=env.assert;var ha=env.invoke_iiii;var ia=env.invoke_viiiiiii;var ja=env.invoke_viiiii;var ka=env.invoke_vi;var la=env.invoke_vii;var ma=env.invoke_viiiiiiiii;var na=env.invoke_ii;var oa=env.invoke_viiiiiid;var pa=env.invoke_viii;var qa=env.invoke_viiiiid;var ra=env.invoke_v;var sa=env.invoke_iiiiiiiii;var ta=env.invoke_iiiii;var ua=env.invoke_viiiiiiii;var va=env.invoke_viiiiii;var wa=env.invoke_iii;var xa=env.invoke_iiiiii;var ya=env.invoke_viiii;var za=env._fabs;var Aa=env._strftime;var Ba=env._pthread_cond_wait;var Ca=env._exp;var Da=env._llvm_pow_f64;var Ea=env._send;var Fa=env._sqrtf;var Ga=env._fread;var Ha=env.___ctype_b_loc;var Ia=env.___cxa_allocate_exception;var Ja=env.___cxa_guard_acquire;var Ka=env.___cxa_pure_virtual;var La=env.___setErrNo;var Ma=env._vfprintf;var Na=env._ungetc;var Oa=env.___assert_fail;var Pa=env.___cxa_free_exception;var Qa=env._atan2f;var Ra=env.__ZSt18uncaught_exceptionv;var Sa=env._sbrk;var Ta=env.___ctype_toupper_loc;var Ua=env._fflush;var Va=env.___cxa_guard_release;var Wa=env.__addDays;var Xa=env._pwrite;var Ya=env._strerror_r;var Za=env._strftime_l;var _a=env._fprintf;var $a=env._emscripten_set_main_loop_timing;var ab=env._fabsf;var bb=env._ceilf;var cb=env._uselocale;var db=env._llvm_pow_f32;var eb=env._newlocale;var fb=env.___cxa_begin_catch;var gb=env._emscripten_memcpy_big;var hb=env.___cxa_end_catch;var ib=env.___resumeException;var jb=env._canvasResize;var kb=env.___cxa_find_matching_catch;var lb=env._sysconf;var mb=env.__reallyNegative;var nb=env._pthread_getspecific;var ob=env.__arraySum;var pb=env._sinf;var qb=env._calloc;var rb=env.___ctype_tolower_loc;var sb=env._fileno;var tb=env._pthread_mutex_unlock;var ub=env._pthread_once;var vb=env._pread;var wb=env._mkport;var xb=env._floorf;var yb=env._log;var zb=env._getc;var Ab=env._write;var Bb=env.__isLeapYear;var Cb=env._emscripten_set_main_loop;var Db=env.___errno_location;var Eb=env._recv;var Fb=env._pthread_setspecific;var Gb=env._fgetc;var Hb=env.___cxa_atexit;var Ib=env._fputc;var Jb=env._cosf;var Kb=env._freelocale;var Lb=env._pthread_cond_broadcast;var Mb=env.___cxa_rethrow;var Nb=env._abort;var Ob=env._catclose;var Pb=env._fwrite;var Qb=env._time;var Rb=env._pthread_mutex_lock;var Sb=env._strerror;var Tb=env._pthread_key_create;var Ub=env.__formatString;var Vb=env._atexit;var Wb=env._catopen;var Xb=env.___cxa_throw;var Yb=env._read;var Zb=env._catgets;var _b=0.0;
// EMSCRIPTEN_START_FUNCS
function Rd(f,h,j,k,l,m){f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,ba=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0;n=i;i=i+48|0;o=n+38|0;p=n+36|0;q=n+34|0;r=n+32|0;s=n+30|0;t=n+28|0;u=n+26|0;v=n+24|0;w=n+22|0;x=n+20|0;y=n+18|0;z=n+16|0;A=n+14|0;B=n+12|0;C=n+10|0;D=n+8|0;E=n+6|0;F=n+4|0;G=n+2|0;H=n;b[o>>1]=0;b[p>>1]=0;b[q>>1]=0;b[r>>1]=0;b[s>>1]=0;b[t>>1]=0;b[u>>1]=0;b[v>>1]=0;b[w>>1]=0;b[x>>1]=0;b[y>>1]=0;b[z>>1]=0;b[A>>1]=0;b[B>>1]=0;b[C>>1]=0;b[D>>1]=0;_d(l,o,p,q,r,s,t,u,v);_d(m,w,x,y,z,A,B,C,D);if((c[l+52>>2]|0)==24){g[2432]=0.0;I=ca(k,j)|0;J=c[l+4>>2]|0;K=ca(J,I)|0;L=f+K|0;if((K|0)>0){M=0.0;K=f;while(1){N=+aa(+(+(e[K>>1]|0)*.29899999499320984+ +(e[K+2>>1]|0)*.5870000123977661+ +(e[K+4>>1]|0)*.11400000005960464+1.000000013351432e-10))+M;K=K+J|0;if(K>>>0>=L>>>0){O=N;break}else M=N}g[2432]=O;P=O}else P=0.0;g[2432]=+$(+(P/+(I>>>0)));Q=I;R=J}else{Q=ca(k,j)|0;R=c[l+4>>2]|0}j=l+4|0;k=ca(Q,R)|0;Q=f+k|0;if((k|0)<=0){i=n;return 1}k=l+48|0;J=m+44|0;I=m+8|0;L=l+8|0;K=m+12|0;S=l+12|0;T=m+16|0;U=l+16|0;V=m+20|0;W=l+20|0;l=m+4|0;m=f;f=h;h=R;while(1){if(!h)X=0;else{R=0;Y=0;while(1){Z=d[m+Y>>0]<<(Y<<3)|R;Y=Y+1|0;if(Y>>>0>=h>>>0){X=Z;break}else R=Z}}b[E>>1]=0;b[F>>1]=0;b[G>>1]=0;b[H>>1]=-1;R=b[s>>1]|0;if(!(R<<16>>16))_=0;else _=X>>>(e[o>>1]|0)&(R&65535)&65535;Y=b[t>>1]|0;if(!(Y<<16>>16))ba=0;else ba=X>>>(e[p>>1]|0)&(Y&65535)&65535;Z=b[u>>1]|0;if(!(Z<<16>>16))da=0;else da=X>>>(e[q>>1]|0)&(Z&65535)&65535;ea=b[v>>1]|0;if(!(ea<<16>>16))fa=-1;else fa=X>>>(e[r>>1]|0)&(ea&65535)&65535;ga=c[k>>2]|0;ha=c[J>>2]|0;do if((ga|0)==0&(ha|0)==0){do if(R<<16>>16!=0&(b[A>>1]|0)!=0){ia=c[I>>2]|0;ja=c[L>>2]|0;if(ia>>>0<ja>>>0){if((ja&65535)<<16>>16==0|(ia&65535)<<16>>16==0)ka=0;else ka=(_&65535)>>>((ja&65535)-(ia&65535)|0)&65535;b[E>>1]=ka;break}if(ia>>>0<=ja>>>0){b[E>>1]=_;break}la=ja&65535;ma=ia&65535;na=ja&65535;if(!(la<<16>>16==0|ma<<16>>16==0)){ja=ia&65535;if((ma&65535)<(la&65535)){oa=ma;pa=ja;qa=0}else{ma=_&65535;ia=ja;ja=0;while(1){ra=(ja&65535)<<na|ma;sa=ia-na|0;ta=sa&65535;ua=sa&65535;if((ta&65535)<(la&65535)){va=ra;wa=ta;xa=ua;break}else{ia=ua;ja=ra}}oa=wa;pa=xa;qa=va&65535}if(!(oa<<16>>16))ya=qa;else ya=((qa&65535)<<pa|(_&65535)>>>(na-pa|0))&65535}else ya=0;b[E>>1]=ya}while(0);do if(Y<<16>>16!=0&(b[B>>1]|0)!=0){ja=c[K>>2]|0;ia=c[S>>2]|0;if(ja>>>0<ia>>>0){if((ia&65535)<<16>>16==0|(ja&65535)<<16>>16==0)za=0;else za=(ba&65535)>>>((ia&65535)-(ja&65535)|0)&65535;b[F>>1]=za;break}if(ja>>>0<=ia>>>0){b[F>>1]=ba;break}la=ia&65535;ma=ja&65535;ra=ia&65535;if(!(la<<16>>16==0|ma<<16>>16==0)){ia=ja&65535;if((ma&65535)<(la&65535)){Aa=ma;Ba=ia;Ca=0}else{ma=ba&65535;ja=ia;ia=0;while(1){ua=(ia&65535)<<ra|ma;ta=ja-ra|0;sa=ta&65535;Da=ta&65535;if((sa&65535)<(la&65535)){Ea=Da;Fa=ua;Ga=sa;break}else{ja=Da;ia=ua}}Aa=Ga;Ba=Ea;Ca=Fa&65535}if(!(Aa<<16>>16))Ha=Ca;else Ha=((Ca&65535)<<Ba|(ba&65535)>>>(ra-Ba|0))&65535}else Ha=0;b[F>>1]=Ha}while(0);do if(Z<<16>>16!=0&(b[C>>1]|0)!=0){ia=c[T>>2]|0;ja=c[U>>2]|0;if(ia>>>0<ja>>>0){if((ja&65535)<<16>>16==0|(ia&65535)<<16>>16==0)Ia=0;else Ia=(da&65535)>>>((ja&65535)-(ia&65535)|0)&65535;b[G>>1]=Ia;break}if(ia>>>0<=ja>>>0){b[G>>1]=da;break}la=ja&65535;ma=ia&65535;na=ja&65535;if(!(la<<16>>16==0|ma<<16>>16==0)){ja=ia&65535;if((ma&65535)<(la&65535)){Ja=ma;Ka=ja;La=0}else{ma=da&65535;ia=ja;ja=0;while(1){ua=(ja&65535)<<na|ma;Da=ia-na|0;sa=Da&65535;ta=Da&65535;if((sa&65535)<(la&65535)){Ma=ua;Na=sa;Oa=ta;break}else{ia=ta;ja=ua}}Ja=Na;Ka=Oa;La=Ma&65535}if(!(Ja<<16>>16))Pa=La;else Pa=((La&65535)<<Ka|(da&65535)>>>(na-Ka|0))&65535}else Pa=0;b[G>>1]=Pa}while(0);if(ea<<16>>16!=0&(b[D>>1]|0)!=0){ja=c[V>>2]|0;ia=c[W>>2]|0;if(ja>>>0<ia>>>0){if((ia&65535)<<16>>16==0|(ja&65535)<<16>>16==0)Qa=0;else Qa=(fa&65535)>>>((ia&65535)-(ja&65535)|0)&65535;b[H>>1]=Qa;break}if(ja>>>0<=ia>>>0){b[H>>1]=fa;break}la=ia&65535;ma=ja&65535;ra=ia&65535;if(!(la<<16>>16==0|ma<<16>>16==0)){ia=ja&65535;if((ma&65535)<(la&65535)){Ra=ma;Sa=ia;Ta=0}else{ma=fa&65535;ja=ia;ia=0;while(1){ua=(ia&65535)<<ra|ma;ta=ja-ra|0;sa=ta&65535;Da=ta&65535;if((sa&65535)<(la&65535)){Ua=ua;Va=sa;Wa=Da;break}else{ja=Da;ia=ua}}Ra=Va;Sa=Wa;Ta=Ua&65535}if(!(Ra<<16>>16))Xa=Ta;else Xa=((Ta&65535)<<Sa|(fa&65535)>>>(ra-Sa|0))&65535}else Xa=0;b[H>>1]=Xa}}else $d(ga,ha,_,ba,da,fa,c[L>>2]&65535,c[S>>2]&65535,c[U>>2]&65535,c[W>>2]&65535,E,F,G,H,c[I>>2]&65535,c[K>>2]&65535,c[T>>2]&65535,c[V>>2]&65535);while(0);if(!(c[l>>2]|0))Ya=0;else{ha=((b[B>>1]&b[F>>1]&255)<<(e[x>>1]&255)|(b[A>>1]&b[E>>1]&255)<<(e[w>>1]&255)|(b[C>>1]&b[G>>1]&255)<<(e[y>>1]&255)|(b[D>>1]&b[H>>1]&255)<<(e[z>>1]&255))&255;ga=0;do{a[f+ga>>0]=ha>>>(ga<<3);ga=ga+1|0;ea=c[l>>2]|0}while(ga>>>0<ea>>>0);Ya=ea}h=c[j>>2]|0;m=m+h|0;if(m>>>0>=Q>>>0)break;else f=f+Ya|0}i=n;return 1}function Sd(f,h,j,k,l,m){f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,ba=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0;n=i;i=i+48|0;o=n+38|0;p=n+36|0;q=n+34|0;r=n+32|0;s=n+30|0;t=n+28|0;u=n+26|0;v=n+24|0;w=n+22|0;x=n+20|0;y=n+18|0;z=n+16|0;A=n+14|0;B=n+12|0;C=n+10|0;D=n+8|0;E=n+6|0;F=n+4|0;G=n+2|0;H=n;b[o>>1]=0;b[p>>1]=0;b[q>>1]=0;b[r>>1]=0;b[s>>1]=0;b[t>>1]=0;b[u>>1]=0;b[v>>1]=0;b[w>>1]=0;b[x>>1]=0;b[y>>1]=0;b[z>>1]=0;b[A>>1]=0;b[B>>1]=0;b[C>>1]=0;b[D>>1]=0;_d(l,o,p,q,r,s,t,u,v);_d(m,w,x,y,z,A,B,C,D);if((c[l+52>>2]|0)==24){g[2432]=0.0;I=ca(k,j)|0;J=c[l+4>>2]|0;K=ca(J,I)|0;L=f+K|0;if((K|0)>0){M=0.0;K=f;while(1){N=+aa(+(+(e[K>>1]|0)*.29899999499320984+ +(e[K+2>>1]|0)*.5870000123977661+ +(e[K+4>>1]|0)*.11400000005960464+1.000000013351432e-10))+M;K=K+J|0;if(K>>>0>=L>>>0){O=N;break}else M=N}g[2432]=O;P=O}else P=0.0;g[2432]=+$(+(P/+(I>>>0)));Q=I;R=J}else{Q=ca(k,j)|0;R=c[l+4>>2]|0}j=l+4|0;k=ca(Q,R)|0;Q=f+k|0;if((k|0)<=0){i=n;return 1}k=l+48|0;J=m+44|0;I=m+8|0;L=l+8|0;K=m+12|0;S=l+12|0;T=m+16|0;U=l+16|0;V=m+20|0;W=l+20|0;l=m+4|0;m=f;f=h;h=R;while(1){if(!h)X=0;else{R=0;Y=0;while(1){Z=d[m+Y>>0]<<(Y<<3)|R;Y=Y+1|0;if(Y>>>0>=h>>>0){X=Z;break}else R=Z}}b[E>>1]=0;b[F>>1]=0;b[G>>1]=0;b[H>>1]=-1;R=b[s>>1]|0;if(!(R<<16>>16))_=0;else _=X>>>(e[o>>1]|0)&(R&65535)&65535;Y=b[t>>1]|0;if(!(Y<<16>>16))ba=0;else ba=X>>>(e[p>>1]|0)&(Y&65535)&65535;Z=b[u>>1]|0;if(!(Z<<16>>16))da=0;else da=X>>>(e[q>>1]|0)&(Z&65535)&65535;ea=b[v>>1]|0;if(!(ea<<16>>16))fa=-1;else fa=X>>>(e[r>>1]|0)&(ea&65535)&65535;ga=c[k>>2]|0;ha=c[J>>2]|0;do if((ga|0)==0&(ha|0)==0){do if(R<<16>>16!=0&(b[A>>1]|0)!=0){ia=c[I>>2]|0;ja=c[L>>2]|0;if(ia>>>0<ja>>>0){if((ja&65535)<<16>>16==0|(ia&65535)<<16>>16==0)ka=0;else ka=(_&65535)>>>((ja&65535)-(ia&65535)|0)&65535;b[E>>1]=ka;break}if(ia>>>0<=ja>>>0){b[E>>1]=_;break}la=ja&65535;ma=ia&65535;na=ja&65535;if(!(la<<16>>16==0|ma<<16>>16==0)){ja=ia&65535;if((ma&65535)<(la&65535)){oa=ma;pa=ja;qa=0}else{ma=_&65535;ia=ja;ja=0;while(1){ra=(ja&65535)<<na|ma;sa=ia-na|0;ta=sa&65535;ua=sa&65535;if((ta&65535)<(la&65535)){va=ra;wa=ta;xa=ua;break}else{ia=ua;ja=ra}}oa=wa;pa=xa;qa=va&65535}if(!(oa<<16>>16))ya=qa;else ya=((qa&65535)<<pa|(_&65535)>>>(na-pa|0))&65535}else ya=0;b[E>>1]=ya}while(0);do if(Y<<16>>16!=0&(b[B>>1]|0)!=0){ja=c[K>>2]|0;ia=c[S>>2]|0;if(ja>>>0<ia>>>0){if((ia&65535)<<16>>16==0|(ja&65535)<<16>>16==0)za=0;else za=(ba&65535)>>>((ia&65535)-(ja&65535)|0)&65535;b[F>>1]=za;break}if(ja>>>0<=ia>>>0){b[F>>1]=ba;break}la=ia&65535;ma=ja&65535;ra=ia&65535;if(!(la<<16>>16==0|ma<<16>>16==0)){ia=ja&65535;if((ma&65535)<(la&65535)){Aa=ma;Ba=ia;Ca=0}else{ma=ba&65535;ja=ia;ia=0;while(1){ua=(ia&65535)<<ra|ma;ta=ja-ra|0;sa=ta&65535;Da=ta&65535;if((sa&65535)<(la&65535)){Ea=Da;Fa=ua;Ga=sa;break}else{ja=Da;ia=ua}}Aa=Ga;Ba=Ea;Ca=Fa&65535}if(!(Aa<<16>>16))Ha=Ca;else Ha=((Ca&65535)<<Ba|(ba&65535)>>>(ra-Ba|0))&65535}else Ha=0;b[F>>1]=Ha}while(0);do if(Z<<16>>16!=0&(b[C>>1]|0)!=0){ia=c[T>>2]|0;ja=c[U>>2]|0;if(ia>>>0<ja>>>0){if((ja&65535)<<16>>16==0|(ia&65535)<<16>>16==0)Ia=0;else Ia=(da&65535)>>>((ja&65535)-(ia&65535)|0)&65535;b[G>>1]=Ia;break}if(ia>>>0<=ja>>>0){b[G>>1]=da;break}la=ja&65535;ma=ia&65535;na=ja&65535;if(!(la<<16>>16==0|ma<<16>>16==0)){ja=ia&65535;if((ma&65535)<(la&65535)){Ja=ma;Ka=ja;La=0}else{ma=da&65535;ia=ja;ja=0;while(1){ua=(ja&65535)<<na|ma;Da=ia-na|0;sa=Da&65535;ta=Da&65535;if((sa&65535)<(la&65535)){Ma=ua;Na=sa;Oa=ta;break}else{ia=ta;ja=ua}}Ja=Na;Ka=Oa;La=Ma&65535}if(!(Ja<<16>>16))Pa=La;else Pa=((La&65535)<<Ka|(da&65535)>>>(na-Ka|0))&65535}else Pa=0;b[G>>1]=Pa}while(0);if(ea<<16>>16!=0&(b[D>>1]|0)!=0){ja=c[V>>2]|0;ia=c[W>>2]|0;if(ja>>>0<ia>>>0){if((ia&65535)<<16>>16==0|(ja&65535)<<16>>16==0)Qa=0;else Qa=(fa&65535)>>>((ia&65535)-(ja&65535)|0)&65535;b[H>>1]=Qa;break}if(ja>>>0<=ia>>>0){b[H>>1]=fa;break}la=ia&65535;ma=ja&65535;ra=ia&65535;if(!(la<<16>>16==0|ma<<16>>16==0)){ia=ja&65535;if((ma&65535)<(la&65535)){Ra=ma;Sa=ia;Ta=0}else{ma=fa&65535;ja=ia;ia=0;while(1){ua=(ia&65535)<<ra|ma;ta=ja-ra|0;sa=ta&65535;Da=ta&65535;if((sa&65535)<(la&65535)){Ua=ua;Va=sa;Wa=Da;break}else{ja=Da;ia=ua}}Ra=Va;Sa=Wa;Ta=Ua&65535}if(!(Ra<<16>>16))Xa=Ta;else Xa=((Ta&65535)<<Sa|(fa&65535)>>>(ra-Sa|0))&65535}else Xa=0;b[H>>1]=Xa}}else $d(ga,ha,_,ba,da,fa,c[L>>2]&65535,c[S>>2]&65535,c[U>>2]&65535,c[W>>2]&65535,E,F,G,H,c[I>>2]&65535,c[K>>2]&65535,c[T>>2]&65535,c[V>>2]&65535);while(0);if(!(c[l>>2]|0))Ya=0;else{ha=((b[B>>1]&b[F>>1]&65535)<<e[x>>1]|(b[A>>1]&b[E>>1]&65535)<<e[w>>1]|(b[C>>1]&b[G>>1]&65535)<<e[y>>1]|(b[D>>1]&b[H>>1]&65535)<<e[z>>1])&65535;ga=0;do{a[f+ga>>0]=ha>>>(ga<<3);ga=ga+1|0;ea=c[l>>2]|0}while(ga>>>0<ea>>>0);Ya=ea}h=c[j>>2]|0;m=m+h|0;if(m>>>0>=Q>>>0)break;else f=f+Ya|0}i=n;return 1}function Td(f,h,j,k,l,m){f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,ba=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0;n=i;i=i+48|0;o=n+38|0;p=n+36|0;q=n+34|0;r=n+32|0;s=n+30|0;t=n+28|0;u=n+26|0;v=n+24|0;w=n+22|0;x=n+20|0;y=n+18|0;z=n+16|0;A=n+14|0;B=n+12|0;C=n+10|0;D=n+8|0;E=n+6|0;F=n+4|0;G=n+2|0;H=n;b[o>>1]=0;b[p>>1]=0;b[q>>1]=0;b[r>>1]=0;b[s>>1]=0;b[t>>1]=0;b[u>>1]=0;b[v>>1]=0;b[w>>1]=0;b[x>>1]=0;b[y>>1]=0;b[z>>1]=0;b[A>>1]=0;b[B>>1]=0;b[C>>1]=0;b[D>>1]=0;_d(l,o,p,q,r,s,t,u,v);_d(m,w,x,y,z,A,B,C,D);if((c[l+52>>2]|0)==24){g[2432]=0.0;I=ca(k,j)|0;J=c[l+4>>2]|0;K=ca(J,I)|0;L=f+K|0;if((K|0)>0){M=0.0;K=f;while(1){N=+aa(+(+(e[K>>1]|0)*.29899999499320984+ +(e[K+2>>1]|0)*.5870000123977661+ +(e[K+4>>1]|0)*.11400000005960464+1.000000013351432e-10))+M;K=K+J|0;if(K>>>0>=L>>>0){O=N;break}else M=N}g[2432]=O;P=O}else P=0.0;g[2432]=+$(+(P/+(I>>>0)));Q=I;R=J}else{Q=ca(k,j)|0;R=c[l+4>>2]|0}j=l+4|0;k=ca(Q,R)|0;Q=f+k|0;if((k|0)<=0){i=n;return 1}k=l+48|0;J=m+44|0;I=m+8|0;L=l+8|0;K=m+12|0;S=l+12|0;T=m+16|0;U=l+16|0;V=m+20|0;W=l+20|0;l=m+4|0;m=f;f=h;h=R;while(1){if(!h)X=0;else{R=0;Y=0;while(1){Z=(d[m+Y>>0]|0)<<(Y<<3)|R;Y=Y+1|0;if(Y>>>0>=h>>>0){X=Z;break}else R=Z}}b[E>>1]=0;b[F>>1]=0;b[G>>1]=0;b[H>>1]=-1;R=b[s>>1]|0;if(!(R<<16>>16))_=0;else _=X>>>(e[o>>1]|0)&(R&65535)&65535;Y=b[t>>1]|0;if(!(Y<<16>>16))ba=0;else ba=X>>>(e[p>>1]|0)&(Y&65535)&65535;Z=b[u>>1]|0;if(!(Z<<16>>16))da=0;else da=X>>>(e[q>>1]|0)&(Z&65535)&65535;ea=b[v>>1]|0;if(!(ea<<16>>16))fa=-1;else fa=X>>>(e[r>>1]|0)&(ea&65535)&65535;ga=c[k>>2]|0;ha=c[J>>2]|0;do if((ga|0)==0&(ha|0)==0){ia=b[A>>1]|0;do if(R<<16>>16!=0&ia<<16>>16!=0){ja=c[I>>2]|0;ka=c[L>>2]|0;if(ja>>>0<ka>>>0){if((ka&65535)<<16>>16==0|(ja&65535)<<16>>16==0)la=0;else la=(_&65535)>>>((ka&65535)-(ja&65535)|0)&65535;b[E>>1]=la;ma=la;break}if(ja>>>0<=ka>>>0){b[E>>1]=_;ma=_;break}na=ka&65535;oa=ja&65535;pa=ka&65535;if(!(na<<16>>16==0|oa<<16>>16==0)){ka=ja&65535;if((oa&65535)<(na&65535)){qa=oa;ra=ka;sa=0}else{oa=_&65535;ja=ka;ka=0;while(1){ta=(ka&65535)<<pa|oa;ua=ja-pa|0;va=ua&65535;wa=ua&65535;if((va&65535)<(na&65535)){xa=ta;ya=va;za=wa;break}else{ja=wa;ka=ta}}qa=ya;ra=za;sa=xa&65535}if(!(qa<<16>>16))Aa=sa;else Aa=((sa&65535)<<ra|(_&65535)>>>(pa-ra|0))&65535}else Aa=0;b[E>>1]=Aa;ma=Aa}else ma=0;while(0);ka=b[B>>1]|0;do if(Y<<16>>16!=0&ka<<16>>16!=0){ja=c[K>>2]|0;na=c[S>>2]|0;if(ja>>>0<na>>>0){if((na&65535)<<16>>16==0|(ja&65535)<<16>>16==0)Ba=0;else Ba=(ba&65535)>>>((na&65535)-(ja&65535)|0)&65535;b[F>>1]=Ba;Ca=Ba;break}if(ja>>>0<=na>>>0){b[F>>1]=ba;Ca=ba;break}oa=na&65535;ta=ja&65535;wa=na&65535;if(!(oa<<16>>16==0|ta<<16>>16==0)){na=ja&65535;if((ta&65535)<(oa&65535)){Da=ta;Ea=na;Fa=0}else{ta=ba&65535;ja=na;na=0;while(1){va=(na&65535)<<wa|ta;ua=ja-wa|0;Ga=ua&65535;Ha=ua&65535;if((Ga&65535)<(oa&65535)){Ia=va;Ja=Ga;Ka=Ha;break}else{ja=Ha;na=va}}Da=Ja;Ea=Ka;Fa=Ia&65535}if(!(Da<<16>>16))La=Fa;else La=((Fa&65535)<<Ea|(ba&65535)>>>(wa-Ea|0))&65535}else La=0;b[F>>1]=La;Ca=La}else Ca=0;while(0);na=b[C>>1]|0;do if(Z<<16>>16!=0&na<<16>>16!=0){ja=c[T>>2]|0;oa=c[U>>2]|0;if(ja>>>0<oa>>>0){if((oa&65535)<<16>>16==0|(ja&65535)<<16>>16==0)Ma=0;else Ma=(da&65535)>>>((oa&65535)-(ja&65535)|0)&65535;b[G>>1]=Ma;Na=Ma;break}if(ja>>>0<=oa>>>0){b[G>>1]=da;Na=da;break}ta=oa&65535;pa=ja&65535;va=oa&65535;if(!(ta<<16>>16==0|pa<<16>>16==0)){oa=ja&65535;if((pa&65535)<(ta&65535)){Oa=pa;Pa=oa;Qa=0}else{pa=da&65535;ja=oa;oa=0;while(1){Ha=(oa&65535)<<va|pa;Ga=ja-va|0;ua=Ga&65535;Ra=Ga&65535;if((ua&65535)<(ta&65535)){Sa=Ha;Ta=ua;Ua=Ra;break}else{ja=Ra;oa=Ha}}Oa=Ta;Pa=Ua;Qa=Sa&65535}if(!(Oa<<16>>16))Va=Qa;else Va=((Qa&65535)<<Pa|(da&65535)>>>(va-Pa|0))&65535}else Va=0;b[G>>1]=Va;Na=Va}else Na=0;while(0);oa=b[D>>1]|0;if(ea<<16>>16!=0&oa<<16>>16!=0){ja=c[V>>2]|0;ta=c[W>>2]|0;if(ja>>>0<ta>>>0){if((ta&65535)<<16>>16==0|(ja&65535)<<16>>16==0)Wa=0;else Wa=(fa&65535)>>>((ta&65535)-(ja&65535)|0)&65535;b[H>>1]=Wa;Xa=ma;Ya=ia;Za=Ca;_a=ka;$a=Na;ab=na;bb=Wa;cb=oa;break}if(ja>>>0<=ta>>>0){b[H>>1]=fa;Xa=ma;Ya=ia;Za=Ca;_a=ka;$a=Na;ab=na;bb=fa;cb=oa;break}pa=ta&65535;wa=ja&65535;Ha=ta&65535;if(!(pa<<16>>16==0|wa<<16>>16==0)){ta=ja&65535;if((wa&65535)<(pa&65535)){db=wa;eb=ta;fb=0}else{wa=fa&65535;ja=ta;ta=0;while(1){Ra=(ta&65535)<<Ha|wa;ua=ja-Ha|0;Ga=ua&65535;gb=ua&65535;if((Ga&65535)<(pa&65535)){hb=Ra;ib=Ga;jb=gb;break}else{ja=gb;ta=Ra}}db=ib;eb=jb;fb=hb&65535}if(!(db<<16>>16))kb=fb;else kb=((fb&65535)<<eb|(fa&65535)>>>(Ha-eb|0))&65535}else kb=0;b[H>>1]=kb;Xa=ma;Ya=ia;Za=Ca;_a=ka;$a=Na;ab=na;bb=kb;cb=oa}else{Xa=ma;Ya=ia;Za=Ca;_a=ka;$a=Na;ab=na;bb=-1;cb=oa}}else{$d(ga,ha,_,ba,da,fa,c[L>>2]&65535,c[S>>2]&65535,c[U>>2]&65535,c[W>>2]&65535,E,F,G,H,c[I>>2]&65535,c[K>>2]&65535,c[T>>2]&65535,c[V>>2]&65535);Xa=b[E>>1]|0;Ya=b[A>>1]|0;Za=b[F>>1]|0;_a=b[B>>1]|0;$a=b[G>>1]|0;ab=b[C>>1]|0;bb=b[H>>1]|0;cb=b[D>>1]|0}while(0);ha=(_a&Za&65535)<<(e[x>>1]|0)|(Ya&Xa&65535)<<(e[w>>1]|0)|(ab&$a&65535)<<(e[y>>1]|0)|(cb&bb&65535)<<(e[z>>1]|0);if(!(c[l>>2]|0))lb=0;else{ga=0;do{a[f+ga>>0]=ha>>>(ga<<3);ga=ga+1|0;ea=c[l>>2]|0}while(ga>>>0<ea>>>0);lb=ea}h=c[j>>2]|0;m=m+h|0;if(m>>>0>=Q>>>0)break;else f=f+lb|0}i=n;return 1}function Ud(f,h,j,k,l,m){f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,ba=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0;n=i;i=i+48|0;o=n+38|0;p=n+36|0;q=n+34|0;r=n+32|0;s=n+30|0;t=n+28|0;u=n+26|0;v=n+24|0;w=n+22|0;x=n+20|0;y=n+18|0;z=n+16|0;A=n+14|0;B=n+12|0;C=n+10|0;D=n+8|0;E=n+6|0;F=n+4|0;H=n+2|0;I=n;b[o>>1]=0;b[p>>1]=0;b[q>>1]=0;b[r>>1]=0;b[s>>1]=0;b[t>>1]=0;b[u>>1]=0;b[v>>1]=0;b[w>>1]=0;b[x>>1]=0;b[y>>1]=0;b[z>>1]=0;b[A>>1]=0;b[B>>1]=0;b[C>>1]=0;b[D>>1]=0;_d(l,o,p,q,r,s,t,u,v);_d(m,w,x,y,z,A,B,C,D);if((c[l+52>>2]|0)==24){g[2432]=0.0;J=ca(k,j)|0;K=c[l+4>>2]|0;L=ca(K,J)|0;M=f+L|0;if((L|0)>0){N=0.0;L=f;while(1){O=+aa(+(+(e[L>>1]|0)*.29899999499320984+ +(e[L+2>>1]|0)*.5870000123977661+ +(e[L+4>>1]|0)*.11400000005960464+1.000000013351432e-10))+N;L=L+K|0;if(L>>>0>=M>>>0){P=O;break}else N=O}g[2432]=P;Q=P}else Q=0.0;g[2432]=+$(+(Q/+(J>>>0)));R=J;S=K}else{R=ca(k,j)|0;S=c[l+4>>2]|0}j=l+4|0;k=ca(R,S)|0;R=f+k|0;if((k|0)<=0){i=n;return 1}k=l+48|0;K=m+44|0;J=m+8|0;M=l+8|0;L=m+12|0;T=l+12|0;U=m+16|0;V=l+16|0;W=m+20|0;X=l+20|0;l=m+4|0;m=f;f=h;h=S;while(1){if(!h)Y=0;else{S=0;Z=0;while(1){_=(d[m+Z>>0]|0)<<(Z<<3)|S;Z=Z+1|0;if(Z>>>0>=h>>>0){Y=_;break}else S=_}}b[E>>1]=0;b[F>>1]=0;b[H>>1]=0;b[I>>1]=-1;S=b[s>>1]|0;if(!(S<<16>>16))ba=0;else ba=Y>>>(e[o>>1]|0)&(S&65535)&65535;Z=b[t>>1]|0;if(!(Z<<16>>16))da=0;else da=Y>>>(e[p>>1]|0)&(Z&65535)&65535;_=b[u>>1]|0;if(!(_<<16>>16))ea=0;else ea=Y>>>(e[q>>1]|0)&(_&65535)&65535;fa=b[v>>1]|0;if(!(fa<<16>>16))ga=-1;else ga=Y>>>(e[r>>1]|0)&(fa&65535)&65535;ha=c[k>>2]|0;ia=c[K>>2]|0;do if((ha|0)==0&(ia|0)==0){ja=b[A>>1]|0;do if(S<<16>>16!=0&ja<<16>>16!=0){ka=c[J>>2]|0;la=c[M>>2]|0;if(ka>>>0<la>>>0){if((la&65535)<<16>>16==0|(ka&65535)<<16>>16==0)ma=0;else ma=(ba&65535)>>>((la&65535)-(ka&65535)|0)&65535;b[E>>1]=ma;na=ma;break}if(ka>>>0<=la>>>0){b[E>>1]=ba;na=ba;break}oa=la&65535;pa=ka&65535;qa=la&65535;if(!(oa<<16>>16==0|pa<<16>>16==0)){la=ka&65535;if((pa&65535)<(oa&65535)){ra=pa;sa=la;ta=0}else{pa=ba&65535;ka=la;la=0;while(1){ua=(la&65535)<<qa|pa;va=ka-qa|0;wa=va&65535;xa=va&65535;if((wa&65535)<(oa&65535)){ya=ua;za=wa;Aa=xa;break}else{ka=xa;la=ua}}ra=za;sa=Aa;ta=ya&65535}if(!(ra<<16>>16))Ba=ta;else Ba=((ta&65535)<<sa|(ba&65535)>>>(qa-sa|0))&65535}else Ba=0;b[E>>1]=Ba;na=Ba}else na=0;while(0);la=b[B>>1]|0;do if(Z<<16>>16!=0&la<<16>>16!=0){ka=c[L>>2]|0;oa=c[T>>2]|0;if(ka>>>0<oa>>>0){if((oa&65535)<<16>>16==0|(ka&65535)<<16>>16==0)Ca=0;else Ca=(da&65535)>>>((oa&65535)-(ka&65535)|0)&65535;b[F>>1]=Ca;Da=Ca;break}if(ka>>>0<=oa>>>0){b[F>>1]=da;Da=da;break}pa=oa&65535;ua=ka&65535;xa=oa&65535;if(!(pa<<16>>16==0|ua<<16>>16==0)){oa=ka&65535;if((ua&65535)<(pa&65535)){Ea=ua;Fa=oa;Ga=0}else{ua=da&65535;ka=oa;oa=0;while(1){wa=(oa&65535)<<xa|ua;va=ka-xa|0;Ha=va&65535;Ia=va&65535;if((Ha&65535)<(pa&65535)){Ja=wa;Ka=Ha;La=Ia;break}else{ka=Ia;oa=wa}}Ea=Ka;Fa=La;Ga=Ja&65535}if(!(Ea<<16>>16))Ma=Ga;else Ma=((Ga&65535)<<Fa|(da&65535)>>>(xa-Fa|0))&65535}else Ma=0;b[F>>1]=Ma;Da=Ma}else Da=0;while(0);oa=b[C>>1]|0;do if(_<<16>>16!=0&oa<<16>>16!=0){ka=c[U>>2]|0;pa=c[V>>2]|0;if(ka>>>0<pa>>>0){if((pa&65535)<<16>>16==0|(ka&65535)<<16>>16==0)Na=0;else Na=(ea&65535)>>>((pa&65535)-(ka&65535)|0)&65535;b[H>>1]=Na;Oa=Na;break}if(ka>>>0<=pa>>>0){b[H>>1]=ea;Oa=ea;break}ua=pa&65535;qa=ka&65535;wa=pa&65535;if(!(ua<<16>>16==0|qa<<16>>16==0)){pa=ka&65535;if((qa&65535)<(ua&65535)){Pa=qa;Qa=pa;Ra=0}else{qa=ea&65535;ka=pa;pa=0;while(1){Ia=(pa&65535)<<wa|qa;Ha=ka-wa|0;va=Ha&65535;Sa=Ha&65535;if((va&65535)<(ua&65535)){Ta=Ia;Ua=va;Va=Sa;break}else{ka=Sa;pa=Ia}}Pa=Ua;Qa=Va;Ra=Ta&65535}if(!(Pa<<16>>16))Wa=Ra;else Wa=((Ra&65535)<<Qa|(ea&65535)>>>(wa-Qa|0))&65535}else Wa=0;b[H>>1]=Wa;Oa=Wa}else Oa=0;while(0);pa=b[D>>1]|0;if(fa<<16>>16!=0&pa<<16>>16!=0){ka=c[W>>2]|0;ua=c[X>>2]|0;if(ka>>>0<ua>>>0){if((ua&65535)<<16>>16==0|(ka&65535)<<16>>16==0)Xa=0;else Xa=(ga&65535)>>>((ua&65535)-(ka&65535)|0)&65535;b[I>>1]=Xa;Ya=na;Za=ja;_a=Da;$a=la;ab=Oa;bb=oa;cb=Xa;db=pa;break}if(ka>>>0<=ua>>>0){b[I>>1]=ga;Ya=na;Za=ja;_a=Da;$a=la;ab=Oa;bb=oa;cb=ga;db=pa;break}qa=ua&65535;xa=ka&65535;Ia=ua&65535;if(!(qa<<16>>16==0|xa<<16>>16==0)){ua=ka&65535;if((xa&65535)<(qa&65535)){eb=xa;fb=ua;gb=0}else{xa=ga&65535;ka=ua;ua=0;while(1){Sa=(ua&65535)<<Ia|xa;va=ka-Ia|0;Ha=va&65535;hb=va&65535;if((Ha&65535)<(qa&65535)){ib=Sa;jb=Ha;kb=hb;break}else{ka=hb;ua=Sa}}eb=jb;fb=kb;gb=ib&65535}if(!(eb<<16>>16))lb=gb;else lb=((gb&65535)<<fb|(ga&65535)>>>(Ia-fb|0))&65535}else lb=0;b[I>>1]=lb;Ya=na;Za=ja;_a=Da;$a=la;ab=Oa;bb=oa;cb=lb;db=pa}else{Ya=na;Za=ja;_a=Da;$a=la;ab=Oa;bb=oa;cb=-1;db=pa}}else{$d(ha,ia,ba,da,ea,ga,c[M>>2]&65535,c[T>>2]&65535,c[V>>2]&65535,c[X>>2]&65535,E,F,H,I,c[J>>2]&65535,c[L>>2]&65535,c[U>>2]&65535,c[W>>2]&65535);Ya=b[E>>1]|0;Za=b[A>>1]|0;_a=b[F>>1]|0;$a=b[B>>1]|0;ab=b[H>>1]|0;bb=b[C>>1]|0;cb=b[I>>1]|0;db=b[D>>1]|0}while(0);ia=ar(Za&Ya&65535|0,0,e[w>>1]|0|0)|0;ha=G;fa=ar($a&_a&65535|0,0,e[x>>1]|0|0)|0;_=G|ha;ha=ar(bb&ab&65535|0,0,e[y>>1]|0|0)|0;Z=_|G;_=ar(db&cb&65535|0,0,e[z>>1]|0|0)|0;S=fa|ia|ha|_;_=Z|G;if(!(c[l>>2]|0))mb=0;else{Z=0;do{ha=Zq(S|0,_|0,Z<<3|0)|0;a[f+Z>>0]=ha;Z=Z+1|0;ha=c[l>>2]|0}while(Z>>>0<ha>>>0);mb=ha}h=c[j>>2]|0;m=m+h|0;if(m>>>0>=R>>>0)break;else f=f+mb|0}i=n;return 1}function Vd(f,h,j,k,l,m){f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,ba=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0;n=i;i=i+48|0;o=n+38|0;p=n+36|0;q=n+34|0;r=n+32|0;s=n+30|0;t=n+28|0;u=n+26|0;v=n+24|0;w=n+22|0;x=n+20|0;y=n+18|0;z=n+16|0;A=n+14|0;B=n+12|0;C=n+10|0;D=n+8|0;E=n+6|0;F=n+4|0;H=n+2|0;I=n;b[o>>1]=0;b[p>>1]=0;b[q>>1]=0;b[r>>1]=0;b[s>>1]=0;b[t>>1]=0;b[u>>1]=0;b[v>>1]=0;b[w>>1]=0;b[x>>1]=0;b[y>>1]=0;b[z>>1]=0;b[A>>1]=0;b[B>>1]=0;b[C>>1]=0;b[D>>1]=0;_d(l,o,p,q,r,s,t,u,v);_d(m,w,x,y,z,A,B,C,D);if((c[l+52>>2]|0)==24){g[2432]=0.0;J=ca(k,j)|0;K=c[l+4>>2]|0;L=ca(K,J)|0;M=f+L|0;if((L|0)>0){N=0.0;L=f;while(1){O=+aa(+(+(e[L>>1]|0)*.29899999499320984+ +(e[L+2>>1]|0)*.5870000123977661+ +(e[L+4>>1]|0)*.11400000005960464+1.000000013351432e-10))+N;L=L+K|0;if(L>>>0>=M>>>0){P=O;break}else N=O}g[2432]=P;Q=P}else Q=0.0;g[2432]=+$(+(Q/+(J>>>0)));R=J;S=K}else{R=ca(k,j)|0;S=c[l+4>>2]|0}j=l+4|0;k=ca(R,S)|0;R=f+k|0;if((k|0)<=0){i=n;return 1}k=l+48|0;K=m+44|0;J=m+8|0;M=l+8|0;L=m+12|0;T=l+12|0;U=m+16|0;V=l+16|0;W=m+20|0;X=l+20|0;l=m+4|0;m=f;f=h;h=S;while(1){if(!h){Y=0;Z=0}else{S=0;_=0;ba=0;while(1){da=d[m+ba>>0]|0;ea=ar(ba|0,0,3)|0;fa=ar(da|0,0,ea|0)|0;ea=fa|S;fa=G|_;ba=ba+1|0;if(ba>>>0>=h>>>0){Y=ea;Z=fa;break}else{S=ea;_=fa}}}b[E>>1]=0;b[F>>1]=0;b[H>>1]=0;b[I>>1]=-1;_=b[s>>1]|0;if(!(_<<16>>16))ga=0;else{S=Zq(Y|0,Z|0,e[o>>1]|0)|0;ga=S&(_&65535)&65535}S=b[t>>1]|0;if(!(S<<16>>16))ha=0;else{ba=Zq(Y|0,Z|0,e[p>>1]|0)|0;ha=ba&(S&65535)&65535}ba=b[u>>1]|0;if(!(ba<<16>>16))ia=0;else{fa=Zq(Y|0,Z|0,e[q>>1]|0)|0;ia=fa&(ba&65535)&65535}fa=b[v>>1]|0;if(!(fa<<16>>16))ja=-1;else{ea=Zq(Y|0,Z|0,e[r>>1]|0)|0;ja=ea&(fa&65535)&65535}ea=c[k>>2]|0;da=c[K>>2]|0;do if((ea|0)==0&(da|0)==0){do if(_<<16>>16!=0&(b[A>>1]|0)!=0){ka=c[J>>2]|0;la=c[M>>2]|0;if(ka>>>0<la>>>0){if((la&65535)<<16>>16==0|(ka&65535)<<16>>16==0)ma=0;else ma=(ga&65535)>>>((la&65535)-(ka&65535)|0)&65535;b[E>>1]=ma;break}if(ka>>>0<=la>>>0){b[E>>1]=ga;break}na=la&65535;oa=ka&65535;pa=la&65535;if(!(na<<16>>16==0|oa<<16>>16==0)){la=ka&65535;if((oa&65535)<(na&65535)){qa=oa;ra=la;sa=0}else{oa=ga&65535;ka=la;la=0;while(1){ta=(la&65535)<<pa|oa;ua=ka-pa|0;va=ua&65535;wa=ua&65535;if((va&65535)<(na&65535)){xa=ta;ya=va;za=wa;break}else{ka=wa;la=ta}}qa=ya;ra=za;sa=xa&65535}if(!(qa<<16>>16))Aa=sa;else Aa=((sa&65535)<<ra|(ga&65535)>>>(pa-ra|0))&65535}else Aa=0;b[E>>1]=Aa}while(0);do if(S<<16>>16!=0&(b[B>>1]|0)!=0){la=c[L>>2]|0;ka=c[T>>2]|0;if(la>>>0<ka>>>0){if((ka&65535)<<16>>16==0|(la&65535)<<16>>16==0)Ba=0;else Ba=(ha&65535)>>>((ka&65535)-(la&65535)|0)&65535;b[F>>1]=Ba;break}if(la>>>0<=ka>>>0){b[F>>1]=ha;break}na=ka&65535;oa=la&65535;ta=ka&65535;if(!(na<<16>>16==0|oa<<16>>16==0)){ka=la&65535;if((oa&65535)<(na&65535)){Ca=oa;Da=ka;Ea=0}else{oa=ha&65535;la=ka;ka=0;while(1){wa=(ka&65535)<<ta|oa;va=la-ta|0;ua=va&65535;Fa=va&65535;if((ua&65535)<(na&65535)){Ga=Fa;Ha=wa;Ia=ua;break}else{la=Fa;ka=wa}}Ca=Ia;Da=Ga;Ea=Ha&65535}if(!(Ca<<16>>16))Ja=Ea;else Ja=((Ea&65535)<<Da|(ha&65535)>>>(ta-Da|0))&65535}else Ja=0;b[F>>1]=Ja}while(0);do if(ba<<16>>16!=0&(b[C>>1]|0)!=0){ka=c[U>>2]|0;la=c[V>>2]|0;if(ka>>>0<la>>>0){if((la&65535)<<16>>16==0|(ka&65535)<<16>>16==0)Ka=0;else Ka=(ia&65535)>>>((la&65535)-(ka&65535)|0)&65535;b[H>>1]=Ka;break}if(ka>>>0<=la>>>0){b[H>>1]=ia;break}na=la&65535;oa=ka&65535;pa=la&65535;if(!(na<<16>>16==0|oa<<16>>16==0)){la=ka&65535;if((oa&65535)<(na&65535)){La=oa;Ma=la;Na=0}else{oa=ia&65535;ka=la;la=0;while(1){wa=(la&65535)<<pa|oa;Fa=ka-pa|0;ua=Fa&65535;va=Fa&65535;if((ua&65535)<(na&65535)){Oa=wa;Pa=ua;Qa=va;break}else{ka=va;la=wa}}La=Pa;Ma=Qa;Na=Oa&65535}if(!(La<<16>>16))Ra=Na;else Ra=((Na&65535)<<Ma|(ia&65535)>>>(pa-Ma|0))&65535}else Ra=0;b[H>>1]=Ra}while(0);if(fa<<16>>16!=0&(b[D>>1]|0)!=0){la=c[W>>2]|0;ka=c[X>>2]|0;if(la>>>0<ka>>>0){if((ka&65535)<<16>>16==0|(la&65535)<<16>>16==0)Sa=0;else Sa=(ja&65535)>>>((ka&65535)-(la&65535)|0)&65535;b[I>>1]=Sa;break}if(la>>>0<=ka>>>0){b[I>>1]=ja;break}na=ka&65535;oa=la&65535;ta=ka&65535;if(!(na<<16>>16==0|oa<<16>>16==0)){ka=la&65535;if((oa&65535)<(na&65535)){Ta=oa;Ua=ka;Va=0}else{oa=ja&65535;la=ka;ka=0;while(1){wa=(ka&65535)<<ta|oa;va=la-ta|0;ua=va&65535;Fa=va&65535;if((ua&65535)<(na&65535)){Wa=wa;Xa=ua;Ya=Fa;break}else{la=Fa;ka=wa}}Ta=Xa;Ua=Ya;Va=Wa&65535}if(!(Ta<<16>>16))Za=Va;else Za=((Va&65535)<<Ua|(ja&65535)>>>(ta-Ua|0))&65535}else Za=0;b[I>>1]=Za}}else $d(ea,da,ga,ha,ia,ja,c[M>>2]&65535,c[T>>2]&65535,c[V>>2]&65535,c[X>>2]&65535,E,F,H,I,c[J>>2]&65535,c[L>>2]&65535,c[U>>2]&65535,c[W>>2]&65535);while(0);if(!(c[l>>2]|0))_a=0;else{da=((b[B>>1]&b[F>>1]&255)<<(e[x>>1]&255)|(b[A>>1]&b[E>>1]&255)<<(e[w>>1]&255)|(b[C>>1]&b[H>>1]&255)<<(e[y>>1]&255)|(b[D>>1]&b[I>>1]&255)<<(e[z>>1]&255))&255;ea=0;do{a[f+ea>>0]=da>>>(ea<<3);ea=ea+1|0;fa=c[l>>2]|0}while(ea>>>0<fa>>>0);_a=fa}h=c[j>>2]|0;m=m+h|0;if(m>>>0>=R>>>0)break;else f=f+_a|0}i=n;return 1}function Wd(f,h,j,k,l,m){f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,ba=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0;n=i;i=i+48|0;o=n+38|0;p=n+36|0;q=n+34|0;r=n+32|0;s=n+30|0;t=n+28|0;u=n+26|0;v=n+24|0;w=n+22|0;x=n+20|0;y=n+18|0;z=n+16|0;A=n+14|0;B=n+12|0;C=n+10|0;D=n+8|0;E=n+6|0;F=n+4|0;H=n+2|0;I=n;b[o>>1]=0;b[p>>1]=0;b[q>>1]=0;b[r>>1]=0;b[s>>1]=0;b[t>>1]=0;b[u>>1]=0;b[v>>1]=0;b[w>>1]=0;b[x>>1]=0;b[y>>1]=0;b[z>>1]=0;b[A>>1]=0;b[B>>1]=0;b[C>>1]=0;b[D>>1]=0;_d(l,o,p,q,r,s,t,u,v);_d(m,w,x,y,z,A,B,C,D);if((c[l+52>>2]|0)==24){g[2432]=0.0;J=ca(k,j)|0;K=c[l+4>>2]|0;L=ca(K,J)|0;M=f+L|0;if((L|0)>0){N=0.0;L=f;while(1){O=+aa(+(+(e[L>>1]|0)*.29899999499320984+ +(e[L+2>>1]|0)*.5870000123977661+ +(e[L+4>>1]|0)*.11400000005960464+1.000000013351432e-10))+N;L=L+K|0;if(L>>>0>=M>>>0){P=O;break}else N=O}g[2432]=P;Q=P}else Q=0.0;g[2432]=+$(+(Q/+(J>>>0)));R=J;S=K}else{R=ca(k,j)|0;S=c[l+4>>2]|0}j=l+4|0;k=ca(R,S)|0;R=f+k|0;if((k|0)<=0){i=n;return 1}k=l+48|0;K=m+44|0;J=m+8|0;M=l+8|0;L=m+12|0;T=l+12|0;U=m+16|0;V=l+16|0;W=m+20|0;X=l+20|0;l=m+4|0;m=f;f=h;h=S;while(1){if(!h){Y=0;Z=0}else{S=0;_=0;ba=0;while(1){da=d[m+ba>>0]|0;ea=ar(ba|0,0,3)|0;fa=ar(da|0,0,ea|0)|0;ea=fa|S;fa=G|_;ba=ba+1|0;if(ba>>>0>=h>>>0){Y=ea;Z=fa;break}else{S=ea;_=fa}}}b[E>>1]=0;b[F>>1]=0;b[H>>1]=0;b[I>>1]=-1;_=b[s>>1]|0;if(!(_<<16>>16))ga=0;else{S=Zq(Y|0,Z|0,e[o>>1]|0)|0;ga=S&(_&65535)&65535}S=b[t>>1]|0;if(!(S<<16>>16))ha=0;else{ba=Zq(Y|0,Z|0,e[p>>1]|0)|0;ha=ba&(S&65535)&65535}ba=b[u>>1]|0;if(!(ba<<16>>16))ia=0;else{fa=Zq(Y|0,Z|0,e[q>>1]|0)|0;ia=fa&(ba&65535)&65535}fa=b[v>>1]|0;if(!(fa<<16>>16))ja=-1;else{ea=Zq(Y|0,Z|0,e[r>>1]|0)|0;ja=ea&(fa&65535)&65535}ea=c[k>>2]|0;da=c[K>>2]|0;do if((ea|0)==0&(da|0)==0){do if(_<<16>>16!=0&(b[A>>1]|0)!=0){ka=c[J>>2]|0;la=c[M>>2]|0;if(ka>>>0<la>>>0){if((la&65535)<<16>>16==0|(ka&65535)<<16>>16==0)ma=0;else ma=(ga&65535)>>>((la&65535)-(ka&65535)|0)&65535;b[E>>1]=ma;break}if(ka>>>0<=la>>>0){b[E>>1]=ga;break}na=la&65535;oa=ka&65535;pa=la&65535;if(!(na<<16>>16==0|oa<<16>>16==0)){la=ka&65535;if((oa&65535)<(na&65535)){qa=oa;ra=la;sa=0}else{oa=ga&65535;ka=la;la=0;while(1){ta=(la&65535)<<pa|oa;ua=ka-pa|0;va=ua&65535;wa=ua&65535;if((va&65535)<(na&65535)){xa=ta;ya=va;za=wa;break}else{ka=wa;la=ta}}qa=ya;ra=za;sa=xa&65535}if(!(qa<<16>>16))Aa=sa;else Aa=((sa&65535)<<ra|(ga&65535)>>>(pa-ra|0))&65535}else Aa=0;b[E>>1]=Aa}while(0);do if(S<<16>>16!=0&(b[B>>1]|0)!=0){la=c[L>>2]|0;ka=c[T>>2]|0;if(la>>>0<ka>>>0){if((ka&65535)<<16>>16==0|(la&65535)<<16>>16==0)Ba=0;else Ba=(ha&65535)>>>((ka&65535)-(la&65535)|0)&65535;b[F>>1]=Ba;break}if(la>>>0<=ka>>>0){b[F>>1]=ha;break}na=ka&65535;oa=la&65535;ta=ka&65535;if(!(na<<16>>16==0|oa<<16>>16==0)){ka=la&65535;if((oa&65535)<(na&65535)){Ca=oa;Da=ka;Ea=0}else{oa=ha&65535;la=ka;ka=0;while(1){wa=(ka&65535)<<ta|oa;va=la-ta|0;ua=va&65535;Fa=va&65535;if((ua&65535)<(na&65535)){Ga=Fa;Ha=wa;Ia=ua;break}else{la=Fa;ka=wa}}Ca=Ia;Da=Ga;Ea=Ha&65535}if(!(Ca<<16>>16))Ja=Ea;else Ja=((Ea&65535)<<Da|(ha&65535)>>>(ta-Da|0))&65535}else Ja=0;b[F>>1]=Ja}while(0);do if(ba<<16>>16!=0&(b[C>>1]|0)!=0){ka=c[U>>2]|0;la=c[V>>2]|0;if(ka>>>0<la>>>0){if((la&65535)<<16>>16==0|(ka&65535)<<16>>16==0)Ka=0;else Ka=(ia&65535)>>>((la&65535)-(ka&65535)|0)&65535;b[H>>1]=Ka;break}if(ka>>>0<=la>>>0){b[H>>1]=ia;break}na=la&65535;oa=ka&65535;pa=la&65535;if(!(na<<16>>16==0|oa<<16>>16==0)){la=ka&65535;if((oa&65535)<(na&65535)){La=oa;Ma=la;Na=0}else{oa=ia&65535;ka=la;la=0;while(1){wa=(la&65535)<<pa|oa;Fa=ka-pa|0;ua=Fa&65535;va=Fa&65535;if((ua&65535)<(na&65535)){Oa=wa;Pa=ua;Qa=va;break}else{ka=va;la=wa}}La=Pa;Ma=Qa;Na=Oa&65535}if(!(La<<16>>16))Ra=Na;else Ra=((Na&65535)<<Ma|(ia&65535)>>>(pa-Ma|0))&65535}else Ra=0;b[H>>1]=Ra}while(0);if(fa<<16>>16!=0&(b[D>>1]|0)!=0){la=c[W>>2]|0;ka=c[X>>2]|0;if(la>>>0<ka>>>0){if((ka&65535)<<16>>16==0|(la&65535)<<16>>16==0)Sa=0;else Sa=(ja&65535)>>>((ka&65535)-(la&65535)|0)&65535;b[I>>1]=Sa;break}if(la>>>0<=ka>>>0){b[I>>1]=ja;break}na=ka&65535;oa=la&65535;ta=ka&65535;if(!(na<<16>>16==0|oa<<16>>16==0)){ka=la&65535;if((oa&65535)<(na&65535)){Ta=oa;Ua=ka;Va=0}else{oa=ja&65535;la=ka;ka=0;while(1){wa=(ka&65535)<<ta|oa;va=la-ta|0;ua=va&65535;Fa=va&65535;if((ua&65535)<(na&65535)){Wa=wa;Xa=ua;Ya=Fa;break}else{la=Fa;ka=wa}}Ta=Xa;Ua=Ya;Va=Wa&65535}if(!(Ta<<16>>16))Za=Va;else Za=((Va&65535)<<Ua|(ja&65535)>>>(ta-Ua|0))&65535}else Za=0;b[I>>1]=Za}}else $d(ea,da,ga,ha,ia,ja,c[M>>2]&65535,c[T>>2]&65535,c[V>>2]&65535,c[X>>2]&65535,E,F,H,I,c[J>>2]&65535,c[L>>2]&65535,c[U>>2]&65535,c[W>>2]&65535);while(0);if(!(c[l>>2]|0))_a=0;else{da=((b[B>>1]&b[F>>1]&65535)<<e[x>>1]|(b[A>>1]&b[E>>1]&65535)<<e[w>>1]|(b[C>>1]&b[H>>1]&65535)<<e[y>>1]|(b[D>>1]&b[I>>1]&65535)<<e[z>>1])&65535;ea=0;do{a[f+ea>>0]=da>>>(ea<<3);ea=ea+1|0;fa=c[l>>2]|0}while(ea>>>0<fa>>>0);_a=fa}h=c[j>>2]|0;m=m+h|0;if(m>>>0>=R>>>0)break;else f=f+_a|0}i=n;return 1}function Xd(f,h,j,k,l,m){f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,ba=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0;n=i;i=i+48|0;o=n+38|0;p=n+36|0;q=n+34|0;r=n+32|0;s=n+30|0;t=n+28|0;u=n+26|0;v=n+24|0;w=n+22|0;x=n+20|0;y=n+18|0;z=n+16|0;A=n+14|0;B=n+12|0;C=n+10|0;D=n+8|0;E=n+6|0;F=n+4|0;H=n+2|0;I=n;b[o>>1]=0;b[p>>1]=0;b[q>>1]=0;b[r>>1]=0;b[s>>1]=0;b[t>>1]=0;b[u>>1]=0;b[v>>1]=0;b[w>>1]=0;b[x>>1]=0;b[y>>1]=0;b[z>>1]=0;b[A>>1]=0;b[B>>1]=0;b[C>>1]=0;b[D>>1]=0;_d(l,o,p,q,r,s,t,u,v);_d(m,w,x,y,z,A,B,C,D);if((c[l+52>>2]|0)==24){g[2432]=0.0;J=ca(k,j)|0;K=c[l+4>>2]|0;L=ca(K,J)|0;M=f+L|0;if((L|0)>0){N=0.0;L=f;while(1){O=+aa(+(+(e[L>>1]|0)*.29899999499320984+ +(e[L+2>>1]|0)*.5870000123977661+ +(e[L+4>>1]|0)*.11400000005960464+1.000000013351432e-10))+N;L=L+K|0;if(L>>>0>=M>>>0){P=O;break}else N=O}g[2432]=P;Q=P}else Q=0.0;g[2432]=+$(+(Q/+(J>>>0)));R=J;S=K}else{R=ca(k,j)|0;S=c[l+4>>2]|0}j=l+4|0;k=ca(R,S)|0;R=f+k|0;if((k|0)<=0){i=n;return 1}k=l+48|0;K=m+44|0;J=m+8|0;M=l+8|0;L=m+12|0;T=l+12|0;U=m+16|0;V=l+16|0;W=m+20|0;X=l+20|0;l=m+4|0;m=f;f=h;h=S;while(1){if(!h){Y=0;Z=0}else{S=0;_=0;ba=0;while(1){da=d[m+ba>>0]|0;ea=ar(ba|0,0,3)|0;fa=ar(da|0,0,ea|0)|0;ea=fa|S;fa=G|_;ba=ba+1|0;if(ba>>>0>=h>>>0){Y=ea;Z=fa;break}else{S=ea;_=fa}}}b[E>>1]=0;b[F>>1]=0;b[H>>1]=0;b[I>>1]=-1;_=b[s>>1]|0;if(!(_<<16>>16))ga=0;else{S=Zq(Y|0,Z|0,e[o>>1]|0|0)|0;ga=S&(_&65535)&65535}S=b[t>>1]|0;if(!(S<<16>>16))ha=0;else{ba=Zq(Y|0,Z|0,e[p>>1]|0|0)|0;ha=ba&(S&65535)&65535}ba=b[u>>1]|0;if(!(ba<<16>>16))ia=0;else{fa=Zq(Y|0,Z|0,e[q>>1]|0|0)|0;ia=fa&(ba&65535)&65535}fa=b[v>>1]|0;if(!(fa<<16>>16))ja=-1;else{ea=Zq(Y|0,Z|0,e[r>>1]|0|0)|0;ja=ea&(fa&65535)&65535}ea=c[k>>2]|0;da=c[K>>2]|0;do if((ea|0)==0&(da|0)==0){ka=b[A>>1]|0;do if(_<<16>>16!=0&ka<<16>>16!=0){la=c[J>>2]|0;ma=c[M>>2]|0;if(la>>>0<ma>>>0){if((ma&65535)<<16>>16==0|(la&65535)<<16>>16==0)na=0;else na=(ga&65535)>>>((ma&65535)-(la&65535)|0)&65535;b[E>>1]=na;oa=na;break}if(la>>>0<=ma>>>0){b[E>>1]=ga;oa=ga;break}pa=ma&65535;qa=la&65535;ra=ma&65535;if(!(pa<<16>>16==0|qa<<16>>16==0)){ma=la&65535;if((qa&65535)<(pa&65535)){sa=qa;ta=ma;ua=0}else{qa=ga&65535;la=ma;ma=0;while(1){va=(ma&65535)<<ra|qa;wa=la-ra|0;xa=wa&65535;ya=wa&65535;if((xa&65535)<(pa&65535)){za=va;Aa=xa;Ba=ya;break}else{la=ya;ma=va}}sa=Aa;ta=Ba;ua=za&65535}if(!(sa<<16>>16))Ca=ua;else Ca=((ua&65535)<<ta|(ga&65535)>>>(ra-ta|0))&65535}else Ca=0;b[E>>1]=Ca;oa=Ca}else oa=0;while(0);ma=b[B>>1]|0;do if(S<<16>>16!=0&ma<<16>>16!=0){la=c[L>>2]|0;pa=c[T>>2]|0;if(la>>>0<pa>>>0){if((pa&65535)<<16>>16==0|(la&65535)<<16>>16==0)Da=0;else Da=(ha&65535)>>>((pa&65535)-(la&65535)|0)&65535;b[F>>1]=Da;Ea=Da;break}if(la>>>0<=pa>>>0){b[F>>1]=ha;Ea=ha;break}qa=pa&65535;va=la&65535;ya=pa&65535;if(!(qa<<16>>16==0|va<<16>>16==0)){pa=la&65535;if((va&65535)<(qa&65535)){Fa=va;Ga=pa;Ha=0}else{va=ha&65535;la=pa;pa=0;while(1){xa=(pa&65535)<<ya|va;wa=la-ya|0;Ia=wa&65535;Ja=wa&65535;if((Ia&65535)<(qa&65535)){Ka=xa;La=Ia;Ma=Ja;break}else{la=Ja;pa=xa}}Fa=La;Ga=Ma;Ha=Ka&65535}if(!(Fa<<16>>16))Na=Ha;else Na=((Ha&65535)<<Ga|(ha&65535)>>>(ya-Ga|0))&65535}else Na=0;b[F>>1]=Na;Ea=Na}else Ea=0;while(0);pa=b[C>>1]|0;do if(ba<<16>>16!=0&pa<<16>>16!=0){la=c[U>>2]|0;qa=c[V>>2]|0;if(la>>>0<qa>>>0){if((qa&65535)<<16>>16==0|(la&65535)<<16>>16==0)Oa=0;else Oa=(ia&65535)>>>((qa&65535)-(la&65535)|0)&65535;b[H>>1]=Oa;Pa=Oa;break}if(la>>>0<=qa>>>0){b[H>>1]=ia;Pa=ia;break}va=qa&65535;ra=la&65535;xa=qa&65535;if(!(va<<16>>16==0|ra<<16>>16==0)){qa=la&65535;if((ra&65535)<(va&65535)){Qa=ra;Ra=qa;Sa=0}else{ra=ia&65535;la=qa;qa=0;while(1){Ja=(qa&65535)<<xa|ra;Ia=la-xa|0;wa=Ia&65535;Ta=Ia&65535;if((wa&65535)<(va&65535)){Ua=Ja;Va=wa;Wa=Ta;break}else{la=Ta;qa=Ja}}Qa=Va;Ra=Wa;Sa=Ua&65535}if(!(Qa<<16>>16))Xa=Sa;else Xa=((Sa&65535)<<Ra|(ia&65535)>>>(xa-Ra|0))&65535}else Xa=0;b[H>>1]=Xa;Pa=Xa}else Pa=0;while(0);qa=b[D>>1]|0;if(fa<<16>>16!=0&qa<<16>>16!=0){la=c[W>>2]|0;va=c[X>>2]|0;if(la>>>0<va>>>0){if((va&65535)<<16>>16==0|(la&65535)<<16>>16==0)Ya=0;else Ya=(ja&65535)>>>((va&65535)-(la&65535)|0)&65535;b[I>>1]=Ya;Za=oa;_a=ka;$a=Ea;ab=ma;bb=Pa;cb=pa;db=Ya;eb=qa;break}if(la>>>0<=va>>>0){b[I>>1]=ja;Za=oa;_a=ka;$a=Ea;ab=ma;bb=Pa;cb=pa;db=ja;eb=qa;break}ra=va&65535;ya=la&65535;Ja=va&65535;if(!(ra<<16>>16==0|ya<<16>>16==0)){va=la&65535;if((ya&65535)<(ra&65535)){fb=ya;gb=va;hb=0}else{ya=ja&65535;la=va;va=0;while(1){Ta=(va&65535)<<Ja|ya;wa=la-Ja|0;Ia=wa&65535;ib=wa&65535;if((Ia&65535)<(ra&65535)){jb=Ta;kb=Ia;lb=ib;break}else{la=ib;va=Ta}}fb=kb;gb=lb;hb=jb&65535}if(!(fb<<16>>16))mb=hb;else mb=((hb&65535)<<gb|(ja&65535)>>>(Ja-gb|0))&65535}else mb=0;b[I>>1]=mb;Za=oa;_a=ka;$a=Ea;ab=ma;bb=Pa;cb=pa;db=mb;eb=qa}else{Za=oa;_a=ka;$a=Ea;ab=ma;bb=Pa;cb=pa;db=-1;eb=qa}}else{$d(ea,da,ga,ha,ia,ja,c[M>>2]&65535,c[T>>2]&65535,c[V>>2]&65535,c[X>>2]&65535,E,F,H,I,c[J>>2]&65535,c[L>>2]&65535,c[U>>2]&65535,c[W>>2]&65535);Za=b[E>>1]|0;_a=b[A>>1]|0;$a=b[F>>1]|0;ab=b[B>>1]|0;bb=b[H>>1]|0;cb=b[C>>1]|0;db=b[I>>1]|0;eb=b[D>>1]|0}while(0);da=(ab&$a&65535)<<(e[x>>1]|0)|(_a&Za&65535)<<(e[w>>1]|0)|(cb&bb&65535)<<(e[y>>1]|0)|(eb&db&65535)<<(e[z>>1]|0);if(!(c[l>>2]|0))nb=0;else{ea=0;do{a[f+ea>>0]=da>>>(ea<<3);ea=ea+1|0;fa=c[l>>2]|0}while(ea>>>0<fa>>>0);nb=fa}h=c[j>>2]|0;m=m+h|0;if(m>>>0>=R>>>0)break;else f=f+nb|0}i=n;return 1}function Yd(f,h,j,k,l,m){f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,ba=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0;n=i;i=i+48|0;o=n+38|0;p=n+36|0;q=n+34|0;r=n+32|0;s=n+30|0;t=n+28|0;u=n+26|0;v=n+24|0;w=n+22|0;x=n+20|0;y=n+18|0;z=n+16|0;A=n+14|0;B=n+12|0;C=n+10|0;D=n+8|0;E=n+6|0;F=n+4|0;H=n+2|0;I=n;b[o>>1]=0;b[p>>1]=0;b[q>>1]=0;b[r>>1]=0;b[s>>1]=0;b[t>>1]=0;b[u>>1]=0;b[v>>1]=0;b[w>>1]=0;b[x>>1]=0;b[y>>1]=0;b[z>>1]=0;b[A>>1]=0;b[B>>1]=0;b[C>>1]=0;b[D>>1]=0;_d(l,o,p,q,r,s,t,u,v);_d(m,w,x,y,z,A,B,C,D);if((c[l+52>>2]|0)==24){g[2432]=0.0;J=ca(k,j)|0;K=c[l+4>>2]|0;L=ca(K,J)|0;M=f+L|0;if((L|0)>0){N=0.0;L=f;while(1){O=+aa(+(+(e[L>>1]|0)*.29899999499320984+ +(e[L+2>>1]|0)*.5870000123977661+ +(e[L+4>>1]|0)*.11400000005960464+1.000000013351432e-10))+N;L=L+K|0;if(L>>>0>=M>>>0){P=O;break}else N=O}g[2432]=P;Q=P}else Q=0.0;g[2432]=+$(+(Q/+(J>>>0)));R=J;S=K}else{R=ca(k,j)|0;S=c[l+4>>2]|0}j=l+4|0;k=ca(R,S)|0;R=f+k|0;if((k|0)<=0){i=n;return 1}k=l+48|0;K=m+44|0;J=m+8|0;M=l+8|0;L=m+12|0;T=l+12|0;U=m+16|0;V=l+16|0;W=m+20|0;X=l+20|0;l=m+4|0;m=f;f=h;h=S;while(1){if(!h){Y=0;Z=0}else{S=0;_=0;ba=0;while(1){da=d[m+ba>>0]|0;ea=ar(ba|0,0,3)|0;fa=ar(da|0,0,ea|0)|0;ea=fa|S;fa=G|_;ba=ba+1|0;if(ba>>>0>=h>>>0){Y=ea;Z=fa;break}else{S=ea;_=fa}}}b[E>>1]=0;b[F>>1]=0;b[H>>1]=0;b[I>>1]=-1;_=b[s>>1]|0;if(!(_<<16>>16))ga=0;else{S=Zq(Y|0,Z|0,e[o>>1]|0|0)|0;ga=S&(_&65535)&65535}S=b[t>>1]|0;if(!(S<<16>>16))ha=0;else{ba=Zq(Y|0,Z|0,e[p>>1]|0|0)|0;ha=ba&(S&65535)&65535}ba=b[u>>1]|0;if(!(ba<<16>>16))ia=0;else{fa=Zq(Y|0,Z|0,e[q>>1]|0|0)|0;ia=fa&(ba&65535)&65535}fa=b[v>>1]|0;if(!(fa<<16>>16))ja=-1;else{ea=Zq(Y|0,Z|0,e[r>>1]|0|0)|0;ja=ea&(fa&65535)&65535}ea=c[k>>2]|0;da=c[K>>2]|0;do if((ea|0)==0&(da|0)==0){ka=b[A>>1]|0;do if(_<<16>>16!=0&ka<<16>>16!=0){la=c[J>>2]|0;ma=c[M>>2]|0;if(la>>>0<ma>>>0){if((ma&65535)<<16>>16==0|(la&65535)<<16>>16==0)na=0;else na=(ga&65535)>>>((ma&65535)-(la&65535)|0)&65535;b[E>>1]=na;oa=na;break}if(la>>>0<=ma>>>0){b[E>>1]=ga;oa=ga;break}pa=ma&65535;qa=la&65535;ra=ma&65535;if(!(pa<<16>>16==0|qa<<16>>16==0)){ma=la&65535;if((qa&65535)<(pa&65535)){sa=qa;ta=ma;ua=0}else{qa=ga&65535;la=ma;ma=0;while(1){va=(ma&65535)<<ra|qa;wa=la-ra|0;xa=wa&65535;ya=wa&65535;if((xa&65535)<(pa&65535)){za=va;Aa=xa;Ba=ya;break}else{la=ya;ma=va}}sa=Aa;ta=Ba;ua=za&65535}if(!(sa<<16>>16))Ca=ua;else Ca=((ua&65535)<<ta|(ga&65535)>>>(ra-ta|0))&65535}else Ca=0;b[E>>1]=Ca;oa=Ca}else oa=0;while(0);ma=b[B>>1]|0;do if(S<<16>>16!=0&ma<<16>>16!=0){la=c[L>>2]|0;pa=c[T>>2]|0;if(la>>>0<pa>>>0){if((pa&65535)<<16>>16==0|(la&65535)<<16>>16==0)Da=0;else Da=(ha&65535)>>>((pa&65535)-(la&65535)|0)&65535;b[F>>1]=Da;Ea=Da;break}if(la>>>0<=pa>>>0){b[F>>1]=ha;Ea=ha;break}qa=pa&65535;va=la&65535;ya=pa&65535;if(!(qa<<16>>16==0|va<<16>>16==0)){pa=la&65535;if((va&65535)<(qa&65535)){Fa=va;Ga=pa;Ha=0}else{va=ha&65535;la=pa;pa=0;while(1){xa=(pa&65535)<<ya|va;wa=la-ya|0;Ia=wa&65535;Ja=wa&65535;if((Ia&65535)<(qa&65535)){Ka=xa;La=Ia;Ma=Ja;break}else{la=Ja;pa=xa}}Fa=La;Ga=Ma;Ha=Ka&65535}if(!(Fa<<16>>16))Na=Ha;else Na=((Ha&65535)<<Ga|(ha&65535)>>>(ya-Ga|0))&65535}else Na=0;b[F>>1]=Na;Ea=Na}else Ea=0;while(0);pa=b[C>>1]|0;do if(ba<<16>>16!=0&pa<<16>>16!=0){la=c[U>>2]|0;qa=c[V>>2]|0;if(la>>>0<qa>>>0){if((qa&65535)<<16>>16==0|(la&65535)<<16>>16==0)Oa=0;else Oa=(ia&65535)>>>((qa&65535)-(la&65535)|0)&65535;b[H>>1]=Oa;Pa=Oa;break}if(la>>>0<=qa>>>0){b[H>>1]=ia;Pa=ia;break}va=qa&65535;ra=la&65535;xa=qa&65535;if(!(va<<16>>16==0|ra<<16>>16==0)){qa=la&65535;if((ra&65535)<(va&65535)){Qa=ra;Ra=qa;Sa=0}else{ra=ia&65535;la=qa;qa=0;while(1){Ja=(qa&65535)<<xa|ra;Ia=la-xa|0;wa=Ia&65535;Ta=Ia&65535;if((wa&65535)<(va&65535)){Ua=Ja;Va=wa;Wa=Ta;break}else{la=Ta;qa=Ja}}Qa=Va;Ra=Wa;Sa=Ua&65535}if(!(Qa<<16>>16))Xa=Sa;else Xa=((Sa&65535)<<Ra|(ia&65535)>>>(xa-Ra|0))&65535}else Xa=0;b[H>>1]=Xa;Pa=Xa}else Pa=0;while(0);qa=b[D>>1]|0;if(fa<<16>>16!=0&qa<<16>>16!=0){la=c[W>>2]|0;va=c[X>>2]|0;if(la>>>0<va>>>0){if((va&65535)<<16>>16==0|(la&65535)<<16>>16==0)Ya=0;else Ya=(ja&65535)>>>((va&65535)-(la&65535)|0)&65535;b[I>>1]=Ya;Za=oa;_a=ka;$a=Ea;ab=ma;bb=Pa;cb=pa;db=Ya;eb=qa;break}if(la>>>0<=va>>>0){b[I>>1]=ja;Za=oa;_a=ka;$a=Ea;ab=ma;bb=Pa;cb=pa;db=ja;eb=qa;break}ra=va&65535;ya=la&65535;Ja=va&65535;if(!(ra<<16>>16==0|ya<<16>>16==0)){va=la&65535;if((ya&65535)<(ra&65535)){fb=ya;gb=va;hb=0}else{ya=ja&65535;la=va;va=0;while(1){Ta=(va&65535)<<Ja|ya;wa=la-Ja|0;Ia=wa&65535;ib=wa&65535;if((Ia&65535)<(ra&65535)){jb=Ta;kb=Ia;lb=ib;break}else{la=ib;va=Ta}}fb=kb;gb=lb;hb=jb&65535}if(!(fb<<16>>16))mb=hb;else mb=((hb&65535)<<gb|(ja&65535)>>>(Ja-gb|0))&65535}else mb=0;b[I>>1]=mb;Za=oa;_a=ka;$a=Ea;ab=ma;bb=Pa;cb=pa;db=mb;eb=qa}else{Za=oa;_a=ka;$a=Ea;ab=ma;bb=Pa;cb=pa;db=-1;eb=qa}}else{$d(ea,da,ga,ha,ia,ja,c[M>>2]&65535,c[T>>2]&65535,c[V>>2]&65535,c[X>>2]&65535,E,F,H,I,c[J>>2]&65535,c[L>>2]&65535,c[U>>2]&65535,c[W>>2]&65535);Za=b[E>>1]|0;_a=b[A>>1]|0;$a=b[F>>1]|0;ab=b[B>>1]|0;bb=b[H>>1]|0;cb=b[C>>1]|0;db=b[I>>1]|0;eb=b[D>>1]|0}while(0);da=ar(_a&Za&65535|0,0,e[w>>1]|0|0)|0;ea=G;fa=ar(ab&$a&65535|0,0,e[x>>1]|0|0)|0;ba=G|ea;ea=ar(cb&bb&65535|0,0,e[y>>1]|0|0)|0;S=ba|G;ba=ar(eb&db&65535|0,0,e[z>>1]|0|0)|0;_=fa|da|ea|ba;ba=S|G;if(!(c[l>>2]|0))nb=0;else{S=0;do{ea=ar(S|0,0,3)|0;da=Zq(_|0,ba|0,ea|0)|0;a[f+S>>0]=da;S=S+1|0;da=c[l>>2]|0}while(S>>>0<da>>>0);nb=da}h=c[j>>2]|0;m=m+h|0;if(m>>>0>=R>>>0)break;else f=f+nb|0}i=n;return 1}function Zd(a){a=a|0;fb(a|0)|0;sp()}function _d(a,d,f,g,h,i,j,k,l){a=a|0;d=d|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;m=a+24|0;n=c[m>>2]|0;o=c[a+28>>2]|0;if((n|0)>-1){if((o|0)>-1&(o|0)<(n|0)){b[d>>1]=(e[d>>1]|0)+(c[a+12>>2]|0);p=c[m>>2]|0}else p=n;q=c[a+32>>2]|0;if((q|0)>-1&(q|0)<(p|0)){b[d>>1]=(e[d>>1]|0)+(c[a+16>>2]|0);r=c[m>>2]|0}else r=p;p=c[a+36>>2]|0;if((p|0)>-1&(p|0)<(r|0))b[d>>1]=(e[d>>1]|0)+(c[a+20>>2]|0);b[i>>1]=65535>>>(16-(c[a+8>>2]|0)&65535);s=r}else s=n;n=a+28|0;if((o|0)>-1){if((s|0)>-1&(s|0)<(o|0))b[f>>1]=(e[f>>1]|0)+(c[a+8>>2]|0);r=c[a+32>>2]|0;i=c[n>>2]|0;if((r|0)>-1&(r|0)<(i|0)){b[f>>1]=(e[f>>1]|0)+(c[a+16>>2]|0);t=c[n>>2]|0}else t=i;i=c[a+36>>2]|0;if((i|0)>-1&(i|0)<(t|0))b[f>>1]=(e[f>>1]|0)+(c[a+20>>2]|0);b[j>>1]=65535>>>(16-(c[a+12>>2]|0)&65535);u=r;v=t}else{u=c[a+32>>2]|0;v=o}o=a+32|0;if((u|0)>-1){if((s|0)>-1&(s|0)<(u|0))b[g>>1]=(e[g>>1]|0)+(c[a+8>>2]|0);t=c[o>>2]|0;if((v|0)>-1&(v|0)<(t|0)){b[g>>1]=(e[g>>1]|0)+(c[a+12>>2]|0);w=c[o>>2]|0}else w=t;t=c[a+36>>2]|0;if((t|0)>-1&(t|0)<(w|0))b[g>>1]=(e[g>>1]|0)+(c[a+20>>2]|0);b[k>>1]=65535>>>(16-(c[a+16>>2]|0)&65535);x=t;y=w}else{x=c[a+36>>2]|0;y=u}u=a+36|0;if((x|0)<=-1)return;if((s|0)>-1&(s|0)<(x|0))b[h>>1]=(e[h>>1]|0)+(c[a+8>>2]|0);x=c[u>>2]|0;if((v|0)>-1&(v|0)<(x|0)){b[h>>1]=(e[h>>1]|0)+(c[a+12>>2]|0);z=c[u>>2]|0}else z=x;if((y|0)>-1&(y|0)<(z|0))b[h>>1]=(e[h>>1]|0)+(c[a+16>>2]|0);b[l>>1]=65535>>>(16-(c[a+20>>2]|0)&65535);return}function $d(a,c,d,e,f,g,h,j,k,l,m,n,o,p,q,r,s,t){a=a|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;s=s|0;t=t|0;var u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0;u=i;i=i+16|0;v=u+6|0;w=u+4|0;x=u+2|0;y=u;do if(h<<16>>16!=0&(h&65535)<16){z=h&65535;A=d&65535;if((h&65535)<=16){B=16;C=0;while(1){D=(C&65535)<<z|A;E=B-z|0;F=E&65535;G=E&65535;if((F&65535)<(h&65535)){H=D;I=F;J=G;break}else{B=G;C=D}}if(!(I<<16>>16)){K=H&65535;break}else{L=J;M=H}}else{L=16;M=0}K=(A>>>(z-L|0)|(M&65535)<<L)&65535}else K=d;while(0);b[v>>1]=K;do if(j<<16>>16!=0&(j&65535)<16){K=j&65535;d=e&65535;if((j&65535)<=16){L=16;M=0;while(1){H=(M&65535)<<K|d;J=L-K|0;I=J&65535;h=J&65535;if((I&65535)<(j&65535)){N=H;O=I;P=h;break}else{L=h;M=H}}if(!(O<<16>>16)){Q=N&65535;break}else{R=P;S=N}}else{R=16;S=0}Q=(d>>>(K-R|0)|(S&65535)<<R)&65535}else Q=e;while(0);b[w>>1]=Q;do if(k<<16>>16!=0&(k&65535)<16){Q=k&65535;e=f&65535;if((k&65535)<=16){R=16;S=0;while(1){N=(S&65535)<<Q|e;P=R-Q|0;O=P&65535;j=P&65535;if((O&65535)<(k&65535)){T=N;U=O;V=j;break}else{R=j;S=N}}if(!(U<<16>>16)){W=T&65535;break}else{X=V;Y=T}}else{X=16;Y=0}W=(e>>>(Q-X|0)|(Y&65535)<<X)&65535}else W=f;while(0);b[x>>1]=W;do if(l<<16>>16!=0&(l&65535)<16){W=l&65535;f=g&65535;if((l&65535)<=16){X=16;Y=0;while(1){T=(Y&65535)<<W|f;V=X-W|0;U=V&65535;k=V&65535;if((U&65535)<(l&65535)){Z=T;_=U;$=k;break}else{X=k;Y=T}}if(!(_<<16>>16)){aa=Z&65535;break}else{ba=$;ca=Z}}else{ba=16;ca=0}aa=(f>>>(W-ba|0)|(ca&65535)<<ba)&65535}else aa=g;while(0);b[y>>1]=aa;if(a)qc[a&15](v,w,x,y);if(c)qc[c&15](v,w,x,y);c=b[v>>1]|0;if(q<<16>>16!=0&(q&65535)<16)da=(c&65535)>>>(16-(q&65535)|0)&65535;else da=c;b[m>>1]=da;da=b[w>>1]|0;if(r<<16>>16!=0&(r&65535)<16)ea=(da&65535)>>>(16-(r&65535)|0)&65535;else ea=da;b[n>>1]=ea;ea=b[x>>1]|0;if(s<<16>>16!=0&(s&65535)<16)fa=(ea&65535)>>>(16-(s&65535)|0)&65535;else fa=ea;b[o>>1]=fa;fa=b[y>>1]|0;if(!(t<<16>>16!=0&(t&65535)<16)){ga=fa;b[p>>1]=ga;i=u;return}ga=(fa&65535)>>>(16-(t&65535)|0)&65535;b[p>>1]=ga;i=u;return}function ae(){var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;if(!(a[13072]|0))return;a[13072]=0;c[3272]=0;b=c[3274]|0;d=c[b+4>>2]|0;e=c[b>>2]|0;if((d|0)==(e|0)){f=b;g=d;h=d}else{d=b;b=e;e=0;while(1){i=c[b+(e<<2)>>2]|0;if(!i)j=d;else{md(i);lp(i);j=c[3274]|0}e=e+1|0;i=c[j+4>>2]|0;k=c[j>>2]|0;if(e>>>0>=i-k>>2>>>0){f=j;g=k;h=i;break}else{d=j;b=k}}}if(f){if(g){if((h|0)!=(g|0))c[f+4>>2]=h+(~((h+-4-g|0)>>>2)<<2);lp(g)}lp(f)}c[3274]=0;return}function be(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+112|0;g=f+4|0;h=f;if(!(a[13072]|0)){a[13072]=1;j=jp(12)|0;c[j>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;c[3274]=j}else $c(13080,13200,0);ke(h)|0;je(c[h>>2]|0)|0;le(g);h=g+8|0;a[h>>0]=15;a[h+1>>0]=0;a[h+2>>0]=0;a[h+3>>0]=0;a[g+36>>0]=0;a[g+47>>0]=0;h=(me(b,d,e,g)|0)<<24>>24!=0;i=f;return h|0}function ce(){ae();return}function de(){Yc(13080);Hb(111,13080,n|0)|0;return}function ee(a,b,c){a=a|0;b=b|0;c=c|0;g[c>>2]=+g[a>>2]-+g[b>>2];g[c+4>>2]=+g[a+4>>2]-+g[b+4>>2];g[c+8>>2]=+g[a+8>>2]-+g[b+8>>2];return}function fe(a,b){a=a|0;b=+b;var c=0;g[a>>2]=+g[a>>2]*b;c=a+4|0;g[c>>2]=+g[c>>2]*b;c=a+8|0;g[c>>2]=+g[c>>2]*b;return}function ge(a,b){a=a|0;b=b|0;return +(+g[a>>2]*+g[b>>2]+ +g[a+4>>2]*+g[b+4>>2]+ +g[a+8>>2]*+g[b+8>>2])}function he(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0;d=+g[a>>2];e=+g[a+4>>2];f=+g[a+8>>2];h=+g[b>>2];i=+g[b+4>>2];j=+g[b+8>>2];k=(d*h+e*i+f*j)*2.0;g[c>>2]=d*k-h;g[c+4>>2]=e*k-i;g[c+8>>2]=f*k-j;return}function ie(a){a=a|0;var b=0.0,c=0.0,d=0.0,e=0.0,f=0.0,h=0.0,i=0;b=+g[a>>2];c=+R(+b);d=+g[a+4>>2];e=+R(+d);f=+g[a+8>>2];h=+R(+f);if(!(!(c>=e)|!(c>=h))){i=b>0.0?2:0;return i|0}if(!(e>=c)|!(e>=h)){i=f>0.0?3:1;return i|0}else{i=d>0.0?4:5;return i|0}return 0}function je(b){b=b|0;var d=0,e=0,f=0;if(!(a[13072]|0)){$c(13080,13232,0);d=0;return d|0}e=c[3274]|0;f=c[e>>2]|0;if((c[e+4>>2]|0)-f>>2>>>0>b>>>0?(e=c[f+(b<<2)>>2]|0,(e|0)!=0):0){if((c[3272]|0)==(e|0)){d=1;return d|0}c[3272]=e;d=1;return d|0}$c(13080,13256,0);d=0;return d|0}function ke(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d;if(!(a[13072]|0)){$c(13080,13232,0);f=0;i=d;return f|0}g=c[3274]|0;h=jp(20)|0;kd(h);c[e>>2]=h;j=g+4|0;k=c[j>>2]|0;if((k|0)==(c[g+8>>2]|0))pe(g,e);else{if(!k)l=0;else{c[k>>2]=h;l=c[j>>2]|0}c[j>>2]=l+4}l=c[3274]|0;c[b>>2]=((c[l+4>>2]|0)-(c[l>>2]|0)>>2)+-1;f=1;i=d;return f|0}function le(b){b=b|0;var c=0;a[b>>0]=7;a[b+1>>0]=0;a[b+2>>0]=0;a[b+3>>0]=0;c=b+4|0;a[c>>0]=3;a[c+1>>0]=0;a[c+2>>0]=0;a[c+3>>0]=0;c=b+8|0;a[c>>0]=0;a[c+1>>0]=0;a[c+2>>0]=0;a[c+3>>0]=0;c=b+12|0;a[c>>0]=0;a[c+1>>0]=0;a[c+2>>0]=0;a[c+3>>0]=0;c=b+16|0;a[c>>0]=0;a[c+1>>0]=0;a[c+2>>0]=0;a[c+3>>0]=0;c=b+20|0;g[k>>2]=1.0;a[c>>0]=a[k>>0];a[c+1>>0]=a[k+1>>0];a[c+2>>0]=a[k+2>>0];a[c+3>>0]=a[k+3>>0];c=b+24|0;g[k>>2]=1.0;a[c>>0]=a[k>>0];a[c+1>>0]=a[k+1>>0];a[c+2>>0]=a[k+2>>0];a[c+3>>0]=a[k+3>>0];c=b+28|0;g[k>>2]=1.0;a[c>>0]=a[k>>0];a[c+1>>0]=a[k+1>>0];a[c+2>>0]=a[k+2>>0];a[c+3>>0]=a[k+3>>0];c=b+32|0;g[k>>2]=1.0;a[c>>0]=a[k>>0];a[c+1>>0]=a[k+1>>0];a[c+2>>0]=a[k+2>>0];a[c+3>>0]=a[k+3>>0];a[b+36>>0]=1;c=b+37|0;a[c>>0]=1;a[c+1>>0]=0;a[c+2>>0]=0;a[c+3>>0]=0;c=b+41|0;a[c>>0]=0;a[c+1>>0]=0;a[c+2>>0]=0;a[c+3>>0]=0;a[b+47>>0]=0;c=b+48|0;a[c>>0]=0;a[c+1>>0]=0;a[c+2>>0]=0;a[c+3>>0]=0;c=b+52|0;a[c>>0]=2;a[c+1>>0]=0;a[c+2>>0]=0;a[c+3>>0]=0;c=b+56|0;a[c>>0]=0;a[c+1>>0]=0;a[c+2>>0]=0;a[c+3>>0]=0;c=b+60|0;a[c>>0]=0;a[c+1>>0]=0;a[c+2>>0]=0;a[c+3>>0]=0;c=b+64|0;a[c>>0]=0;a[c+1>>0]=0;a[c+2>>0]=0;a[c+3>>0]=0;a[b+68>>0]=1;c=b+69|0;a[c>>0]=0;a[c+1>>0]=16;a[c+2>>0]=0;a[c+3>>0]=0;c=b+73|0;a[c>>0]=0;a[c+1>>0]=16;a[c+2>>0]=0;a[c+3>>0]=0;a[b+45>>0]=1;a[b+46>>0]=1;a[b+77>>0]=0;c=b+78|0;g[k>>2]=2.0;a[c>>0]=a[k>>0];a[c+1>>0]=a[k+1>>0];a[c+2>>0]=a[k+2>>0];a[c+3>>0]=a[k+3>>0];a[b+82>>0]=0;c=b+83|0;a[c>>0]=1;a[c+1>>0]=0;a[c+2>>0]=0;a[c+3>>0]=0;c=b+87|0;a[c>>0]=1;a[c+1>>0]=0;a[c+2>>0]=0;a[c+3>>0]=0;c=b+91|0;a[c>>0]=3;a[c+1>>0]=0;a[c+2>>0]=0;a[c+3>>0]=0;a[b+95>>0]=0;c=b+96|0;g[k>>2]=2.0;a[c>>0]=a[k>>0];a[c+1>>0]=a[k+1>>0];a[c+2>>0]=a[k+2>>0];a[c+3>>0]=a[k+3>>0];c=b+100|0;a[c>>0]=0;a[c+1>>0]=0;a[c+2>>0]=0;a[c+3>>0]=0;a[b+104>>0]=1;return}function me(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=c[3272]|0;if(!f){$c(13080,13272,0);g=0;return g|0}else{g=rd(f,a,b,d,e)|0;return g|0}return 0}function ne(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=c[3272]|0;if(!e){$c(13080,13272,0);f=0;return f|0}else{f=wd(e,a,b,d)|0;return f|0}return 0}function oe(){var a=0,b=0;a=c[3272]|0;if(!a){b=0;return b|0}b=yd(a)|0;return b|0}function pe(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=a+4|0;e=c[a>>2]|0;f=((c[d>>2]|0)-e>>2)+1|0;if(f>>>0>1073741823)uk(a);g=a+8|0;h=e;i=(c[g>>2]|0)-h|0;if(i>>2>>>0<536870911){j=i>>1;i=j>>>0<f>>>0?f:j;j=(c[d>>2]|0)-h|0;f=j>>2;if(!i){k=0;l=0;m=f;n=j}else{o=i;p=f;q=j;r=6}}else{j=(c[d>>2]|0)-h|0;o=1073741823;p=j>>2;q=j;r=6}if((r|0)==6){k=o;l=jp(o<<2)|0;m=p;n=q}q=l+(m<<2)|0;if(q)c[q>>2]=c[b>>2];$q(l|0,e|0,n|0)|0;c[a>>2]=l;c[d>>2]=l+(m+1<<2);c[g>>2]=l+(k<<2);if(!e)return;lp(e);return}function qe(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;a=c[p>>2]|0;wm(14e3,a,14056);c[3322]=15244;c[3324]=15264;c[3323]=0;b=c[3808]|0;nf(13288+b|0,14e3);c[b+13360>>2]=0;c[b+13364>>2]=-1;b=c[q>>2]|0;xm(14104,b,14064|0);c[3344]=15324;c[3345]=15344;d=c[3828]|0;nf(13376+d|0,14104);e=d+72|0;c[13376+e>>2]=0;f=d+76|0;c[13376+f>>2]=-1;g=c[o>>2]|0;xm(14152,g,14072|0);c[3366]=15324;c[3367]=15344;nf(13464+d|0,14152);c[13464+e>>2]=0;c[13464+f>>2]=-1;h=c[(c[(c[3366]|0)+-12>>2]|0)+13488>>2]|0;c[3388]=15324;c[3389]=15344;nf(13552+d|0,h);c[13552+e>>2]=0;c[13552+f>>2]=-1;c[(c[(c[3322]|0)+-12>>2]|0)+13360>>2]=13376;f=(c[(c[3366]|0)+-12>>2]|0)+13468|0;c[f>>2]=c[f>>2]|8192;c[(c[(c[3366]|0)+-12>>2]|0)+13536>>2]=13376;ym(14200,a,14080|0);c[3410]=15284;c[3412]=15304;c[3411]=0;a=c[3818]|0;nf(13640+a|0,14200);c[a+13712>>2]=0;c[a+13716>>2]=-1;zm(14256,b,14088|0);c[3432]=15364;c[3433]=15384;b=c[3838]|0;nf(13728+b|0,14256);a=b+72|0;c[13728+a>>2]=0;f=b+76|0;c[13728+f>>2]=-1;zm(14304,g,14096|0);c[3454]=15364;c[3455]=15384;nf(13816+b|0,14304);c[13816+a>>2]=0;c[13816+f>>2]=-1;g=c[(c[(c[3454]|0)+-12>>2]|0)+13840>>2]|0;c[3476]=15364;c[3477]=15384;nf(13904+b|0,g);c[13904+a>>2]=0;c[13904+f>>2]=-1;c[(c[(c[3410]|0)+-12>>2]|0)+13712>>2]=13728;f=(c[(c[3454]|0)+-12>>2]|0)+13820|0;c[f>>2]=c[f>>2]|8192;c[(c[(c[3454]|0)+-12>>2]|0)+13888>>2]=13728;return}function re(a){a=a|0;Zf(13376)|0;Zf(13552)|0;dg(13728)|0;dg(13904)|0;return}function se(a){a=a|0;return}function te(a){a=a|0;var b=0;b=a+4|0;c[b>>2]=(c[b>>2]|0)+1;return}function ue(a){a=a|0;var b=0,d=0,e=0;b=a+4|0;d=c[b>>2]|0;c[b>>2]=d+-1;if(!d){cc[c[(c[a>>2]|0)+8>>2]&127](a);e=1}else e=0;return e|0}function ve(a,b){a=a|0;b=b|0;c[a>>2]=26272;Am(a+4|0,b);return}function we(b,d){b=b|0;d=d|0;var e=0;c[b>>2]=26296;if(!(a[d>>0]&1))e=d+1|0;else e=c[d+8>>2]|0;Am(b+4|0,e);return}function xe(a,b){a=a|0;b=b|0;c[a>>2]=26296;Am(a+4|0,b);return}function ye(a,b,d){a=a|0;b=b|0;d=d|0;c[a>>2]=d;c[a+4>>2]=b;return}function ze(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+16|0;f=e;hc[c[(c[a>>2]|0)+12>>2]&3](f,a,b);if((c[f+4>>2]|0)==(c[d+4>>2]|0))g=(c[f>>2]|0)==(c[d>>2]|0);else g=0;i=e;return g|0}function Ae(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if((c[b+4>>2]|0)==(a|0))e=(c[b>>2]|0)==(d|0);else e=0;return e|0}function Be(a,b,c){a=a|0;b=b|0;c=c|0;b=Sb(c|0)|0;Ke(a,b,_q(b|0)|0);return}function Ce(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+16|0;g=f;h=c[d>>2]|0;if(h){j=a[e>>0]|0;if(!(j&1))k=(j&255)>>>1;else k=c[e+4>>2]|0;if(!k)l=h;else{Ue(e,14864)|0;l=c[d>>2]|0}h=c[d+4>>2]|0;hc[c[(c[h>>2]|0)+24>>2]&3](g,h,l);l=a[g>>0]|0;if(!(l&1)){m=g+1|0;n=(l&255)>>>1}else{m=c[g+8>>2]|0;n=c[g+4>>2]|0}We(e,m,n)|0;Oe(g)};c[b+0>>2]=c[e+0>>2];c[b+4>>2]=c[e+4>>2];c[b+8>>2]=c[e+8>>2];c[e+0>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;i=f;return}function De(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+32|0;f=e+12|0;g=e;Ke(g,d,_q(d|0)|0);Ce(f,b,g);we(a,f);Oe(f);Oe(g);c[a>>2]=14880;g=b;b=c[g+4>>2]|0;f=a+8|0;c[f>>2]=c[g>>2];c[f+4>>2]=b;i=e;return}function Ee(a){a=a|0;yp(a);return}function Fe(a){a=a|0;yp(a);lp(a);return}function Ge(a){a=a|0;return}function He(a,b,d){a=a|0;b=b|0;d=d|0;Rb(15016)|0;if((c[a>>2]|0)==1)do Ba(15040,15016)|0;while((c[a>>2]|0)==1);if(!(c[a>>2]|0)){c[a>>2]=1;tb(15016)|0;cc[d&127](b);Rb(15016)|0;c[a>>2]=-1;tb(15016)|0;Lb(15040)|0}else tb(15016)|0;return}function Ie(a){a=a|0;a=Ia(8)|0;ve(a,15088);c[a>>2]=26352;Xb(a|0,26392,97)}function Je(b,d){b=b|0;d=d|0;if(!(a[d>>0]&1)){c[b+0>>2]=c[d+0>>2];c[b+4>>2]=c[d+4>>2];c[b+8>>2]=c[d+8>>2]}else Ke(b,c[d+8>>2]|0,c[d+4>>2]|0);return}function Ke(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if(e>>>0>4294967279)Ie(b);if(e>>>0<11){a[b>>0]=e<<1;f=b+1|0}else{g=e+16&-16;h=jp(g)|0;c[b+8>>2]=h;c[b>>2]=g|1;c[b+4>>2]=e;f=h}$q(f|0,d|0,e|0)|0;a[f+e>>0]=0;return}function Le(a,b){a=a|0;b=b|0;Je(a,b);return}function Me(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if(d>>>0>4294967279)Ie(b);if(d>>>0<11){a[b>>0]=d<<1;f=b+1|0}else{g=d+16&-16;h=jp(g)|0;c[b+8>>2]=h;c[b>>2]=g|1;c[b+4>>2]=d;f=h}cr(f|0,e|0,d|0)|0;a[f+d>>0]=0;return}function Ne(b){b=b|0;if(a[b>>0]&1)lp(c[b+8>>2]|0);return}function Oe(a){a=a|0;Ne(a);return}function Pe(a,b){a=a|0;b=b|0;return Qe(a,b,_q(b|0)|0)|0}function Qe(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=a[b>>0]|0;if(!(f&1)){g=10;h=f}else{f=c[b>>2]|0;g=(f&-2)+-1|0;h=f&255}f=(h&1)==0;do if(g>>>0>=e>>>0){if(f)i=b+1|0;else i=c[b+8>>2]|0;br(i|0,d|0,e|0)|0;a[i+e>>0]=0;if(!(a[b>>0]&1)){a[b>>0]=e<<1;break}else{c[b+4>>2]=e;break}}else{if(f)j=(h&255)>>>1;else j=c[b+4>>2]|0;Xe(b,g,e-g|0,j,0,j,e,d)}while(0);return b|0}function Re(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=a[b>>0]|0;g=(f&1)==0;if(g)h=(f&255)>>>1;else h=c[b+4>>2]|0;do if(h>>>0>=d>>>0)if(g){a[b+d+1>>0]=0;a[b>>0]=d<<1;break}else{a[(c[b+8>>2]|0)+d>>0]=0;c[b+4>>2]=d;break}else Se(b,d-h|0,e)|0;while(0);return}function Se(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;if(d){f=a[b>>0]|0;if(!(f&1)){g=10;h=f}else{f=c[b>>2]|0;g=(f&-2)+-1|0;h=f&255}if(!(h&1))i=(h&255)>>>1;else i=c[b+4>>2]|0;if((g-i|0)>>>0<d>>>0){Ye(b,g,d-g+i|0,i,i,0,0);j=a[b>>0]|0}else j=h;if(!(j&1))k=b+1|0;else k=c[b+8>>2]|0;cr(k+i|0,e|0,d|0)|0;e=i+d|0;if(!(a[b>>0]&1))a[b>>0]=e<<1;else c[b+4>>2]=e;a[k+e>>0]=0}return b|0}function Te(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;if(d>>>0>4294967279)Ie(b);e=a[b>>0]|0;if(!(e&1)){f=10;g=e}else{e=c[b>>2]|0;f=(e&-2)+-1|0;g=e&255}if(!(g&1))h=(g&255)>>>1;else h=c[b+4>>2]|0;e=h>>>0>d>>>0?h:d;if(e>>>0<11)i=10;else i=(e+16&-16)+-1|0;do if((i|0)!=(f|0)){do if((i|0)!=10){e=i+1|0;if(i>>>0>f>>>0)j=jp(e)|0;else j=jp(e)|0;if(!(g&1)){k=j;l=1;m=b+1|0;n=0;break}else{k=j;l=1;m=c[b+8>>2]|0;n=1;break}}else{k=b+1|0;l=0;m=c[b+8>>2]|0;n=1}while(0);if(!(g&1))o=(g&255)>>>1;else o=c[b+4>>2]|0;$q(k|0,m|0,o+1|0)|0;if(n)lp(m);if(l){c[b>>2]=i+1|1;c[b+4>>2]=h;c[b+8>>2]=k;break}else{a[b>>0]=h<<1;break}}while(0);return}function Ue(a,b){a=a|0;b=b|0;return We(a,b,_q(b|0)|0)|0}function Ve(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=a[b>>0]|0;f=(e&1)!=0;if(f){g=(c[b>>2]&-2)+-1|0;h=c[b+4>>2]|0}else{g=10;h=(e&255)>>>1}if((h|0)==(g|0)){Ye(b,g,1,g,g,0,0);if(!(a[b>>0]&1))i=7;else i=8}else if(f)i=8;else i=7;if((i|0)==7){a[b>>0]=(h<<1)+2;j=b+1|0;k=h+1|0}else if((i|0)==8){i=c[b+8>>2]|0;f=h+1|0;c[b+4>>2]=f;j=i;k=f}a[j+h>>0]=d;a[j+k>>0]=0;return}function We(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=a[b>>0]|0;if(!(f&1)){g=10;h=f}else{f=c[b>>2]|0;g=(f&-2)+-1|0;h=f&255}if(!(h&1))i=(h&255)>>>1;else i=c[b+4>>2]|0;if((g-i|0)>>>0>=e>>>0){if(e){if(!(h&1))j=b+1|0;else j=c[b+8>>2]|0;$q(j+i|0,d|0,e|0)|0;h=i+e|0;if(!(a[b>>0]&1))a[b>>0]=h<<1;else c[b+4>>2]=h;a[j+h>>0]=0}}else Xe(b,g,e-g+i|0,i,i,0,e,d);return b|0}function Xe(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0;if((-18-d|0)>>>0<e>>>0)Ie(b);if(!(a[b>>0]&1))k=b+1|0;else k=c[b+8>>2]|0;if(d>>>0<2147483623){l=e+d|0;e=d<<1;m=l>>>0<e>>>0?e:l;if(m>>>0<11)n=11;else n=m+16&-16}else n=-17;m=jp(n)|0;if(g)$q(m|0,k|0,g|0)|0;if(i)$q(m+g|0,j|0,i|0)|0;j=f-h|0;if((j|0)!=(g|0))$q(m+(i+g)|0,k+(h+g)|0,j-g|0)|0;if((d|0)!=10)lp(k);c[b+8>>2]=m;c[b>>2]=n|1;n=j+i|0;c[b+4>>2]=n;a[m+n>>0]=0;return}function Ye(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0;if((-17-d|0)>>>0<e>>>0)Ie(b);if(!(a[b>>0]&1))j=b+1|0;else j=c[b+8>>2]|0;if(d>>>0<2147483623){k=e+d|0;e=d<<1;l=k>>>0<e>>>0?e:k;if(l>>>0<11)m=11;else m=l+16&-16}else m=-17;l=jp(m)|0;if(g)$q(l|0,j|0,g|0)|0;k=f-h|0;if((k|0)!=(g|0))$q(l+(i+g)|0,j+(h+g)|0,k-g|0)|0;if((d|0)!=10)lp(j);c[b+8>>2]=l;c[b>>2]=m|1;return}function Ze(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if(e>>>0>1073741807)Ie(b);if(e>>>0<2){a[b>>0]=e<<1;f=b+4|0}else{g=e+4&-4;h=jp(g<<2)|0;c[b+8>>2]=h;c[b>>2]=g|1;c[b+4>>2]=e;f=h}dp(f,d,e)|0;c[f+(e<<2)>>2]=0;return}function _e(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if(d>>>0>1073741807)Ie(b);if(d>>>0<2){a[b>>0]=d<<1;f=b+4|0}else{g=d+4&-4;h=jp(g<<2)|0;c[b+8>>2]=h;c[b>>2]=g|1;c[b+4>>2]=d;f=h}fp(f,e,d)|0;c[f+(d<<2)>>2]=0;return}function $e(b){b=b|0;if(a[b>>0]&1)lp(c[b+8>>2]|0);return}function af(a){a=a|0;$e(a);return}function bf(a,b){a=a|0;b=b|0;return cf(a,b,cp(b)|0)|0}function cf(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=a[b>>0]|0;if(!(f&1)){g=1;h=f}else{f=c[b>>2]|0;g=(f&-2)+-1|0;h=f&255}f=(h&1)==0;do if(g>>>0>=e>>>0){if(f)i=b+4|0;else i=c[b+8>>2]|0;ep(i,d,e)|0;c[i+(e<<2)>>2]=0;if(!(a[b>>0]&1)){a[b>>0]=e<<1;break}else{c[b+4>>2]=e;break}}else{if(f)j=(h&255)>>>1;else j=c[b+4>>2]|0;ff(b,g,e-g|0,j,0,j,e,d)}while(0);return b|0}function df(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;if(d>>>0>1073741807)Ie(b);e=a[b>>0]|0;if(!(e&1)){f=1;g=e}else{e=c[b>>2]|0;f=(e&-2)+-1|0;g=e&255}if(!(g&1))h=(g&255)>>>1;else h=c[b+4>>2]|0;e=h>>>0>d>>>0?h:d;if(e>>>0<2)i=1;else i=(e+4&-4)+-1|0;do if((i|0)!=(f|0)){do if((i|0)!=1){e=(i<<2)+4|0;if(i>>>0>f>>>0)j=jp(e)|0;else j=jp(e)|0;if(!(g&1)){k=j;l=1;m=b+4|0;n=0;break}else{k=j;l=1;m=c[b+8>>2]|0;n=1;break}}else{k=b+4|0;l=0;m=c[b+8>>2]|0;n=1}while(0);if(!(g&1))o=(g&255)>>>1;else o=c[b+4>>2]|0;dp(k,m,o+1|0)|0;if(n)lp(m);if(l){c[b>>2]=i+1|1;c[b+4>>2]=h;c[b+8>>2]=k;break}else{a[b>>0]=h<<1;break}}while(0);return}function ef(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=a[b>>0]|0;f=(e&1)!=0;if(f){g=(c[b>>2]&-2)+-1|0;h=c[b+4>>2]|0}else{g=1;h=(e&255)>>>1}if((h|0)==(g|0)){gf(b,g,1,g,g,0,0);if(!(a[b>>0]&1))i=7;else i=8}else if(f)i=8;else i=7;if((i|0)==7){a[b>>0]=(h<<1)+2;j=b+4|0;k=h+1|0}else if((i|0)==8){i=c[b+8>>2]|0;f=h+1|0;c[b+4>>2]=f;j=i;k=f}c[j+(h<<2)>>2]=d;c[j+(k<<2)>>2]=0;return}function ff(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0;if((1073741806-d|0)>>>0<e>>>0)Ie(b);if(!(a[b>>0]&1))k=b+4|0;else k=c[b+8>>2]|0;if(d>>>0<536870887){l=e+d|0;e=d<<1;m=l>>>0<e>>>0?e:l;if(m>>>0<2)n=2;else n=m+4&-4}else n=1073741807;m=jp(n<<2)|0;if(g)dp(m,k,g)|0;if(i)dp(m+(g<<2)|0,j,i)|0;j=f-h|0;if((j|0)!=(g|0))dp(m+(i+g<<2)|0,k+(h+g<<2)|0,j-g|0)|0;if((d|0)!=1)lp(k);c[b+8>>2]=m;c[b>>2]=n|1;n=j+i|0;c[b+4>>2]=n;c[m+(n<<2)>>2]=0;return}function gf(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0;if((1073741807-d|0)>>>0<e>>>0)Ie(b);if(!(a[b>>0]&1))j=b+4|0;else j=c[b+8>>2]|0;if(d>>>0<536870887){k=e+d|0;e=d<<1;l=k>>>0<e>>>0?e:k;if(l>>>0<2)m=2;else m=l+4&-4}else m=1073741807;l=jp(m<<2)|0;if(g)dp(l,j,g)|0;k=f-h|0;if((k|0)!=(g|0))dp(l+(i+g<<2)|0,j+(h+g<<2)|0,k-g|0)|0;if((d|0)!=1)lp(j);c[b+8>>2]=l;c[b>>2]=m|1;return}function hf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d;f=(c[a+24>>2]|0)==0;c[a+16>>2]=f&1|b;if(!((f&1|b)&c[a+20>>2])){i=d;return}else{d=Ia(16)|0;sg()|0;a=e;c[a>>2]=1;c[a+4>>2]=15448;tg(d,15504,e);Xb(d|0,15552,30)}}function jf(a){a=a|0;c[a>>2]=15496;lf(a,0);Gk(a+28|0);lq(c[a+32>>2]|0);lq(c[a+36>>2]|0);lq(c[a+48>>2]|0);lq(c[a+60>>2]|0);return}function kf(a){a=a|0;jf(a);return}function lf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=c[a+40>>2]|0;if(d){e=a+32|0;f=a+36|0;g=d;do{g=g+-1|0;hc[c[(c[e>>2]|0)+(g<<2)>>2]&3](b,a,c[(c[f>>2]|0)+(g<<2)>>2]|0)}while((g|0)!=0)}return}function mf(a,b){a=a|0;b=b|0;Fk(a,b+28|0);return}function nf(a,b){a=a|0;b=b|0;var d=0;c[a+24>>2]=b;c[a+16>>2]=(b|0)==0&1;c[a+20>>2]=0;c[a+4>>2]=4098;c[a+12>>2]=0;c[a+8>>2]=6;b=a+28|0;d=a+32|0;a=d+40|0;do{c[d>>2]=0;d=d+4|0}while((d|0)<(a|0));Ek(b);return}function of(a){a=a|0;jf(a);return}function pf(a){a=a|0;c[a>>2]=15112;Gk(a+4|0);return}function qf(a){a=a|0;c[a>>2]=15112;Gk(a+4|0);return}function rf(a){a=a|0;c[a>>2]=15112;Gk(a+4|0);lp(a);return}function sf(a){a=a|0;var b=0;c[a>>2]=15112;Ek(a+4|0);b=a+8|0;c[b+0>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;c[b+20>>2]=0;return}function tf(a,b){a=a|0;b=b|0;return}function uf(a,b,c){a=a|0;b=b|0;c=c|0;return a|0}function vf(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;g=a;c[g>>2]=0;c[g+4>>2]=0;g=a+8|0;c[g>>2]=-1;c[g+4>>2]=-1;return}function wf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=a;c[e>>2]=0;c[e+4>>2]=0;e=a+8|0;c[e>>2]=-1;c[e+4>>2]=-1;return}function xf(a){a=a|0;return 0}function yf(a){a=a|0;return 0}function zf(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;a:do if((e|0)>0){f=b+12|0;g=b+16|0;h=d;i=0;while(1){j=c[f>>2]|0;if(j>>>0<(c[g>>2]|0)>>>0){c[f>>2]=j+1;k=a[j>>0]|0}else{j=fc[c[(c[b>>2]|0)+40>>2]&127](b)|0;if((j|0)==-1){l=i;break a}k=j&255}a[h>>0]=k;j=i+1|0;if((j|0)<(e|0)){h=h+1|0;i=j}else{l=j;break}}}else l=0;while(0);return l|0}function Af(a){a=a|0;return -1}function Bf(a){a=a|0;var b=0,e=0;if((fc[c[(c[a>>2]|0)+36>>2]&127](a)|0)==-1)b=-1;else{e=a+12|0;a=c[e>>2]|0;c[e>>2]=a+1;b=d[a>>0]|0}return b|0}function Cf(a,b){a=a|0;b=b|0;return -1}function Df(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0;a:do if((f|0)>0){g=b+24|0;h=b+28|0;i=e;j=0;while(1){k=c[g>>2]|0;if(k>>>0>=(c[h>>2]|0)>>>0){if((oc[c[(c[b>>2]|0)+52>>2]&15](b,d[i>>0]|0)|0)==-1){l=j;break a}}else{m=a[i>>0]|0;c[g>>2]=k+1;a[k>>0]=m}m=j+1|0;if((m|0)<(f|0)){i=i+1|0;j=m}else{l=m;break}}}else l=0;while(0);return l|0}function Ef(a,b){a=a|0;b=b|0;return -1}function Ff(a){a=a|0;c[a>>2]=15176;Gk(a+4|0);return}function Gf(a){a=a|0;c[a>>2]=15176;Gk(a+4|0);return}function Hf(a){a=a|0;c[a>>2]=15176;Gk(a+4|0);lp(a);return}function If(a){a=a|0;var b=0;c[a>>2]=15176;Ek(a+4|0);b=a+8|0;c[b+0>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;c[b+20>>2]=0;return}function Jf(a,b){a=a|0;b=b|0;return}function Kf(a,b,c){a=a|0;b=b|0;c=c|0;return a|0}function Lf(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;g=a;c[g>>2]=0;c[g+4>>2]=0;g=a+8|0;c[g>>2]=-1;c[g+4>>2]=-1;return}function Mf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=a;c[e>>2]=0;c[e+4>>2]=0;e=a+8|0;c[e>>2]=-1;c[e+4>>2]=-1;return}function Nf(a){a=a|0;return 0}function Of(a){a=a|0;return 0}function Pf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;a:do if((d|0)>0){e=a+12|0;f=a+16|0;g=b;h=0;while(1){i=c[e>>2]|0;if(i>>>0>=(c[f>>2]|0)>>>0){j=fc[c[(c[a>>2]|0)+40>>2]&127](a)|0;if((j|0)==-1){k=h;break a}else l=j}else{c[e>>2]=i+4;l=c[i>>2]|0}c[g>>2]=l;i=h+1|0;if((i|0)<(d|0)){g=g+4|0;h=i}else{k=i;break}}}else k=0;while(0);return k|0}function Qf(a){a=a|0;return -1}function Rf(a){a=a|0;var b=0,d=0;if((fc[c[(c[a>>2]|0)+36>>2]&127](a)|0)==-1)b=-1;else{d=a+12|0;a=c[d>>2]|0;c[d>>2]=a+4;b=c[a>>2]|0}return b|0}function Sf(a,b){a=a|0;b=b|0;return -1}function Tf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;a:do if((d|0)>0){e=a+24|0;f=a+28|0;g=b;h=0;while(1){i=c[e>>2]|0;if(i>>>0>=(c[f>>2]|0)>>>0){if((oc[c[(c[a>>2]|0)+52>>2]&15](a,c[g>>2]|0)|0)==-1){j=h;break a}}else{k=c[g>>2]|0;c[e>>2]=i+4;c[i>>2]=k}k=h+1|0;if((k|0)<(d|0)){g=g+4|0;h=k}else{j=k;break}}}else j=0;while(0);return j|0}function Uf(a,b){a=a|0;b=b|0;return -1}function Vf(a){a=a|0;jf(a+8|0);return}function Wf(a){a=a|0;jf(a+((c[(c[a>>2]|0)+-12>>2]|0)+8)|0);return}function Xf(a){a=a|0;jf(a+8|0);lp(a);return}function Yf(a){a=a|0;Xf(a+(c[(c[a>>2]|0)+-12>>2]|0)|0);return}function Zf(b){b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d;if(c[b+((c[(c[b>>2]|0)+-12>>2]|0)+24)>>2]|0){ig(e,b);if((a[e>>0]|0)!=0?(f=c[b+((c[(c[b>>2]|0)+-12>>2]|0)+24)>>2]|0,(fc[c[(c[f>>2]|0)+24>>2]&127](f)|0)==-1):0){f=c[(c[b>>2]|0)+-12>>2]|0;hf(b+f|0,c[b+(f+16)>>2]|1)}jg(e)}i=d;return b|0}function _f(a){a=a|0;var b=0;b=a+16|0;c[b>>2]=c[b>>2]|1;if(!(c[a+20>>2]&1))return;else Mb()}function $f(a){a=a|0;jf(a+8|0);return}function ag(a){a=a|0;jf(a+((c[(c[a>>2]|0)+-12>>2]|0)+8)|0);return}function bg(a){a=a|0;jf(a+8|0);lp(a);return}function cg(a){a=a|0;bg(a+(c[(c[a>>2]|0)+-12>>2]|0)|0);return}function dg(b){b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d;if(c[b+((c[(c[b>>2]|0)+-12>>2]|0)+24)>>2]|0){og(e,b);if((a[e>>0]|0)!=0?(f=c[b+((c[(c[b>>2]|0)+-12>>2]|0)+24)>>2]|0,(fc[c[(c[f>>2]|0)+24>>2]&127](f)|0)==-1):0){f=c[(c[b>>2]|0)+-12>>2]|0;hf(b+f|0,c[b+(f+16)>>2]|1)}pg(e)}i=d;return b|0}function eg(a){a=a|0;jf(a+4|0);return}function fg(a){a=a|0;jf(a+((c[(c[a>>2]|0)+-12>>2]|0)+4)|0);return}function gg(a){a=a|0;jf(a+4|0);lp(a);return}function hg(a){a=a|0;gg(a+(c[(c[a>>2]|0)+-12>>2]|0)|0);return}function ig(b,d){b=b|0;d=d|0;var e=0,f=0;a[b>>0]=0;c[b+4>>2]=d;e=c[(c[d>>2]|0)+-12>>2]|0;if(!(c[d+(e+16)>>2]|0)){f=c[d+(e+72)>>2]|0;if(f)Zf(f)|0;a[b>>0]=1}return}function jg(a){a=a|0;var b=0,d=0;b=a+4|0;a=c[b>>2]|0;d=c[(c[a>>2]|0)+-12>>2]|0;if(((((c[a+(d+24)>>2]|0)!=0?(c[a+(d+16)>>2]|0)==0:0)?(c[a+(d+4)>>2]&8192|0)!=0:0)?!(Ra()|0):0)?(d=c[b>>2]|0,a=c[d+((c[(c[d>>2]|0)+-12>>2]|0)+24)>>2]|0,(fc[c[(c[a>>2]|0)+24>>2]&127](a)|0)==-1):0){a=c[b>>2]|0;b=c[(c[a>>2]|0)+-12>>2]|0;hf(a+b|0,c[a+(b+16)>>2]|1)}return}function kg(a){a=a|0;jf(a+4|0);return}function lg(a){a=a|0;jf(a+((c[(c[a>>2]|0)+-12>>2]|0)+4)|0);return}function mg(a){a=a|0;jf(a+4|0);lp(a);return}function ng(a){a=a|0;mg(a+(c[(c[a>>2]|0)+-12>>2]|0)|0);return}function og(b,d){b=b|0;d=d|0;var e=0,f=0;a[b>>0]=0;c[b+4>>2]=d;e=c[(c[d>>2]|0)+-12>>2]|0;if(!(c[d+(e+16)>>2]|0)){f=c[d+(e+72)>>2]|0;if(f)dg(f)|0;a[b>>0]=1}return}function pg(a){a=a|0;var b=0,d=0;b=a+4|0;a=c[b>>2]|0;d=c[(c[a>>2]|0)+-12>>2]|0;if(((((c[a+(d+24)>>2]|0)!=0?(c[a+(d+16)>>2]|0)==0:0)?(c[a+(d+4)>>2]&8192|0)!=0:0)?!(Ra()|0):0)?(d=c[b>>2]|0,a=c[d+((c[(c[d>>2]|0)+-12>>2]|0)+24)>>2]|0,(fc[c[(c[a>>2]|0)+24>>2]&127](a)|0)==-1):0){a=c[b>>2]|0;b=c[(c[a>>2]|0)+-12>>2]|0;hf(a+b|0,c[a+(b+16)>>2]|1)}return}function qg(a){a=a|0;return 15392}function rg(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)!=1&(c|0)<257)Be(a,b,c);else Ke(a,15408,35);return}function sg(){if((a[15456]|0)==0?(Ja(15456)|0)!=0:0){c[3862]=16152;Hb(34,15448,n|0)|0;Va(15456)}return 15448}function tg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e+8|0;g=e;h=d;d=c[h+4>>2]|0;j=g;c[j>>2]=c[h>>2];c[j+4>>2]=d;c[f+0>>2]=c[g+0>>2];c[f+4>>2]=c[g+4>>2];De(a,f,b);c[a>>2]=15472;i=e;return}function ug(a){a=a|0;Ee(a);return}function vg(a){a=a|0;Ee(a);lp(a);return}function wg(a){a=a|0;jf(a);lp(a);return}function xg(a){a=a|0;return}function yg(a){a=a|0;return}function zg(a){a=a|0;lp(a);return}function Ag(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;a:do if((e|0)==(f|0)){g=c;h=6}else{b=e;i=c;while(1){if((i|0)==(d|0)){j=-1;break a}k=a[i>>0]|0;l=a[b>>0]|0;if(k<<24>>24<l<<24>>24){j=-1;break a}if(l<<24>>24<k<<24>>24){j=1;break a}k=i+1|0;b=b+1|0;if((b|0)==(f|0)){g=k;h=6;break}else i=k}}while(0);if((h|0)==6)j=(g|0)!=(d|0)&1;return j|0}function Bg(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Bm(a,c,d);return}function Cg(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;if((c|0)==(d|0))e=0;else{b=0;f=c;while(1){c=(a[f>>0]|0)+(b<<4)|0;g=c&-268435456;h=(g>>>24|g)^c;f=f+1|0;if((f|0)==(d|0)){e=h;break}else b=h}}return e|0}function Dg(a){a=a|0;return}function Eg(a){a=a|0;lp(a);return}function Fg(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;a:do if((e|0)==(f|0)){g=b;h=6}else{a=e;i=b;while(1){if((i|0)==(d|0)){j=-1;break a}k=c[i>>2]|0;l=c[a>>2]|0;if((k|0)<(l|0)){j=-1;break a}if((l|0)<(k|0)){j=1;break a}k=i+4|0;a=a+4|0;if((a|0)==(f|0)){g=k;h=6;break}else i=k}}while(0);if((h|0)==6)j=(g|0)!=(d|0)&1;return j|0}function Gg(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Cm(a,c,d);return}function Hg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;if((b|0)==(d|0))e=0;else{a=0;f=b;while(1){b=(c[f>>2]|0)+(a<<4)|0;g=b&-268435456;h=(g>>>24|g)^b;f=f+4|0;if((f|0)==(d|0)){e=h;break}else a=h}}return e|0}function Ig(a){a=a|0;return}function Jg(a){a=a|0;lp(a);return}function Kg(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;k=i;i=i+64|0;l=k+60|0;m=k+56|0;n=k+52|0;o=k+48|0;p=k+44|0;q=k+40|0;r=k+36|0;s=k+32|0;t=k+8|0;u=k;if(!(c[g+4>>2]&1)){c[n>>2]=-1;v=c[(c[d>>2]|0)+16>>2]|0;c[p>>2]=c[e>>2];c[q>>2]=c[f>>2];c[m+0>>2]=c[p+0>>2];c[l+0>>2]=c[q+0>>2];ac[v&63](o,d,m,l,g,h,n);m=c[o>>2]|0;c[e>>2]=m;o=c[n>>2]|0;if(!o)a[j>>0]=0;else if((o|0)==1)a[j>>0]=1;else{a[j>>0]=1;c[h>>2]=4}c[b>>2]=m}else{mf(r,g);m=Ik(r,17872)|0;ue(c[r>>2]|0)|0;mf(s,g);g=Ik(s,18016)|0;ue(c[s>>2]|0)|0;dc[c[(c[g>>2]|0)+24>>2]&63](t,g);dc[c[(c[g>>2]|0)+28>>2]&63](t+12|0,g);c[u>>2]=c[f>>2];c[l+0>>2]=c[u+0>>2];a[j>>0]=(Dm(e,l,t,t+24|0,m,h,1)|0)==(t|0)&1;c[b>>2]=c[e>>2];Oe(t+12|0);Oe(t)}i=k;return}function Lg(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+16|0;k=j+12|0;l=j+8|0;m=j+4|0;n=j;c[m>>2]=c[d>>2];c[n>>2]=c[e>>2];c[l+0>>2]=c[m+0>>2];c[k+0>>2]=c[n+0>>2];Em(a,b,l,k,f,g,h);i=j;return}function Mg(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+16|0;k=j+12|0;l=j+8|0;m=j+4|0;n=j;c[m>>2]=c[d>>2];c[n>>2]=c[e>>2];c[l+0>>2]=c[m+0>>2];c[k+0>>2]=c[n+0>>2];Fm(a,b,l,k,f,g,h);i=j;return}function Ng(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+16|0;k=j+12|0;l=j+8|0;m=j+4|0;n=j;c[m>>2]=c[d>>2];c[n>>2]=c[e>>2];c[l+0>>2]=c[m+0>>2];c[k+0>>2]=c[n+0>>2];Gm(a,b,l,k,f,g,h);i=j;return}function Og(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+16|0;k=j+12|0;l=j+8|0;m=j+4|0;n=j;c[m>>2]=c[d>>2];c[n>>2]=c[e>>2];c[l+0>>2]=c[m+0>>2];c[k+0>>2]=c[n+0>>2];Hm(a,b,l,k,f,g,h);i=j;return}function Pg(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+16|0;k=j+12|0;l=j+8|0;m=j+4|0;n=j;c[m>>2]=c[d>>2];c[n>>2]=c[e>>2];c[l+0>>2]=c[m+0>>2];c[k+0>>2]=c[n+0>>2];Im(a,b,l,k,f,g,h);i=j;return}function Qg(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+16|0;k=j+12|0;l=j+8|0;m=j+4|0;n=j;c[m>>2]=c[d>>2];c[n>>2]=c[e>>2];c[l+0>>2]=c[m+0>>2];c[k+0>>2]=c[n+0>>2];Jm(a,b,l,k,f,g,h);i=j;return}function Rg(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+16|0;k=j+12|0;l=j+8|0;m=j+4|0;n=j;c[m>>2]=c[d>>2];c[n>>2]=c[e>>2];c[l+0>>2]=c[m+0>>2];c[k+0>>2]=c[n+0>>2];Km(a,b,l,k,f,g,h);i=j;return}function Sg(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+16|0;k=j+12|0;l=j+8|0;m=j+4|0;n=j;c[m>>2]=c[d>>2];c[n>>2]=c[e>>2];c[l+0>>2]=c[m+0>>2];c[k+0>>2]=c[n+0>>2];Lm(a,b,l,k,f,g,h);i=j;return}function Tg(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+16|0;k=j+12|0;l=j+8|0;m=j+4|0;n=j;c[m>>2]=c[d>>2];c[n>>2]=c[e>>2];c[l+0>>2]=c[m+0>>2];c[k+0>>2]=c[n+0>>2];Mm(a,b,l,k,f,g,h);i=j;return}function Ug(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0;e=i;i=i+240|0;l=e;m=e+208|0;n=e+196|0;o=e+192|0;p=e+180|0;q=e+176|0;r=e+16|0;s=e+8|0;t=e+4|0;c[n+0>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;mf(o,h);h=Ik(o,17872)|0;lc[c[(c[h>>2]|0)+32>>2]&7](h,16384,16410|0,m)|0;ue(c[o>>2]|0)|0;c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;Re(p,10,0);if(!(a[p>>0]&1)){o=p+1|0;u=o;v=p+8|0;w=o}else{o=p+8|0;u=p+1|0;v=o;w=c[o>>2]|0}c[q>>2]=w;c[s>>2]=r;c[t>>2]=0;o=p+4|0;h=c[f>>2]|0;x=w;a:while(1){if(h)if((c[h+12>>2]|0)==(c[h+16>>2]|0)?(fc[c[(c[h>>2]|0)+36>>2]&127](h)|0)==-1:0){c[f>>2]=0;y=0}else y=h;else y=0;w=(y|0)==0;z=c[g>>2]|0;do if(z){if((c[z+12>>2]|0)!=(c[z+16>>2]|0))if(w){A=z;break}else{B=y;C=z;D=x;break a}if((fc[c[(c[z>>2]|0)+36>>2]&127](z)|0)!=-1)if(w){A=z;break}else{B=y;C=z;D=x;break a}else{c[g>>2]=0;E=14;break}}else E=14;while(0);if((E|0)==14){E=0;if(w){B=y;C=0;D=x;break}else A=0}z=a[p>>0]|0;F=(z&1)==0;if(F)G=(z&255)>>>1;else G=c[o>>2]|0;if((c[q>>2]|0)==(x+G|0)){if(F){H=(z&255)>>>1;I=(z&255)>>>1}else{z=c[o>>2]|0;H=z;I=z}Re(p,H<<1,0);if(!(a[p>>0]&1))J=10;else J=(c[p>>2]&-2)+-1|0;Re(p,J,0);if(!(a[p>>0]&1))K=u;else K=c[v>>2]|0;c[q>>2]=K+I;L=K}else L=x;z=y+12|0;F=c[z>>2]|0;M=y+16|0;if((F|0)==(c[M>>2]|0))N=fc[c[(c[y>>2]|0)+36>>2]&127](y)|0;else N=d[F>>0]|0;if(Vg(N&255,16,L,q,t,0,n,r,s,m)|0){B=y;C=A;D=L;break}F=c[z>>2]|0;if((F|0)==(c[M>>2]|0)){fc[c[(c[y>>2]|0)+40>>2]&127](y)|0;h=y;x=L;continue}else{c[z>>2]=F+1;h=y;x=L;continue}}Re(p,(c[q>>2]|0)-D|0,0);if(!(a[p>>0]&1))O=u;else O=c[v>>2]|0;v=Wg()|0;c[l>>2]=k;if((Nm(O,v,16424,l)|0)!=1)c[j>>2]=4;if(B)if((c[B+12>>2]|0)==(c[B+16>>2]|0)?(fc[c[(c[B>>2]|0)+36>>2]&127](B)|0)==-1:0){c[f>>2]=0;P=0}else P=B;else P=0;B=(P|0)==0;do if(C){if((c[C+12>>2]|0)!=(c[C+16>>2]|0))if(B)break;else{E=50;break}if((fc[c[(c[C>>2]|0)+36>>2]&127](C)|0)!=-1)if(B^(C|0)==0)break;else{E=50;break}else{c[g>>2]=0;E=48;break}}else E=48;while(0);if((E|0)==48?B:0)E=50;if((E|0)==50)c[j>>2]=c[j>>2]|2;c[b>>2]=P;Oe(p);Oe(n);i=e;return}function Vg(b,d,e,f,g,h,i,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;m=c[f>>2]|0;n=(m|0)==(e|0);do if(n){o=(a[l+24>>0]|0)==b<<24>>24;if(!o?(a[l+25>>0]|0)!=b<<24>>24:0){p=5;break}c[f>>2]=e+1;a[e>>0]=o?43:45;c[g>>2]=0;q=0}else p=5;while(0);do if((p|0)==5){o=a[i>>0]|0;if(!(o&1))r=(o&255)>>>1;else r=c[i+4>>2]|0;if((r|0)!=0?b<<24>>24==h<<24>>24:0){o=c[k>>2]|0;if((o-j|0)>=160){q=0;break}s=c[g>>2]|0;c[k>>2]=o+4;c[o>>2]=s;c[g>>2]=0;q=0;break}s=l+26|0;o=l;while(1){if((a[o>>0]|0)==b<<24>>24){t=o;break}o=o+1|0;if((o|0)==(s|0)){t=s;break}}s=t-l|0;if((s|0)>23)q=-1;else{if((d|0)==16){if((s|0)>=22){if(n){q=-1;break}if((m-e|0)>=3){q=-1;break}if((a[m+-1>>0]|0)!=48){q=-1;break}c[g>>2]=0;o=a[16384+s>>0]|0;c[f>>2]=m+1;a[m>>0]=o;q=0;break}}else if((d|0)==10|(d|0)==8?(s|0)>=(d|0):0){q=-1;break}o=a[16384+s>>0]|0;c[f>>2]=m+1;a[m>>0]=o;c[g>>2]=(c[g>>2]|0)+1;q=0}}while(0);return q|0}function Wg(){if((a[17768]|0)==0?(Ja(17768)|0)!=0:0){c[4440]=eb(2147483647,17776,0)|0;Va(17768)}return c[4440]|0}function Xg(a){a=a|0;return}function Yg(a){a=a|0;lp(a);return}function Zg(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;k=i;i=i+64|0;l=k+60|0;m=k+56|0;n=k+52|0;o=k+48|0;p=k+44|0;q=k+40|0;r=k+36|0;s=k+32|0;t=k+8|0;u=k;if(!(c[g+4>>2]&1)){c[n>>2]=-1;v=c[(c[d>>2]|0)+16>>2]|0;c[p>>2]=c[e>>2];c[q>>2]=c[f>>2];c[m+0>>2]=c[p+0>>2];c[l+0>>2]=c[q+0>>2];ac[v&63](o,d,m,l,g,h,n);m=c[o>>2]|0;c[e>>2]=m;o=c[n>>2]|0;if(!o)a[j>>0]=0;else if((o|0)==1)a[j>>0]=1;else{a[j>>0]=1;c[h>>2]=4}c[b>>2]=m}else{mf(r,g);m=Ik(r,17864)|0;ue(c[r>>2]|0)|0;mf(s,g);g=Ik(s,18024)|0;ue(c[s>>2]|0)|0;dc[c[(c[g>>2]|0)+24>>2]&63](t,g);dc[c[(c[g>>2]|0)+28>>2]&63](t+12|0,g);c[u>>2]=c[f>>2];c[l+0>>2]=c[u+0>>2];a[j>>0]=(Om(e,l,t,t+24|0,m,h,1)|0)==(t|0)&1;c[b>>2]=c[e>>2];af(t+12|0);af(t)}i=k;return}function _g(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+16|0;k=j+12|0;l=j+8|0;m=j+4|0;n=j;c[m>>2]=c[d>>2];c[n>>2]=c[e>>2];c[l+0>>2]=c[m+0>>2];c[k+0>>2]=c[n+0>>2];Pm(a,b,l,k,f,g,h);i=j;return}function $g(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+16|0;k=j+12|0;l=j+8|0;m=j+4|0;n=j;c[m>>2]=c[d>>2];c[n>>2]=c[e>>2];c[l+0>>2]=c[m+0>>2];c[k+0>>2]=c[n+0>>2];Qm(a,b,l,k,f,g,h);i=j;return}function ah(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+16|0;k=j+12|0;l=j+8|0;m=j+4|0;n=j;c[m>>2]=c[d>>2];c[n>>2]=c[e>>2];c[l+0>>2]=c[m+0>>2];c[k+0>>2]=c[n+0>>2];Rm(a,b,l,k,f,g,h);i=j;return}function bh(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+16|0;k=j+12|0;l=j+8|0;m=j+4|0;n=j;c[m>>2]=c[d>>2];c[n>>2]=c[e>>2];c[l+0>>2]=c[m+0>>2];c[k+0>>2]=c[n+0>>2];Sm(a,b,l,k,f,g,h);i=j;return}function ch(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+16|0;k=j+12|0;l=j+8|0;m=j+4|0;n=j;c[m>>2]=c[d>>2];c[n>>2]=c[e>>2];c[l+0>>2]=c[m+0>>2];c[k+0>>2]=c[n+0>>2];Tm(a,b,l,k,f,g,h);i=j;return}function dh(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+16|0;k=j+12|0;l=j+8|0;m=j+4|0;n=j;c[m>>2]=c[d>>2];c[n>>2]=c[e>>2];c[l+0>>2]=c[m+0>>2];c[k+0>>2]=c[n+0>>2];Um(a,b,l,k,f,g,h);i=j;return}function eh(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+16|0;k=j+12|0;l=j+8|0;m=j+4|0;n=j;c[m>>2]=c[d>>2];c[n>>2]=c[e>>2];c[l+0>>2]=c[m+0>>2];c[k+0>>2]=c[n+0>>2];Vm(a,b,l,k,f,g,h);i=j;return}function fh(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+16|0;k=j+12|0;l=j+8|0;m=j+4|0;n=j;c[m>>2]=c[d>>2];c[n>>2]=c[e>>2];c[l+0>>2]=c[m+0>>2];c[k+0>>2]=c[n+0>>2];Wm(a,b,l,k,f,g,h);i=j;return}function gh(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+16|0;k=j+12|0;l=j+8|0;m=j+4|0;n=j;c[m>>2]=c[d>>2];c[n>>2]=c[e>>2];c[l+0>>2]=c[m+0>>2];c[k+0>>2]=c[n+0>>2];Xm(a,b,l,k,f,g,h);i=j;return}function hh(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;d=i;i=i+320|0;k=d;l=d+208|0;m=d+196|0;n=d+192|0;o=d+180|0;p=d+176|0;q=d+16|0;r=d+8|0;s=d+4|0;c[m+0>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;mf(n,g);g=Ik(n,17864)|0;lc[c[(c[g>>2]|0)+48>>2]&7](g,16384,16410|0,l)|0;ue(c[n>>2]|0)|0;c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;Re(o,10,0);if(!(a[o>>0]&1)){n=o+1|0;t=n;u=o+8|0;v=n}else{n=o+8|0;t=o+1|0;u=n;v=c[n>>2]|0}c[p>>2]=v;c[r>>2]=q;c[s>>2]=0;n=o+4|0;g=c[e>>2]|0;w=v;a:while(1){if(g){v=c[g+12>>2]|0;if((v|0)==(c[g+16>>2]|0))x=fc[c[(c[g>>2]|0)+36>>2]&127](g)|0;else x=c[v>>2]|0;if((x|0)==-1){c[e>>2]=0;y=1;z=0}else{y=0;z=g}}else{y=1;z=0}v=c[f>>2]|0;do if(v){A=c[v+12>>2]|0;if((A|0)==(c[v+16>>2]|0))B=fc[c[(c[v>>2]|0)+36>>2]&127](v)|0;else B=c[A>>2]|0;if((B|0)!=-1)if(y){C=v;break}else{D=z;E=v;F=w;break a}else{c[f>>2]=0;G=17;break}}else G=17;while(0);if((G|0)==17){G=0;if(y){D=z;E=0;F=w;break}else C=0}v=a[o>>0]|0;A=(v&1)==0;if(A)H=(v&255)>>>1;else H=c[n>>2]|0;if((c[p>>2]|0)==(w+H|0)){if(A){I=(v&255)>>>1;J=(v&255)>>>1}else{v=c[n>>2]|0;I=v;J=v}Re(o,I<<1,0);if(!(a[o>>0]&1))K=10;else K=(c[o>>2]&-2)+-1|0;Re(o,K,0);if(!(a[o>>0]&1))L=t;else L=c[u>>2]|0;c[p>>2]=L+J;M=L}else M=w;v=z+12|0;A=c[v>>2]|0;N=z+16|0;if((A|0)==(c[N>>2]|0))O=fc[c[(c[z>>2]|0)+36>>2]&127](z)|0;else O=c[A>>2]|0;if(ih(O,16,M,p,s,0,m,q,r,l)|0){D=z;E=C;F=M;break}A=c[v>>2]|0;if((A|0)==(c[N>>2]|0)){fc[c[(c[z>>2]|0)+40>>2]&127](z)|0;g=z;w=M;continue}else{c[v>>2]=A+4;g=z;w=M;continue}}Re(o,(c[p>>2]|0)-F|0,0);if(!(a[o>>0]&1))P=t;else P=c[u>>2]|0;u=Wg()|0;c[k>>2]=j;if((Nm(P,u,16424,k)|0)!=1)c[h>>2]=4;if(D){k=c[D+12>>2]|0;if((k|0)==(c[D+16>>2]|0))Q=fc[c[(c[D>>2]|0)+36>>2]&127](D)|0;else Q=c[k>>2]|0;if((Q|0)==-1){c[e>>2]=0;R=0;S=1}else{R=D;S=0}}else{R=0;S=1}do if(E){D=c[E+12>>2]|0;if((D|0)==(c[E+16>>2]|0))T=fc[c[(c[E>>2]|0)+36>>2]&127](E)|0;else T=c[D>>2]|0;if((T|0)!=-1)if(S)break;else{G=56;break}else{c[f>>2]=0;G=54;break}}else G=54;while(0);if((G|0)==54?S:0)G=56;if((G|0)==56)c[h>>2]=c[h>>2]|2;c[b>>2]=R;Oe(o);Oe(m);i=d;return}function ih(b,d,e,f,g,h,i,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;m=c[f>>2]|0;n=(m|0)==(e|0);do if(n){o=(c[l+96>>2]|0)==(b|0);if(!o?(c[l+100>>2]|0)!=(b|0):0){p=5;break}c[f>>2]=e+1;a[e>>0]=o?43:45;c[g>>2]=0;q=0}else p=5;while(0);do if((p|0)==5){o=a[i>>0]|0;if(!(o&1))r=(o&255)>>>1;else r=c[i+4>>2]|0;if((r|0)!=0&(b|0)==(h|0)){o=c[k>>2]|0;if((o-j|0)>=160){q=0;break}s=c[g>>2]|0;c[k>>2]=o+4;c[o>>2]=s;c[g>>2]=0;q=0;break}s=l+104|0;o=l;while(1){if((c[o>>2]|0)==(b|0)){t=o;break}o=o+4|0;if((o|0)==(s|0)){t=s;break}}s=t-l|0;o=s>>2;if((s|0)>92)q=-1;else{if((d|0)==16){if((s|0)>=88){if(n){q=-1;break}if((m-e|0)>=3){q=-1;break}if((a[m+-1>>0]|0)!=48){q=-1;break}c[g>>2]=0;s=a[16384+o>>0]|0;c[f>>2]=m+1;a[m>>0]=s;q=0;break}}else if((d|0)==10|(d|0)==8?(o|0)>=(d|0):0){q=-1;break}s=a[16384+o>>0]|0;c[f>>2]=m+1;a[m>>0]=s;c[g>>2]=(c[g>>2]|0)+1;q=0}}while(0);return q|0}function jh(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;i=i+16|0;h=g;mf(h,d);d=Ik(h,17872)|0;lc[c[(c[d>>2]|0)+32>>2]&7](d,16384,16410|0,e)|0;e=Ik(h,18016)|0;a[f>>0]=fc[c[(c[e>>2]|0)+16>>2]&127](e)|0;dc[c[(c[e>>2]|0)+20>>2]&63](b,e);ue(c[h>>2]|0)|0;i=g;return}function kh(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;h=i;i=i+16|0;j=h;mf(j,d);d=Ik(j,17872)|0;lc[c[(c[d>>2]|0)+32>>2]&7](d,16384,16416|0,e)|0;e=Ik(j,18016)|0;a[f>>0]=fc[c[(c[e>>2]|0)+12>>2]&127](e)|0;a[g>>0]=fc[c[(c[e>>2]|0)+16>>2]&127](e)|0;dc[c[(c[e>>2]|0)+20>>2]&63](b,e);ue(c[j>>2]|0)|0;i=h;return}function lh(b,e,f,g,h,i,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;do if(b<<24>>24==i<<24>>24)if(a[e>>0]|0){a[e>>0]=0;p=c[h>>2]|0;c[h>>2]=p+1;a[p>>0]=46;p=a[k>>0]|0;if(!(p&1))q=(p&255)>>>1;else q=c[k+4>>2]|0;if((q|0)!=0?(p=c[m>>2]|0,(p-l|0)<160):0){r=c[n>>2]|0;c[m>>2]=p+4;c[p>>2]=r;s=0}else s=0}else s=-1;else{if(b<<24>>24==j<<24>>24){r=a[k>>0]|0;if(!(r&1))t=(r&255)>>>1;else t=c[k+4>>2]|0;if(t){if(!(a[e>>0]|0)){s=-1;break}r=c[m>>2]|0;if((r-l|0)>=160){s=0;break}p=c[n>>2]|0;c[m>>2]=r+4;c[r>>2]=p;c[n>>2]=0;s=0;break}}p=o+32|0;r=o;while(1){if((a[r>>0]|0)==b<<24>>24){u=r;break}r=r+1|0;if((r|0)==(p|0)){u=p;break}}p=u-o|0;if((p|0)<=31){r=a[16384+p>>0]|0;if((p|0)==23|(p|0)==22){a[f>>0]=80;v=c[h>>2]|0;c[h>>2]=v+1;a[v>>0]=r;s=0;break}else if((p|0)==24|(p|0)==25){v=c[h>>2]|0;if((v|0)!=(g|0)?(d[v+-1>>0]&95|0)!=(d[f>>0]&127|0):0){s=-1;break}c[h>>2]=v+1;a[v>>0]=r;s=0;break}else{v=r&95;if((v|0)==(a[f>>0]|0)?(a[f>>0]=v|128,(a[e>>0]|0)!=0):0){a[e>>0]=0;v=a[k>>0]|0;if(!(v&1))w=(v&255)>>>1;else w=c[k+4>>2]|0;if((w|0)!=0?(v=c[m>>2]|0,(v-l|0)<160):0){x=c[n>>2]|0;c[m>>2]=v+4;c[v>>2]=x}}x=c[h>>2]|0;c[h>>2]=x+1;a[x>>0]=r;if((p|0)>21){s=0;break}c[n>>2]=(c[n>>2]|0)+1;s=0;break}}else s=-1}while(0);return s|0}function mh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;mf(g,b);b=Ik(g,17864)|0;lc[c[(c[b>>2]|0)+48>>2]&7](b,16384,16410|0,d)|0;d=Ik(g,18024)|0;c[e>>2]=fc[c[(c[d>>2]|0)+16>>2]&127](d)|0;dc[c[(c[d>>2]|0)+20>>2]&63](a,d);ue(c[g>>2]|0)|0;i=f;return}function nh(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;i=i+16|0;h=g;mf(h,b);b=Ik(h,17864)|0;lc[c[(c[b>>2]|0)+48>>2]&7](b,16384,16416|0,d)|0;d=Ik(h,18024)|0;c[e>>2]=fc[c[(c[d>>2]|0)+12>>2]&127](d)|0;c[f>>2]=fc[c[(c[d>>2]|0)+16>>2]&127](d)|0;dc[c[(c[d>>2]|0)+20>>2]&63](a,d);ue(c[h>>2]|0)|0;i=g;return}function oh(b,e,f,g,h,i,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;do if((b|0)==(i|0))if(a[e>>0]|0){a[e>>0]=0;p=c[h>>2]|0;c[h>>2]=p+1;a[p>>0]=46;p=a[k>>0]|0;if(!(p&1))q=(p&255)>>>1;else q=c[k+4>>2]|0;if((q|0)!=0?(p=c[m>>2]|0,(p-l|0)<160):0){r=c[n>>2]|0;c[m>>2]=p+4;c[p>>2]=r;s=0}else s=0}else s=-1;else{if((b|0)==(j|0)){r=a[k>>0]|0;if(!(r&1))t=(r&255)>>>1;else t=c[k+4>>2]|0;if(t){if(!(a[e>>0]|0)){s=-1;break}r=c[m>>2]|0;if((r-l|0)>=160){s=0;break}p=c[n>>2]|0;c[m>>2]=r+4;c[r>>2]=p;c[n>>2]=0;s=0;break}}p=o+128|0;r=o;while(1){if((c[r>>2]|0)==(b|0)){u=r;break}r=r+4|0;if((r|0)==(p|0)){u=p;break}}p=u-o|0;r=p>>2;if((p|0)<=124){v=a[16384+r>>0]|0;if((r|0)==24|(r|0)==25){w=c[h>>2]|0;if((w|0)!=(g|0)?(d[w+-1>>0]&95|0)!=(d[f>>0]&127|0):0){s=-1;break}c[h>>2]=w+1;a[w>>0]=v;s=0;break}else if(!((r|0)==23|(r|0)==22)){r=v&95;if((r|0)==(a[f>>0]|0)?(a[f>>0]=r|128,(a[e>>0]|0)!=0):0){a[e>>0]=0;r=a[k>>0]|0;if(!(r&1))x=(r&255)>>>1;else x=c[k+4>>2]|0;if((x|0)!=0?(r=c[m>>2]|0,(r-l|0)<160):0){w=c[n>>2]|0;c[m>>2]=r+4;c[r>>2]=w}}}else a[f>>0]=80;w=c[h>>2]|0;c[h>>2]=w+1;a[w>>0]=v;if((p|0)>84)s=0;else{c[n>>2]=(c[n>>2]|0)+1;s=0}}else s=-1}while(0);return s|0}function ph(a){a=a|0;return}function qh(a){a=a|0;lp(a);return}function rh(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;j=i;i=i+32|0;k=j+20|0;l=j+16|0;m=j+12|0;n=j;if(!(c[f+4>>2]&1)){o=c[(c[d>>2]|0)+24>>2]|0;c[l>>2]=c[e>>2];c[k+0>>2]=c[l+0>>2];nc[o&15](b,d,k,f,g,h&1)}else{mf(m,f);f=Ik(m,18016)|0;ue(c[m>>2]|0)|0;m=c[f>>2]|0;if(h)dc[c[m+24>>2]&63](n,f);else dc[c[m+28>>2]&63](n,f);f=a[n>>0]|0;if(!(f&1)){m=n+1|0;p=m;q=m;r=n+8|0}else{m=n+8|0;p=c[m>>2]|0;q=n+1|0;r=m}m=n+4|0;h=f;f=p;while(1){if(!(h&1)){s=q;t=(h&255)>>>1}else{s=c[r>>2]|0;t=c[m>>2]|0}if((f|0)==(s+t|0))break;p=a[f>>0]|0;g=c[e>>2]|0;do if(g){k=g+24|0;d=c[k>>2]|0;if((d|0)!=(c[g+28>>2]|0)){c[k>>2]=d+1;a[d>>0]=p;break}if((oc[c[(c[g>>2]|0)+52>>2]&15](g,p&255)|0)==-1)c[e>>2]=0}while(0);h=a[n>>0]|0;f=f+1|0}c[b>>2]=c[e>>2];Oe(n)}i=j;return}function sh(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=i;i=i+64|0;j=d;k=d+56|0;l=d+44|0;m=d+20|0;n=d+16|0;o=d+12|0;p=d+8|0;q=d+4|0;a[k+0>>0]=a[16664]|0;a[k+1>>0]=a[16665]|0;a[k+2>>0]=a[16666]|0;a[k+3>>0]=a[16667]|0;a[k+4>>0]=a[16668]|0;a[k+5>>0]=a[16669]|0;th(k+1|0,16568,1,c[f+4>>2]|0);r=Wg()|0;c[j>>2]=h;h=l+(Ym(l,12,r,k,j)|0)|0;k=uh(l,h,f)|0;mf(p,f);vh(l,k,h,m,n,o,p);ue(c[p>>2]|0)|0;c[q>>2]=c[e>>2];e=c[n>>2]|0;n=c[o>>2]|0;c[j+0>>2]=c[q+0>>2];Zm(b,j,m,e,n,f,g);i=d;return}function th(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;if(!(e&2048))f=b;else{a[b>>0]=43;f=b+1|0}if(!(e&512))g=f;else{a[f>>0]=35;g=f+1|0}f=a[c>>0]|0;if(!(f<<24>>24))h=g;else{b=c;c=g;g=f;while(1){b=b+1|0;f=c+1|0;a[c>>0]=g;g=a[b>>0]|0;if(!(g<<24>>24)){h=f;break}else c=f}}c=e&74;do if((c|0)==64)a[h>>0]=111;else if((c|0)==8)if(!(e&16384)){a[h>>0]=120;break}else{a[h>>0]=88;break}else if(d){a[h>>0]=100;break}else{a[h>>0]=117;break}while(0);return}function uh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=c[e+4>>2]&176;do if((f|0)==32)g=d;else if((f|0)==16){e=a[b>>0]|0;if(e<<24>>24==43|e<<24>>24==45){g=b+1|0;break}if((d-b|0)>1&e<<24>>24==48?(e=a[b+1>>0]|0,e<<24>>24==88|e<<24>>24==120):0)g=b+2|0;else h=7}else h=7;while(0);if((h|0)==7)g=b;return g|0}function vh(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;k=i;i=i+16|0;l=k;m=Ik(j,17872)|0;n=Ik(j,18016)|0;dc[c[(c[n>>2]|0)+20>>2]&63](l,n);j=a[l>>0]|0;if(!(j&1))o=(j&255)>>>1;else o=c[l+4>>2]|0;if(o){c[h>>2]=f;o=a[b>>0]|0;if(o<<24>>24==43|o<<24>>24==45){j=oc[c[(c[m>>2]|0)+28>>2]&15](m,o)|0;o=c[h>>2]|0;c[h>>2]=o+1;a[o>>0]=j;p=b+1|0}else p=b;if(((e-p|0)>1?(a[p>>0]|0)==48:0)?(j=p+1|0,o=a[j>>0]|0,o<<24>>24==88|o<<24>>24==120):0){o=oc[c[(c[m>>2]|0)+28>>2]&15](m,48)|0;q=c[h>>2]|0;c[h>>2]=q+1;a[q>>0]=o;o=oc[c[(c[m>>2]|0)+28>>2]&15](m,a[j>>0]|0)|0;j=c[h>>2]|0;c[h>>2]=j+1;a[j>>0]=o;r=p+2|0}else r=p;if((r|0)!=(e|0)?(p=e+-1|0,p>>>0>r>>>0):0){o=r;j=p;p=e;while(1){q=a[o>>0]|0;a[o>>0]=a[j>>0]|0;a[j>>0]=q;o=o+1|0;q=p+-2|0;if(o>>>0>=q>>>0)break;else{s=j;j=q;p=s}}}p=fc[c[(c[n>>2]|0)+16>>2]&127](n)|0;if(r>>>0<e>>>0){n=l+1|0;j=l+4|0;o=l+8|0;s=0;q=0;t=r;while(1){u=(a[l>>0]&1)==0;if((a[(u?n:c[o>>2]|0)+q>>0]|0)!=0?(s|0)==(a[(u?n:c[o>>2]|0)+q>>0]|0):0){u=c[h>>2]|0;c[h>>2]=u+1;a[u>>0]=p;u=a[l>>0]|0;if(!(u&1))v=(u&255)>>>1;else v=c[j>>2]|0;w=0;x=(q>>>0<(v+-1|0)>>>0&1)+q|0}else{w=s;x=q}u=oc[c[(c[m>>2]|0)+28>>2]&15](m,a[t>>0]|0)|0;y=c[h>>2]|0;c[h>>2]=y+1;a[y>>0]=u;t=t+1|0;if(t>>>0>=e>>>0)break;else{s=w+1|0;q=x}}}x=f+(r-b)|0;r=c[h>>2]|0;if((x|0)!=(r|0)?(q=r+-1|0,q>>>0>x>>>0):0){w=x;x=q;q=r;while(1){r=a[w>>0]|0;a[w>>0]=a[x>>0]|0;a[x>>0]=r;w=w+1|0;r=q+-2|0;if(w>>>0>=r>>>0)break;else{s=x;x=r;q=s}}}}else{lc[c[(c[m>>2]|0)+32>>2]&7](m,b,e,f)|0;c[h>>2]=f+(e-b)}if((d|0)==(e|0))z=c[h>>2]|0;else z=f+(d-b)|0;c[g>>2]=z;Oe(l);i=k;return}function wh(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;b=i;i=i+96|0;j=b+8|0;k=b;l=b+74|0;m=b+32|0;n=b+28|0;o=b+24|0;p=b+20|0;q=b+16|0;r=k;c[r>>2]=37;c[r+4>>2]=0;th(k+1|0,16576,1,c[e+4>>2]|0);r=Wg()|0;s=j;c[s>>2]=g;c[s+4>>2]=h;h=l+(Ym(l,22,r,k,j)|0)|0;k=uh(l,h,e)|0;mf(p,e);vh(l,k,h,m,n,o,p);ue(c[p>>2]|0)|0;c[q>>2]=c[d>>2];d=c[n>>2]|0;n=c[o>>2]|0;c[j+0>>2]=c[q+0>>2];Zm(a,j,m,d,n,e,f);i=b;return}function xh(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=i;i=i+64|0;j=d;k=d+56|0;l=d+44|0;m=d+20|0;n=d+16|0;o=d+12|0;p=d+8|0;q=d+4|0;a[k+0>>0]=a[16664]|0;a[k+1>>0]=a[16665]|0;a[k+2>>0]=a[16666]|0;a[k+3>>0]=a[16667]|0;a[k+4>>0]=a[16668]|0;a[k+5>>0]=a[16669]|0;th(k+1|0,16568,0,c[f+4>>2]|0);r=Wg()|0;c[j>>2]=h;h=l+(Ym(l,12,r,k,j)|0)|0;k=uh(l,h,f)|0;mf(p,f);vh(l,k,h,m,n,o,p);ue(c[p>>2]|0)|0;c[q>>2]=c[e>>2];e=c[n>>2]|0;n=c[o>>2]|0;c[j+0>>2]=c[q+0>>2];Zm(b,j,m,e,n,f,g);i=d;return}function yh(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;b=i;i=i+112|0;j=b+8|0;k=b;l=b+75|0;m=b+32|0;n=b+28|0;o=b+24|0;p=b+20|0;q=b+16|0;r=k;c[r>>2]=37;c[r+4>>2]=0;th(k+1|0,16576,0,c[e+4>>2]|0);r=Wg()|0;s=j;c[s>>2]=g;c[s+4>>2]=h;h=l+(Ym(l,23,r,k,j)|0)|0;k=uh(l,h,e)|0;mf(p,e);vh(l,k,h,m,n,o,p);ue(c[p>>2]|0)|0;c[q>>2]=c[d>>2];d=c[n>>2]|0;n=c[o>>2]|0;c[j+0>>2]=c[q+0>>2];Zm(a,j,m,d,n,e,f);i=b;return}function zh(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=+g;var j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;b=i;i=i+144|0;j=b+8|0;l=b;m=b+102|0;n=b+40|0;o=b+44|0;p=b+36|0;q=b+32|0;r=b+28|0;s=b+24|0;t=b+20|0;u=l;c[u>>2]=37;c[u+4>>2]=0;u=Ah(l+1|0,16584,c[e+4>>2]|0)|0;c[n>>2]=m;v=Wg()|0;if(u){c[j>>2]=c[e+8>>2];u=j+4|0;h[k>>3]=g;c[u>>2]=c[k>>2];c[u+4>>2]=c[k+4>>2];w=Ym(m,30,v,l,j)|0}else{h[k>>3]=g;c[j>>2]=c[k>>2];c[j+4>>2]=c[k+4>>2];w=Ym(m,30,v,l,j)|0}if((w|0)>29){v=Wg()|0;c[j>>2]=c[e+8>>2];u=j+4|0;h[k>>3]=g;c[u>>2]=c[k>>2];c[u+4>>2]=c[k+4>>2];u=_m(n,v,l,j)|0;l=c[n>>2]|0;if(!l)fq();else{x=l;y=l;z=u}}else{x=c[n>>2]|0;y=0;z=w}w=x+z|0;n=uh(x,w,e)|0;if((x|0)!=(m|0)){u=kq(z<<1)|0;if(!u)fq();else{A=x;B=u;C=u}}else{A=m;B=0;C=o}mf(r,e);Bh(A,n,w,C,p,q,r);ue(c[r>>2]|0)|0;c[t>>2]=c[d>>2];r=c[p>>2]|0;p=c[q>>2]|0;c[j+0>>2]=c[t+0>>2];Zm(s,j,C,r,p,e,f);f=c[s>>2]|0;c[d>>2]=f;c[a>>2]=f;if(B)lq(B);if(y)lq(y);i=b;return}function Ah(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;if(!(d&2048))e=b;else{a[b>>0]=43;e=b+1|0}if(!(d&1024))f=e;else{a[e>>0]=35;f=e+1|0}e=d&260;b=d>>>14;d=(e|0)==260;if(d){g=f;h=0}else{a[f>>0]=46;a[f+1>>0]=42;g=f+2|0;h=1}f=a[c>>0]|0;if(!(f<<24>>24))i=g;else{j=c;c=g;g=f;while(1){j=j+1|0;f=c+1|0;a[c>>0]=g;g=a[j>>0]|0;if(!(g<<24>>24)){i=f;break}else c=f}}do if((e|0)==256)if(!(b&1)){a[i>>0]=101;break}else{a[i>>0]=69;break}else if((e|0)==4)if(!(b&1)){a[i>>0]=102;break}else{a[i>>0]=70;break}else{c=(b&1|0)!=0;if(d)if(c){a[i>>0]=65;break}else{a[i>>0]=97;break}else if(c){a[i>>0]=71;break}else{a[i>>0]=103;break}}while(0);return h|0}function Bh(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;k=i;i=i+16|0;l=k;m=Ik(j,17872)|0;n=Ik(j,18016)|0;dc[c[(c[n>>2]|0)+20>>2]&63](l,n);c[h>>2]=f;j=a[b>>0]|0;if(j<<24>>24==43|j<<24>>24==45){o=oc[c[(c[m>>2]|0)+28>>2]&15](m,j)|0;j=c[h>>2]|0;c[h>>2]=j+1;a[j>>0]=o;p=b+1|0}else p=b;o=e;a:do if(((o-p|0)>1?(a[p>>0]|0)==48:0)?(j=p+1|0,q=a[j>>0]|0,q<<24>>24==88|q<<24>>24==120):0){q=oc[c[(c[m>>2]|0)+28>>2]&15](m,48)|0;r=c[h>>2]|0;c[h>>2]=r+1;a[r>>0]=q;q=p+2|0;r=oc[c[(c[m>>2]|0)+28>>2]&15](m,a[j>>0]|0)|0;j=c[h>>2]|0;c[h>>2]=j+1;a[j>>0]=r;if(q>>>0<e>>>0){r=q;while(1){j=a[r>>0]|0;s=r+1|0;if(!(Qo(j<<24>>24,Wg()|0)|0)){t=q;u=r;break a}if(s>>>0<e>>>0)r=s;else{t=q;u=s;break}}}else{t=q;u=q}}else v=4;while(0);b:do if((v|0)==4)if(p>>>0<e>>>0){r=p;while(1){s=a[r>>0]|0;j=r+1|0;if(!(Po(s<<24>>24,Wg()|0)|0)){t=p;u=r;break b}if(j>>>0<e>>>0)r=j;else{t=p;u=j;break}}}else{t=p;u=p}while(0);p=a[l>>0]|0;if(!(p&1))w=(p&255)>>>1;else w=c[l+4>>2]|0;if(w){if((t|0)!=(u|0)?(w=u+-1|0,w>>>0>t>>>0):0){p=t;v=w;w=u;while(1){r=a[p>>0]|0;a[p>>0]=a[v>>0]|0;a[v>>0]=r;p=p+1|0;r=w+-2|0;if(p>>>0>=r>>>0)break;else{q=v;v=r;w=q}}}w=fc[c[(c[n>>2]|0)+16>>2]&127](n)|0;if(t>>>0<u>>>0){v=l+1|0;p=l+4|0;q=l+8|0;r=0;j=0;s=t;while(1){x=(a[l>>0]&1)==0;if((a[(x?v:c[q>>2]|0)+j>>0]|0)>0?(r|0)==(a[(x?v:c[q>>2]|0)+j>>0]|0):0){x=c[h>>2]|0;c[h>>2]=x+1;a[x>>0]=w;x=a[l>>0]|0;if(!(x&1))y=(x&255)>>>1;else y=c[p>>2]|0;z=0;A=(j>>>0<(y+-1|0)>>>0&1)+j|0}else{z=r;A=j}x=oc[c[(c[m>>2]|0)+28>>2]&15](m,a[s>>0]|0)|0;B=c[h>>2]|0;c[h>>2]=B+1;a[B>>0]=x;s=s+1|0;if(s>>>0>=u>>>0)break;else{r=z+1|0;j=A}}}A=f+(t-b)|0;j=c[h>>2]|0;if((A|0)!=(j|0)?(z=j+-1|0,z>>>0>A>>>0):0){r=A;A=z;z=j;while(1){j=a[r>>0]|0;a[r>>0]=a[A>>0]|0;a[A>>0]=j;r=r+1|0;j=z+-2|0;if(r>>>0>=j>>>0)break;else{s=A;A=j;z=s}}}}else{lc[c[(c[m>>2]|0)+32>>2]&7](m,t,u,c[h>>2]|0)|0;c[h>>2]=(c[h>>2]|0)+(u-t)}c:do if(u>>>0<e>>>0){t=u;while(1){z=a[t>>0]|0;if(z<<24>>24==46){C=t;break}A=oc[c[(c[m>>2]|0)+28>>2]&15](m,z)|0;z=c[h>>2]|0;c[h>>2]=z+1;a[z>>0]=A;A=t+1|0;if(A>>>0<e>>>0)t=A;else{D=A;break c}}t=fc[c[(c[n>>2]|0)+12>>2]&127](n)|0;A=c[h>>2]|0;c[h>>2]=A+1;a[A>>0]=t;D=C+1|0}else D=u;while(0);lc[c[(c[m>>2]|0)+32>>2]&7](m,D,e,c[h>>2]|0)|0;m=(c[h>>2]|0)+(o-D)|0;c[h>>2]=m;if((d|0)==(e|0))E=m;else E=f+(d-b)|0;c[g>>2]=E;Oe(l);i=k;return}function Ch(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=+g;var j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;b=i;i=i+144|0;j=b+8|0;l=b;m=b+102|0;n=b+40|0;o=b+44|0;p=b+36|0;q=b+32|0;r=b+28|0;s=b+24|0;t=b+20|0;u=l;c[u>>2]=37;c[u+4>>2]=0;u=Ah(l+1|0,16592,c[e+4>>2]|0)|0;c[n>>2]=m;v=Wg()|0;if(u){c[j>>2]=c[e+8>>2];w=j+4|0;h[k>>3]=g;c[w>>2]=c[k>>2];c[w+4>>2]=c[k+4>>2];x=Ym(m,30,v,l,j)|0}else{h[k>>3]=g;c[j>>2]=c[k>>2];c[j+4>>2]=c[k+4>>2];x=Ym(m,30,v,l,j)|0}if((x|0)>29){v=Wg()|0;if(u){c[j>>2]=c[e+8>>2];u=j+4|0;h[k>>3]=g;c[u>>2]=c[k>>2];c[u+4>>2]=c[k+4>>2];y=_m(n,v,l,j)|0}else{h[k>>3]=g;c[j>>2]=c[k>>2];c[j+4>>2]=c[k+4>>2];y=_m(n,v,l,j)|0}l=c[n>>2]|0;if(!l)fq();else{z=l;A=l;B=y}}else{z=c[n>>2]|0;A=0;B=x}x=z+B|0;n=uh(z,x,e)|0;if((z|0)!=(m|0)){y=kq(B<<1)|0;if(!y)fq();else{C=z;D=y;E=y}}else{C=m;D=0;E=o}mf(r,e);Bh(C,n,x,E,p,q,r);ue(c[r>>2]|0)|0;c[t>>2]=c[d>>2];d=c[p>>2]|0;p=c[q>>2]|0;c[j+0>>2]=c[t+0>>2];Zm(s,j,E,d,p,e,f);c[a>>2]=c[s>>2];lq(D);lq(A);i=b;return}function Dh(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=i;i=i+80|0;j=d;k=d+72|0;l=d+52|0;m=d+12|0;n=d+8|0;o=d+4|0;a[k+0>>0]=a[16672]|0;a[k+1>>0]=a[16673]|0;a[k+2>>0]=a[16674]|0;a[k+3>>0]=a[16675]|0;a[k+4>>0]=a[16676]|0;a[k+5>>0]=a[16677]|0;p=Wg()|0;c[j>>2]=h;h=Ym(l,20,p,k,j)|0;k=l+h|0;p=uh(l,k,f)|0;mf(n,f);q=Ik(n,17872)|0;ue(c[n>>2]|0)|0;lc[c[(c[q>>2]|0)+32>>2]&7](q,l,k,m)|0;q=m+h|0;if((p|0)==(k|0))r=q;else r=m+(p-l)|0;c[o>>2]=c[e>>2];c[j+0>>2]=c[o+0>>2];Zm(b,j,m,r,q,f,g);i=d;return}function Eh(a){a=a|0;return}function Fh(a){a=a|0;lp(a);return}function Gh(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;j=i;i=i+32|0;k=j+20|0;l=j+16|0;m=j+12|0;n=j;if(!(c[f+4>>2]&1)){o=c[(c[d>>2]|0)+24>>2]|0;c[l>>2]=c[e>>2];c[k+0>>2]=c[l+0>>2];nc[o&15](b,d,k,f,g,h&1)}else{mf(m,f);f=Ik(m,18024)|0;ue(c[m>>2]|0)|0;m=c[f>>2]|0;if(h)dc[c[m+24>>2]&63](n,f);else dc[c[m+28>>2]&63](n,f);f=a[n>>0]|0;if(!(f&1)){m=n+4|0;p=m;q=n+8|0;r=m}else{m=n+8|0;p=c[m>>2]|0;q=m;r=n+4|0}m=f;f=p;while(1){if(!(m&1)){s=r;t=(m&255)>>>1}else{s=c[q>>2]|0;t=c[r>>2]|0}if((f|0)==(s+(t<<2)|0))break;p=c[f>>2]|0;h=c[e>>2]|0;if(h){g=h+24|0;k=c[g>>2]|0;if((k|0)==(c[h+28>>2]|0))u=oc[c[(c[h>>2]|0)+52>>2]&15](h,p)|0;else{c[g>>2]=k+4;c[k>>2]=p;u=p}if((u|0)==-1)c[e>>2]=0}m=a[n>>0]|0;f=f+4|0}c[b>>2]=c[e>>2];af(n)}i=j;return}function Hh(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=i;i=i+128|0;j=d;k=d+116|0;l=d+104|0;m=d+20|0;n=d+16|0;o=d+12|0;p=d+8|0;q=d+4|0;a[k+0>>0]=a[16664]|0;a[k+1>>0]=a[16665]|0;a[k+2>>0]=a[16666]|0;a[k+3>>0]=a[16667]|0;a[k+4>>0]=a[16668]|0;a[k+5>>0]=a[16669]|0;th(k+1|0,16568,1,c[f+4>>2]|0);r=Wg()|0;c[j>>2]=h;h=l+(Ym(l,12,r,k,j)|0)|0;k=uh(l,h,f)|0;mf(p,f);Ih(l,k,h,m,n,o,p);ue(c[p>>2]|0)|0;c[q>>2]=c[e>>2];e=c[n>>2]|0;n=c[o>>2]|0;c[j+0>>2]=c[q+0>>2];$m(b,j,m,e,n,f,g);i=d;return}function Ih(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;k=i;i=i+16|0;l=k;m=Ik(j,17864)|0;n=Ik(j,18024)|0;dc[c[(c[n>>2]|0)+20>>2]&63](l,n);j=a[l>>0]|0;if(!(j&1))o=(j&255)>>>1;else o=c[l+4>>2]|0;if(o){c[h>>2]=f;o=a[b>>0]|0;if(o<<24>>24==43|o<<24>>24==45){j=oc[c[(c[m>>2]|0)+44>>2]&15](m,o)|0;o=c[h>>2]|0;c[h>>2]=o+4;c[o>>2]=j;p=b+1|0}else p=b;if(((e-p|0)>1?(a[p>>0]|0)==48:0)?(j=p+1|0,o=a[j>>0]|0,o<<24>>24==88|o<<24>>24==120):0){o=oc[c[(c[m>>2]|0)+44>>2]&15](m,48)|0;q=c[h>>2]|0;c[h>>2]=q+4;c[q>>2]=o;o=oc[c[(c[m>>2]|0)+44>>2]&15](m,a[j>>0]|0)|0;j=c[h>>2]|0;c[h>>2]=j+4;c[j>>2]=o;r=p+2|0}else r=p;if((r|0)!=(e|0)?(p=e+-1|0,p>>>0>r>>>0):0){o=r;j=p;p=e;while(1){q=a[o>>0]|0;a[o>>0]=a[j>>0]|0;a[j>>0]=q;o=o+1|0;q=p+-2|0;if(o>>>0>=q>>>0)break;else{s=j;j=q;p=s}}}p=fc[c[(c[n>>2]|0)+16>>2]&127](n)|0;if(r>>>0<e>>>0){n=l+1|0;j=l+4|0;o=l+8|0;s=0;q=0;t=r;while(1){u=(a[l>>0]&1)==0;if((a[(u?n:c[o>>2]|0)+q>>0]|0)!=0?(s|0)==(a[(u?n:c[o>>2]|0)+q>>0]|0):0){u=c[h>>2]|0;c[h>>2]=u+4;c[u>>2]=p;u=a[l>>0]|0;if(!(u&1))v=(u&255)>>>1;else v=c[j>>2]|0;w=0;x=(q>>>0<(v+-1|0)>>>0&1)+q|0}else{w=s;x=q}u=oc[c[(c[m>>2]|0)+44>>2]&15](m,a[t>>0]|0)|0;y=c[h>>2]|0;z=y+4|0;c[h>>2]=z;c[y>>2]=u;t=t+1|0;if(t>>>0>=e>>>0){A=z;break}else{s=w+1|0;q=x}}}else A=c[h>>2]|0;x=f+(r-b<<2)|0;if((x|0)!=(A|0)?(r=A+-4|0,r>>>0>x>>>0):0){q=x;x=r;r=A;while(1){w=c[q>>2]|0;c[q>>2]=c[x>>2];c[x>>2]=w;q=q+4|0;w=r+-8|0;if(q>>>0>=w>>>0){B=A;break}else{s=x;x=w;r=s}}}else B=A}else{lc[c[(c[m>>2]|0)+48>>2]&7](m,b,e,f)|0;m=f+(e-b<<2)|0;c[h>>2]=m;B=m}if((d|0)==(e|0))C=B;else C=f+(d-b<<2)|0;c[g>>2]=C;Oe(l);i=k;return}function Jh(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;b=i;i=i+224|0;j=b+8|0;k=b;l=b+196|0;m=b+32|0;n=b+28|0;o=b+24|0;p=b+20|0;q=b+16|0;r=k;c[r>>2]=37;c[r+4>>2]=0;th(k+1|0,16576,1,c[e+4>>2]|0);r=Wg()|0;s=j;c[s>>2]=g;c[s+4>>2]=h;h=l+(Ym(l,22,r,k,j)|0)|0;k=uh(l,h,e)|0;mf(p,e);Ih(l,k,h,m,n,o,p);ue(c[p>>2]|0)|0;c[q>>2]=c[d>>2];d=c[n>>2]|0;n=c[o>>2]|0;c[j+0>>2]=c[q+0>>2];$m(a,j,m,d,n,e,f);i=b;return}function Kh(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=i;i=i+128|0;j=d;k=d+116|0;l=d+104|0;m=d+20|0;n=d+16|0;o=d+12|0;p=d+8|0;q=d+4|0;a[k+0>>0]=a[16664]|0;a[k+1>>0]=a[16665]|0;a[k+2>>0]=a[16666]|0;a[k+3>>0]=a[16667]|0;a[k+4>>0]=a[16668]|0;a[k+5>>0]=a[16669]|0;th(k+1|0,16568,0,c[f+4>>2]|0);r=Wg()|0;c[j>>2]=h;h=l+(Ym(l,12,r,k,j)|0)|0;k=uh(l,h,f)|0;mf(p,f);Ih(l,k,h,m,n,o,p);ue(c[p>>2]|0)|0;c[q>>2]=c[e>>2];e=c[n>>2]|0;n=c[o>>2]|0;c[j+0>>2]=c[q+0>>2];$m(b,j,m,e,n,f,g);i=d;return}function Lh(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;b=i;i=i+240|0;j=b+8|0;k=b;l=b+204|0;m=b+32|0;n=b+28|0;o=b+24|0;p=b+20|0;q=b+16|0;r=k;c[r>>2]=37;c[r+4>>2]=0;th(k+1|0,16576,0,c[e+4>>2]|0);r=Wg()|0;s=j;c[s>>2]=g;c[s+4>>2]=h;h=l+(Ym(l,23,r,k,j)|0)|0;k=uh(l,h,e)|0;mf(p,e);Ih(l,k,h,m,n,o,p);ue(c[p>>2]|0)|0;c[q>>2]=c[d>>2];d=c[n>>2]|0;n=c[o>>2]|0;c[j+0>>2]=c[q+0>>2];$m(a,j,m,d,n,e,f);i=b;return}function Mh(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=+g;var j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;b=i;i=i+304|0;j=b+8|0;l=b;m=b+272|0;n=b+268|0;o=b+40|0;p=b+36|0;q=b+32|0;r=b+28|0;s=b+24|0;t=b+20|0;u=l;c[u>>2]=37;c[u+4>>2]=0;u=Ah(l+1|0,16584,c[e+4>>2]|0)|0;c[n>>2]=m;v=Wg()|0;if(u){c[j>>2]=c[e+8>>2];u=j+4|0;h[k>>3]=g;c[u>>2]=c[k>>2];c[u+4>>2]=c[k+4>>2];w=Ym(m,30,v,l,j)|0}else{h[k>>3]=g;c[j>>2]=c[k>>2];c[j+4>>2]=c[k+4>>2];w=Ym(m,30,v,l,j)|0}if((w|0)>29){v=Wg()|0;c[j>>2]=c[e+8>>2];u=j+4|0;h[k>>3]=g;c[u>>2]=c[k>>2];c[u+4>>2]=c[k+4>>2];u=_m(n,v,l,j)|0;l=c[n>>2]|0;if(!l)fq();else{x=l;y=l;z=u}}else{x=c[n>>2]|0;y=0;z=w}w=x+z|0;n=uh(x,w,e)|0;if((x|0)!=(m|0)){u=kq(z<<3)|0;if(!u)fq();else{A=x;B=u;C=u}}else{A=m;B=0;C=o}mf(r,e);Nh(A,n,w,C,p,q,r);ue(c[r>>2]|0)|0;c[t>>2]=c[d>>2];r=c[p>>2]|0;p=c[q>>2]|0;c[j+0>>2]=c[t+0>>2];$m(s,j,C,r,p,e,f);f=c[s>>2]|0;c[d>>2]=f;c[a>>2]=f;if(B)lq(B);lq(y);i=b;return}function Nh(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;k=i;i=i+16|0;l=k;m=Ik(j,17864)|0;n=Ik(j,18024)|0;dc[c[(c[n>>2]|0)+20>>2]&63](l,n);c[h>>2]=f;j=a[b>>0]|0;if(j<<24>>24==43|j<<24>>24==45){o=oc[c[(c[m>>2]|0)+44>>2]&15](m,j)|0;j=c[h>>2]|0;c[h>>2]=j+4;c[j>>2]=o;p=b+1|0}else p=b;o=e;a:do if(((o-p|0)>1?(a[p>>0]|0)==48:0)?(j=p+1|0,q=a[j>>0]|0,q<<24>>24==88|q<<24>>24==120):0){q=oc[c[(c[m>>2]|0)+44>>2]&15](m,48)|0;r=c[h>>2]|0;c[h>>2]=r+4;c[r>>2]=q;q=p+2|0;r=oc[c[(c[m>>2]|0)+44>>2]&15](m,a[j>>0]|0)|0;j=c[h>>2]|0;c[h>>2]=j+4;c[j>>2]=r;if(q>>>0<e>>>0){r=q;while(1){j=a[r>>0]|0;s=r+1|0;if(!(Qo(j<<24>>24,Wg()|0)|0)){t=q;u=r;break a}if(s>>>0<e>>>0)r=s;else{t=q;u=s;break}}}else{t=q;u=q}}else v=4;while(0);b:do if((v|0)==4)if(p>>>0<e>>>0){r=p;while(1){s=a[r>>0]|0;j=r+1|0;if(!(Po(s<<24>>24,Wg()|0)|0)){t=p;u=r;break b}if(j>>>0<e>>>0)r=j;else{t=p;u=j;break}}}else{t=p;u=p}while(0);p=a[l>>0]|0;if(!(p&1))w=(p&255)>>>1;else w=c[l+4>>2]|0;if(w){if((t|0)!=(u|0)?(w=u+-1|0,w>>>0>t>>>0):0){p=t;v=w;w=u;while(1){r=a[p>>0]|0;a[p>>0]=a[v>>0]|0;a[v>>0]=r;p=p+1|0;r=w+-2|0;if(p>>>0>=r>>>0)break;else{q=v;v=r;w=q}}}w=fc[c[(c[n>>2]|0)+16>>2]&127](n)|0;if(t>>>0<u>>>0){v=l+1|0;p=l+4|0;q=l+8|0;r=0;j=0;s=t;while(1){x=(a[l>>0]&1)==0;if((a[(x?v:c[q>>2]|0)+j>>0]|0)>0?(r|0)==(a[(x?v:c[q>>2]|0)+j>>0]|0):0){x=c[h>>2]|0;c[h>>2]=x+4;c[x>>2]=w;x=a[l>>0]|0;if(!(x&1))y=(x&255)>>>1;else y=c[p>>2]|0;z=0;A=(j>>>0<(y+-1|0)>>>0&1)+j|0}else{z=r;A=j}x=oc[c[(c[m>>2]|0)+44>>2]&15](m,a[s>>0]|0)|0;B=c[h>>2]|0;C=B+4|0;c[h>>2]=C;c[B>>2]=x;s=s+1|0;if(s>>>0>=u>>>0){D=C;break}else{r=z+1|0;j=A}}}else D=c[h>>2]|0;A=f+(t-b<<2)|0;if((A|0)!=(D|0)?(j=D+-4|0,j>>>0>A>>>0):0){z=A;A=j;j=D;while(1){r=c[z>>2]|0;c[z>>2]=c[A>>2];c[A>>2]=r;z=z+4|0;r=j+-8|0;if(z>>>0>=r>>>0){E=D;break}else{s=A;A=r;j=s}}}else E=D}else{lc[c[(c[m>>2]|0)+48>>2]&7](m,t,u,c[h>>2]|0)|0;D=(c[h>>2]|0)+(u-t<<2)|0;c[h>>2]=D;E=D}c:do if(u>>>0<e>>>0){D=u;while(1){t=a[D>>0]|0;if(t<<24>>24==46){F=D;break}j=oc[c[(c[m>>2]|0)+44>>2]&15](m,t)|0;t=c[h>>2]|0;A=t+4|0;c[h>>2]=A;c[t>>2]=j;j=D+1|0;if(j>>>0<e>>>0)D=j;else{G=A;H=j;break c}}D=fc[c[(c[n>>2]|0)+12>>2]&127](n)|0;j=c[h>>2]|0;A=j+4|0;c[h>>2]=A;c[j>>2]=D;G=A;H=F+1|0}else{G=E;H=u}while(0);lc[c[(c[m>>2]|0)+48>>2]&7](m,H,e,G)|0;G=(c[h>>2]|0)+(o-H<<2)|0;c[h>>2]=G;if((d|0)==(e|0))I=G;else I=f+(d-b<<2)|0;c[g>>2]=I;Oe(l);i=k;return}function Oh(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=+g;var j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;b=i;i=i+304|0;j=b+8|0;l=b;m=b+272|0;n=b+268|0;o=b+40|0;p=b+36|0;q=b+32|0;r=b+28|0;s=b+24|0;t=b+20|0;u=l;c[u>>2]=37;c[u+4>>2]=0;u=Ah(l+1|0,16592,c[e+4>>2]|0)|0;c[n>>2]=m;v=Wg()|0;if(u){c[j>>2]=c[e+8>>2];w=j+4|0;h[k>>3]=g;c[w>>2]=c[k>>2];c[w+4>>2]=c[k+4>>2];x=Ym(m,30,v,l,j)|0}else{h[k>>3]=g;c[j>>2]=c[k>>2];c[j+4>>2]=c[k+4>>2];x=Ym(m,30,v,l,j)|0}if((x|0)>29){v=Wg()|0;if(u){c[j>>2]=c[e+8>>2];u=j+4|0;h[k>>3]=g;c[u>>2]=c[k>>2];c[u+4>>2]=c[k+4>>2];y=_m(n,v,l,j)|0}else{h[k>>3]=g;c[j>>2]=c[k>>2];c[j+4>>2]=c[k+4>>2];y=_m(n,v,l,j)|0}l=c[n>>2]|0;if(!l)fq();else{z=l;A=l;B=y}}else{z=c[n>>2]|0;A=0;B=x}x=z+B|0;n=uh(z,x,e)|0;if((z|0)!=(m|0)){y=kq(B<<3)|0;if(!y)fq();else{C=z;D=y;E=y}}else{C=m;D=0;E=o}mf(r,e);Nh(C,n,x,E,p,q,r);ue(c[r>>2]|0)|0;c[t>>2]=c[d>>2];r=c[p>>2]|0;p=c[q>>2]|0;c[j+0>>2]=c[t+0>>2];$m(s,j,E,r,p,e,f);f=c[s>>2]|0;c[d>>2]=f;c[a>>2]=f;if(D)lq(D);lq(A);i=b;return}function Ph(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=i;i=i+192|0;j=d;k=d+180|0;l=d+160|0;m=d+12|0;n=d+8|0;o=d+4|0;a[k+0>>0]=a[16672]|0;a[k+1>>0]=a[16673]|0;a[k+2>>0]=a[16674]|0;a[k+3>>0]=a[16675]|0;a[k+4>>0]=a[16676]|0;a[k+5>>0]=a[16677]|0;p=Wg()|0;c[j>>2]=h;h=Ym(l,20,p,k,j)|0;k=l+h|0;p=uh(l,k,f)|0;mf(n,f);q=Ik(n,17864)|0;ue(c[n>>2]|0)|0;lc[c[(c[q>>2]|0)+48>>2]&7](q,l,k,m)|0;q=m+(h<<2)|0;if((p|0)==(k|0))r=q;else r=m+(p-l<<2)|0;c[o>>2]=c[e>>2];c[j+0>>2]=c[o+0>>2];$m(b,j,m,r,q,f,g);i=d;return}function Qh(e,f,g,h,j,k,l,m,n){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0;o=i;i=i+32|0;p=o+20|0;q=o+16|0;r=o+12|0;s=o+8|0;t=o+4|0;u=o;mf(r,j);v=Ik(r,17872)|0;ue(c[r>>2]|0)|0;c[k>>2]=0;a:do if((m|0)!=(n|0)){r=v+8|0;w=m;b:while(1){x=c[g>>2]|0;if(x)if((c[x+12>>2]|0)==(c[x+16>>2]|0)?(fc[c[(c[x>>2]|0)+36>>2]&127](x)|0)==-1:0){c[g>>2]=0;y=0}else y=x;else y=0;x=(y|0)==0;z=c[h>>2]|0;do if(z){if((c[z+12>>2]|0)==(c[z+16>>2]|0)?(fc[c[(c[z>>2]|0)+36>>2]&127](z)|0)==-1:0){c[h>>2]=0;A=13;break}if(x)B=z;else{C=y;A=14;break b}}else A=13;while(0);if((A|0)==13){A=0;if(x){C=y;A=14;break}else B=0}c:do if(($b[c[(c[v>>2]|0)+36>>2]&31](v,a[w>>0]|0,0)|0)<<24>>24==37){z=w+1|0;if((z|0)==(n|0)){D=y;A=17;break b}E=$b[c[(c[v>>2]|0)+36>>2]&31](v,a[z>>0]|0,0)|0;if(E<<24>>24==48|E<<24>>24==69){F=w+2|0;if((F|0)==(n|0)){G=y;A=20;break b}H=z;I=$b[c[(c[v>>2]|0)+36>>2]&31](v,a[F>>0]|0,0)|0;J=E}else{H=w;I=E;J=0}E=c[(c[f>>2]|0)+36>>2]|0;c[t>>2]=y;c[u>>2]=B;c[q+0>>2]=c[t+0>>2];c[p+0>>2]=c[u+0>>2];ec[E&3](s,f,q,p,j,k,l,I,J);E=c[s>>2]|0;c[g>>2]=E;K=H+2|0;L=E}else{E=a[w>>0]|0;if(E<<24>>24>-1?(F=c[r>>2]|0,(b[F+(E<<24>>24<<1)>>1]&8192)!=0):0){E=w;while(1){z=E+1|0;if((z|0)==(n|0)){M=n;break}N=a[z>>0]|0;if(N<<24>>24<=-1){M=z;break}if(!(b[F+(N<<24>>24<<1)>>1]&8192)){M=z;break}else E=z}E=y;F=B;z=y;N=B;while(1){if(E)if((c[E+12>>2]|0)==(c[E+16>>2]|0)?(fc[c[(c[E>>2]|0)+36>>2]&127](E)|0)==-1:0){c[g>>2]=0;O=0;P=0}else{O=z;P=E}else{O=z;P=0}Q=(P|0)==0;do if(N){if((c[N+12>>2]|0)!=(c[N+16>>2]|0))if(Q){R=F;S=N;break}else{K=M;L=O;break c}if((fc[c[(c[N>>2]|0)+36>>2]&127](N)|0)!=-1)if(Q^(F|0)==0){R=F;S=F;break}else{K=M;L=O;break c}else{c[h>>2]=0;T=0;A=39;break}}else{T=F;A=39}while(0);if((A|0)==39){A=0;if(Q){K=M;L=O;break c}else{R=T;S=0}}U=P+12|0;V=c[U>>2]|0;W=P+16|0;if((V|0)==(c[W>>2]|0))X=fc[c[(c[P>>2]|0)+36>>2]&127](P)|0;else X=d[V>>0]|0;if((X&255)<<24>>24<=-1){K=M;L=O;break c}if(!(b[(c[r>>2]|0)+(X<<24>>24<<1)>>1]&8192)){K=M;L=O;break c}V=c[U>>2]|0;if((V|0)==(c[W>>2]|0)){fc[c[(c[P>>2]|0)+40>>2]&127](P)|0;E=P;F=R;z=O;N=S;continue}else{c[U>>2]=V+1;E=P;F=R;z=O;N=S;continue}}}N=y+12|0;z=c[N>>2]|0;F=y+16|0;if((z|0)==(c[F>>2]|0))Y=fc[c[(c[y>>2]|0)+36>>2]&127](y)|0;else Y=d[z>>0]|0;z=oc[c[(c[v>>2]|0)+12>>2]&15](v,Y&255)|0;if(z<<24>>24!=(oc[c[(c[v>>2]|0)+12>>2]&15](v,a[w>>0]|0)|0)<<24>>24){Z=y;A=57;break b}z=c[N>>2]|0;if((z|0)==(c[F>>2]|0))fc[c[(c[y>>2]|0)+40>>2]&127](y)|0;else c[N>>2]=z+1;K=w+1|0;L=y}while(0);if((K|0)!=(n|0)&(c[k>>2]|0)==0)w=K;else{_=L;break a}}if((A|0)==14){c[k>>2]=4;_=C;break}else if((A|0)==17){c[k>>2]=4;_=D;break}else if((A|0)==20){c[k>>2]=4;_=G;break}else if((A|0)==57){c[k>>2]=4;_=Z;break}}else _=c[g>>2]|0;while(0);if(_)if((c[_+12>>2]|0)==(c[_+16>>2]|0)?(fc[c[(c[_>>2]|0)+36>>2]&127](_)|0)==-1:0){c[g>>2]=0;$=0}else $=_;else $=0;_=($|0)==0;g=c[h>>2]|0;do if(g){if((c[g+12>>2]|0)==(c[g+16>>2]|0)?(fc[c[(c[g>>2]|0)+36>>2]&127](g)|0)==-1:0){c[h>>2]=0;A=67;break}if(!_)A=68}else A=67;while(0);if((A|0)==67?_:0)A=68;if((A|0)==68)c[k>>2]=c[k>>2]|2;c[e>>2]=$;i=o;return}function Rh(a){a=a|0;return}function Sh(a){a=a|0;lp(a);return}function Th(a){a=a|0;return 2}function Uh(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+16|0;k=j+12|0;l=j+8|0;m=j+4|0;n=j;c[m>>2]=c[d>>2];c[n>>2]=c[e>>2];c[l+0>>2]=c[m+0>>2];c[k+0>>2]=c[n+0>>2];Qh(a,b,l,k,f,g,h,16776,16784|0);i=j;return}function Vh(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;k=i;i=i+16|0;l=k+12|0;m=k+8|0;n=k+4|0;o=k;p=d+8|0;q=fc[c[(c[p>>2]|0)+20>>2]&127](p)|0;c[n>>2]=c[e>>2];c[o>>2]=c[f>>2];f=a[q>>0]|0;if(!(f&1)){r=q+1|0;s=(f&255)>>>1;t=q+1|0}else{f=c[q+8>>2]|0;r=f;s=c[q+4>>2]|0;t=f}c[m+0>>2]=c[n+0>>2];c[l+0>>2]=c[o+0>>2];Qh(b,d,m,l,g,h,j,t,r+s|0);i=k;return}function Wh(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;j=i;i=i+16|0;k=j+8|0;l=j+4|0;m=j;mf(l,f);f=Ik(l,17872)|0;ue(c[l>>2]|0)|0;c[m>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];Xh(b,h+24|0,d,k,g,f);c[a>>2]=c[d>>2];i=j;return}function Xh(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0;h=i;i=i+16|0;j=h+4|0;k=h;l=a+8|0;a=fc[c[c[l>>2]>>2]&127](l)|0;c[k>>2]=c[e>>2];c[j+0>>2]=c[k+0>>2];k=(Dm(d,j,a,a+168|0,g,f,0)|0)-a|0;if((k|0)<168)c[b>>2]=((k|0)/12|0|0)%7|0;i=h;return}function Yh(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;j=i;i=i+16|0;k=j+8|0;l=j+4|0;m=j;mf(l,f);f=Ik(l,17872)|0;ue(c[l>>2]|0)|0;c[m>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];Zh(b,h+16|0,d,k,g,f);c[a>>2]=c[d>>2];i=j;return}function Zh(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0;h=i;i=i+16|0;j=h+4|0;k=h;l=a+8|0;a=fc[c[(c[l>>2]|0)+4>>2]&127](l)|0;c[k>>2]=c[e>>2];c[j+0>>2]=c[k+0>>2];k=(Dm(d,j,a,a+288|0,g,f,0)|0)-a|0;if((k|0)<288)c[b>>2]=((k|0)/12|0|0)%12|0;i=h;return}function _h(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;j=i;i=i+16|0;k=j+8|0;l=j+4|0;m=j;mf(l,f);f=Ik(l,17872)|0;ue(c[l>>2]|0)|0;c[m>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];$h(b,h+20|0,d,k,g,f);c[a>>2]=c[d>>2];i=j;return}function $h(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];j=an(d,h,f,g,4)|0;if(!(c[f>>2]&4)){if((j|0)<69)k=j+2e3|0;else k=(j+-69|0)>>>0<31?j+1900|0:j;c[b>>2]=k+-1900}i=a;return}function ai(b,d,e,f,g,h,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0;l=i;i=i+176|0;m=l+160|0;n=l+156|0;o=l+152|0;p=l+148|0;q=l+144|0;r=l+140|0;s=l+136|0;t=l+132|0;u=l+128|0;v=l+124|0;w=l+120|0;x=l+116|0;y=l+112|0;z=l+108|0;A=l+104|0;B=l+100|0;C=l+96|0;D=l+92|0;E=l+88|0;F=l+84|0;G=l+80|0;H=l+76|0;I=l+72|0;J=l+68|0;K=l+64|0;L=l+60|0;M=l+56|0;N=l+52|0;O=l+48|0;P=l+44|0;Q=l+40|0;R=l+36|0;S=l+32|0;T=l+28|0;U=l+24|0;V=l+20|0;W=l+16|0;X=l+12|0;Y=l+8|0;Z=l+4|0;_=l;c[h>>2]=0;mf(o,g);$=Ik(o,17872)|0;ue(c[o>>2]|0)|0;do switch(k<<24>>24|0){case 121:{c[Y>>2]=c[f>>2];c[m+0>>2]=c[Y+0>>2];$h(d,j+20|0,e,m,h,$);aa=32;break}case 120:{o=c[(c[d>>2]|0)+20>>2]|0;c[T>>2]=c[e>>2];c[U>>2]=c[f>>2];c[n+0>>2]=c[T+0>>2];c[m+0>>2]=c[U+0>>2];ac[o&63](b,d,n,m,g,h,j);break}case 84:{c[Q>>2]=c[e>>2];c[R>>2]=c[f>>2];c[n+0>>2]=c[Q+0>>2];c[m+0>>2]=c[R+0>>2];Qh(P,d,n,m,g,h,j,16824,16832|0);c[e>>2]=c[P>>2];aa=32;break}case 70:{c[z>>2]=c[e>>2];c[A>>2]=c[f>>2];c[n+0>>2]=c[z+0>>2];c[m+0>>2]=c[A+0>>2];Qh(y,d,n,m,g,h,j,16792,16800|0);c[e>>2]=c[y>>2];aa=32;break}case 88:{o=d+8|0;ba=fc[c[(c[o>>2]|0)+24>>2]&127](o)|0;c[W>>2]=c[e>>2];c[X>>2]=c[f>>2];o=a[ba>>0]|0;if(!(o&1)){ca=ba+1|0;da=(o&255)>>>1;ea=ba+1|0}else{o=c[ba+8>>2]|0;ca=o;da=c[ba+4>>2]|0;ea=o}c[n+0>>2]=c[W+0>>2];c[m+0>>2]=c[X+0>>2];Qh(V,d,n,m,g,h,j,ea,ca+da|0);c[e>>2]=c[V>>2];aa=32;break}case 106:{c[D>>2]=c[f>>2];c[m+0>>2]=c[D+0>>2];ei(d,j+28|0,e,m,h,$);aa=32;break}case 72:{c[B>>2]=c[f>>2];c[m+0>>2]=c[B+0>>2];ci(d,j+8|0,e,m,h,$);aa=32;break}case 114:{c[J>>2]=c[e>>2];c[K>>2]=c[f>>2];c[n+0>>2]=c[J+0>>2];c[m+0>>2]=c[K+0>>2];Qh(I,d,n,m,g,h,j,16800,16811|0);c[e>>2]=c[I>>2];aa=32;break}case 73:{c[C>>2]=c[f>>2];c[m+0>>2]=c[C+0>>2];di(d,j+8|0,e,m,h,$);aa=32;break}case 68:{c[w>>2]=c[e>>2];c[x>>2]=c[f>>2];c[n+0>>2]=c[w+0>>2];c[m+0>>2]=c[x+0>>2];Qh(v,d,n,m,g,h,j,16784,16792|0);c[e>>2]=c[v>>2];aa=32;break}case 89:{c[Z>>2]=c[f>>2];c[m+0>>2]=c[Z+0>>2];li(d,j+20|0,e,m,h,$);aa=32;break}case 82:{c[M>>2]=c[e>>2];c[N>>2]=c[f>>2];c[n+0>>2]=c[M+0>>2];c[m+0>>2]=c[N+0>>2];Qh(L,d,n,m,g,h,j,16816,16821|0);c[e>>2]=c[L>>2];aa=32;break}case 109:{c[E>>2]=c[f>>2];c[m+0>>2]=c[E+0>>2];fi(d,j+16|0,e,m,h,$);aa=32;break}case 99:{o=d+8|0;ba=fc[c[(c[o>>2]|0)+12>>2]&127](o)|0;c[s>>2]=c[e>>2];c[t>>2]=c[f>>2];o=a[ba>>0]|0;if(!(o&1)){fa=ba+1|0;ga=(o&255)>>>1;ha=ba+1|0}else{o=c[ba+8>>2]|0;fa=o;ga=c[ba+4>>2]|0;ha=o}c[n+0>>2]=c[s+0>>2];c[m+0>>2]=c[t+0>>2];Qh(r,d,n,m,g,h,j,ha,fa+ga|0);c[e>>2]=c[r>>2];aa=32;break}case 116:case 110:{c[G>>2]=c[f>>2];c[m+0>>2]=c[G+0>>2];hi(d,e,m,h,$);aa=32;break}case 37:{c[_>>2]=c[f>>2];c[m+0>>2]=c[_+0>>2];mi(d,e,m,h,$);aa=32;break}case 104:case 66:case 98:{c[q>>2]=c[f>>2];c[m+0>>2]=c[q+0>>2];Zh(d,j+16|0,e,m,h,$);aa=32;break}case 77:{c[F>>2]=c[f>>2];c[m+0>>2]=c[F+0>>2];gi(d,j+4|0,e,m,h,$);aa=32;break}case 83:{c[O>>2]=c[f>>2];c[m+0>>2]=c[O+0>>2];ji(d,j,e,m,h,$);aa=32;break}case 119:{c[S>>2]=c[f>>2];c[m+0>>2]=c[S+0>>2];ki(d,j+24|0,e,m,h,$);aa=32;break}case 112:{c[H>>2]=c[f>>2];c[m+0>>2]=c[H+0>>2];ii(d,j+8|0,e,m,h,$);aa=32;break}case 65:case 97:{c[p>>2]=c[f>>2];c[m+0>>2]=c[p+0>>2];Xh(d,j+24|0,e,m,h,$);aa=32;break}case 101:case 100:{c[u>>2]=c[f>>2];c[m+0>>2]=c[u+0>>2];bi(d,j+12|0,e,m,h,$);aa=32;break}default:{c[h>>2]=c[h>>2]|4;aa=32}}while(0);if((aa|0)==32)c[b>>2]=c[e>>2];i=l;return}function bi(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];j=an(d,h,f,g,2)|0;g=c[f>>2]|0;if((g&4|0)==0&(j|0)>0&(j|0)<32)c[b>>2]=j;else c[f>>2]=g|4;i=a;return}function ci(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];j=an(d,h,f,g,2)|0;g=c[f>>2]|0;if((g&4|0)==0&(j|0)<24)c[b>>2]=j;else c[f>>2]=g|4;i=a;return}function di(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];j=an(d,h,f,g,2)|0;g=c[f>>2]|0;if((g&4|0)==0&(j|0)>0&(j|0)<13)c[b>>2]=j;else c[f>>2]=g|4;i=a;return}function ei(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];j=an(d,h,f,g,3)|0;g=c[f>>2]|0;if((g&4|0)==0&(j|0)<366)c[b>>2]=j;else c[f>>2]=g|4;i=a;return}function fi(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];j=an(d,h,f,g,2)|0;g=c[f>>2]|0;if((g&4|0)==0&(j|0)<13)c[b>>2]=j+-1;else c[f>>2]=g|4;i=a;return}function gi(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];j=an(d,h,f,g,2)|0;g=c[f>>2]|0;if((g&4|0)==0&(j|0)<60)c[b>>2]=j;else c[f>>2]=g|4;i=a;return}function hi(a,e,f,g,h){a=a|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;a=h+8|0;a:while(1){h=c[e>>2]|0;do if(h)if((c[h+12>>2]|0)==(c[h+16>>2]|0))if((fc[c[(c[h>>2]|0)+36>>2]&127](h)|0)==-1){c[e>>2]=0;i=0;break}else{i=c[e>>2]|0;break}else i=h;else i=0;while(0);h=(i|0)==0;j=c[f>>2]|0;do if(j){if((c[j+12>>2]|0)!=(c[j+16>>2]|0))if(h){k=j;break}else{l=j;break a}if((fc[c[(c[j>>2]|0)+36>>2]&127](j)|0)!=-1)if(h){k=j;break}else{l=j;break a}else{c[f>>2]=0;m=12;break}}else m=12;while(0);if((m|0)==12){m=0;if(h){l=0;break}else k=0}j=c[e>>2]|0;n=c[j+12>>2]|0;if((n|0)==(c[j+16>>2]|0))o=fc[c[(c[j>>2]|0)+36>>2]&127](j)|0;else o=d[n>>0]|0;if((o&255)<<24>>24<=-1){l=k;break}if(!(b[(c[a>>2]|0)+(o<<24>>24<<1)>>1]&8192)){l=k;break}n=c[e>>2]|0;j=n+12|0;p=c[j>>2]|0;if((p|0)==(c[n+16>>2]|0)){fc[c[(c[n>>2]|0)+40>>2]&127](n)|0;continue}else{c[j>>2]=p+1;continue}}k=c[e>>2]|0;do if(k)if((c[k+12>>2]|0)==(c[k+16>>2]|0))if((fc[c[(c[k>>2]|0)+36>>2]&127](k)|0)==-1){c[e>>2]=0;q=0;break}else{q=c[e>>2]|0;break}else q=k;else q=0;while(0);k=(q|0)==0;do if(l){if((c[l+12>>2]|0)==(c[l+16>>2]|0)?(fc[c[(c[l>>2]|0)+36>>2]&127](l)|0)==-1:0){c[f>>2]=0;m=32;break}if(!k)m=33}else m=32;while(0);if((m|0)==32?k:0)m=33;if((m|0)==33)c[g>>2]=c[g>>2]|2;return}function ii(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0;j=i;i=i+16|0;k=j+4|0;l=j;m=b+8|0;b=fc[c[(c[m>>2]|0)+8>>2]&127](m)|0;m=a[b>>0]|0;if(!(m&1))n=(m&255)>>>1;else n=c[b+4>>2]|0;m=a[b+12>>0]|0;if(!(m&1))o=(m&255)>>>1;else o=c[b+16>>2]|0;do if((n|0)!=(0-o|0)){c[l>>2]=c[f>>2];c[k+0>>2]=c[l+0>>2];m=Dm(e,k,b,b+24|0,h,g,0)|0;p=c[d>>2]|0;if((m|0)==(b|0)&(p|0)==12){c[d>>2]=0;break}if((m-b|0)==12&(p|0)<12)c[d>>2]=p+12}else c[g>>2]=c[g>>2]|4;while(0);i=j;return}function ji(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];j=an(d,h,f,g,2)|0;g=c[f>>2]|0;if((g&4|0)==0&(j|0)<61)c[b>>2]=j;else c[f>>2]=g|4;i=a;return}function ki(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];j=an(d,h,f,g,1)|0;g=c[f>>2]|0;if((g&4|0)==0&(j|0)<7)c[b>>2]=j;else c[f>>2]=g|4;i=a;return}function li(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];j=an(d,h,f,g,4)|0;if(!(c[f>>2]&4))c[b>>2]=j+-1900;i=a;return}function mi(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0;a=c[b>>2]|0;do if(a)if((c[a+12>>2]|0)==(c[a+16>>2]|0))if((fc[c[(c[a>>2]|0)+36>>2]&127](a)|0)==-1){c[b>>2]=0;h=0;break}else{h=c[b>>2]|0;break}else h=a;else h=0;while(0);a=(h|0)==0;h=c[e>>2]|0;do if(h){if((c[h+12>>2]|0)==(c[h+16>>2]|0)?(fc[c[(c[h>>2]|0)+36>>2]&127](h)|0)==-1:0){c[e>>2]=0;i=11;break}if(a){j=h;i=13}else i=12}else i=11;while(0);if((i|0)==11)if(a)i=12;else{j=0;i=13}a:do if((i|0)==12)c[f>>2]=c[f>>2]|6;else if((i|0)==13){a=c[b>>2]|0;h=c[a+12>>2]|0;if((h|0)==(c[a+16>>2]|0))k=fc[c[(c[a>>2]|0)+36>>2]&127](a)|0;else k=d[h>>0]|0;if(($b[c[(c[g>>2]|0)+36>>2]&31](g,k&255,0)|0)<<24>>24!=37){c[f>>2]=c[f>>2]|4;break}h=c[b>>2]|0;a=h+12|0;l=c[a>>2]|0;if((l|0)==(c[h+16>>2]|0)){fc[c[(c[h>>2]|0)+40>>2]&127](h)|0;m=c[b>>2]|0}else{c[a>>2]=l+1;m=h}do if(m)if((c[m+12>>2]|0)==(c[m+16>>2]|0))if((fc[c[(c[m>>2]|0)+36>>2]&127](m)|0)==-1){c[b>>2]=0;n=0;break}else{n=c[b>>2]|0;break}else n=m;else n=0;while(0);h=(n|0)==0;do if(j){if((c[j+12>>2]|0)==(c[j+16>>2]|0)?(fc[c[(c[j>>2]|0)+36>>2]&127](j)|0)==-1:0){c[e>>2]=0;i=31;break}if(h)break a}else i=31;while(0);if((i|0)==31?!h:0)break;c[f>>2]=c[f>>2]|2}while(0);return}function ni(a,b,d,e,f,g,h,j,k){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0;l=i;i=i+32|0;m=l+20|0;n=l+16|0;o=l+12|0;p=l+8|0;q=l+4|0;r=l;mf(o,f);s=Ik(o,17864)|0;ue(c[o>>2]|0)|0;c[g>>2]=0;a:do if((j|0)!=(k|0)){o=j;b:while(1){t=c[d>>2]|0;do if(t){u=c[t+12>>2]|0;if((u|0)==(c[t+16>>2]|0))v=fc[c[(c[t>>2]|0)+36>>2]&127](t)|0;else v=c[u>>2]|0;if((v|0)==-1){c[d>>2]=0;w=0;x=1;break}else{w=t;x=(t|0)==0;break}}else{w=0;x=1}while(0);t=c[e>>2]|0;do if(t){u=c[t+12>>2]|0;if((u|0)==(c[t+16>>2]|0))y=fc[c[(c[t>>2]|0)+36>>2]&127](t)|0;else y=c[u>>2]|0;if((y|0)!=-1)if(x){z=t;break}else{A=w;B=19;break b}else{c[e>>2]=0;B=17;break}}else B=17;while(0);if((B|0)==17){B=0;if(x){A=w;B=19;break}else z=0}c:do if(($b[c[(c[s>>2]|0)+52>>2]&31](s,c[o>>2]|0,0)|0)<<24>>24==37){t=o+4|0;if((t|0)==(k|0)){C=w;B=22;break b}u=$b[c[(c[s>>2]|0)+52>>2]&31](s,c[t>>2]|0,0)|0;if(u<<24>>24==48|u<<24>>24==69){D=o+8|0;if((D|0)==(k|0)){E=w;B=25;break b}F=t;G=$b[c[(c[s>>2]|0)+52>>2]&31](s,c[D>>2]|0,0)|0;H=u}else{F=o;G=u;H=0}u=c[(c[b>>2]|0)+36>>2]|0;c[q>>2]=w;c[r>>2]=z;c[n+0>>2]=c[q+0>>2];c[m+0>>2]=c[r+0>>2];ec[u&3](p,b,n,m,f,g,h,G,H);u=c[p>>2]|0;c[d>>2]=u;I=F+8|0;J=u}else{if($b[c[(c[s>>2]|0)+12>>2]&31](s,8192,c[o>>2]|0)|0)K=o;else{u=w+12|0;D=c[u>>2]|0;t=w+16|0;if((D|0)==(c[t>>2]|0))L=fc[c[(c[w>>2]|0)+36>>2]&127](w)|0;else L=c[D>>2]|0;D=oc[c[(c[s>>2]|0)+28>>2]&15](s,L)|0;if((D|0)!=(oc[c[(c[s>>2]|0)+28>>2]&15](s,c[o>>2]|0)|0)){M=w;B=62;break b}D=c[u>>2]|0;if((D|0)==(c[t>>2]|0))fc[c[(c[w>>2]|0)+40>>2]&127](w)|0;else c[u>>2]=D+4;I=o+4|0;J=w;break}while(1){D=K+4|0;if((D|0)==(k|0)){N=k;break}if($b[c[(c[s>>2]|0)+12>>2]&31](s,8192,c[D>>2]|0)|0)K=D;else{N=D;break}}D=w;u=z;t=w;O=z;while(1){if(D){P=c[D+12>>2]|0;if((P|0)==(c[D+16>>2]|0))Q=fc[c[(c[D>>2]|0)+36>>2]&127](D)|0;else Q=c[P>>2]|0;if((Q|0)==-1){c[d>>2]=0;R=0;S=0;T=1}else{R=t;S=D;T=0}}else{R=t;S=0;T=1}do if(O){P=c[O+12>>2]|0;if((P|0)==(c[O+16>>2]|0))U=fc[c[(c[O>>2]|0)+36>>2]&127](O)|0;else U=c[P>>2]|0;if((U|0)!=-1)if(T^(u|0)==0){V=u;W=u;break}else{I=N;J=R;break c}else{c[e>>2]=0;X=0;B=45;break}}else{X=u;B=45}while(0);if((B|0)==45){B=0;if(T){I=N;J=R;break c}else{V=X;W=0}}P=S+12|0;Y=c[P>>2]|0;Z=S+16|0;if((Y|0)==(c[Z>>2]|0))_=fc[c[(c[S>>2]|0)+36>>2]&127](S)|0;else _=c[Y>>2]|0;if(!($b[c[(c[s>>2]|0)+12>>2]&31](s,8192,_)|0)){I=N;J=R;break c}Y=c[P>>2]|0;if((Y|0)==(c[Z>>2]|0)){fc[c[(c[S>>2]|0)+40>>2]&127](S)|0;D=S;u=V;t=R;O=W;continue}else{c[P>>2]=Y+4;D=S;u=V;t=R;O=W;continue}}}while(0);if((I|0)!=(k|0)&(c[g>>2]|0)==0)o=I;else{$=J;break a}}if((B|0)==19){c[g>>2]=4;$=A;break}else if((B|0)==22){c[g>>2]=4;$=C;break}else if((B|0)==25){c[g>>2]=4;$=E;break}else if((B|0)==62){c[g>>2]=4;$=M;break}}else $=c[d>>2]|0;while(0);if($){M=c[$+12>>2]|0;if((M|0)==(c[$+16>>2]|0))aa=fc[c[(c[$>>2]|0)+36>>2]&127]($)|0;else aa=c[M>>2]|0;if((aa|0)==-1){c[d>>2]=0;ba=0;ca=1}else{ba=$;ca=0}}else{ba=0;ca=1}$=c[e>>2]|0;do if($){d=c[$+12>>2]|0;if((d|0)==(c[$+16>>2]|0))da=fc[c[(c[$>>2]|0)+36>>2]&127]($)|0;else da=c[d>>2]|0;if((da|0)!=-1)if(ca)break;else{B=77;break}else{c[e>>2]=0;B=75;break}}else B=75;while(0);if((B|0)==75?ca:0)B=77;if((B|0)==77)c[g>>2]=c[g>>2]|2;c[a>>2]=ba;i=l;return}function oi(a){a=a|0;return}function pi(a){a=a|0;lp(a);return}function qi(a){a=a|0;return 2}function ri(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+16|0;k=j+12|0;l=j+8|0;m=j+4|0;n=j;c[m>>2]=c[d>>2];c[n>>2]=c[e>>2];c[l+0>>2]=c[m+0>>2];c[k+0>>2]=c[n+0>>2];ni(a,b,l,k,f,g,h,16928,16960|0);i=j;return}
function si(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;k=i;i=i+16|0;l=k+12|0;m=k+8|0;n=k+4|0;o=k;p=d+8|0;q=fc[c[(c[p>>2]|0)+20>>2]&127](p)|0;c[n>>2]=c[e>>2];c[o>>2]=c[f>>2];f=a[q>>0]|0;if(!(f&1)){r=q+4|0;s=(f&255)>>>1;t=q+4|0}else{f=c[q+8>>2]|0;r=f;s=c[q+4>>2]|0;t=f}c[m+0>>2]=c[n+0>>2];c[l+0>>2]=c[o+0>>2];ni(b,d,m,l,g,h,j,t,r+(s<<2)|0);i=k;return}function ti(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;j=i;i=i+16|0;k=j+8|0;l=j+4|0;m=j;mf(l,f);f=Ik(l,17864)|0;ue(c[l>>2]|0)|0;c[m>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];ui(b,h+24|0,d,k,g,f);c[a>>2]=c[d>>2];i=j;return}function ui(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0;h=i;i=i+16|0;j=h+4|0;k=h;l=a+8|0;a=fc[c[c[l>>2]>>2]&127](l)|0;c[k>>2]=c[e>>2];c[j+0>>2]=c[k+0>>2];k=(Om(d,j,a,a+168|0,g,f,0)|0)-a|0;if((k|0)<168)c[b>>2]=((k|0)/12|0|0)%7|0;i=h;return}function vi(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;j=i;i=i+16|0;k=j+8|0;l=j+4|0;m=j;mf(l,f);f=Ik(l,17864)|0;ue(c[l>>2]|0)|0;c[m>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];wi(b,h+16|0,d,k,g,f);c[a>>2]=c[d>>2];i=j;return}function wi(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0;h=i;i=i+16|0;j=h+4|0;k=h;l=a+8|0;a=fc[c[(c[l>>2]|0)+4>>2]&127](l)|0;c[k>>2]=c[e>>2];c[j+0>>2]=c[k+0>>2];k=(Om(d,j,a,a+288|0,g,f,0)|0)-a|0;if((k|0)<288)c[b>>2]=((k|0)/12|0|0)%12|0;i=h;return}function xi(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;j=i;i=i+16|0;k=j+8|0;l=j+4|0;m=j;mf(l,f);f=Ik(l,17864)|0;ue(c[l>>2]|0)|0;c[m>>2]=c[e>>2];c[k+0>>2]=c[m+0>>2];yi(b,h+20|0,d,k,g,f);c[a>>2]=c[d>>2];i=j;return}function yi(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];j=bn(d,h,f,g,4)|0;if(!(c[f>>2]&4)){if((j|0)<69)k=j+2e3|0;else k=(j+-69|0)>>>0<31?j+1900|0:j;c[b>>2]=k+-1900}i=a;return}function zi(b,d,e,f,g,h,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0;l=i;i=i+176|0;m=l+160|0;n=l+156|0;o=l+152|0;p=l+148|0;q=l+144|0;r=l+140|0;s=l+136|0;t=l+132|0;u=l+128|0;v=l+124|0;w=l+120|0;x=l+116|0;y=l+112|0;z=l+108|0;A=l+104|0;B=l+100|0;C=l+96|0;D=l+92|0;E=l+88|0;F=l+84|0;G=l+80|0;H=l+76|0;I=l+72|0;J=l+68|0;K=l+64|0;L=l+60|0;M=l+56|0;N=l+52|0;O=l+48|0;P=l+44|0;Q=l+40|0;R=l+36|0;S=l+32|0;T=l+28|0;U=l+24|0;V=l+20|0;W=l+16|0;X=l+12|0;Y=l+8|0;Z=l+4|0;_=l;c[h>>2]=0;mf(o,g);$=Ik(o,17864)|0;ue(c[o>>2]|0)|0;do switch(k<<24>>24|0){case 121:{c[Y>>2]=c[f>>2];c[m+0>>2]=c[Y+0>>2];yi(d,j+20|0,e,m,h,$);aa=32;break}case 120:{o=c[(c[d>>2]|0)+20>>2]|0;c[T>>2]=c[e>>2];c[U>>2]=c[f>>2];c[n+0>>2]=c[T+0>>2];c[m+0>>2]=c[U+0>>2];ac[o&63](b,d,n,m,g,h,j);break}case 84:{c[Q>>2]=c[e>>2];c[R>>2]=c[f>>2];c[n+0>>2]=c[Q+0>>2];c[m+0>>2]=c[R+0>>2];ni(P,d,n,m,g,h,j,17096,17128|0);c[e>>2]=c[P>>2];aa=32;break}case 72:{c[B>>2]=c[f>>2];c[m+0>>2]=c[B+0>>2];Bi(d,j+8|0,e,m,h,$);aa=32;break}case 68:{c[w>>2]=c[e>>2];c[x>>2]=c[f>>2];c[n+0>>2]=c[w+0>>2];c[m+0>>2]=c[x+0>>2];ni(v,d,n,m,g,h,j,16960,16992|0);c[e>>2]=c[v>>2];aa=32;break}case 88:{o=d+8|0;ba=fc[c[(c[o>>2]|0)+24>>2]&127](o)|0;c[W>>2]=c[e>>2];c[X>>2]=c[f>>2];o=a[ba>>0]|0;if(!(o&1)){ca=ba+4|0;da=(o&255)>>>1;ea=ba+4|0}else{o=c[ba+8>>2]|0;ca=o;da=c[ba+4>>2]|0;ea=o}c[n+0>>2]=c[W+0>>2];c[m+0>>2]=c[X+0>>2];ni(V,d,n,m,g,h,j,ea,ca+(da<<2)|0);c[e>>2]=c[V>>2];aa=32;break}case 106:{c[D>>2]=c[f>>2];c[m+0>>2]=c[D+0>>2];Di(d,j+28|0,e,m,h,$);aa=32;break}case 114:{c[J>>2]=c[e>>2];c[K>>2]=c[f>>2];c[n+0>>2]=c[J+0>>2];c[m+0>>2]=c[K+0>>2];ni(I,d,n,m,g,h,j,17024,17068|0);c[e>>2]=c[I>>2];aa=32;break}case 70:{c[z>>2]=c[e>>2];c[A>>2]=c[f>>2];c[n+0>>2]=c[z+0>>2];c[m+0>>2]=c[A+0>>2];ni(y,d,n,m,g,h,j,16992,17024|0);c[e>>2]=c[y>>2];aa=32;break}case 82:{c[M>>2]=c[e>>2];c[N>>2]=c[f>>2];c[n+0>>2]=c[M+0>>2];c[m+0>>2]=c[N+0>>2];ni(L,d,n,m,g,h,j,17072,17092|0);c[e>>2]=c[L>>2];aa=32;break}case 73:{c[C>>2]=c[f>>2];c[m+0>>2]=c[C+0>>2];Ci(d,j+8|0,e,m,h,$);aa=32;break}case 119:{c[S>>2]=c[f>>2];c[m+0>>2]=c[S+0>>2];Ji(d,j+24|0,e,m,h,$);aa=32;break}case 101:case 100:{c[u>>2]=c[f>>2];c[m+0>>2]=c[u+0>>2];Ai(d,j+12|0,e,m,h,$);aa=32;break}case 37:{c[_>>2]=c[f>>2];c[m+0>>2]=c[_+0>>2];Li(d,e,m,h,$);aa=32;break}case 109:{c[E>>2]=c[f>>2];c[m+0>>2]=c[E+0>>2];Ei(d,j+16|0,e,m,h,$);aa=32;break}case 116:case 110:{c[G>>2]=c[f>>2];c[m+0>>2]=c[G+0>>2];Gi(d,e,m,h,$);aa=32;break}case 89:{c[Z>>2]=c[f>>2];c[m+0>>2]=c[Z+0>>2];Ki(d,j+20|0,e,m,h,$);aa=32;break}case 104:case 66:case 98:{c[q>>2]=c[f>>2];c[m+0>>2]=c[q+0>>2];wi(d,j+16|0,e,m,h,$);aa=32;break}case 99:{o=d+8|0;ba=fc[c[(c[o>>2]|0)+12>>2]&127](o)|0;c[s>>2]=c[e>>2];c[t>>2]=c[f>>2];o=a[ba>>0]|0;if(!(o&1)){fa=ba+4|0;ga=(o&255)>>>1;ha=ba+4|0}else{o=c[ba+8>>2]|0;fa=o;ga=c[ba+4>>2]|0;ha=o}c[n+0>>2]=c[s+0>>2];c[m+0>>2]=c[t+0>>2];ni(r,d,n,m,g,h,j,ha,fa+(ga<<2)|0);c[e>>2]=c[r>>2];aa=32;break}case 77:{c[F>>2]=c[f>>2];c[m+0>>2]=c[F+0>>2];Fi(d,j+4|0,e,m,h,$);aa=32;break}case 83:{c[O>>2]=c[f>>2];c[m+0>>2]=c[O+0>>2];Ii(d,j,e,m,h,$);aa=32;break}case 112:{c[H>>2]=c[f>>2];c[m+0>>2]=c[H+0>>2];Hi(d,j+8|0,e,m,h,$);aa=32;break}case 65:case 97:{c[p>>2]=c[f>>2];c[m+0>>2]=c[p+0>>2];ui(d,j+24|0,e,m,h,$);aa=32;break}default:{c[h>>2]=c[h>>2]|4;aa=32}}while(0);if((aa|0)==32)c[b>>2]=c[e>>2];i=l;return}function Ai(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];j=bn(d,h,f,g,2)|0;g=c[f>>2]|0;if((g&4|0)==0&(j|0)>0&(j|0)<32)c[b>>2]=j;else c[f>>2]=g|4;i=a;return}function Bi(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];j=bn(d,h,f,g,2)|0;g=c[f>>2]|0;if((g&4|0)==0&(j|0)<24)c[b>>2]=j;else c[f>>2]=g|4;i=a;return}function Ci(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];j=bn(d,h,f,g,2)|0;g=c[f>>2]|0;if((g&4|0)==0&(j|0)>0&(j|0)<13)c[b>>2]=j;else c[f>>2]=g|4;i=a;return}function Di(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];j=bn(d,h,f,g,3)|0;g=c[f>>2]|0;if((g&4|0)==0&(j|0)<366)c[b>>2]=j;else c[f>>2]=g|4;i=a;return}function Ei(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];j=bn(d,h,f,g,2)|0;g=c[f>>2]|0;if((g&4|0)==0&(j|0)<13)c[b>>2]=j+-1;else c[f>>2]=g|4;i=a;return}function Fi(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];j=bn(d,h,f,g,2)|0;g=c[f>>2]|0;if((g&4|0)==0&(j|0)<60)c[b>>2]=j;else c[f>>2]=g|4;i=a;return}function Gi(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;a:while(1){a=c[b>>2]|0;do if(a){g=c[a+12>>2]|0;if((g|0)==(c[a+16>>2]|0))h=fc[c[(c[a>>2]|0)+36>>2]&127](a)|0;else h=c[g>>2]|0;if((h|0)==-1){c[b>>2]=0;i=1;break}else{i=(c[b>>2]|0)==0;break}}else i=1;while(0);a=c[d>>2]|0;do if(a){g=c[a+12>>2]|0;if((g|0)==(c[a+16>>2]|0))j=fc[c[(c[a>>2]|0)+36>>2]&127](a)|0;else j=c[g>>2]|0;if((j|0)!=-1)if(i){k=a;break}else{l=a;break a}else{c[d>>2]=0;m=15;break}}else m=15;while(0);if((m|0)==15){m=0;if(i){l=0;break}else k=0}a=c[b>>2]|0;g=c[a+12>>2]|0;if((g|0)==(c[a+16>>2]|0))n=fc[c[(c[a>>2]|0)+36>>2]&127](a)|0;else n=c[g>>2]|0;if(!($b[c[(c[f>>2]|0)+12>>2]&31](f,8192,n)|0)){l=k;break}g=c[b>>2]|0;a=g+12|0;o=c[a>>2]|0;if((o|0)==(c[g+16>>2]|0)){fc[c[(c[g>>2]|0)+40>>2]&127](g)|0;continue}else{c[a>>2]=o+4;continue}}k=c[b>>2]|0;do if(k){n=c[k+12>>2]|0;if((n|0)==(c[k+16>>2]|0))p=fc[c[(c[k>>2]|0)+36>>2]&127](k)|0;else p=c[n>>2]|0;if((p|0)==-1){c[b>>2]=0;q=1;break}else{q=(c[b>>2]|0)==0;break}}else q=1;while(0);do if(l){b=c[l+12>>2]|0;if((b|0)==(c[l+16>>2]|0))r=fc[c[(c[l>>2]|0)+36>>2]&127](l)|0;else r=c[b>>2]|0;if((r|0)!=-1)if(q)break;else{m=39;break}else{c[d>>2]=0;m=37;break}}else m=37;while(0);if((m|0)==37?q:0)m=39;if((m|0)==39)c[e>>2]=c[e>>2]|2;return}function Hi(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0;j=i;i=i+16|0;k=j+4|0;l=j;m=b+8|0;b=fc[c[(c[m>>2]|0)+8>>2]&127](m)|0;m=a[b>>0]|0;if(!(m&1))n=(m&255)>>>1;else n=c[b+4>>2]|0;m=a[b+12>>0]|0;if(!(m&1))o=(m&255)>>>1;else o=c[b+16>>2]|0;do if((n|0)!=(0-o|0)){c[l>>2]=c[f>>2];c[k+0>>2]=c[l+0>>2];m=Om(e,k,b,b+24|0,h,g,0)|0;p=c[d>>2]|0;if((m|0)==(b|0)&(p|0)==12){c[d>>2]=0;break}if((m-b|0)==12&(p|0)<12)c[d>>2]=p+12}else c[g>>2]=c[g>>2]|4;while(0);i=j;return}function Ii(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];j=bn(d,h,f,g,2)|0;g=c[f>>2]|0;if((g&4|0)==0&(j|0)<61)c[b>>2]=j;else c[f>>2]=g|4;i=a;return}function Ji(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];j=bn(d,h,f,g,1)|0;g=c[f>>2]|0;if((g&4|0)==0&(j|0)<7)c[b>>2]=j;else c[f>>2]=g|4;i=a;return}function Ki(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h+0>>2]=c[j+0>>2];j=bn(d,h,f,g,4)|0;if(!(c[f>>2]&4))c[b>>2]=j+-1900;i=a;return}function Li(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;a=c[b>>2]|0;do if(a){g=c[a+12>>2]|0;if((g|0)==(c[a+16>>2]|0))h=fc[c[(c[a>>2]|0)+36>>2]&127](a)|0;else h=c[g>>2]|0;if((h|0)==-1){c[b>>2]=0;i=1;break}else{i=(c[b>>2]|0)==0;break}}else i=1;while(0);h=c[d>>2]|0;do if(h){a=c[h+12>>2]|0;if((a|0)==(c[h+16>>2]|0))j=fc[c[(c[h>>2]|0)+36>>2]&127](h)|0;else j=c[a>>2]|0;if((j|0)!=-1)if(i){k=h;l=17;break}else{l=16;break}else{c[d>>2]=0;l=14;break}}else l=14;while(0);if((l|0)==14)if(i)l=16;else{k=0;l=17}a:do if((l|0)==16)c[e>>2]=c[e>>2]|6;else if((l|0)==17){i=c[b>>2]|0;h=c[i+12>>2]|0;if((h|0)==(c[i+16>>2]|0))m=fc[c[(c[i>>2]|0)+36>>2]&127](i)|0;else m=c[h>>2]|0;if(($b[c[(c[f>>2]|0)+52>>2]&31](f,m,0)|0)<<24>>24!=37){c[e>>2]=c[e>>2]|4;break}h=c[b>>2]|0;i=h+12|0;j=c[i>>2]|0;if((j|0)==(c[h+16>>2]|0)){fc[c[(c[h>>2]|0)+40>>2]&127](h)|0;n=c[b>>2]|0}else{c[i>>2]=j+4;n=h}do if(n){h=c[n+12>>2]|0;if((h|0)==(c[n+16>>2]|0))o=fc[c[(c[n>>2]|0)+36>>2]&127](n)|0;else o=c[h>>2]|0;if((o|0)==-1){c[b>>2]=0;p=1;break}else{p=(c[b>>2]|0)==0;break}}else p=1;while(0);do if(k){h=c[k+12>>2]|0;if((h|0)==(c[k+16>>2]|0))q=fc[c[(c[k>>2]|0)+36>>2]&127](k)|0;else q=c[h>>2]|0;if((q|0)!=-1)if(p)break a;else break;else{c[d>>2]=0;l=38;break}}else l=38;while(0);if((l|0)==38?!p:0)break;c[e>>2]=c[e>>2]|2}while(0);return}function Mi(a){a=a|0;var b=0;b=c[a>>2]|0;if((b|0)!=(Wg()|0))Kb(c[a>>2]|0);return}function Ni(a){a=a|0;Mi(a+8|0);return}function Oi(a){a=a|0;Mi(a+8|0);lp(a);return}function Pi(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0;g=i;i=i+112|0;f=g+4|0;l=g;c[l>>2]=f+100;Qi(d+8|0,f,l,h,j,k);k=c[l>>2]|0;l=c[e>>2]|0;if((f|0)==(k|0))m=l;else{e=f;f=l;while(1){l=a[e>>0]|0;do if(f){j=f+24|0;h=c[j>>2]|0;if((h|0)==(c[f+28>>2]|0)){d=(oc[c[(c[f>>2]|0)+52>>2]&15](f,l&255)|0)==-1;n=d?0:f;break}else{c[j>>2]=h+1;a[h>>0]=l;n=f;break}}else n=0;while(0);e=e+1|0;if((e|0)==(k|0)){m=n;break}else f=n}}c[b>>2]=m;i=g;return}function Qi(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;j=i;i=i+16|0;k=j;a[k>>0]=37;l=k+1|0;a[l>>0]=g;m=k+2|0;a[m>>0]=h;a[k+3>>0]=0;if(h<<24>>24){a[l>>0]=h;a[m>>0]=g}c[e>>2]=d+(Za(d|0,(c[e>>2]|0)-d|0,k|0,f|0,c[b>>2]|0)|0);i=j;return}function Ri(a){a=a|0;Mi(a+8|0);return}function Si(a){a=a|0;Mi(a+8|0);lp(a);return}function Ti(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0;f=i;i=i+416|0;e=f+8|0;k=f;c[k>>2]=e+400;Ui(b+8|0,e,k,g,h,j);j=c[k>>2]|0;k=c[d>>2]|0;if((e|0)==(j|0))l=k;else{d=e;e=k;while(1){k=c[d>>2]|0;if(!e)m=0;else{h=e+24|0;g=c[h>>2]|0;if((g|0)==(c[e+28>>2]|0))n=oc[c[(c[e>>2]|0)+52>>2]&15](e,k)|0;else{c[h>>2]=g+4;c[g>>2]=k;n=k}m=(n|0)==-1?0:e}d=d+4|0;if((d|0)==(j|0)){l=m;break}else e=m}}c[a>>2]=l;i=f;return}function Ui(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+128|0;j=h+16|0;k=h+12|0;l=h;m=h+8|0;c[k>>2]=j+100;Qi(a,j,k,e,f,g);g=l;c[g>>2]=0;c[g+4>>2]=0;c[m>>2]=j;j=(c[d>>2]|0)-b>>2;g=cb(c[a>>2]|0)|0;a=Vo(b,m,j,l)|0;if(g)cb(g|0)|0;if((a|0)==-1)Qj(18752);else{c[d>>2]=b+(a<<2);i=h;return}}function Vi(a){a=a|0;return}function Wi(a){a=a|0;lp(a);return}function Xi(a){a=a|0;return 127}function Yi(a){a=a|0;return 127}function Zi(a,b){a=a|0;b=b|0;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;return}function _i(a,b){a=a|0;b=b|0;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;return}function $i(a,b){a=a|0;b=b|0;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;return}function aj(a,b){a=a|0;b=b|0;Me(a,1,45);return}function bj(a){a=a|0;return 0}function cj(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function dj(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function ej(a){a=a|0;return}function fj(a){a=a|0;lp(a);return}function gj(a){a=a|0;return 127}function hj(a){a=a|0;return 127}function ij(a,b){a=a|0;b=b|0;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;return}function jj(a,b){a=a|0;b=b|0;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;return}function kj(a,b){a=a|0;b=b|0;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;return}function lj(a,b){a=a|0;b=b|0;Me(a,1,45);return}function mj(a){a=a|0;return 0}function nj(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function oj(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function pj(a){a=a|0;return}function qj(a){a=a|0;lp(a);return}function rj(a){a=a|0;return 2147483647}function sj(a){a=a|0;return 2147483647}function tj(a,b){a=a|0;b=b|0;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;return}function uj(a,b){a=a|0;b=b|0;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;return}function vj(a,b){a=a|0;b=b|0;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;return}function wj(a,b){a=a|0;b=b|0;_e(a,1,45);return}function xj(a){a=a|0;return 0}function yj(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function zj(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function Aj(a){a=a|0;return}function Bj(a){a=a|0;lp(a);return}function Cj(a){a=a|0;return 2147483647}function Dj(a){a=a|0;return 2147483647}function Ej(a,b){a=a|0;b=b|0;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;return}function Fj(a,b){a=a|0;b=b|0;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;return}function Gj(a,b){a=a|0;b=b|0;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;return}function Hj(a,b){a=a|0;b=b|0;_e(a,1,45);return}function Ij(a){a=a|0;return 0}function Jj(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function Kj(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function Lj(a){a=a|0;return}function Mj(a){a=a|0;lp(a);return}function Nj(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;d=i;i=i+240|0;l=d;m=d+136|0;n=d+16|0;o=d+12|0;p=d+8|0;q=d+134|0;r=d+4|0;s=d+124|0;t=d+24|0;c[n>>2]=m;u=n+4|0;c[u>>2]=112;mf(p,h);v=Ik(p,17872)|0;a[q>>0]=0;c[r>>2]=c[f>>2];w=c[h+4>>2]|0;c[l+0>>2]=c[r+0>>2];do if(Pj(e,l,g,p,w,j,q,v,n,o,m+100|0)|0){lc[c[(c[v>>2]|0)+32>>2]&7](v,17488,17498,s)|0;r=c[o>>2]|0;h=c[n>>2]|0;x=r-h|0;if((x|0)>98){y=kq(x+2|0)|0;if(!y)fq();else{z=y;A=y}}else{z=0;A=t}if(!(a[q>>0]|0))B=A;else{a[A>>0]=45;B=A+1|0}if(h>>>0<r>>>0){r=s+10|0;y=s;x=B;C=h;while(1){h=a[C>>0]|0;D=s;while(1){if((a[D>>0]|0)==h<<24>>24){E=D;break}D=D+1|0;if((D|0)==(r|0)){E=r;break}}a[x>>0]=a[17488+(E-y)>>0]|0;C=C+1|0;D=x+1|0;if(C>>>0>=(c[o>>2]|0)>>>0){F=D;break}else x=D}}else F=B;a[F>>0]=0;c[l>>2]=k;if((_o(t,17504,l)|0)==1){lq(z);break}else Qj(17512)}while(0);z=c[e>>2]|0;do if(z)if((c[z+12>>2]|0)==(c[z+16>>2]|0))if((fc[c[(c[z>>2]|0)+36>>2]&127](z)|0)==-1){c[e>>2]=0;G=0;break}else{G=c[e>>2]|0;break}else G=z;else G=0;while(0);z=(G|0)==0;G=c[f>>2]|0;do if(G){if((c[G+12>>2]|0)!=(c[G+16>>2]|0))if(z)break;else{H=28;break}if((fc[c[(c[G>>2]|0)+36>>2]&127](G)|0)!=-1)if(z)break;else{H=28;break}else{c[f>>2]=0;H=26;break}}else H=26;while(0);if((H|0)==26?z:0)H=28;if((H|0)==28)c[j>>2]=c[j>>2]|2;c[b>>2]=c[e>>2];ue(c[p>>2]|0)|0;p=c[n>>2]|0;c[n>>2]=0;if(p)cc[c[u>>2]&127](p);i=d;return}function Oj(a){a=a|0;return}function Pj(e,f,g,h,j,k,l,m,n,o,p){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;var q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0;q=i;i=i+512|0;r=q+488|0;s=q+88|0;t=q+80|0;u=q+72|0;v=q+68|0;w=q+496|0;x=q+493|0;y=q+492|0;z=q+56|0;A=q+44|0;B=q+32|0;C=q+20|0;D=q+8|0;E=q+4|0;F=q;c[r>>2]=p;c[t>>2]=s;p=t+4|0;c[p>>2]=112;c[u>>2]=s;c[v>>2]=s+400;c[z+0>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;c[A+0>>2]=0;c[A+4>>2]=0;c[A+8>>2]=0;c[B+0>>2]=0;c[B+4>>2]=0;c[B+8>>2]=0;c[C+0>>2]=0;c[C+4>>2]=0;c[C+8>>2]=0;c[D+0>>2]=0;c[D+4>>2]=0;c[D+8>>2]=0;Sj(g,h,w,x,y,z,A,B,C,E);c[o>>2]=c[n>>2];h=m+8|0;m=C+4|0;g=C+8|0;G=B+4|0;H=B+8|0;I=(j&512|0)!=0;j=A+1|0;J=A+8|0;K=A+4|0;L=D+1|0;M=D+8|0;N=D+4|0;O=w+3|0;P=z+4|0;Q=s;s=0;R=0;a:while(1){S=c[e>>2]|0;do if(S)if((c[S+12>>2]|0)==(c[S+16>>2]|0))if((fc[c[(c[S>>2]|0)+36>>2]&127](S)|0)==-1){c[e>>2]=0;T=0;break}else{T=c[e>>2]|0;break}else T=S;else T=0;while(0);S=(T|0)==0;U=c[f>>2]|0;do if(U){if((c[U+12>>2]|0)!=(c[U+16>>2]|0))if(S)break;else{V=Q;W=R;X=259;break a}if((fc[c[(c[U>>2]|0)+36>>2]&127](U)|0)!=-1)if(S^(c[f>>2]|0)==0)break;else{V=Q;W=R;X=259;break a}else{c[f>>2]=0;X=12;break}}else X=12;while(0);if((X|0)==12?(X=0,S):0){V=Q;W=R;X=259;break}b:do switch(a[w+s>>0]|0){case 2:{if(!((R|0)!=0|s>>>0<2)){if((s|0)==2)Y=(a[O>>0]|0)!=0;else Y=0;if(!(I|Y)){Z=Q;_=0;break b}}U=a[A>>0]|0;$=(U&1)==0;aa=$?j:c[J>>2]|0;c:do if((s|0)!=0?(d[w+(s+-1)>>0]|0)<2:0){ba=(U&255)>>>1;ca=c[h>>2]|0;da=c[J>>2]|0;ea=c[K>>2]|0;fa=aa;while(1){if((fa|0)==(($?j:da)+($?ba:ea)|0)){ga=fa;break}ha=a[fa>>0]|0;if(ha<<24>>24<=-1){ga=fa;break}if(!(b[ca+(ha<<24>>24<<1)>>1]&8192)){ga=fa;break}else fa=fa+1|0}fa=ga-($?j:da)|0;ca=a[D>>0]|0;ea=(ca&1)==0;if(ea)ia=(ca&255)>>>1;else ia=c[N>>2]|0;d:do if(fa>>>0<=ia>>>0){if(ea){ja=L;ka=(ca&255)>>>1;la=D+(((ca&255)>>>1)-fa)+1|0}else{ba=c[M>>2]|0;ha=c[N>>2]|0;ja=ba;ka=ha;la=ba+(ha-fa)|0}ha=ja+ka|0;if((la|0)==(ha|0)){ma=U;na=ga;break c}else{oa=la;pa=$?j:da}while(1){if((a[oa>>0]|0)!=(a[pa>>0]|0))break d;oa=oa+1|0;if((oa|0)==(ha|0)){ma=U;na=ga;break c}else pa=pa+1|0}}while(0);ma=U;na=$?j:da}else{ma=U;na=aa}while(0);e:while(1){if(!(ma&1)){qa=j;ra=(ma&255)>>>1}else{qa=c[J>>2]|0;ra=c[K>>2]|0}if((na|0)==(qa+ra|0)){sa=na;break}aa=c[e>>2]|0;do if(aa)if((c[aa+12>>2]|0)==(c[aa+16>>2]|0))if((fc[c[(c[aa>>2]|0)+36>>2]&127](aa)|0)==-1){c[e>>2]=0;ta=0;break}else{ta=c[e>>2]|0;break}else ta=aa;else ta=0;while(0);aa=(ta|0)==0;da=c[f>>2]|0;do if(da){if((c[da+12>>2]|0)!=(c[da+16>>2]|0))if(aa)break;else{sa=na;break e}if((fc[c[(c[da>>2]|0)+36>>2]&127](da)|0)!=-1)if(aa^(c[f>>2]|0)==0)break;else{sa=na;break e}else{c[f>>2]=0;X=158;break}}else X=158;while(0);if((X|0)==158?(X=0,aa):0){sa=na;break}da=c[e>>2]|0;U=c[da+12>>2]|0;if((U|0)==(c[da+16>>2]|0))ua=fc[c[(c[da>>2]|0)+36>>2]&127](da)|0;else ua=d[U>>0]|0;if((ua&255)<<24>>24!=(a[na>>0]|0)){sa=na;break}U=c[e>>2]|0;da=U+12|0;$=c[da>>2]|0;if(($|0)==(c[U+16>>2]|0))fc[c[(c[U>>2]|0)+40>>2]&127](U)|0;else c[da>>2]=$+1;ma=a[A>>0]|0;na=na+1|0}if(I){$=a[A>>0]|0;if(!($&1)){va=j;wa=($&255)>>>1}else{va=c[J>>2]|0;wa=c[K>>2]|0}if((sa|0)!=(va+wa|0)){X=173;break a}else{Z=Q;_=R}}else{Z=Q;_=R}break}case 1:{if((s|0)==3){V=Q;W=R;X=259;break a}$=c[e>>2]|0;da=c[$+12>>2]|0;if((da|0)==(c[$+16>>2]|0))xa=fc[c[(c[$>>2]|0)+36>>2]&127]($)|0;else xa=d[da>>0]|0;if((xa&255)<<24>>24<=-1){X=26;break a}if(!(b[(c[h>>2]|0)+(xa<<24>>24<<1)>>1]&8192)){X=26;break a}da=c[e>>2]|0;$=da+12|0;U=c[$>>2]|0;if((U|0)==(c[da+16>>2]|0))ya=fc[c[(c[da>>2]|0)+40>>2]&127](da)|0;else{c[$>>2]=U+1;ya=d[U>>0]|0}Ve(D,ya&255);X=27;break}case 0:{X=27;break}case 4:{U=a[y>>0]|0;$=Q;da=0;f:while(1){fa=c[e>>2]|0;do if(fa)if((c[fa+12>>2]|0)==(c[fa+16>>2]|0))if((fc[c[(c[fa>>2]|0)+36>>2]&127](fa)|0)==-1){c[e>>2]=0;za=0;break}else{za=c[e>>2]|0;break}else za=fa;else za=0;while(0);fa=(za|0)==0;aa=c[f>>2]|0;do if(aa){if((c[aa+12>>2]|0)!=(c[aa+16>>2]|0))if(fa)break;else{Aa=$;Ba=da;break f}if((fc[c[(c[aa>>2]|0)+36>>2]&127](aa)|0)!=-1)if(fa^(c[f>>2]|0)==0)break;else{Aa=$;Ba=da;break f}else{c[f>>2]=0;X=184;break}}else X=184;while(0);if((X|0)==184?(X=0,fa):0){Aa=$;Ba=da;break}aa=c[e>>2]|0;ca=c[aa+12>>2]|0;if((ca|0)==(c[aa+16>>2]|0))Ca=fc[c[(c[aa>>2]|0)+36>>2]&127](aa)|0;else Ca=d[ca>>0]|0;ca=Ca&255;if(ca<<24>>24>-1?(b[(c[h>>2]|0)+(Ca<<24>>24<<1)>>1]&2048)!=0:0){aa=c[o>>2]|0;if((aa|0)==(c[r>>2]|0)){cn(n,o,r);Da=c[o>>2]|0}else Da=aa;c[o>>2]=Da+1;a[Da>>0]=ca;Ea=$;Fa=da+1|0}else{aa=a[z>>0]|0;if(!(aa&1))Ga=(aa&255)>>>1;else Ga=c[P>>2]|0;if(!((Ga|0)!=0&(da|0)!=0&ca<<24>>24==U<<24>>24)){Aa=$;Ba=da;break}if(($|0)==(c[v>>2]|0)){dn(t,u,v);Ha=c[u>>2]|0}else Ha=$;ca=Ha+4|0;c[u>>2]=ca;c[Ha>>2]=da;Ea=ca;Fa=0}ca=c[e>>2]|0;aa=ca+12|0;ea=c[aa>>2]|0;if((ea|0)==(c[ca+16>>2]|0)){fc[c[(c[ca>>2]|0)+40>>2]&127](ca)|0;$=Ea;da=Fa;continue}else{c[aa>>2]=ea+1;$=Ea;da=Fa;continue}}if((Ba|0)!=0?(c[t>>2]|0)!=(Aa|0):0){if((Aa|0)==(c[v>>2]|0)){dn(t,u,v);Ia=c[u>>2]|0}else Ia=Aa;da=Ia+4|0;c[u>>2]=da;c[Ia>>2]=Ba;Ja=da}else Ja=Aa;da=c[E>>2]|0;if((da|0)>0){$=c[e>>2]|0;do if($)if((c[$+12>>2]|0)==(c[$+16>>2]|0))if((fc[c[(c[$>>2]|0)+36>>2]&127]($)|0)==-1){c[e>>2]=0;Ka=0;break}else{Ka=c[e>>2]|0;break}else Ka=$;else Ka=0;while(0);$=(Ka|0)==0;U=c[f>>2]|0;do if(U){if((c[U+12>>2]|0)!=(c[U+16>>2]|0))if($)break;else{X=225;break a}if((fc[c[(c[U>>2]|0)+36>>2]&127](U)|0)!=-1)if($^(c[f>>2]|0)==0)break;else{X=225;break a}else{c[f>>2]=0;X=219;break}}else X=219;while(0);if((X|0)==219?(X=0,$):0){X=225;break a}U=c[e>>2]|0;ea=c[U+12>>2]|0;if((ea|0)==(c[U+16>>2]|0))La=fc[c[(c[U>>2]|0)+36>>2]&127](U)|0;else La=d[ea>>0]|0;if((La&255)<<24>>24!=(a[x>>0]|0)){X=225;break a}ea=c[e>>2]|0;U=ea+12|0;aa=c[U>>2]|0;if((aa|0)==(c[ea+16>>2]|0)){fc[c[(c[ea>>2]|0)+40>>2]&127](ea)|0;Ma=da}else{c[U>>2]=aa+1;Ma=da}do{aa=c[e>>2]|0;do if(aa)if((c[aa+12>>2]|0)==(c[aa+16>>2]|0))if((fc[c[(c[aa>>2]|0)+36>>2]&127](aa)|0)==-1){c[e>>2]=0;Na=0;break}else{Na=c[e>>2]|0;break}else Na=aa;else Na=0;while(0);aa=(Na|0)==0;fa=c[f>>2]|0;do if(fa){if((c[fa+12>>2]|0)!=(c[fa+16>>2]|0))if(aa)break;else{X=246;break a}if((fc[c[(c[fa>>2]|0)+36>>2]&127](fa)|0)!=-1)if(aa^(c[f>>2]|0)==0)break;else{X=246;break a}else{c[f>>2]=0;X=239;break}}else X=239;while(0);if((X|0)==239?(X=0,aa):0){X=246;break a}fa=c[e>>2]|0;U=c[fa+12>>2]|0;if((U|0)==(c[fa+16>>2]|0))Oa=fc[c[(c[fa>>2]|0)+36>>2]&127](fa)|0;else Oa=d[U>>0]|0;if((Oa&255)<<24>>24<=-1){X=246;break a}if(!(b[(c[h>>2]|0)+(Oa<<24>>24<<1)>>1]&2048)){X=246;break a}if((c[o>>2]|0)==(c[r>>2]|0))cn(n,o,r);U=c[e>>2]|0;fa=c[U+12>>2]|0;if((fa|0)==(c[U+16>>2]|0))Pa=fc[c[(c[U>>2]|0)+36>>2]&127](U)|0;else Pa=d[fa>>0]|0;fa=c[o>>2]|0;c[o>>2]=fa+1;a[fa>>0]=Pa;Ma=Ma+-1|0;c[E>>2]=Ma;fa=c[e>>2]|0;U=fa+12|0;ea=c[U>>2]|0;if((ea|0)==(c[fa+16>>2]|0))fc[c[(c[fa>>2]|0)+40>>2]&127](fa)|0;else c[U>>2]=ea+1}while((Ma|0)>0)}if((c[o>>2]|0)==(c[n>>2]|0)){X=257;break a}else{Z=Ja;_=R}break}case 3:{da=b[B>>1]|0;$=da&255;ea=($&1)==0;U=(da&65535)>>>8&255;if(ea)Qa=(da&254)>>>1;else Qa=c[G>>2]|0;fa=b[C>>1]|0;ca=fa&255;ha=(ca&1)==0;ba=(fa&65535)>>>8&255;if(ha)Ra=(fa&254)>>>1;else Ra=c[m>>2]|0;if((Qa|0)==(0-Ra|0)){Z=Q;_=R}else{if(ea)Sa=(da&254)>>>1;else Sa=c[G>>2]|0;if(Sa){if(ha)Ta=(fa&254)>>>1;else Ta=c[m>>2]|0;if(Ta){fa=c[e>>2]|0;ha=c[fa+12>>2]|0;if((ha|0)==(c[fa+16>>2]|0)){Ua=fc[c[(c[fa>>2]|0)+36>>2]&127](fa)|0;fa=b[B>>1]|0;Va=Ua;Wa=fa&255;Xa=(fa&65535)>>>8&255}else{Va=d[ha>>0]|0;Wa=$;Xa=U}if(!(Wa&1))Ya=Xa;else Ya=a[c[H>>2]>>0]|0;ha=c[e>>2]|0;fa=ha+12|0;Ua=c[fa>>2]|0;Za=(Ua|0)==(c[ha+16>>2]|0);if((Va&255)<<24>>24==Ya<<24>>24){if(Za)fc[c[(c[ha>>2]|0)+40>>2]&127](ha)|0;else c[fa>>2]=Ua+1;fa=a[B>>0]|0;if(!(fa&1))_a=(fa&255)>>>1;else _a=c[G>>2]|0;Z=Q;_=_a>>>0>1?B:R;break b}if(Za)$a=fc[c[(c[ha>>2]|0)+36>>2]&127](ha)|0;else $a=d[Ua>>0]|0;Ua=b[C>>1]|0;if(!(Ua&1))ab=(Ua&65535)>>>8&255;else ab=a[c[g>>2]>>0]|0;if(($a&255)<<24>>24!=ab<<24>>24){X=122;break a}Ua=c[e>>2]|0;ha=Ua+12|0;Za=c[ha>>2]|0;if((Za|0)==(c[Ua+16>>2]|0))fc[c[(c[Ua>>2]|0)+40>>2]&127](Ua)|0;else c[ha>>2]=Za+1;a[l>>0]=1;Za=a[C>>0]|0;if(!(Za&1))bb=(Za&255)>>>1;else bb=c[m>>2]|0;Z=Q;_=bb>>>0>1?C:R;break b}}if(ea)cb=(da&254)>>>1;else cb=c[G>>2]|0;da=c[e>>2]|0;ea=c[da+12>>2]|0;Za=(ea|0)==(c[da+16>>2]|0);if(!cb){if(Za){ha=fc[c[(c[da>>2]|0)+36>>2]&127](da)|0;Ua=b[C>>1]|0;db=ha;eb=Ua&255;fb=(Ua&65535)>>>8&255}else{db=d[ea>>0]|0;eb=ca;fb=ba}if(!(eb&1))gb=fb;else gb=a[c[g>>2]>>0]|0;if((db&255)<<24>>24!=gb<<24>>24){Z=Q;_=R;break b}ba=c[e>>2]|0;ca=ba+12|0;Ua=c[ca>>2]|0;if((Ua|0)==(c[ba+16>>2]|0))fc[c[(c[ba>>2]|0)+40>>2]&127](ba)|0;else c[ca>>2]=Ua+1;a[l>>0]=1;Ua=a[C>>0]|0;if(!(Ua&1))hb=(Ua&255)>>>1;else hb=c[m>>2]|0;Z=Q;_=hb>>>0>1?C:R;break b}if(Za){Za=fc[c[(c[da>>2]|0)+36>>2]&127](da)|0;da=b[B>>1]|0;ib=Za;jb=da&255;kb=(da&65535)>>>8&255}else{ib=d[ea>>0]|0;jb=$;kb=U}if(!(jb&1))lb=kb;else lb=a[c[H>>2]>>0]|0;if((ib&255)<<24>>24!=lb<<24>>24){a[l>>0]=1;Z=Q;_=R;break b}U=c[e>>2]|0;$=U+12|0;ea=c[$>>2]|0;if((ea|0)==(c[U+16>>2]|0))fc[c[(c[U>>2]|0)+40>>2]&127](U)|0;else c[$>>2]=ea+1;ea=a[B>>0]|0;if(!(ea&1))mb=(ea&255)>>>1;else mb=c[G>>2]|0;Z=Q;_=mb>>>0>1?B:R}break}default:{Z=Q;_=R}}while(0);g:do if((X|0)==27){X=0;if((s|0)==3){V=Q;W=R;X=259;break a}while(1){S=c[e>>2]|0;do if(S)if((c[S+12>>2]|0)==(c[S+16>>2]|0))if((fc[c[(c[S>>2]|0)+36>>2]&127](S)|0)==-1){c[e>>2]=0;nb=0;break}else{nb=c[e>>2]|0;break}else nb=S;else nb=0;while(0);S=(nb|0)==0;aa=c[f>>2]|0;do if(aa){if((c[aa+12>>2]|0)!=(c[aa+16>>2]|0))if(S)break;else{Z=Q;_=R;break g}if((fc[c[(c[aa>>2]|0)+36>>2]&127](aa)|0)!=-1)if(S^(c[f>>2]|0)==0)break;else{Z=Q;_=R;break g}else{c[f>>2]=0;X=38;break}}else X=38;while(0);if((X|0)==38?(X=0,S):0){Z=Q;_=R;break g}aa=c[e>>2]|0;ea=c[aa+12>>2]|0;if((ea|0)==(c[aa+16>>2]|0))ob=fc[c[(c[aa>>2]|0)+36>>2]&127](aa)|0;else ob=d[ea>>0]|0;if((ob&255)<<24>>24<=-1){Z=Q;_=R;break g}if(!(b[(c[h>>2]|0)+(ob<<24>>24<<1)>>1]&8192)){Z=Q;_=R;break g}ea=c[e>>2]|0;aa=ea+12|0;$=c[aa>>2]|0;if(($|0)==(c[ea+16>>2]|0))pb=fc[c[(c[ea>>2]|0)+40>>2]&127](ea)|0;else{c[aa>>2]=$+1;pb=d[$>>0]|0}Ve(D,pb&255)}}while(0);s=s+1|0;if(s>>>0>=4){V=Z;W=_;X=259;break}else{Q=Z;R=_}}h:do if((X|0)==26){c[k>>2]=c[k>>2]|4;qb=0}else if((X|0)==122){c[k>>2]=c[k>>2]|4;qb=0}else if((X|0)==173){c[k>>2]=c[k>>2]|4;qb=0}else if((X|0)==225){c[k>>2]=c[k>>2]|4;qb=0}else if((X|0)==246){c[k>>2]=c[k>>2]|4;qb=0}else if((X|0)==257){c[k>>2]=c[k>>2]|4;qb=0}else if((X|0)==259){i:do if(W){_=W+1|0;R=W+8|0;Z=W+4|0;Q=1;j:while(1){s=a[W>>0]|0;if(!(s&1))rb=(s&255)>>>1;else rb=c[Z>>2]|0;if(Q>>>0>=rb>>>0)break i;s=c[e>>2]|0;do if(s)if((c[s+12>>2]|0)==(c[s+16>>2]|0))if((fc[c[(c[s>>2]|0)+36>>2]&127](s)|0)==-1){c[e>>2]=0;sb=0;break}else{sb=c[e>>2]|0;break}else sb=s;else sb=0;while(0);s=(sb|0)==0;S=c[f>>2]|0;do if(S){if((c[S+12>>2]|0)!=(c[S+16>>2]|0))if(s)break;else break j;if((fc[c[(c[S>>2]|0)+36>>2]&127](S)|0)!=-1)if(s^(c[f>>2]|0)==0)break;else break j;else{c[f>>2]=0;X=275;break}}else X=275;while(0);if((X|0)==275?(X=0,s):0)break;S=c[e>>2]|0;pb=c[S+12>>2]|0;if((pb|0)==(c[S+16>>2]|0))tb=fc[c[(c[S>>2]|0)+36>>2]&127](S)|0;else tb=d[pb>>0]|0;if(!(a[W>>0]&1))ub=_;else ub=c[R>>2]|0;if((tb&255)<<24>>24!=(a[ub+Q>>0]|0))break;pb=Q+1|0;S=c[e>>2]|0;ob=S+12|0;h=c[ob>>2]|0;if((h|0)==(c[S+16>>2]|0)){fc[c[(c[S>>2]|0)+40>>2]&127](S)|0;Q=pb;continue}else{c[ob>>2]=h+1;Q=pb;continue}}c[k>>2]=c[k>>2]|4;qb=0;break h}while(0);Q=c[t>>2]|0;if((Q|0)!=(V|0)?(c[F>>2]=0,Tj(z,Q,V,F),(c[F>>2]|0)!=0):0){c[k>>2]=c[k>>2]|4;qb=0}else qb=1}while(0);Oe(D);Oe(C);Oe(B);Oe(A);Oe(z);z=c[t>>2]|0;c[t>>2]=0;if(z)cc[c[p>>2]&127](z);i=q;return qb|0}function Qj(a){a=a|0;var b=0;b=Ia(8)|0;xe(b,a);Xb(b|0,26432,99)}function Rj(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;d=i;i=i+144|0;l=d+24|0;m=d+32|0;n=d+16|0;o=d+8|0;p=d+4|0;q=d+28|0;r=d;c[n>>2]=m;s=n+4|0;c[s>>2]=112;mf(p,h);t=Ik(p,17872)|0;a[q>>0]=0;u=c[f>>2]|0;c[r>>2]=u;v=c[h+4>>2]|0;c[l+0>>2]=c[r+0>>2];if(Pj(e,l,g,p,v,j,q,t,n,o,m+100|0)|0){if(!(a[k>>0]&1)){a[k+1>>0]=0;a[k>>0]=0}else{a[c[k+8>>2]>>0]=0;c[k+4>>2]=0}if(a[q>>0]|0)Ve(k,oc[c[(c[t>>2]|0)+28>>2]&15](t,45)|0);q=oc[c[(c[t>>2]|0)+28>>2]&15](t,48)|0;t=c[n>>2]|0;m=c[o>>2]|0;o=m+-1|0;a:do if(t>>>0<o>>>0){v=t;while(1){g=v+1|0;if((a[v>>0]|0)!=q<<24>>24){w=v;break a}if(g>>>0<o>>>0)v=g;else{w=g;break}}}else w=t;while(0);en(k,w,m)|0}m=c[e>>2]|0;do if(m)if((c[m+12>>2]|0)==(c[m+16>>2]|0))if((fc[c[(c[m>>2]|0)+36>>2]&127](m)|0)==-1){c[e>>2]=0;x=0;break}else{x=c[e>>2]|0;break}else x=m;else x=0;while(0);m=(x|0)==0;do if(u){if((c[u+12>>2]|0)!=(c[u+16>>2]|0))if(m)break;else{y=23;break}if((fc[c[(c[u>>2]|0)+36>>2]&127](u)|0)!=-1)if(m^(u|0)==0)break;else{y=23;break}else{c[f>>2]=0;y=21;break}}else y=21;while(0);if((y|0)==21?m:0)y=23;if((y|0)==23)c[j>>2]=c[j>>2]|2;c[b>>2]=c[e>>2];ue(c[p>>2]|0)|0;p=c[n>>2]|0;c[n>>2]=0;if(p)cc[c[s>>2]&127](p);i=d;return}function Sj(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;n=i;i=i+112|0;o=n+100|0;p=n+88|0;q=n+76|0;r=n+64|0;s=n+52|0;t=n+48|0;u=n+36|0;v=n+24|0;w=n+12|0;x=n;if(b){b=Ik(d,17312)|0;dc[c[(c[b>>2]|0)+44>>2]&63](o,b);y=c[o>>2]|0;a[e>>0]=y;a[e+1>>0]=y>>8;a[e+2>>0]=y>>16;a[e+3>>0]=y>>24;dc[c[(c[b>>2]|0)+32>>2]&63](p,b);if(!(a[l>>0]&1)){a[l+1>>0]=0;a[l>>0]=0}else{a[c[l+8>>2]>>0]=0;c[l+4>>2]=0}Te(l,0);c[l+0>>2]=c[p+0>>2];c[l+4>>2]=c[p+4>>2];c[l+8>>2]=c[p+8>>2];c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;Oe(p);dc[c[(c[b>>2]|0)+28>>2]&63](q,b);if(!(a[k>>0]&1)){a[k+1>>0]=0;a[k>>0]=0}else{a[c[k+8>>2]>>0]=0;c[k+4>>2]=0}Te(k,0);c[k+0>>2]=c[q+0>>2];c[k+4>>2]=c[q+4>>2];c[k+8>>2]=c[q+8>>2];c[q+0>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;Oe(q);a[f>>0]=fc[c[(c[b>>2]|0)+12>>2]&127](b)|0;a[g>>0]=fc[c[(c[b>>2]|0)+16>>2]&127](b)|0;dc[c[(c[b>>2]|0)+20>>2]&63](r,b);if(!(a[h>>0]&1)){a[h+1>>0]=0;a[h>>0]=0}else{a[c[h+8>>2]>>0]=0;c[h+4>>2]=0}Te(h,0);c[h+0>>2]=c[r+0>>2];c[h+4>>2]=c[r+4>>2];c[h+8>>2]=c[r+8>>2];c[r+0>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;Oe(r);dc[c[(c[b>>2]|0)+24>>2]&63](s,b);if(!(a[j>>0]&1)){a[j+1>>0]=0;a[j>>0]=0}else{a[c[j+8>>2]>>0]=0;c[j+4>>2]=0}Te(j,0);c[j+0>>2]=c[s+0>>2];c[j+4>>2]=c[s+4>>2];c[j+8>>2]=c[s+8>>2];c[s+0>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;Oe(s);z=fc[c[(c[b>>2]|0)+36>>2]&127](b)|0}else{b=Ik(d,17248)|0;dc[c[(c[b>>2]|0)+44>>2]&63](t,b);d=c[t>>2]|0;a[e>>0]=d;a[e+1>>0]=d>>8;a[e+2>>0]=d>>16;a[e+3>>0]=d>>24;dc[c[(c[b>>2]|0)+32>>2]&63](u,b);if(!(a[l>>0]&1)){a[l+1>>0]=0;a[l>>0]=0}else{a[c[l+8>>2]>>0]=0;c[l+4>>2]=0}Te(l,0);c[l+0>>2]=c[u+0>>2];c[l+4>>2]=c[u+4>>2];c[l+8>>2]=c[u+8>>2];c[u+0>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;Oe(u);dc[c[(c[b>>2]|0)+28>>2]&63](v,b);if(!(a[k>>0]&1)){a[k+1>>0]=0;a[k>>0]=0}else{a[c[k+8>>2]>>0]=0;c[k+4>>2]=0}Te(k,0);c[k+0>>2]=c[v+0>>2];c[k+4>>2]=c[v+4>>2];c[k+8>>2]=c[v+8>>2];c[v+0>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;Oe(v);a[f>>0]=fc[c[(c[b>>2]|0)+12>>2]&127](b)|0;a[g>>0]=fc[c[(c[b>>2]|0)+16>>2]&127](b)|0;dc[c[(c[b>>2]|0)+20>>2]&63](w,b);if(!(a[h>>0]&1)){a[h+1>>0]=0;a[h>>0]=0}else{a[c[h+8>>2]>>0]=0;c[h+4>>2]=0}Te(h,0);c[h+0>>2]=c[w+0>>2];c[h+4>>2]=c[w+4>>2];c[h+8>>2]=c[w+8>>2];c[w+0>>2]=0;c[w+4>>2]=0;c[w+8>>2]=0;Oe(w);dc[c[(c[b>>2]|0)+24>>2]&63](x,b);if(!(a[j>>0]&1)){a[j+1>>0]=0;a[j>>0]=0}else{a[c[j+8>>2]>>0]=0;c[j+4>>2]=0}Te(j,0);c[j+0>>2]=c[x+0>>2];c[j+4>>2]=c[x+4>>2];c[j+8>>2]=c[x+8>>2];c[x+0>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;Oe(x);z=fc[c[(c[b>>2]|0)+36>>2]&127](b)|0}c[m>>2]=z;i=n;return}function Tj(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;g=a[b>>0]|0;if(!(g&1))h=(g&255)>>>1;else h=c[b+4>>2]|0;a:do if(h){if((d|0)!=(e|0)?(i=e+-4|0,i>>>0>d>>>0):0){j=d;k=i;i=e;while(1){l=c[j>>2]|0;c[j>>2]=c[k>>2];c[k>>2]=l;j=j+4|0;l=i+-8|0;if(j>>>0>=l>>>0)break;else{m=k;k=l;i=m}}n=a[b>>0]|0}else n=g;if(!(n&1)){o=b+1|0;p=(n&255)>>>1}else{o=c[b+8>>2]|0;p=c[b+4>>2]|0}i=e+-4|0;k=a[o>>0]|0;j=k<<24>>24<1|k<<24>>24==127;b:do if(i>>>0>d>>>0){m=o+p|0;l=k;q=o;r=d;s=j;while(1){if(!s?(l<<24>>24|0)!=(c[r>>2]|0):0)break;q=(m-q|0)>1?q+1|0:q;r=r+4|0;t=a[q>>0]|0;u=t<<24>>24<1|t<<24>>24==127;if(r>>>0>=i>>>0){v=t;w=u;break b}else{l=t;s=u}}c[f>>2]=4;break a}else{v=k;w=j}while(0);if(!w?((c[i>>2]|0)+-1|0)>>>0>=v<<24>>24>>>0:0)c[f>>2]=4}while(0);return}function Uj(a){a=a|0;return}function Vj(a){a=a|0;lp(a);return}function Wj(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=i;i=i+576|0;l=d;m=d+72|0;n=d+64|0;o=d+56|0;p=d+52|0;q=d+572|0;r=d+48|0;s=d+8|0;t=d+472|0;c[n>>2]=m;u=n+4|0;c[u>>2]=112;mf(p,h);v=Ik(p,17864)|0;a[q>>0]=0;c[r>>2]=c[f>>2];w=c[h+4>>2]|0;c[l+0>>2]=c[r+0>>2];do if(Xj(e,l,g,p,w,j,q,v,n,o,m+400|0)|0){lc[c[(c[v>>2]|0)+48>>2]&7](v,17568,17578,s)|0;r=c[o>>2]|0;h=c[n>>2]|0;x=r-h|0;if((x|0)>392){y=kq((x>>2)+2|0)|0;if(!y)fq();else{z=y;A=y}}else{z=0;A=t}if(!(a[q>>0]|0))B=A;else{a[A>>0]=45;B=A+1|0}if(h>>>0<r>>>0){r=s+40|0;y=s;x=B;C=h;while(1){h=c[C>>2]|0;D=s;while(1){if((c[D>>2]|0)==(h|0)){E=D;break}D=D+4|0;if((D|0)==(r|0)){E=r;break}}a[x>>0]=a[17568+(E-y>>2)>>0]|0;C=C+4|0;D=x+1|0;if(C>>>0>=(c[o>>2]|0)>>>0){F=D;break}else x=D}}else F=B;a[F>>0]=0;c[l>>2]=k;if((_o(t,17504,l)|0)==1){lq(z);break}else Qj(17512)}while(0);z=c[e>>2]|0;do if(z){l=c[z+12>>2]|0;if((l|0)==(c[z+16>>2]|0))G=fc[c[(c[z>>2]|0)+36>>2]&127](z)|0;else G=c[l>>2]|0;if((G|0)==-1){c[e>>2]=0;H=1;break}else{H=(c[e>>2]|0)==0;break}}else H=1;while(0);G=c[f>>2]|0;do if(G){z=c[G+12>>2]|0;if((z|0)==(c[G+16>>2]|0))I=fc[c[(c[G>>2]|0)+36>>2]&127](G)|0;else I=c[z>>2]|0;if((I|0)!=-1)if(H)break;else{J=31;break}else{c[f>>2]=0;J=29;break}}else J=29;while(0);if((J|0)==29?H:0)J=31;if((J|0)==31)c[j>>2]=c[j>>2]|2;c[b>>2]=c[e>>2];ue(c[p>>2]|0)|0;p=c[n>>2]|0;c[n>>2]=0;if(p)cc[c[u>>2]&127](p);i=d;return}function Xj(b,e,f,g,h,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0;p=i;i=i+512|0;q=p+496|0;r=p+96|0;s=p+88|0;t=p+80|0;u=p+76|0;v=p+500|0;w=p+72|0;x=p+68|0;y=p+56|0;z=p+44|0;A=p+32|0;B=p+20|0;C=p+8|0;D=p+4|0;E=p;c[q>>2]=o;c[s>>2]=r;o=s+4|0;c[o>>2]=112;c[t>>2]=r;c[u>>2]=r+400;c[y+0>>2]=0;c[y+4>>2]=0;c[y+8>>2]=0;c[z+0>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;c[A+0>>2]=0;c[A+4>>2]=0;c[A+8>>2]=0;c[B+0>>2]=0;c[B+4>>2]=0;c[B+8>>2]=0;c[C+0>>2]=0;c[C+4>>2]=0;c[C+8>>2]=0;Zj(f,g,v,w,x,y,z,A,B,D);c[n>>2]=c[m>>2];g=B+4|0;f=B+8|0;F=A+4|0;G=A+8|0;H=(h&512|0)!=0;h=z+4|0;I=z+8|0;J=C+4|0;K=C+8|0;L=v+3|0;M=y+4|0;N=r;r=0;O=0;a:while(1){P=c[b>>2]|0;do if(P){Q=c[P+12>>2]|0;if((Q|0)==(c[P+16>>2]|0))R=fc[c[(c[P>>2]|0)+36>>2]&127](P)|0;else R=c[Q>>2]|0;if((R|0)==-1){c[b>>2]=0;S=1;break}else{S=(c[b>>2]|0)==0;break}}else S=1;while(0);P=c[e>>2]|0;do if(P){Q=c[P+12>>2]|0;if((Q|0)==(c[P+16>>2]|0))T=fc[c[(c[P>>2]|0)+36>>2]&127](P)|0;else T=c[Q>>2]|0;if((T|0)!=-1)if(S^(c[e>>2]|0)==0)break;else{U=N;V=O;W=267;break a}else{c[e>>2]=0;W=15;break}}else W=15;while(0);if((W|0)==15?(W=0,S):0){U=N;V=O;W=267;break}b:do switch(a[v+r>>0]|0){case 4:{P=c[x>>2]|0;Q=N;X=0;c:while(1){Y=c[b>>2]|0;do if(Y){Z=c[Y+12>>2]|0;if((Z|0)==(c[Y+16>>2]|0))_=fc[c[(c[Y>>2]|0)+36>>2]&127](Y)|0;else _=c[Z>>2]|0;if((_|0)==-1){c[b>>2]=0;$=1;break}else{$=(c[b>>2]|0)==0;break}}else $=1;while(0);Y=c[e>>2]|0;do if(Y){Z=c[Y+12>>2]|0;if((Z|0)==(c[Y+16>>2]|0))aa=fc[c[(c[Y>>2]|0)+36>>2]&127](Y)|0;else aa=c[Z>>2]|0;if((aa|0)!=-1)if($^(c[e>>2]|0)==0)break;else{ba=Q;ca=X;break c}else{c[e>>2]=0;W=188;break}}else W=188;while(0);if((W|0)==188?(W=0,$):0){ba=Q;ca=X;break}Y=c[b>>2]|0;Z=c[Y+12>>2]|0;if((Z|0)==(c[Y+16>>2]|0))da=fc[c[(c[Y>>2]|0)+36>>2]&127](Y)|0;else da=c[Z>>2]|0;if($b[c[(c[l>>2]|0)+12>>2]&31](l,2048,da)|0){Z=c[n>>2]|0;if((Z|0)==(c[q>>2]|0)){fn(m,n,q);ea=c[n>>2]|0}else ea=Z;c[n>>2]=ea+4;c[ea>>2]=da;fa=Q;ga=X+1|0}else{Z=a[y>>0]|0;if(!(Z&1))ha=(Z&255)>>>1;else ha=c[M>>2]|0;if(!((ha|0)!=0&(X|0)!=0&(da|0)==(P|0))){ba=Q;ca=X;break}if((Q|0)==(c[u>>2]|0)){dn(s,t,u);ia=c[t>>2]|0}else ia=Q;Z=ia+4|0;c[t>>2]=Z;c[ia>>2]=X;fa=Z;ga=0}Z=c[b>>2]|0;Y=Z+12|0;ja=c[Y>>2]|0;if((ja|0)==(c[Z+16>>2]|0)){fc[c[(c[Z>>2]|0)+40>>2]&127](Z)|0;Q=fa;X=ga;continue}else{c[Y>>2]=ja+4;Q=fa;X=ga;continue}}if((ca|0)!=0?(c[s>>2]|0)!=(ba|0):0){if((ba|0)==(c[u>>2]|0)){dn(s,t,u);ka=c[t>>2]|0}else ka=ba;X=ka+4|0;c[t>>2]=X;c[ka>>2]=ca;la=X}else la=ba;X=c[D>>2]|0;if((X|0)>0){Q=c[b>>2]|0;do if(Q){P=c[Q+12>>2]|0;if((P|0)==(c[Q+16>>2]|0))ma=fc[c[(c[Q>>2]|0)+36>>2]&127](Q)|0;else ma=c[P>>2]|0;if((ma|0)==-1){c[b>>2]=0;na=1;break}else{na=(c[b>>2]|0)==0;break}}else na=1;while(0);Q=c[e>>2]|0;do if(Q){P=c[Q+12>>2]|0;if((P|0)==(c[Q+16>>2]|0))oa=fc[c[(c[Q>>2]|0)+36>>2]&127](Q)|0;else oa=c[P>>2]|0;if((oa|0)!=-1)if(na^(c[e>>2]|0)==0)break;else{W=231;break a}else{c[e>>2]=0;W=225;break}}else W=225;while(0);if((W|0)==225?(W=0,na):0){W=231;break a}Q=c[b>>2]|0;P=c[Q+12>>2]|0;if((P|0)==(c[Q+16>>2]|0))pa=fc[c[(c[Q>>2]|0)+36>>2]&127](Q)|0;else pa=c[P>>2]|0;if((pa|0)!=(c[w>>2]|0)){W=231;break a}P=c[b>>2]|0;Q=P+12|0;ja=c[Q>>2]|0;if((ja|0)==(c[P+16>>2]|0)){fc[c[(c[P>>2]|0)+40>>2]&127](P)|0;qa=X}else{c[Q>>2]=ja+4;qa=X}do{ja=c[b>>2]|0;do if(ja){Q=c[ja+12>>2]|0;if((Q|0)==(c[ja+16>>2]|0))ra=fc[c[(c[ja>>2]|0)+36>>2]&127](ja)|0;else ra=c[Q>>2]|0;if((ra|0)==-1){c[b>>2]=0;sa=1;break}else{sa=(c[b>>2]|0)==0;break}}else sa=1;while(0);ja=c[e>>2]|0;do if(ja){Q=c[ja+12>>2]|0;if((Q|0)==(c[ja+16>>2]|0))ta=fc[c[(c[ja>>2]|0)+36>>2]&127](ja)|0;else ta=c[Q>>2]|0;if((ta|0)!=-1)if(sa^(c[e>>2]|0)==0)break;else{W=254;break a}else{c[e>>2]=0;W=248;break}}else W=248;while(0);if((W|0)==248?(W=0,sa):0){W=254;break a}ja=c[b>>2]|0;Q=c[ja+12>>2]|0;if((Q|0)==(c[ja+16>>2]|0))ua=fc[c[(c[ja>>2]|0)+36>>2]&127](ja)|0;else ua=c[Q>>2]|0;if(!($b[c[(c[l>>2]|0)+12>>2]&31](l,2048,ua)|0)){W=254;break a}if((c[n>>2]|0)==(c[q>>2]|0))fn(m,n,q);Q=c[b>>2]|0;ja=c[Q+12>>2]|0;if((ja|0)==(c[Q+16>>2]|0))va=fc[c[(c[Q>>2]|0)+36>>2]&127](Q)|0;else va=c[ja>>2]|0;ja=c[n>>2]|0;c[n>>2]=ja+4;c[ja>>2]=va;qa=qa+-1|0;c[D>>2]=qa;ja=c[b>>2]|0;Q=ja+12|0;P=c[Q>>2]|0;if((P|0)==(c[ja+16>>2]|0))fc[c[(c[ja>>2]|0)+40>>2]&127](ja)|0;else c[Q>>2]=P+4}while((qa|0)>0)}if((c[n>>2]|0)==(c[m>>2]|0)){W=265;break a}else{wa=la;xa=O}break}case 3:{X=a[A>>0]|0;P=(X&1)==0;if(P)ya=(X&255)>>>1;else ya=c[F>>2]|0;Q=a[B>>0]|0;ja=(Q&1)==0;if(ja)za=(Q&255)>>>1;else za=c[g>>2]|0;if((ya|0)==(0-za|0)){wa=N;xa=O}else{if(P)Aa=(X&255)>>>1;else Aa=c[F>>2]|0;if(Aa){if(ja)Ba=(Q&255)>>>1;else Ba=c[g>>2]|0;if(Ba){ja=c[b>>2]|0;Y=c[ja+12>>2]|0;if((Y|0)==(c[ja+16>>2]|0)){Z=fc[c[(c[ja>>2]|0)+36>>2]&127](ja)|0;Ca=Z;Da=a[A>>0]|0}else{Ca=c[Y>>2]|0;Da=X}Y=c[b>>2]|0;Z=Y+12|0;ja=c[Z>>2]|0;Ea=(ja|0)==(c[Y+16>>2]|0);if((Ca|0)==(c[((Da&1)==0?F:c[G>>2]|0)>>2]|0)){if(Ea)fc[c[(c[Y>>2]|0)+40>>2]&127](Y)|0;else c[Z>>2]=ja+4;Z=a[A>>0]|0;if(!(Z&1))Fa=(Z&255)>>>1;else Fa=c[F>>2]|0;wa=N;xa=Fa>>>0>1?A:O;break b}if(Ea)Ga=fc[c[(c[Y>>2]|0)+36>>2]&127](Y)|0;else Ga=c[ja>>2]|0;if((Ga|0)!=(c[((a[B>>0]&1)==0?g:c[f>>2]|0)>>2]|0)){W=117;break a}ja=c[b>>2]|0;Y=ja+12|0;Ea=c[Y>>2]|0;if((Ea|0)==(c[ja+16>>2]|0))fc[c[(c[ja>>2]|0)+40>>2]&127](ja)|0;else c[Y>>2]=Ea+4;a[k>>0]=1;Ea=a[B>>0]|0;if(!(Ea&1))Ha=(Ea&255)>>>1;else Ha=c[g>>2]|0;wa=N;xa=Ha>>>0>1?B:O;break b}}if(P)Ia=(X&255)>>>1;else Ia=c[F>>2]|0;P=c[b>>2]|0;Ea=c[P+12>>2]|0;Y=(Ea|0)==(c[P+16>>2]|0);if(!Ia){if(Y){ja=fc[c[(c[P>>2]|0)+36>>2]&127](P)|0;Ja=ja;Ka=a[B>>0]|0}else{Ja=c[Ea>>2]|0;Ka=Q}if((Ja|0)!=(c[((Ka&1)==0?g:c[f>>2]|0)>>2]|0)){wa=N;xa=O;break b}Q=c[b>>2]|0;ja=Q+12|0;Z=c[ja>>2]|0;if((Z|0)==(c[Q+16>>2]|0))fc[c[(c[Q>>2]|0)+40>>2]&127](Q)|0;else c[ja>>2]=Z+4;a[k>>0]=1;Z=a[B>>0]|0;if(!(Z&1))La=(Z&255)>>>1;else La=c[g>>2]|0;wa=N;xa=La>>>0>1?B:O;break b}if(Y){Y=fc[c[(c[P>>2]|0)+36>>2]&127](P)|0;Ma=Y;Na=a[A>>0]|0}else{Ma=c[Ea>>2]|0;Na=X}if((Ma|0)!=(c[((Na&1)==0?F:c[G>>2]|0)>>2]|0)){a[k>>0]=1;wa=N;xa=O;break b}X=c[b>>2]|0;Ea=X+12|0;Y=c[Ea>>2]|0;if((Y|0)==(c[X+16>>2]|0))fc[c[(c[X>>2]|0)+40>>2]&127](X)|0;else c[Ea>>2]=Y+4;Y=a[A>>0]|0;if(!(Y&1))Oa=(Y&255)>>>1;else Oa=c[F>>2]|0;wa=N;xa=Oa>>>0>1?A:O}break}case 1:{if((r|0)==3){U=N;V=O;W=267;break a}Y=c[b>>2]|0;Ea=c[Y+12>>2]|0;if((Ea|0)==(c[Y+16>>2]|0))Pa=fc[c[(c[Y>>2]|0)+36>>2]&127](Y)|0;else Pa=c[Ea>>2]|0;if(!($b[c[(c[l>>2]|0)+12>>2]&31](l,8192,Pa)|0)){W=28;break a}Ea=c[b>>2]|0;Y=Ea+12|0;X=c[Y>>2]|0;if((X|0)==(c[Ea+16>>2]|0))Qa=fc[c[(c[Ea>>2]|0)+40>>2]&127](Ea)|0;else{c[Y>>2]=X+4;Qa=c[X>>2]|0}ef(C,Qa);W=29;break}case 0:{W=29;break}case 2:{if(!((O|0)!=0|r>>>0<2)){if((r|0)==2)Ra=(a[L>>0]|0)!=0;else Ra=0;if(!(H|Ra)){wa=N;xa=0;break b}}X=a[z>>0]|0;Y=(X&1)==0?h:c[I>>2]|0;d:do if((r|0)!=0?(d[v+(r+-1)>>0]|0)<2:0){Ea=X;P=Y;while(1){if(!(Ea&1)){Sa=h;Ta=(Ea&255)>>>1}else{Sa=c[I>>2]|0;Ta=c[h>>2]|0}if((P|0)==(Sa+(Ta<<2)|0)){Ua=Ea;Va=P;break}if(!($b[c[(c[l>>2]|0)+12>>2]&31](l,8192,c[P>>2]|0)|0)){Wa=P;W=129;break}Ea=a[z>>0]|0;P=P+4|0}if((W|0)==129){W=0;Ua=a[z>>0]|0;Va=Wa}P=(Ua&1)==0;Ea=Va-(P?h:c[I>>2]|0)>>2;Z=a[C>>0]|0;ja=(Z&1)==0;if(ja)Xa=(Z&255)>>>1;else Xa=c[J>>2]|0;e:do if(Ea>>>0<=Xa>>>0){if(ja){Ya=J;Za=(Z&255)>>>1;_a=J+(((Z&255)>>>1)-Ea<<2)|0}else{Q=c[K>>2]|0;$a=c[J>>2]|0;Ya=Q;Za=$a;_a=Q+($a-Ea<<2)|0}$a=Ya+(Za<<2)|0;if((_a|0)==($a|0)){ab=Ua;bb=Va;break d}else{cb=_a;db=P?h:c[I>>2]|0}while(1){if((c[cb>>2]|0)!=(c[db>>2]|0))break e;cb=cb+4|0;if((cb|0)==($a|0)){ab=Ua;bb=Va;break d}else db=db+4|0}}while(0);ab=Ua;bb=P?h:c[I>>2]|0}else{ab=X;bb=Y}while(0);f:while(1){if(!(ab&1)){eb=h;fb=(ab&255)>>>1}else{eb=c[I>>2]|0;fb=c[h>>2]|0}if((bb|0)==(eb+(fb<<2)|0)){gb=bb;break}Y=c[b>>2]|0;do if(Y){X=c[Y+12>>2]|0;if((X|0)==(c[Y+16>>2]|0))hb=fc[c[(c[Y>>2]|0)+36>>2]&127](Y)|0;else hb=c[X>>2]|0;if((hb|0)==-1){c[b>>2]=0;ib=1;break}else{ib=(c[b>>2]|0)==0;break}}else ib=1;while(0);Y=c[e>>2]|0;do if(Y){P=c[Y+12>>2]|0;if((P|0)==(c[Y+16>>2]|0))jb=fc[c[(c[Y>>2]|0)+36>>2]&127](Y)|0;else jb=c[P>>2]|0;if((jb|0)!=-1)if(ib^(c[e>>2]|0)==0)break;else{gb=bb;break f}else{c[e>>2]=0;W=159;break}}else W=159;while(0);if((W|0)==159?(W=0,ib):0){gb=bb;break}Y=c[b>>2]|0;P=c[Y+12>>2]|0;if((P|0)==(c[Y+16>>2]|0))kb=fc[c[(c[Y>>2]|0)+36>>2]&127](Y)|0;else kb=c[P>>2]|0;if((kb|0)!=(c[bb>>2]|0)){gb=bb;break}P=c[b>>2]|0;Y=P+12|0;X=c[Y>>2]|0;if((X|0)==(c[P+16>>2]|0))fc[c[(c[P>>2]|0)+40>>2]&127](P)|0;else c[Y>>2]=X+4;ab=a[z>>0]|0;bb=bb+4|0}if(H){X=a[z>>0]|0;if(!(X&1)){lb=h;mb=(X&255)>>>1}else{lb=c[I>>2]|0;mb=c[h>>2]|0}if((gb|0)!=(lb+(mb<<2)|0)){W=174;break a}else{wa=N;xa=O}}else{wa=N;xa=O}break}default:{wa=N;xa=O}}while(0);g:do if((W|0)==29){W=0;if((r|0)==3){U=N;V=O;W=267;break a}while(1){X=c[b>>2]|0;do if(X){Y=c[X+12>>2]|0;if((Y|0)==(c[X+16>>2]|0))nb=fc[c[(c[X>>2]|0)+36>>2]&127](X)|0;else nb=c[Y>>2]|0;if((nb|0)==-1){c[b>>2]=0;ob=1;break}else{ob=(c[b>>2]|0)==0;break}}else ob=1;while(0);X=c[e>>2]|0;do if(X){Y=c[X+12>>2]|0;if((Y|0)==(c[X+16>>2]|0))pb=fc[c[(c[X>>2]|0)+36>>2]&127](X)|0;else pb=c[Y>>2]|0;if((pb|0)!=-1)if(ob^(c[e>>2]|0)==0)break;else{wa=N;xa=O;break g}else{c[e>>2]=0;W=43;break}}else W=43;while(0);if((W|0)==43?(W=0,ob):0){wa=N;xa=O;break g}X=c[b>>2]|0;Y=c[X+12>>2]|0;if((Y|0)==(c[X+16>>2]|0))qb=fc[c[(c[X>>2]|0)+36>>2]&127](X)|0;else qb=c[Y>>2]|0;if(!($b[c[(c[l>>2]|0)+12>>2]&31](l,8192,qb)|0)){wa=N;xa=O;break g}Y=c[b>>2]|0;X=Y+12|0;P=c[X>>2]|0;if((P|0)==(c[Y+16>>2]|0))rb=fc[c[(c[Y>>2]|0)+40>>2]&127](Y)|0;else{c[X>>2]=P+4;rb=c[P>>2]|0}ef(C,rb)}}while(0);r=r+1|0;if(r>>>0>=4){U=wa;V=xa;W=267;break}else{N=wa;O=xa}}h:do if((W|0)==28){c[j>>2]=c[j>>2]|4;sb=0}else if((W|0)==117){c[j>>2]=c[j>>2]|4;sb=0}else if((W|0)==174){c[j>>2]=c[j>>2]|4;sb=0}else if((W|0)==231){c[j>>2]=c[j>>2]|4;sb=0}else if((W|0)==254){c[j>>2]=c[j>>2]|4;sb=0}else if((W|0)==265){c[j>>2]=c[j>>2]|4;sb=0}else if((W|0)==267){i:do if(V){xa=V+4|0;O=V+8|0;wa=1;j:while(1){N=a[V>>0]|0;if(!(N&1))tb=(N&255)>>>1;else tb=c[xa>>2]|0;if(wa>>>0>=tb>>>0)break i;N=c[b>>2]|0;do if(N){r=c[N+12>>2]|0;if((r|0)==(c[N+16>>2]|0))ub=fc[c[(c[N>>2]|0)+36>>2]&127](N)|0;else ub=c[r>>2]|0;if((ub|0)==-1){c[b>>2]=0;vb=1;break}else{vb=(c[b>>2]|0)==0;break}}else vb=1;while(0);N=c[e>>2]|0;do if(N){r=c[N+12>>2]|0;if((r|0)==(c[N+16>>2]|0))wb=fc[c[(c[N>>2]|0)+36>>2]&127](N)|0;else wb=c[r>>2]|0;if((wb|0)!=-1)if(vb^(c[e>>2]|0)==0)break;else break j;else{c[e>>2]=0;W=286;break}}else W=286;while(0);if((W|0)==286?(W=0,vb):0)break;N=c[b>>2]|0;r=c[N+12>>2]|0;if((r|0)==(c[N+16>>2]|0))xb=fc[c[(c[N>>2]|0)+36>>2]&127](N)|0;else xb=c[r>>2]|0;if(!(a[V>>0]&1))yb=xa;else yb=c[O>>2]|0;if((xb|0)!=(c[yb+(wa<<2)>>2]|0))break;r=wa+1|0;N=c[b>>2]|0;rb=N+12|0;qb=c[rb>>2]|0;if((qb|0)==(c[N+16>>2]|0)){fc[c[(c[N>>2]|0)+40>>2]&127](N)|0;wa=r;continue}else{c[rb>>2]=qb+4;wa=r;continue}}c[j>>2]=c[j>>2]|4;sb=0;break h}while(0);wa=c[s>>2]|0;if((wa|0)!=(U|0)?(c[E>>2]=0,Tj(y,wa,U,E),(c[E>>2]|0)!=0):0){c[j>>2]=c[j>>2]|4;sb=0}else sb=1}while(0);af(C);af(B);af(A);af(z);Oe(y);y=c[s>>2]|0;c[s>>2]=0;if(y)cc[c[o>>2]&127](y);i=p;return sb|0}function Yj(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;d=i;i=i+432|0;l=d+424|0;m=d+24|0;n=d+16|0;o=d+8|0;p=d+4|0;q=d+428|0;r=d;c[n>>2]=m;s=n+4|0;c[s>>2]=112;mf(p,h);t=Ik(p,17864)|0;a[q>>0]=0;u=c[f>>2]|0;c[r>>2]=u;v=c[h+4>>2]|0;c[l+0>>2]=c[r+0>>2];if(Xj(e,l,g,p,v,j,q,t,n,o,m+400|0)|0){if(!(a[k>>0]&1))a[k>>0]=0;else c[c[k+8>>2]>>2]=0;c[k+4>>2]=0;if(a[q>>0]|0)ef(k,oc[c[(c[t>>2]|0)+44>>2]&15](t,45)|0);q=oc[c[(c[t>>2]|0)+44>>2]&15](t,48)|0;t=c[n>>2]|0;m=c[o>>2]|0;o=m+-4|0;a:do if(t>>>0<o>>>0){v=t;while(1){g=v+4|0;if((c[v>>2]|0)!=(q|0)){w=v;break a}if(g>>>0<o>>>0)v=g;else{w=g;break}}}else w=t;while(0);gn(k,w,m)|0}m=c[e>>2]|0;do if(m){w=c[m+12>>2]|0;if((w|0)==(c[m+16>>2]|0))x=fc[c[(c[m>>2]|0)+36>>2]&127](m)|0;else x=c[w>>2]|0;if((x|0)==-1){c[e>>2]=0;y=1;break}else{y=(c[e>>2]|0)==0;break}}else y=1;while(0);do if(u){x=c[u+12>>2]|0;if((x|0)==(c[u+16>>2]|0))z=fc[c[(c[u>>2]|0)+36>>2]&127](u)|0;else z=c[x>>2]|0;if((z|0)!=-1)if(y)break;else{A=26;break}else{c[f>>2]=0;A=24;break}}else A=24;while(0);if((A|0)==24?y:0)A=26;if((A|0)==26)c[j>>2]=c[j>>2]|2;c[b>>2]=c[e>>2];ue(c[p>>2]|0)|0;p=c[n>>2]|0;c[n>>2]=0;if(p)cc[c[s>>2]&127](p);i=d;return}function Zj(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;n=i;i=i+112|0;o=n+100|0;p=n+88|0;q=n+76|0;r=n+64|0;s=n+52|0;t=n+48|0;u=n+36|0;v=n+24|0;w=n+12|0;x=n;if(b){b=Ik(d,17440)|0;dc[c[(c[b>>2]|0)+44>>2]&63](o,b);y=c[o>>2]|0;a[e>>0]=y;a[e+1>>0]=y>>8;a[e+2>>0]=y>>16;a[e+3>>0]=y>>24;dc[c[(c[b>>2]|0)+32>>2]&63](p,b);if(!(a[l>>0]&1))a[l>>0]=0;else c[c[l+8>>2]>>2]=0;c[l+4>>2]=0;df(l,0);c[l+0>>2]=c[p+0>>2];c[l+4>>2]=c[p+4>>2];c[l+8>>2]=c[p+8>>2];c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;af(p);dc[c[(c[b>>2]|0)+28>>2]&63](q,b);if(!(a[k>>0]&1))a[k>>0]=0;else c[c[k+8>>2]>>2]=0;c[k+4>>2]=0;df(k,0);c[k+0>>2]=c[q+0>>2];c[k+4>>2]=c[q+4>>2];c[k+8>>2]=c[q+8>>2];c[q+0>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;af(q);c[f>>2]=fc[c[(c[b>>2]|0)+12>>2]&127](b)|0;c[g>>2]=fc[c[(c[b>>2]|0)+16>>2]&127](b)|0;dc[c[(c[b>>2]|0)+20>>2]&63](r,b);if(!(a[h>>0]&1)){a[h+1>>0]=0;a[h>>0]=0}else{a[c[h+8>>2]>>0]=0;c[h+4>>2]=0}Te(h,0);c[h+0>>2]=c[r+0>>2];c[h+4>>2]=c[r+4>>2];c[h+8>>2]=c[r+8>>2];c[r+0>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;Oe(r);dc[c[(c[b>>2]|0)+24>>2]&63](s,b);if(!(a[j>>0]&1))a[j>>0]=0;else c[c[j+8>>2]>>2]=0;c[j+4>>2]=0;df(j,0);c[j+0>>2]=c[s+0>>2];c[j+4>>2]=c[s+4>>2];c[j+8>>2]=c[s+8>>2];c[s+0>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;af(s);z=fc[c[(c[b>>2]|0)+36>>2]&127](b)|0}else{b=Ik(d,17376)|0;dc[c[(c[b>>2]|0)+44>>2]&63](t,b);d=c[t>>2]|0;a[e>>0]=d;a[e+1>>0]=d>>8;a[e+2>>0]=d>>16;a[e+3>>0]=d>>24;dc[c[(c[b>>2]|0)+32>>2]&63](u,b);if(!(a[l>>0]&1))a[l>>0]=0;else c[c[l+8>>2]>>2]=0;c[l+4>>2]=0;df(l,0);c[l+0>>2]=c[u+0>>2];c[l+4>>2]=c[u+4>>2];c[l+8>>2]=c[u+8>>2];c[u+0>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;af(u);dc[c[(c[b>>2]|0)+28>>2]&63](v,b);if(!(a[k>>0]&1))a[k>>0]=0;else c[c[k+8>>2]>>2]=0;c[k+4>>2]=0;df(k,0);c[k+0>>2]=c[v+0>>2];c[k+4>>2]=c[v+4>>2];c[k+8>>2]=c[v+8>>2];c[v+0>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;af(v);c[f>>2]=fc[c[(c[b>>2]|0)+12>>2]&127](b)|0;c[g>>2]=fc[c[(c[b>>2]|0)+16>>2]&127](b)|0;dc[c[(c[b>>2]|0)+20>>2]&63](w,b);if(!(a[h>>0]&1)){a[h+1>>0]=0;a[h>>0]=0}else{a[c[h+8>>2]>>0]=0;c[h+4>>2]=0}Te(h,0);c[h+0>>2]=c[w+0>>2];c[h+4>>2]=c[w+4>>2];c[h+8>>2]=c[w+8>>2];c[w+0>>2]=0;c[w+4>>2]=0;c[w+8>>2]=0;Oe(w);dc[c[(c[b>>2]|0)+24>>2]&63](x,b);if(!(a[j>>0]&1))a[j>>0]=0;else c[c[j+8>>2]>>2]=0;c[j+4>>2]=0;df(j,0);c[j+0>>2]=c[x+0>>2];c[j+4>>2]=c[x+4>>2];c[j+8>>2]=c[x+8>>2];c[x+0>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;af(x);z=fc[c[(c[b>>2]|0)+36>>2]&127](b)|0}c[m>>2]=z;i=n;return}function _j(a){a=a|0;return}function $j(a){a=a|0;lp(a);return}function ak(b,d,e,f,g,j,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;l=+l;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;d=i;i=i+384|0;m=d;n=d+276|0;o=d+64|0;p=d+176|0;q=d+60|0;r=d+172|0;s=d+169|0;t=d+168|0;u=d+48|0;v=d+36|0;w=d+24|0;x=d+20|0;y=d+68|0;z=d+16|0;A=d+12|0;B=d+8|0;c[o>>2]=n;h[k>>3]=l;c[m>>2]=c[k>>2];c[m+4>>2]=c[k+4>>2];C=Iq(n,100,17624,m)|0;if(C>>>0>99){n=Wg()|0;h[k>>3]=l;c[m>>2]=c[k>>2];c[m+4>>2]=c[k+4>>2];D=_m(o,n,17624,m)|0;n=c[o>>2]|0;if(!n)fq();E=kq(D)|0;if(!E)fq();else{F=E;G=n;H=E;I=D}}else{F=0;G=0;H=p;I=C}mf(q,g);C=Ik(q,17872)|0;p=c[o>>2]|0;lc[c[(c[C>>2]|0)+32>>2]&7](C,p,p+I|0,H)|0;if(!I)J=0;else J=(a[c[o>>2]>>0]|0)==45;c[u+0>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;c[v+0>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;c[w+0>>2]=0;c[w+4>>2]=0;c[w+8>>2]=0;bk(f,J,q,r,s,t,u,v,w,x);f=c[x>>2]|0;if((I|0)>(f|0)){x=a[w>>0]|0;if(!(x&1))K=(x&255)>>>1;else K=c[w+4>>2]|0;x=a[v>>0]|0;if(!(x&1))L=(x&255)>>>1;else L=c[v+4>>2]|0;M=K+(I-f<<1|1)+L|0}else{L=a[w>>0]|0;if(!(L&1))N=(L&255)>>>1;else N=c[w+4>>2]|0;L=a[v>>0]|0;if(!(L&1))O=(L&255)>>>1;else O=c[v+4>>2]|0;M=N+2+O|0}O=M+f|0;if(O>>>0>100){M=kq(O)|0;if(!M)fq();else{P=M;Q=M}}else{P=0;Q=y}ck(Q,z,A,c[g+4>>2]|0,H,H+I|0,C,J,r,a[s>>0]|0,a[t>>0]|0,u,v,w,f);c[B>>2]=c[e>>2];e=c[z>>2]|0;z=c[A>>2]|0;c[m+0>>2]=c[B+0>>2];Zm(b,m,Q,e,z,g,j);lq(P);Oe(w);Oe(v);Oe(u);ue(c[q>>2]|0)|0;lq(F);lq(G);i=d;return}function bk(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;n=i;i=i+112|0;o=n+108|0;p=n+96|0;q=n+92|0;r=n+80|0;s=n+68|0;t=n+56|0;u=n+52|0;v=n+40|0;w=n+36|0;x=n+24|0;y=n+12|0;z=n;if(b){b=Ik(e,17312)|0;A=c[b>>2]|0;if(d){dc[c[A+44>>2]&63](o,b);B=c[o>>2]|0;a[f>>0]=B;a[f+1>>0]=B>>8;a[f+2>>0]=B>>16;a[f+3>>0]=B>>24;dc[c[(c[b>>2]|0)+32>>2]&63](p,b);if(!(a[l>>0]&1)){a[l+1>>0]=0;a[l>>0]=0}else{a[c[l+8>>2]>>0]=0;c[l+4>>2]=0}Te(l,0);c[l+0>>2]=c[p+0>>2];c[l+4>>2]=c[p+4>>2];c[l+8>>2]=c[p+8>>2];c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;Oe(p)}else{dc[c[A+40>>2]&63](q,b);A=c[q>>2]|0;a[f>>0]=A;a[f+1>>0]=A>>8;a[f+2>>0]=A>>16;a[f+3>>0]=A>>24;dc[c[(c[b>>2]|0)+28>>2]&63](r,b);if(!(a[l>>0]&1)){a[l+1>>0]=0;a[l>>0]=0}else{a[c[l+8>>2]>>0]=0;c[l+4>>2]=0}Te(l,0);c[l+0>>2]=c[r+0>>2];c[l+4>>2]=c[r+4>>2];c[l+8>>2]=c[r+8>>2];c[r+0>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;Oe(r)}a[g>>0]=fc[c[(c[b>>2]|0)+12>>2]&127](b)|0;a[h>>0]=fc[c[(c[b>>2]|0)+16>>2]&127](b)|0;dc[c[(c[b>>2]|0)+20>>2]&63](s,b);if(!(a[j>>0]&1)){a[j+1>>0]=0;a[j>>0]=0}else{a[c[j+8>>2]>>0]=0;c[j+4>>2]=0}Te(j,0);c[j+0>>2]=c[s+0>>2];c[j+4>>2]=c[s+4>>2];c[j+8>>2]=c[s+8>>2];c[s+0>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;Oe(s);dc[c[(c[b>>2]|0)+24>>2]&63](t,b);if(!(a[k>>0]&1)){a[k+1>>0]=0;a[k>>0]=0}else{a[c[k+8>>2]>>0]=0;c[k+4>>2]=0}Te(k,0);c[k+0>>2]=c[t+0>>2];c[k+4>>2]=c[t+4>>2];c[k+8>>2]=c[t+8>>2];c[t+0>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;Oe(t);C=fc[c[(c[b>>2]|0)+36>>2]&127](b)|0}else{b=Ik(e,17248)|0;e=c[b>>2]|0;if(d){dc[c[e+44>>2]&63](u,b);d=c[u>>2]|0;a[f>>0]=d;a[f+1>>0]=d>>8;a[f+2>>0]=d>>16;a[f+3>>0]=d>>24;dc[c[(c[b>>2]|0)+32>>2]&63](v,b);if(!(a[l>>0]&1)){a[l+1>>0]=0;a[l>>0]=0}else{a[c[l+8>>2]>>0]=0;c[l+4>>2]=0}Te(l,0);c[l+0>>2]=c[v+0>>2];c[l+4>>2]=c[v+4>>2];c[l+8>>2]=c[v+8>>2];c[v+0>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;Oe(v)}else{dc[c[e+40>>2]&63](w,b);e=c[w>>2]|0;a[f>>0]=e;a[f+1>>0]=e>>8;a[f+2>>0]=e>>16;a[f+3>>0]=e>>24;dc[c[(c[b>>2]|0)+28>>2]&63](x,b);if(!(a[l>>0]&1)){a[l+1>>0]=0;a[l>>0]=0}else{a[c[l+8>>2]>>0]=0;c[l+4>>2]=0}Te(l,0);c[l+0>>2]=c[x+0>>2];c[l+4>>2]=c[x+4>>2];c[l+8>>2]=c[x+8>>2];c[x+0>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;Oe(x)}a[g>>0]=fc[c[(c[b>>2]|0)+12>>2]&127](b)|0;a[h>>0]=fc[c[(c[b>>2]|0)+16>>2]&127](b)|0;dc[c[(c[b>>2]|0)+20>>2]&63](y,b);if(!(a[j>>0]&1)){a[j+1>>0]=0;a[j>>0]=0}else{a[c[j+8>>2]>>0]=0;c[j+4>>2]=0}Te(j,0);c[j+0>>2]=c[y+0>>2];c[j+4>>2]=c[y+4>>2];c[j+8>>2]=c[y+8>>2];c[y+0>>2]=0;c[y+4>>2]=0;c[y+8>>2]=0;Oe(y);dc[c[(c[b>>2]|0)+24>>2]&63](z,b);if(!(a[k>>0]&1)){a[k+1>>0]=0;a[k>>0]=0}else{a[c[k+8>>2]>>0]=0;c[k+4>>2]=0}Te(k,0);c[k+0>>2]=c[z+0>>2];c[k+4>>2]=c[z+4>>2];c[k+8>>2]=c[z+8>>2];c[z+0>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;Oe(z);C=fc[c[(c[b>>2]|0)+36>>2]&127](b)|0}c[m>>2]=C;i=n;return}function ck(d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;var s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0;c[f>>2]=d;s=q+1|0;t=q+8|0;u=q+4|0;v=(g&512|0)==0;w=p+1|0;x=p+8|0;y=p+4|0;z=(r|0)>0;A=o+1|0;B=o+8|0;C=o+4|0;D=j+8|0;E=0-r|0;F=h;h=0;while(1){switch(a[l+h>>0]|0){case 4:{G=c[f>>2]|0;H=k?F+1|0:F;a:do if(H>>>0<i>>>0){I=c[D>>2]|0;J=H;while(1){K=a[J>>0]|0;if(K<<24>>24<=-1){L=J;break a}M=J+1|0;if(!(b[I+(K<<24>>24<<1)>>1]&2048)){L=J;break a}if(M>>>0<i>>>0)J=M;else{L=M;break}}}else L=H;while(0);J=L;if(z){if(L>>>0>H>>>0){I=H-J|0;J=I>>>0<E>>>0?E:I;I=J+r|0;M=G;K=L;N=r;while(1){O=K+-1|0;P=a[O>>0]|0;c[f>>2]=M+1;a[M>>0]=P;P=N+-1|0;Q=(P|0)>0;if(!(O>>>0>H>>>0&Q))break;M=c[f>>2]|0;K=O;N=P}N=L+J|0;if(Q){R=N;S=I;T=31}else{U=0;V=N;W=I}}else{R=L;S=r;T=31}if((T|0)==31){T=0;U=oc[c[(c[j>>2]|0)+28>>2]&15](j,48)|0;V=R;W=S}N=c[f>>2]|0;c[f>>2]=N+1;if((W|0)>0){K=N;M=W;while(1){a[K>>0]=U;M=M+-1|0;P=c[f>>2]|0;c[f>>2]=P+1;if((M|0)<=0){X=P;break}else K=P}}else X=N;a[X>>0]=m;Y=V}else Y=L;if((Y|0)==(H|0)){K=oc[c[(c[j>>2]|0)+28>>2]&15](j,48)|0;M=c[f>>2]|0;c[f>>2]=M+1;a[M>>0]=K}else{K=a[o>>0]|0;M=(K&1)==0;if(M)Z=(K&255)>>>1;else Z=c[C>>2]|0;if(!Z){_=Y;$=-1;aa=0;ba=0}else{_=Y;$=a[(M?A:c[B>>2]|0)>>0]|0;aa=0;ba=0}while(1){if((ba|0)==($|0)){M=c[f>>2]|0;c[f>>2]=M+1;a[M>>0]=n;M=aa+1|0;K=a[o>>0]|0;I=(K&1)==0;if(I)ca=(K&255)>>>1;else ca=c[C>>2]|0;if(M>>>0<ca>>>0)if((a[(I?A:c[B>>2]|0)+M>>0]|0)==127){da=-1;ea=M;fa=0}else{da=a[(I?A:c[B>>2]|0)+M>>0]|0;ea=M;fa=0}else{da=$;ea=M;fa=0}}else{da=$;ea=aa;fa=ba}_=_+-1|0;M=a[_>>0]|0;I=c[f>>2]|0;c[f>>2]=I+1;a[I>>0]=M;if((_|0)==(H|0))break;else{$=da;aa=ea;ba=fa+1|0}}}N=c[f>>2]|0;if((G|0)!=(N|0)?(M=N+-1|0,M>>>0>G>>>0):0){I=G;K=M;M=N;while(1){N=a[I>>0]|0;a[I>>0]=a[K>>0]|0;a[K>>0]=N;I=I+1|0;N=M+-2|0;if(I>>>0>=N>>>0){ga=H;break}else{J=K;K=N;M=J}}}else ga=H;break}case 3:{M=a[q>>0]|0;K=(M&1)==0;if(K)ha=(M&255)>>>1;else ha=c[u>>2]|0;if(!ha)ga=F;else{M=a[(K?s:c[t>>2]|0)>>0]|0;K=c[f>>2]|0;c[f>>2]=K+1;a[K>>0]=M;ga=F}break}case 1:{c[e>>2]=c[f>>2];M=oc[c[(c[j>>2]|0)+28>>2]&15](j,32)|0;K=c[f>>2]|0;c[f>>2]=K+1;a[K>>0]=M;ga=F;break}case 2:{M=a[p>>0]|0;K=(M&1)==0;if(K)ia=(M&255)>>>1;else ia=c[y>>2]|0;if((ia|0)==0|v)ga=F;else{if(K){ja=w;ka=(M&255)>>>1}else{ja=c[x>>2]|0;ka=c[y>>2]|0}M=ja+ka|0;K=c[f>>2]|0;if((ja|0)==(M|0))la=K;else{I=K;K=ja;while(1){a[I>>0]=a[K>>0]|0;K=K+1|0;G=I+1|0;if((K|0)==(M|0)){la=G;break}else I=G}}c[f>>2]=la;ga=F}break}case 0:{c[e>>2]=c[f>>2];ga=F;break}default:ga=F}h=h+1|0;if((h|0)==4)break;else F=ga}ga=a[q>>0]|0;q=(ga&1)==0;if(q)ma=(ga&255)>>>1;else ma=c[u>>2]|0;if(ma>>>0>1){if(q){na=s;oa=(ga&255)>>>1}else{na=c[t>>2]|0;oa=c[u>>2]|0}u=na+1|0;t=na+oa|0;oa=c[f>>2]|0;if((u|0)==(t|0))pa=oa;else{ga=oa;oa=u;u=na;while(1){a[ga>>0]=a[oa>>0]|0;na=u+2|0;s=ga+1|0;if((na|0)==(t|0)){pa=s;break}else{q=oa;ga=s;oa=na;u=q}}}c[f>>2]=pa}pa=g&176;if((pa|0)==32)c[e>>2]=c[f>>2];else if((pa|0)!=16)c[e>>2]=d;return}function dk(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;d=i;i=i+176|0;k=d+56|0;l=d+52|0;m=d+164|0;n=d+161|0;o=d+160|0;p=d+40|0;q=d+28|0;r=d+16|0;s=d+12|0;t=d+60|0;u=d+8|0;v=d+4|0;w=d;mf(l,g);x=Ik(l,17872)|0;y=a[j>>0]|0;z=(y&1)==0;if(z)A=(y&255)>>>1;else A=c[j+4>>2]|0;if(!A)B=0;else{if(z)C=j+1|0;else C=c[j+8>>2]|0;z=a[C>>0]|0;B=z<<24>>24==(oc[c[(c[x>>2]|0)+28>>2]&15](x,45)|0)<<24>>24};c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;c[q+0>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;c[r+0>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;bk(f,B,l,m,n,o,p,q,r,s);f=a[j>>0]|0;z=(f&1)==0;if(z)D=(f&255)>>>1;else D=c[j+4>>2]|0;C=c[s>>2]|0;if((D|0)>(C|0)){if(z)E=(f&255)>>>1;else E=c[j+4>>2]|0;z=a[r>>0]|0;if(!(z&1))F=(z&255)>>>1;else F=c[r+4>>2]|0;z=a[q>>0]|0;if(!(z&1))G=(z&255)>>>1;else G=c[q+4>>2]|0;H=F+(E-C<<1|1)+G|0}else{G=a[r>>0]|0;if(!(G&1))I=(G&255)>>>1;else I=c[r+4>>2]|0;G=a[q>>0]|0;if(!(G&1))J=(G&255)>>>1;else J=c[q+4>>2]|0;H=I+2+J|0}J=H+C|0;if(J>>>0>100){H=kq(J)|0;if(!H)fq();else{K=H;L=H}}else{K=0;L=t}if(!(f&1)){M=j+1|0;N=(f&255)>>>1}else{M=c[j+8>>2]|0;N=c[j+4>>2]|0}ck(L,u,v,c[g+4>>2]|0,M,M+N|0,x,B,m,a[n>>0]|0,a[o>>0]|0,p,q,r,C);c[w>>2]=c[e>>2];e=c[u>>2]|0;u=c[v>>2]|0;c[k+0>>2]=c[w+0>>2];Zm(b,k,L,e,u,g,h);lq(K);Oe(r);Oe(q);Oe(p);ue(c[l>>2]|0)|0;i=d;return}function ek(a){a=a|0;return}function fk(a){a=a|0;lp(a);return}function gk(b,d,e,f,g,j,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;l=+l;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;d=i;i=i+992|0;m=d;n=d+888|0;o=d+880|0;p=d+480|0;q=d+472|0;r=d+884|0;s=d+468|0;t=d+464|0;u=d+452|0;v=d+440|0;w=d+428|0;x=d+424|0;y=d+24|0;z=d+16|0;A=d+12|0;B=d+8|0;c[o>>2]=n;h[k>>3]=l;c[m>>2]=c[k>>2];c[m+4>>2]=c[k+4>>2];C=Iq(n,100,17624,m)|0;if(C>>>0>99){n=Wg()|0;h[k>>3]=l;c[m>>2]=c[k>>2];c[m+4>>2]=c[k+4>>2];D=_m(o,n,17624,m)|0;n=c[o>>2]|0;if(!n)fq();E=kq(D<<2)|0;if(!E)fq();else{F=E;G=n;H=E;I=D}}else{F=0;G=0;H=p;I=C}mf(q,g);C=Ik(q,17864)|0;p=c[o>>2]|0;lc[c[(c[C>>2]|0)+48>>2]&7](C,p,p+I|0,H)|0;if(!I)J=0;else J=(a[c[o>>2]>>0]|0)==45;c[u+0>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;c[v+0>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;c[w+0>>2]=0;c[w+4>>2]=0;c[w+8>>2]=0;hk(f,J,q,r,s,t,u,v,w,x);f=c[x>>2]|0;if((I|0)>(f|0)){x=a[w>>0]|0;if(!(x&1))K=(x&255)>>>1;else K=c[w+4>>2]|0;x=a[v>>0]|0;if(!(x&1))L=(x&255)>>>1;else L=c[v+4>>2]|0;M=K+(I-f<<1|1)+L|0}else{L=a[w>>0]|0;if(!(L&1))N=(L&255)>>>1;else N=c[w+4>>2]|0;L=a[v>>0]|0;if(!(L&1))O=(L&255)>>>1;else O=c[v+4>>2]|0;M=N+2+O|0}O=M+f|0;if(O>>>0>100){M=kq(O<<2)|0;if(!M)fq();else{P=M;Q=M}}else{P=0;Q=y}ik(Q,z,A,c[g+4>>2]|0,H,H+(I<<2)|0,C,J,r,c[s>>2]|0,c[t>>2]|0,u,v,w,f);c[B>>2]=c[e>>2];e=c[z>>2]|0;z=c[A>>2]|0;c[m+0>>2]=c[B+0>>2];$m(b,m,Q,e,z,g,j);if(P)lq(P);af(w);af(v);Oe(u);ue(c[q>>2]|0)|0;if(F)lq(F);lq(G);i=d;return}function hk(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;n=i;i=i+112|0;o=n+108|0;p=n+96|0;q=n+92|0;r=n+80|0;s=n+68|0;t=n+56|0;u=n+52|0;v=n+40|0;w=n+36|0;x=n+24|0;y=n+12|0;z=n;if(b){b=Ik(e,17440)|0;A=c[b>>2]|0;if(d){dc[c[A+44>>2]&63](o,b);B=c[o>>2]|0;a[f>>0]=B;a[f+1>>0]=B>>8;a[f+2>>0]=B>>16;a[f+3>>0]=B>>24;dc[c[(c[b>>2]|0)+32>>2]&63](p,b);if(!(a[l>>0]&1))a[l>>0]=0;else c[c[l+8>>2]>>2]=0;c[l+4>>2]=0;df(l,0);c[l+0>>2]=c[p+0>>2];c[l+4>>2]=c[p+4>>2];c[l+8>>2]=c[p+8>>2];c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;af(p)}else{dc[c[A+40>>2]&63](q,b);A=c[q>>2]|0;a[f>>0]=A;a[f+1>>0]=A>>8;a[f+2>>0]=A>>16;a[f+3>>0]=A>>24;dc[c[(c[b>>2]|0)+28>>2]&63](r,b);if(!(a[l>>0]&1))a[l>>0]=0;else c[c[l+8>>2]>>2]=0;c[l+4>>2]=0;df(l,0);c[l+0>>2]=c[r+0>>2];c[l+4>>2]=c[r+4>>2];c[l+8>>2]=c[r+8>>2];c[r+0>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;af(r)}c[g>>2]=fc[c[(c[b>>2]|0)+12>>2]&127](b)|0;c[h>>2]=fc[c[(c[b>>2]|0)+16>>2]&127](b)|0;dc[c[(c[b>>2]|0)+20>>2]&63](s,b);if(!(a[j>>0]&1)){a[j+1>>0]=0;a[j>>0]=0}else{a[c[j+8>>2]>>0]=0;c[j+4>>2]=0}Te(j,0);c[j+0>>2]=c[s+0>>2];c[j+4>>2]=c[s+4>>2];c[j+8>>2]=c[s+8>>2];c[s+0>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;Oe(s);dc[c[(c[b>>2]|0)+24>>2]&63](t,b);if(!(a[k>>0]&1))a[k>>0]=0;else c[c[k+8>>2]>>2]=0;c[k+4>>2]=0;df(k,0);c[k+0>>2]=c[t+0>>2];c[k+4>>2]=c[t+4>>2];c[k+8>>2]=c[t+8>>2];c[t+0>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;af(t);C=fc[c[(c[b>>2]|0)+36>>2]&127](b)|0}else{b=Ik(e,17376)|0;e=c[b>>2]|0;if(d){dc[c[e+44>>2]&63](u,b);d=c[u>>2]|0;a[f>>0]=d;a[f+1>>0]=d>>8;a[f+2>>0]=d>>16;a[f+3>>0]=d>>24;dc[c[(c[b>>2]|0)+32>>2]&63](v,b);if(!(a[l>>0]&1))a[l>>0]=0;else c[c[l+8>>2]>>2]=0;c[l+4>>2]=0;df(l,0);c[l+0>>2]=c[v+0>>2];c[l+4>>2]=c[v+4>>2];c[l+8>>2]=c[v+8>>2];c[v+0>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;af(v)}else{dc[c[e+40>>2]&63](w,b);e=c[w>>2]|0;a[f>>0]=e;a[f+1>>0]=e>>8;a[f+2>>0]=e>>16;a[f+3>>0]=e>>24;dc[c[(c[b>>2]|0)+28>>2]&63](x,b);if(!(a[l>>0]&1))a[l>>0]=0;else c[c[l+8>>2]>>2]=0;c[l+4>>2]=0;df(l,0);c[l+0>>2]=c[x+0>>2];c[l+4>>2]=c[x+4>>2];c[l+8>>2]=c[x+8>>2];c[x+0>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;af(x)}c[g>>2]=fc[c[(c[b>>2]|0)+12>>2]&127](b)|0;c[h>>2]=fc[c[(c[b>>2]|0)+16>>2]&127](b)|0;dc[c[(c[b>>2]|0)+20>>2]&63](y,b);if(!(a[j>>0]&1)){a[j+1>>0]=0;a[j>>0]=0}else{a[c[j+8>>2]>>0]=0;c[j+4>>2]=0}Te(j,0);c[j+0>>2]=c[y+0>>2];c[j+4>>2]=c[y+4>>2];c[j+8>>2]=c[y+8>>2];c[y+0>>2]=0;c[y+4>>2]=0;c[y+8>>2]=0;Oe(y);dc[c[(c[b>>2]|0)+24>>2]&63](z,b);if(!(a[k>>0]&1))a[k>>0]=0;else c[c[k+8>>2]>>2]=0;c[k+4>>2]=0;df(k,0);c[k+0>>2]=c[z+0>>2];c[k+4>>2]=c[z+4>>2];c[k+8>>2]=c[z+8>>2];c[z+0>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;af(z);C=fc[c[(c[b>>2]|0)+36>>2]&127](b)|0}c[m>>2]=C;i=n;return}function ik(b,d,e,f,g,h,i,j,k,l,m,n,o,p,q){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;var r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0;c[e>>2]=b;r=p+4|0;s=p+8|0;t=(f&512|0)==0;u=o+4|0;v=o+8|0;w=(q|0)>0;x=n+1|0;y=n+8|0;z=n+4|0;A=g;g=0;while(1){switch(a[k+g>>0]|0){case 4:{B=c[e>>2]|0;C=j?A+4|0:A;a:do if(C>>>0<h>>>0){D=C;while(1){E=D+4|0;if(!($b[c[(c[i>>2]|0)+12>>2]&31](i,2048,c[D>>2]|0)|0)){F=D;break a}if(E>>>0<h>>>0)D=E;else{F=E;break}}}else F=C;while(0);if(w){if(F>>>0>C>>>0){D=c[e>>2]|0;E=F;G=q;do{E=E+-4|0;H=D;D=D+4|0;c[H>>2]=c[E>>2];G=G+-1|0;I=(G|0)>0}while(E>>>0>C>>>0&I);c[e>>2]=D;if(I){J=E;K=G;L=31}else{H=c[e>>2]|0;c[e>>2]=H+4;M=H;N=E}}else{J=F;K=q;L=31}if((L|0)==31){L=0;H=oc[c[(c[i>>2]|0)+44>>2]&15](i,48)|0;O=c[e>>2]|0;P=O+4|0;c[e>>2]=P;if((K|0)>0){Q=P;P=O;R=K;while(1){c[P>>2]=H;R=R+-1|0;if((R|0)<=0)break;else{S=Q;Q=P+8|0;P=S}}c[e>>2]=O+(K+1<<2);M=O+(K<<2)|0;N=J}else{M=O;N=J}}c[M>>2]=l;T=N}else T=F;if((T|0)==(C|0)){P=oc[c[(c[i>>2]|0)+44>>2]&15](i,48)|0;Q=c[e>>2]|0;R=Q+4|0;c[e>>2]=R;c[Q>>2]=P;U=R;V=Q}else{Q=a[n>>0]|0;R=(Q&1)==0;if(R)W=(Q&255)>>>1;else W=c[z>>2]|0;if(!W){X=T;Y=-1;Z=0;_=0}else{X=T;Y=a[(R?x:c[y>>2]|0)>>0]|0;Z=0;_=0}while(1){R=c[e>>2]|0;if((_|0)==(Y|0)){Q=R+4|0;c[e>>2]=Q;c[R>>2]=m;P=Z+1|0;H=a[n>>0]|0;E=(H&1)==0;if(E)$=(H&255)>>>1;else $=c[z>>2]|0;if(P>>>0<$>>>0)if((a[(E?x:c[y>>2]|0)+P>>0]|0)==127){aa=Q;ba=-1;ca=P;da=0}else{aa=Q;ba=a[(E?x:c[y>>2]|0)+P>>0]|0;ca=P;da=0}else{aa=Q;ba=Y;ca=P;da=0}}else{aa=R;ba=Y;ca=Z;da=_}X=X+-4|0;R=c[X>>2]|0;P=aa+4|0;c[e>>2]=P;c[aa>>2]=R;if((X|0)==(C|0)){U=P;V=aa;break}else{Y=ba;Z=ca;_=da+1|0}}}if((B|0)!=(U|0)&V>>>0>B>>>0){O=B;P=V;R=U;while(1){Q=c[O>>2]|0;c[O>>2]=c[P>>2];c[P>>2]=Q;O=O+4|0;Q=R+-8|0;if(O>>>0>=Q>>>0){ea=C;break}else{E=P;P=Q;R=E}}}else ea=C;break}case 0:{c[d>>2]=c[e>>2];ea=A;break}case 2:{R=a[o>>0]|0;P=(R&1)==0;if(P)fa=(R&255)>>>1;else fa=c[u>>2]|0;if((fa|0)==0|t)ea=A;else{if(P){ga=u;ha=(R&255)>>>1}else{ga=c[v>>2]|0;ha=c[u>>2]|0}R=ga+(ha<<2)|0;P=c[e>>2]|0;if((ga|0)==(R|0))ia=P;else{O=(ga+(ha+-1<<2)-ga|0)>>>2;B=P;E=ga;while(1){c[B>>2]=c[E>>2];E=E+4|0;if((E|0)==(R|0))break;else B=B+4|0}ia=P+(O+1<<2)|0}c[e>>2]=ia;ea=A}break}case 1:{c[d>>2]=c[e>>2];B=oc[c[(c[i>>2]|0)+44>>2]&15](i,32)|0;R=c[e>>2]|0;c[e>>2]=R+4;c[R>>2]=B;ea=A;break}case 3:{B=a[p>>0]|0;R=(B&1)==0;if(R)ja=(B&255)>>>1;else ja=c[r>>2]|0;if(!ja)ea=A;else{B=c[(R?r:c[s>>2]|0)>>2]|0;R=c[e>>2]|0;c[e>>2]=R+4;c[R>>2]=B;ea=A}break}default:ea=A}g=g+1|0;if((g|0)==4)break;else A=ea}ea=a[p>>0]|0;p=(ea&1)==0;if(p)ka=(ea&255)>>>1;else ka=c[r>>2]|0;if(ka>>>0>1){if(p){la=r;ma=(ea&255)>>>1}else{la=c[s>>2]|0;ma=c[r>>2]|0}r=la+4|0;s=la+(ma<<2)|0;ea=c[e>>2]|0;if((r|0)==(s|0))na=ea;else{p=(la+(ma+-1<<2)-r|0)>>>2;ma=ea;ka=r;r=la;while(1){c[ma>>2]=c[ka>>2];la=r+8|0;if((la|0)==(s|0))break;else{A=ka;ma=ma+4|0;ka=la;r=A}}na=ea+(p+1<<2)|0}c[e>>2]=na}na=f&176;if((na|0)==32)c[d>>2]=c[e>>2];else if((na|0)!=16)c[d>>2]=b;return}function jk(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;d=i;i=i+480|0;k=d+468|0;l=d+464|0;m=d+472|0;n=d+460|0;o=d+456|0;p=d+444|0;q=d+432|0;r=d+420|0;s=d+416|0;t=d+16|0;u=d+8|0;v=d+4|0;w=d;mf(l,g);x=Ik(l,17864)|0;y=a[j>>0]|0;z=(y&1)==0;if(z)A=(y&255)>>>1;else A=c[j+4>>2]|0;if(!A)B=0;else{if(z)C=j+4|0;else C=c[j+8>>2]|0;z=c[C>>2]|0;B=(z|0)==(oc[c[(c[x>>2]|0)+44>>2]&15](x,45)|0)};c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;c[q+0>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;c[r+0>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;hk(f,B,l,m,n,o,p,q,r,s);f=a[j>>0]|0;z=(f&1)==0;if(z)D=(f&255)>>>1;else D=c[j+4>>2]|0;C=c[s>>2]|0;if((D|0)>(C|0)){if(z)E=(f&255)>>>1;else E=c[j+4>>2]|0;z=a[r>>0]|0;if(!(z&1))F=(z&255)>>>1;else F=c[r+4>>2]|0;z=a[q>>0]|0;if(!(z&1))G=(z&255)>>>1;else G=c[q+4>>2]|0;H=F+(E-C<<1|1)+G|0}else{G=a[r>>0]|0;if(!(G&1))I=(G&255)>>>1;else I=c[r+4>>2]|0;G=a[q>>0]|0;if(!(G&1))J=(G&255)>>>1;else J=c[q+4>>2]|0;H=I+2+J|0}J=H+C|0;if(J>>>0>100){H=kq(J<<2)|0;if(!H)fq();else{K=H;L=H}}else{K=0;L=t}if(!(f&1)){M=j+4|0;N=(f&255)>>>1}else{M=c[j+8>>2]|0;N=c[j+4>>2]|0}ik(L,u,v,c[g+4>>2]|0,M,M+(N<<2)|0,x,B,m,c[n>>2]|0,c[o>>2]|0,p,q,r,C);c[w>>2]=c[e>>2];e=c[u>>2]|0;u=c[v>>2]|0;c[k+0>>2]=c[w+0>>2];$m(b,k,L,e,u,g,h);if(K)lq(K);af(r);af(q);Oe(p);ue(c[l>>2]|0)|0;i=d;return}function kk(a){a=a|0;return}function lk(a){a=a|0;lp(a);return}function mk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if(!(a[d>>0]&1))f=d+1|0;else f=c[d+8>>2]|0;d=Wb(f|0,1)|0;return d>>>((d|0)!=(-1|0)&1)|0}function nk(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=i;i=i+16|0;j=d;c[j+0>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;k=a[h>>0]|0;if(!(k&1)){l=h+1|0;m=(k&255)>>>1;n=h+1|0}else{k=c[h+8>>2]|0;l=k;m=c[h+4>>2]|0;n=k}k=l+m|0;if(n>>>0<k>>>0){m=n;do{Ve(j,a[m>>0]|0);m=m+1|0}while((m|0)!=(k|0));k=(e|0)==-1?-1:e<<1;if(!(a[j>>0]&1)){o=k;p=9}else{q=k;r=c[j+8>>2]|0}}else{o=(e|0)==-1?-1:e<<1;p=9}if((p|0)==9){q=o;r=j+1|0}o=Zb(q|0,f|0,g|0,r|0)|0;c[b+0>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;r=_q(o|0)|0;g=o+r|0;if((r|0)>0){r=o;do{Ve(b,a[r>>0]|0);r=r+1|0}while((r|0)!=(g|0))}Oe(j);i=d;return}function ok(a,b){a=a|0;b=b|0;Ob(((b|0)==-1?-1:b<<1)|0)|0;return}function pk(a){a=a|0;return}function qk(a){a=a|0;lp(a);return}function rk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if(!(a[d>>0]&1))f=d+1|0;else f=c[d+8>>2]|0;d=Wb(f|0,1)|0;return d>>>((d|0)!=(-1|0)&1)|0}function sk(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;d=i;i=i+176|0;j=d+168|0;k=d+40|0;l=d+32|0;m=d+28|0;n=d+16|0;o=d+8|0;p=d;c[n+0>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[o+4>>2]=0;c[o>>2]=19528;q=a[h>>0]|0;if(!(q&1)){r=h+4|0;s=(q&255)>>>1;t=h+4|0}else{q=c[h+8>>2]|0;r=q;s=c[h+4>>2]|0;t=q}q=r+(s<<2)|0;a:do if(t>>>0<q>>>0){s=k+32|0;r=t;h=19528|0;while(1){c[m>>2]=r;u=(kc[c[h+12>>2]&15](o,j,r,q,m,k,s,l)|0)==2;v=c[m>>2]|0;if(u|(v|0)==(r|0))break;if(k>>>0<(c[l>>2]|0)>>>0){u=k;do{Ve(n,a[u>>0]|0);u=u+1|0}while(u>>>0<(c[l>>2]|0)>>>0);w=c[m>>2]|0}else w=v;if(w>>>0>=q>>>0)break a;r=w;h=c[o>>2]|0}Qj(18752)}while(0);if(!(a[n>>0]&1))x=n+1|0;else x=c[n+8>>2]|0;o=Zb(((e|0)==-1?-1:e<<1)|0,f|0,g|0,x|0)|0;c[b+0>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[p+4>>2]=0;c[p>>2]=19632;x=_q(o|0)|0;g=o+x|0;b:do if((x|0)>0){f=g;e=k+128|0;w=o;q=19632|0;while(1){c[m>>2]=w;t=(kc[c[q+16>>2]&15](p,j,w,(f-w|0)>32?w+32|0:g,m,k,e,l)|0)==2;h=c[m>>2]|0;if(t|(h|0)==(w|0))break;if(k>>>0<(c[l>>2]|0)>>>0){t=k;do{ef(b,c[t>>2]|0);t=t+4|0}while(t>>>0<(c[l>>2]|0)>>>0);y=c[m>>2]|0}else y=h;if(y>>>0>=g>>>0)break b;w=y;q=c[p>>2]|0}Qj(18752)}while(0);Oe(n);i=d;return}function tk(a,b){a=a|0;b=b|0;Ob(((b|0)==-1?-1:b<<1)|0)|0;return}function uk(a){a=a|0;a=Ia(8)|0;ve(a,17752);c[a>>2]=26352;Xb(a|0,26392,97)}function vk(b,d){b=b|0;d=d|0;var e=0,f=0;c[b+4>>2]=d+-1;c[b>>2]=17792;d=b+8|0;hn(d,28);Ke(b+144|0,17776,1);e=c[d>>2]|0;d=b+12|0;f=c[d>>2]|0;if((f|0)!=(e|0))c[d>>2]=f+(~((f+-4-e|0)>>>2)<<2);c[5671]=0;c[5670]=16240;jn(b,22680);c[5669]=0;c[5668]=16280;kn(b,22672);c[5665]=0;c[5664]=17888;c[5666]=0;a[22668]=0;c[5666]=Ok()|0;ln(b,22656);c[5663]=0;c[5662]=18848;mn(b,22648);c[5661]=0;c[5660]=19064;nn(b,22640);sl(22624,1);on(b,22624);c[5655]=0;c[5654]=19288;pn(b,22616);c[5653]=0;c[5652]=19408;qn(b,22608);c[5647]=0;c[5646]=18040;a[22592]=46;a[22593]=44;c[5649]=0;c[5650]=0;c[5651]=0;rn(b,22584);c[5639]=0;c[5638]=18080;c[5640]=46;c[5641]=44;c[5642]=0;c[5643]=0;c[5644]=0;sn(b,22552);c[5637]=0;c[5636]=16320;tn(b,22544);c[5635]=0;c[5634]=16440;un(b,22536);c[5633]=0;c[5632]=16512;vn(b,22528);c[5631]=0;c[5630]=16608;wn(b,22520);c[5629]=0;c[5628]=17200;xn(b,22512);c[5627]=0;c[5626]=17264;yn(b,22504);c[5625]=0;c[5624]=17328;zn(b,22496);c[5623]=0;c[5622]=17392;An(b,22488);c[5621]=0;c[5620]=17456;Bn(b,22480);c[5619]=0;c[5618]=17536;Cn(b,22472);c[5617]=0;c[5616]=17592;Dn(b,22464);c[5615]=0;c[5614]=17640;En(b,22456);c[5611]=0;c[5610]=16688;c[5612]=16736;Fn(b,22440);c[5607]=0;c[5606]=16840;c[5608]=16888;Gn(b,22424);c[5603]=0;c[5602]=18784;c[5604]=Wg()|0;c[5602]=17136;Hn(b,22408);c[5599]=0;c[5598]=18784;c[5600]=Wg()|0;c[5598]=17168;In(b,22392);c[5597]=0;c[5596]=17680;Jn(b,22384);c[5595]=0;c[5594]=17720;Kn(b,22376);return}function wk(){if((a[17824]|0)==0?(Ja(17824)|0)!=0:0){Bk()|0;c[4454]=17808;Va(17824)}return c[4454]|0}function xk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;te(b);e=a+8|0;f=c[e>>2]|0;if((c[a+12>>2]|0)-f>>2>>>0>d>>>0)g=f;else{Mn(e,d+1|0);g=c[e>>2]|0}f=c[g+(d<<2)>>2]|0;if(!f)h=g;else{ue(f)|0;h=c[e>>2]|0}c[h+(d<<2)>>2]=b;return}function yk(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;c[a>>2]=17792;b=a+8|0;d=a+12|0;e=c[d>>2]|0;f=c[b>>2]|0;if((e|0)!=(f|0)){g=e;e=f;f=0;while(1){h=c[e+(f<<2)>>2]|0;if(!h){i=g;j=e}else{ue(h)|0;i=c[d>>2]|0;j=c[b>>2]|0}f=f+1|0;if(f>>>0>=i-j>>2>>>0)break;else{g=i;e=j}}}Oe(a+144|0);Ln(b);return}function zk(a){a=a|0;yk(a);lp(a);return}function Ak(a,b){a=a|0;b=b|0;if(Nn(a,b)|0)return c[(c[a+8>>2]|0)+(b<<2)>>2]|0;else{b=Ia(4)|0;Dp(b);Xb(b|0,26528,102)}return 0}function Bk(){vk(22216,1);c[4452]=22216;return 17808}function Ck(){var a=0;a=c[(wk()|0)>>2]|0;c[4458]=a;te(a);return 17832}function Dk(){if((a[17848]|0)==0?(Ja(17848)|0)!=0:0){Ck()|0;c[4460]=17832;Va(17848)}return c[4460]|0}function Ek(a){a=a|0;var b=0;b=c[(Dk()|0)>>2]|0;c[a>>2]=b;te(b);return}function Fk(a,b){a=a|0;b=b|0;var d=0;d=c[b>>2]|0;c[a>>2]=d;te(d);return}function Gk(a){a=a|0;ue(c[a>>2]|0)|0;return}function Hk(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;if((c[a>>2]|0)!=-1){c[d>>2]=a;c[d+4>>2]=113;c[d+8>>2]=0;He(a,d,114)}i=b;return (c[a+4>>2]|0)+-1|0}function Ik(a,b){a=a|0;b=b|0;var d=0;d=c[a>>2]|0;return Ak(d,Hk(b)|0)|0}function Jk(a){a=a|0;lp(a);return}function Kk(a){a=a|0;if(a)cc[c[(c[a>>2]|0)+4>>2]&127](a);return}function Lk(a){a=a|0;var b=0;b=c[4464]|0;c[4464]=b+1;c[a+4>>2]=b+1;return}function Mk(a){a=a|0;lp(a);return}function Nk(a,c,d){a=a|0;c=c|0;d=d|0;var e=0;if(d>>>0<128)e=(b[(Ok()|0)+(d<<1)>>1]&c)<<16>>16!=0;else e=0;return e|0}function Ok(){return c[(Ha()|0)>>2]|0}function Pk(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;if((d|0)==(e|0))g=d;else{a=((e+-4-d|0)>>>2)+1|0;h=d;i=f;while(1){f=c[h>>2]|0;if(f>>>0<128)j=b[(Ok()|0)+(f<<1)>>1]|0;else j=0;b[i>>1]=j;h=h+4|0;if((h|0)==(e|0))break;else i=i+2|0}g=d+(a<<2)|0}return g|0}function Qk(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;a:do if((e|0)==(f|0))g=e;else{a=e;while(1){h=c[a>>2]|0;if(h>>>0<128?(b[(Ok()|0)+(h<<1)>>1]&d)<<16>>16!=0:0){g=a;break a}a=a+4|0;if((a|0)==(f|0)){g=f;break}}}while(0);return g|0}function Rk(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;a:do if((e|0)==(f|0))g=e;else{a=e;while(1){h=c[a>>2]|0;if(h>>>0>=128){g=a;break a}if(!((b[(Ok()|0)+(h<<1)>>1]&d)<<16>>16)){g=a;break a}a=a+4|0;if((a|0)==(f|0)){g=f;break}}}while(0);return g|0}function Sk(a,b){a=a|0;b=b|0;var d=0;if(b>>>0<128)d=c[(Tk()|0)+(b<<2)>>2]|0;else d=b;return d|0}function Tk(){return c[(Ta()|0)>>2]|0}function Uk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;if((b|0)==(d|0))e=b;else{a=((d+-4-b|0)>>>2)+1|0;f=b;do{g=c[f>>2]|0;if(g>>>0<128)h=c[(Tk()|0)+(g<<2)>>2]|0;else h=g;c[f>>2]=h;f=f+4|0}while((f|0)!=(d|0));e=b+(a<<2)|0}return e|0}function Vk(a,b){a=a|0;b=b|0;var d=0;if(b>>>0<128)d=c[(Wk()|0)+(b<<2)>>2]|0;else d=b;return d|0}function Wk(){return c[(rb()|0)>>2]|0}function Xk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;if((b|0)==(d|0))e=b;else{a=((d+-4-b|0)>>>2)+1|0;f=b;do{g=c[f>>2]|0;if(g>>>0<128)h=c[(Wk()|0)+(g<<2)>>2]|0;else h=g;c[f>>2]=h;f=f+4|0}while((f|0)!=(d|0));e=b+(a<<2)|0}return e|0}function Yk(a,b){a=a|0;b=b|0;return b<<24>>24|0}function Zk(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;if((d|0)==(e|0))g=d;else{b=d;d=f;while(1){c[d>>2]=a[b>>0];b=b+1|0;if((b|0)==(e|0)){g=e;break}else d=d+4|0}}return g|0}function _k(a,b,c){a=a|0;b=b|0;c=c|0;return (b>>>0<128?b&255:c)|0}function $k(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;if((d|0)==(e|0))h=d;else{b=((e+-4-d|0)>>>2)+1|0;i=d;j=g;while(1){g=c[i>>2]|0;a[j>>0]=g>>>0<128?g&255:f;i=i+4|0;if((i|0)==(e|0))break;else j=j+1|0}h=d+(b<<2)|0}return h|0}function al(b){b=b|0;var d=0;c[b>>2]=17888;d=c[b+8>>2]|0;if((d|0)!=0?(a[b+12>>0]|0)!=0:0)mp(d);return}function bl(a){a=a|0;al(a);lp(a);return}function cl(a,b){a=a|0;b=b|0;var d=0;if(b<<24>>24>-1)d=c[(Tk()|0)+((b&255)<<2)>>2]&255;else d=b;return d|0}function dl(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;if((d|0)==(e|0))f=d;else{b=d;do{d=a[b>>0]|0;if(d<<24>>24>-1)g=c[(Tk()|0)+(d<<24>>24<<2)>>2]&255;else g=d;a[b>>0]=g;b=b+1|0}while((b|0)!=(e|0));f=e}return f|0}function el(a,b){a=a|0;b=b|0;var d=0;if(b<<24>>24>-1)d=c[(Wk()|0)+(b<<24>>24<<2)>>2]&255;else d=b;return d|0}function fl(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;if((d|0)==(e|0))f=d;else{b=d;do{d=a[b>>0]|0;if(d<<24>>24>-1)g=c[(Wk()|0)+(d<<24>>24<<2)>>2]&255;else g=d;a[b>>0]=g;b=b+1|0}while((b|0)!=(e|0));f=e}return f|0}function gl(a,b){a=a|0;b=b|0;return b|0}function hl(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0;if((c|0)==(d|0))f=c;else{b=c;c=e;while(1){a[c>>0]=a[b>>0]|0;b=b+1|0;if((b|0)==(d|0)){f=d;break}else c=c+1|0}}return f|0}function il(a,b,c){a=a|0;b=b|0;c=c|0;return (b<<24>>24>-1?b:c)|0}function jl(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0;if((c|0)==(d|0))g=c;else{b=c;c=f;while(1){f=a[b>>0]|0;a[c>>0]=f<<24>>24>-1?f:e;b=b+1|0;if((b|0)==(d|0)){g=d;break}else c=c+1|0}}return g|0}function kl(a){a=a|0;lp(a);return}function ll(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[f>>2]=d;c[i>>2]=g;return 3}function ml(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[f>>2]=d;c[i>>2]=g;return 3}function nl(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function ol(a){a=a|0;return 1}function pl(a){a=a|0;return 1}function ql(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;b=d-c|0;return (b>>>0<e>>>0?b:e)|0}function rl(a){a=a|0;return 1}function sl(a,b){a=a|0;b=b|0;c[a+4>>2]=b+-1;c[a>>2]=17960;c[a+8>>2]=Wg()|0;return}function tl(a){a=a|0;um(a);lp(a);return}function ul(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;l=i;i=i+16|0;m=l;n=l+8|0;o=(e|0)==(f|0);a:do if(!o){p=e;while(1){if(!(c[p>>2]|0)){q=p;break}p=p+4|0;if((p|0)==(f|0)){q=f;break}}c[k>>2]=h;c[g>>2]=e;if(o|(h|0)==(j|0)){r=e;s=32}else{p=j;t=b+8|0;u=e;v=h;w=q;while(1){x=d;y=c[x+4>>2]|0;z=m;c[z>>2]=c[x>>2];c[z+4>>2]=y;y=cb(c[t>>2]|0)|0;z=Xo(v,g,w-u>>2,p-v|0,d)|0;if(y)cb(y|0)|0;if((z|0)==-1){A=u;B=v;break}else if(!z){C=1;break a}y=(c[k>>2]|0)+z|0;c[k>>2]=y;if((y|0)==(j|0)){s=31;break}if((w|0)==(f|0)){D=c[g>>2]|0;E=y;F=f}else{y=cb(c[t>>2]|0)|0;z=Cq(n,0,d)|0;if(y)cb(y|0)|0;if((z|0)==-1){C=2;break a}y=c[k>>2]|0;if(z>>>0>(p-y|0)>>>0){C=1;break a}b:do if(z){x=y;G=z;H=n;while(1){I=a[H>>0]|0;c[k>>2]=x+1;a[x>>0]=I;I=G+-1|0;if(!I)break b;x=c[k>>2]|0;G=I;H=H+1|0}}while(0);z=c[g>>2]|0;y=z+4|0;c[g>>2]=y;c:do if((y|0)==(f|0))J=f;else{H=z;G=y;while(1){x=H+8|0;if(!(c[G>>2]|0)){J=G;break c}if((x|0)==(f|0)){J=f;break}else{I=G;G=x;H=I}}}while(0);D=y;E=c[k>>2]|0;F=J}if((D|0)==(f|0)|(E|0)==(j|0)){r=D;s=32;break a}else{u=D;v=E;w=F}}if((s|0)==31){r=c[g>>2]|0;s=32;break}c[k>>2]=B;d:do if((A|0)==(c[g>>2]|0))K=A;else{w=A;v=B;while(1){u=c[w>>2]|0;p=cb(c[t>>2]|0)|0;z=Cq(v,u,m)|0;if(p)cb(p|0)|0;if((z|0)==-1){K=w;break d}v=(c[k>>2]|0)+z|0;c[k>>2]=v;z=w+4|0;if((z|0)==(c[g>>2]|0)){K=z;break}else w=z}}while(0);c[g>>2]=K;C=2}}else{c[k>>2]=h;c[g>>2]=e;r=e;s=32}while(0);if((s|0)==32)C=(r|0)!=(f|0)&1;i=l;return C|0}function vl(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;l=i;i=i+16|0;m=l;n=(e|0)==(f|0);a:do if(!n){o=e;while(1){if(!(a[o>>0]|0)){p=o;break}o=o+1|0;if((o|0)==(f|0)){p=f;break}}c[k>>2]=h;c[g>>2]=e;if(n|(h|0)==(j|0)){q=e;r=31}else{o=j;s=b+8|0;t=e;u=h;v=p;while(1){w=d;x=c[w+4>>2]|0;y=m;c[y>>2]=c[w>>2];c[y+4>>2]=x;x=v;y=cb(c[s>>2]|0)|0;w=Uo(u,g,x-t|0,o-u>>2,d)|0;if(y)cb(y|0)|0;if((w|0)==-1){z=t;A=u;B=x;break}else if(!w){C=2;break a}x=(c[k>>2]|0)+(w<<2)|0;c[k>>2]=x;if((x|0)==(j|0)){r=30;break}w=c[g>>2]|0;if((v|0)==(f|0)){D=w;E=x;F=f}else{y=cb(c[s>>2]|0)|0;G=So(x,w,1,d)|0;if(y)cb(y|0)|0;if(G){C=2;break a}c[k>>2]=(c[k>>2]|0)+4;G=c[g>>2]|0;y=G+1|0;c[g>>2]=y;b:do if((y|0)==(f|0))H=f;else{w=G;x=y;while(1){I=w+2|0;if(!(a[x>>0]|0)){H=x;break b}if((I|0)==(f|0)){H=f;break}else{J=x;x=I;w=J}}}while(0);D=y;E=c[k>>2]|0;F=H}if((D|0)==(f|0)|(E|0)==(j|0)){q=D;r=31;break a}else{t=D;u=E;v=F}}if((r|0)==30){q=c[g>>2]|0;r=31;break}c[k>>2]=A;c:do if((z|0)!=(c[g>>2]|0)){v=z;u=A;while(1){t=cb(c[s>>2]|0)|0;o=So(u,v,B-v|0,m)|0;if(t)cb(t|0)|0;if(!o)K=v+1|0;else if((o|0)==-2){L=v;r=16;break}else if((o|0)==-1){M=v;r=15;break}else K=v+o|0;u=(c[k>>2]|0)+4|0;c[k>>2]=u;if((K|0)==(c[g>>2]|0)){N=K;break c}else v=K}if((r|0)==15){c[g>>2]=M;C=2;break a}else if((r|0)==16){c[g>>2]=L;C=1;break a}}else N=z;while(0);c[g>>2]=N;C=(N|0)!=(f|0)&1}}else{c[k>>2]=h;c[g>>2]=e;q=e;r=31}while(0);if((r|0)==31)C=(q|0)!=(f|0)&1;i=l;return C|0}function wl(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h;c[g>>2]=e;e=cb(c[b+8>>2]|0)|0;b=Cq(j,0,d)|0;if(e)cb(e|0)|0;a:do if(!((b|0)==0|(b|0)==-1)){e=b+-1|0;d=c[g>>2]|0;if(e>>>0<=(f-d|0)>>>0)if(!e)k=0;else{l=d;d=e;e=j;while(1){m=a[e>>0]|0;c[g>>2]=l+1;a[l>>0]=m;m=d+-1|0;if(!m){k=0;break a}l=c[g>>2]|0;d=m;e=e+1|0}}else k=1}else k=2;while(0);i=h;return k|0}function xl(a){a=a|0;var b=0,d=0,e=0;b=a+8|0;a=cb(c[b>>2]|0)|0;d=Wo(0,0,4)|0;if(a)cb(a|0)|0;if(!d){d=c[b>>2]|0;if(d){b=cb(d|0)|0;if(!b)e=0;else{cb(b|0)|0;e=0}}else e=1}else e=-1;return e|0}function yl(a){a=a|0;return 0}function zl(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;a:do if((f|0)==0|(d|0)==(e|0))g=0;else{h=e;i=a+8|0;j=d;k=0;l=0;while(1){m=cb(c[i>>2]|0)|0;n=Ro(j,h-j|0,b)|0;if(m)cb(m|0)|0;if(!n){o=j+1|0;p=1}else if((n|0)==-2|(n|0)==-1){g=k;break a}else{o=j+n|0;p=n}n=p+k|0;l=l+1|0;if(l>>>0>=f>>>0|(o|0)==(e|0)){g=n;break}else{j=o;k=n}}}while(0);return g|0}function Al(a){a=a|0;var b=0,d=0;b=c[a+8>>2]|0;if(b){a=cb(b|0)|0;if(!a)d=4;else{cb(a|0)|0;d=4}}else d=1;return d|0}function Bl(a){a=a|0;lp(a);return}function Cl(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b+4|0;k=b;c[a>>2]=d;c[k>>2]=g;l=Pn(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d>>1<<1);c[j>>2]=g+((c[k>>2]|0)-g);i=b;return l|0}function Dl(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b+4|0;k=b;c[a>>2]=d;c[k>>2]=g;l=Qn(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d);c[j>>2]=g+((c[k>>2]|0)-g>>1<<1);i=b;return l|0}function El(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function Fl(a){a=a|0;return 0}function Gl(a){a=a|0;return 0}function Hl(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Rn(c,d,e,1114111,0)|0}function Il(a){a=a|0;return 4}function Jl(a){a=a|0;lp(a);return}function Kl(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b+4|0;k=b;c[a>>2]=d;c[k>>2]=g;l=Sn(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d>>2<<2);c[j>>2]=g+((c[k>>2]|0)-g);i=b;return l|0}function Ll(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b+4|0;k=b;c[a>>2]=d;c[k>>2]=g;l=Tn(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d);c[j>>2]=g+((c[k>>2]|0)-g>>2<<2);i=b;return l|0}function Ml(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function Nl(a){a=a|0;return 0}function Ol(a){a=a|0;return 0}function Pl(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Un(c,d,e,1114111,0)|0}function Ql(a){a=a|0;return 4}function Rl(a){a=a|0;lp(a);return}function Sl(a){a=a|0;lp(a);return}function Tl(a){a=a|0;c[a>>2]=18040;Oe(a+12|0);return}function Ul(a){a=a|0;Tl(a);lp(a);return}function Vl(a){a=a|0;c[a>>2]=18080;Oe(a+16|0);return}function Wl(a){a=a|0;Vl(a);lp(a);return}function Xl(b){b=b|0;return a[b+8>>0]|0}function Yl(a){a=a|0;return c[a+8>>2]|0}function Zl(b){b=b|0;return a[b+9>>0]|0}function _l(a){a=a|0;return c[a+12>>2]|0}function $l(a,b){a=a|0;b=b|0;Le(a,b+12|0);return}function am(a,b){a=a|0;b=b|0;Le(a,b+16|0);return}function bm(a,b){a=a|0;b=b|0;Ke(a,18112,4);return}function cm(a,b){a=a|0;b=b|0;Ze(a,18120,cp(18120)|0);return}function dm(a,b){a=a|0;b=b|0;Ke(a,18144,5);return}function em(a,b){a=a|0;b=b|0;Ze(a,18152,cp(18152)|0);return}function fm(a){a=a|0;var b=0,d=0;b=c[a+4>>2]&74;if(!b)d=0;else if((b|0)==8)d=16;else if((b|0)==64)d=8;else d=10;return d|0}function gm(b){b=b|0;if((a[18184]|0)==0?(Ja(18184)|0)!=0:0){if((a[25384]|0)==0?(Ja(25384)|0)!=0:0){cr(25216,0,168)|0;Hb(115,0,n|0)|0;Va(25384)}Pe(25216,25392)|0;Pe(25228,25400)|0;Pe(25240,25408)|0;Pe(25252,25416)|0;Pe(25264,25432)|0;Pe(25276,25448)|0;Pe(25288,25456)|0;Pe(25300,25472)|0;Pe(25312,25480)|0;Pe(25324,25488)|0;Pe(25336,25496)|0;Pe(25348,25504)|0;Pe(25360,25512)|0;Pe(25372,25520)|0;c[4544]=25216;Va(18184)}return c[4544]|0}function hm(b){b=b|0;if((a[18200]|0)==0?(Ja(18200)|0)!=0:0){if((a[24848]|0)==0?(Ja(24848)|0)!=0:0){cr(24680,0,168)|0;Hb(116,0,n|0)|0;Va(24848)}bf(24680,24856)|0;bf(24692,24888)|0;bf(24704,24920)|0;bf(24716,24952)|0;bf(24728,24992)|0;bf(24740,25032)|0;bf(24752,25064)|0;bf(24764,25104)|0;bf(24776,25120)|0;bf(24788,25136)|0;bf(24800,25152)|0;bf(24812,25168)|0;bf(24824,25184)|0;bf(24836,25200)|0;c[4548]=24680;Va(18200)}return c[4548]|0}function im(b){b=b|0;if((a[18216]|0)==0?(Ja(18216)|0)!=0:0){if((a[24456]|0)==0?(Ja(24456)|0)!=0:0){cr(24168,0,288)|0;Hb(117,0,n|0)|0;Va(24456)}Pe(24168,24464)|0;Pe(24180,24472)|0;Pe(24192,24488)|0;Pe(24204,24496)|0;Pe(24216,24504)|0;Pe(24228,24512)|0;Pe(24240,24520)|0;Pe(24252,24528)|0;Pe(24264,24536)|0;Pe(24276,24552)|0;Pe(24288,24560)|0;Pe(24300,24576)|0;Pe(24312,24592)|0;Pe(24324,24600)|0;Pe(24336,24608)|0;Pe(24348,24616)|0;Pe(24360,24504)|0;Pe(24372,24624)|0;Pe(24384,24632)|0;Pe(24396,24640)|0;Pe(24408,24648)|0;Pe(24420,24656)|0;Pe(24432,24664)|0;Pe(24444,24672)|0;c[4552]=24168;Va(18216)}return c[4552]|0}function jm(b){b=b|0;if((a[18232]|0)==0?(Ja(18232)|0)!=0:0){if((a[23616]|0)==0?(Ja(23616)|0)!=0:0){cr(23328,0,288)|0;Hb(118,0,n|0)|0;Va(23616)}bf(23328,23624)|0;bf(23340,23656)|0;bf(23352,23696)|0;bf(23364,23720)|0;bf(23376,23744)|0;bf(23388,23760)|0;bf(23400,23784)|0;bf(23412,23808)|0;bf(23424,23840)|0;bf(23436,23880)|0;bf(23448,23912)|0;bf(23460,23952)|0;bf(23472,23992)|0;bf(23484,24008)|0;bf(23496,24024)|0;bf(23508,24040)|0;bf(23520,23744)|0;bf(23532,24056)|0;bf(23544,24072)|0;bf(23556,24088)|0;bf(23568,24104)|0;bf(23580,24120)|0;bf(23592,24136)|0;bf(23604,24152)|0;c[4556]=23328;Va(18232)}return c[4556]|0}function km(b){b=b|0;if((a[18248]|0)==0?(Ja(18248)|0)!=0:0){if((a[23304]|0)==0?(Ja(23304)|0)!=0:0){cr(23016,0,288)|0;Hb(119,0,n|0)|0;Va(23304)}Pe(23016,23312)|0;Pe(23028,23320)|0;c[4560]=23016;Va(18248)}return c[4560]|0}function lm(b){b=b|0;if((a[18264]|0)==0?(Ja(18264)|0)!=0:0){if((a[22976]|0)==0?(Ja(22976)|0)!=0:0){cr(22688,0,288)|0;Hb(120,0,n|0)|0;Va(22976)}bf(22688,22984)|0;bf(22700,23e3)|0;c[4564]=22688;Va(18264)}return c[4564]|0}function mm(b){b=b|0;if((a[18288]|0)==0?(Ja(18288)|0)!=0:0){Ke(18272,18296,8);Hb(121,18272,n|0)|0;Va(18288)}return 18272}function nm(b){b=b|0;if((a[18328]|0)==0?(Ja(18328)|0)!=0:0){Ze(18312,18336,cp(18336)|0);Hb(122,18312,n|0)|0;Va(18328)}return 18312}function om(b){b=b|0;if((a[18392]|0)==0?(Ja(18392)|0)!=0:0){Ke(18376,18400,8);Hb(121,18376,n|0)|0;Va(18392)}return 18376}function pm(b){b=b|0;if((a[18432]|0)==0?(Ja(18432)|0)!=0:0){Ze(18416,18440,cp(18440)|0);Hb(122,18416,n|0)|0;Va(18432)}return 18416}function qm(b){b=b|0;if((a[18496]|0)==0?(Ja(18496)|0)!=0:0){Ke(18480,18504,20);Hb(121,18480,n|0)|0;Va(18496)}return 18480}function rm(b){b=b|0;if((a[18544]|0)==0?(Ja(18544)|0)!=0:0){Ze(18528,18552,cp(18552)|0);Hb(122,18528,n|0)|0;Va(18544)}return 18528}function sm(b){b=b|0;if((a[18656]|0)==0?(Ja(18656)|0)!=0:0){Ke(18640,18664,11);Hb(121,18640,n|0)|0;Va(18656)}return 18640}function tm(b){b=b|0;if((a[18696]|0)==0?(Ja(18696)|0)!=0:0){Ze(18680,18704,cp(18704)|0);Hb(122,18680,n|0)|0;Va(18696)}return 18680}function um(a){a=a|0;var b=0;c[a>>2]=17960;b=a+8|0;a=c[b>>2]|0;if((a|0)!=(Wg()|0))Kb(c[b>>2]|0);return}function vm(){qe(0);Hb(123,13992,n|0)|0;return}function wm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;sf(b);c[b>>2]=14728;c[b+32>>2]=d;c[b+40>>2]=e;c[b+48>>2]=-1;a[b+52>>0]=0;Fk(g,b+4|0);qo(b,g);Gk(g);i=f;return}function xm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;sf(b);c[b>>2]=14616;c[b+32>>2]=d;Fk(g,b+4|0);d=Ik(g,17936)|0;Gk(g);c[b+36>>2]=d;c[b+40>>2]=e;a[b+44>>0]=(fc[c[(c[d>>2]|0)+28>>2]&127](d)|0)&1;i=f;return}function ym(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;If(b);c[b>>2]=14472;c[b+32>>2]=d;c[b+40>>2]=e;c[b+48>>2]=-1;a[b+52>>0]=0;Fk(g,b+4|0);go(b,g);Gk(g);i=f;return}function zm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;If(b);c[b>>2]=14360;c[b+32>>2]=d;Fk(g,b+4|0);d=Ik(g,17944)|0;Gk(g);c[b+36>>2]=d;c[b+40>>2]=e;a[b+44>>0]=(fc[c[(c[d>>2]|0)+28>>2]&127](d)|0)&1;i=f;return}function Am(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=_q(b|0)|0;e=jp(d+13|0)|0;c[e>>2]=d;c[e+4>>2]=d;c[e+8>>2]=0;f=e+12|0;$q(f|0,b|0,d+1|0)|0;c[a>>2]=f;return}function Bm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=d;g=e-f|0;if(g>>>0>4294967279)Ie(b);if(g>>>0<11){a[b>>0]=g<<1;h=b+1|0}else{i=g+16&-16;j=jp(i)|0;c[b+8>>2]=j;c[b>>2]=i|1;c[b+4>>2]=g;h=j}if((d|0)==(e|0))k=h;else{j=e-f|0;f=d;d=h;while(1){a[d>>0]=a[f>>0]|0;f=f+1|0;if((f|0)==(e|0))break;else d=d+1|0}k=h+j|0}a[k>>0]=0;return}function Cm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=d;g=e-f|0;h=g>>2;if(h>>>0>1073741807)Ie(b);if(h>>>0<2){a[b>>0]=g>>>1;i=b+4|0}else{g=h+4&-4;j=jp(g<<2)|0;c[b+8>>2]=j;c[b>>2]=g|1;c[b+4>>2]=h;i=j}if((d|0)==(e|0))k=i;else{j=((e+-4-f|0)>>>2)+1|0;f=d;d=i;while(1){c[d>>2]=c[f>>2];f=f+4|0;if((f|0)==(e|0))break;else d=d+4|0}k=i+(j<<2)|0}c[k>>2]=0;return}function Dm(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0;l=i;i=i+112|0;m=l;n=(g-f|0)/12|0;if(n>>>0>100){o=kq(n)|0;if(!o)fq();else{p=o;q=o}}else{p=0;q=m}m=(f|0)==(g|0);if(m){r=0;s=n}else{o=f;t=0;u=n;n=q;while(1){v=a[o>>0]|0;if(!(v&1))w=(v&255)>>>1;else w=c[o+4>>2]|0;if(!w){a[n>>0]=2;x=t+1|0;y=u+-1|0}else{a[n>>0]=1;x=t;y=u}o=o+12|0;if((o|0)==(g|0)){r=x;s=y;break}else{t=x;u=y;n=n+1|0}}}n=0;y=r;r=s;a:while(1){s=n;while(1){u=c[b>>2]|0;do if(u)if((c[u+12>>2]|0)==(c[u+16>>2]|0))if((fc[c[(c[u>>2]|0)+36>>2]&127](u)|0)==-1){c[b>>2]=0;z=0;break}else{z=c[b>>2]|0;break}else z=u;else z=0;while(0);u=(z|0)==0;x=c[e>>2]|0;if(x)if((c[x+12>>2]|0)==(c[x+16>>2]|0)?(fc[c[(c[x>>2]|0)+36>>2]&127](x)|0)==-1:0){c[e>>2]=0;A=0}else A=x;else A=0;x=(A|0)==0;t=c[b>>2]|0;if(!((u^x)&(r|0)!=0)){B=x;C=t;D=A;break a}x=c[t+12>>2]|0;if((x|0)==(c[t+16>>2]|0))E=fc[c[(c[t>>2]|0)+36>>2]&127](t)|0;else E=d[x>>0]|0;x=E&255;if(k)F=x;else F=oc[c[(c[h>>2]|0)+12>>2]&15](h,x)|0;x=s+1|0;if(m)s=x;else{G=x;H=F;I=s;break}}s=0;x=f;t=y;u=r;o=q;while(1){do if((a[o>>0]|0)==1){if(!(a[x>>0]&1))J=x+1|0;else J=c[x+8>>2]|0;w=a[J+I>>0]|0;if(k)K=w;else K=oc[c[(c[h>>2]|0)+12>>2]&15](h,w)|0;if(H<<24>>24!=K<<24>>24){a[o>>0]=0;L=s;M=t;N=u+-1|0;break}w=a[x>>0]|0;if(!(w&1))O=(w&255)>>>1;else O=c[x+4>>2]|0;if((O|0)==(G|0)){a[o>>0]=2;L=1;M=t+1|0;N=u+-1|0}else{L=1;M=t;N=u}}else{L=s;M=t;N=u}while(0);x=x+12|0;if((x|0)==(g|0))break;else{s=L;t=M;u=N;o=o+1|0}}if(!L){n=G;y=M;r=N;continue}o=c[b>>2]|0;u=o+12|0;t=c[u>>2]|0;if((t|0)==(c[o+16>>2]|0))fc[c[(c[o>>2]|0)+40>>2]&127](o)|0;else c[u>>2]=t+1;if((M+N|0)>>>0<2){n=G;y=M;r=N;continue}else{P=f;Q=M;R=q}while(1){if((a[R>>0]|0)==2){t=a[P>>0]|0;if(!(t&1))S=(t&255)>>>1;else S=c[P+4>>2]|0;if((S|0)!=(G|0)){a[R>>0]=0;T=Q+-1|0}else T=Q}else T=Q;t=P+12|0;if((t|0)==(g|0)){n=G;y=T;r=N;continue a}else{P=t;Q=T;R=R+1|0}}}do if(C)if((c[C+12>>2]|0)==(c[C+16>>2]|0))if((fc[c[(c[C>>2]|0)+36>>2]&127](C)|0)==-1){c[b>>2]=0;U=0;break}else{U=c[b>>2]|0;break}else U=C;else U=0;while(0);C=(U|0)==0;do if(!B){if((c[D+12>>2]|0)!=(c[D+16>>2]|0))if(C)break;else{V=69;break}if((fc[c[(c[D>>2]|0)+36>>2]&127](D)|0)!=-1)if(C)break;else{V=69;break}else{c[e>>2]=0;V=67;break}}else V=67;while(0);if((V|0)==67?C:0)V=69;if((V|0)==69)c[j>>2]=c[j>>2]|2;b:do if(m)V=73;else{C=f;e=q;while(1){if((a[e>>0]|0)==2){W=C;break b}C=C+12|0;if((C|0)==(g|0)){V=73;break}else e=e+1|0}}while(0);if((V|0)==73){c[j>>2]=c[j>>2]|4;W=g}if(p)lq(p);i=l;return W|0}function Em(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;e=i;i=i+224|0;l=e+198|0;m=e+196|0;n=e+184|0;o=e+172|0;p=e+168|0;q=e+8|0;r=e+4|0;s=e;t=fm(h)|0;jh(n,h,l,m);c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;Re(o,10,0);if(!(a[o>>0]&1)){h=o+1|0;u=h;v=o+8|0;w=h}else{h=o+8|0;u=o+1|0;v=h;w=c[h>>2]|0}c[p>>2]=w;c[r>>2]=q;c[s>>2]=0;h=o+4|0;x=a[m>>0]|0;m=c[f>>2]|0;y=w;a:while(1){if(m)if((c[m+12>>2]|0)==(c[m+16>>2]|0)?(fc[c[(c[m>>2]|0)+36>>2]&127](m)|0)==-1:0){c[f>>2]=0;z=0}else z=m;else z=0;w=(z|0)==0;A=c[g>>2]|0;do if(A){if((c[A+12>>2]|0)!=(c[A+16>>2]|0))if(w){B=A;break}else{C=z;D=A;E=y;break a}if((fc[c[(c[A>>2]|0)+36>>2]&127](A)|0)!=-1)if(w){B=A;break}else{C=z;D=A;E=y;break a}else{c[g>>2]=0;F=14;break}}else F=14;while(0);if((F|0)==14){F=0;if(w){C=z;D=0;E=y;break}else B=0}A=a[o>>0]|0;G=(A&1)==0;if(G)H=(A&255)>>>1;else H=c[h>>2]|0;if((c[p>>2]|0)==(y+H|0)){if(G){I=(A&255)>>>1;J=(A&255)>>>1}else{A=c[h>>2]|0;I=A;J=A}Re(o,I<<1,0);if(!(a[o>>0]&1))K=10;else K=(c[o>>2]&-2)+-1|0;Re(o,K,0);if(!(a[o>>0]&1))L=u;else L=c[v>>2]|0;c[p>>2]=L+J;M=L}else M=y;A=z+12|0;G=c[A>>2]|0;N=z+16|0;if((G|0)==(c[N>>2]|0))O=fc[c[(c[z>>2]|0)+36>>2]&127](z)|0;else O=d[G>>0]|0;if(Vg(O&255,t,M,p,s,x,n,q,r,l)|0){C=z;D=B;E=M;break}G=c[A>>2]|0;if((G|0)==(c[N>>2]|0)){fc[c[(c[z>>2]|0)+40>>2]&127](z)|0;m=z;y=M;continue}else{c[A>>2]=G+1;m=z;y=M;continue}}M=a[n>>0]|0;if(!(M&1))P=(M&255)>>>1;else P=c[n+4>>2]|0;if((P|0)!=0?(P=c[r>>2]|0,(P-q|0)<160):0){M=c[s>>2]|0;c[r>>2]=P+4;c[P>>2]=M}c[k>>2]=vo(E,c[p>>2]|0,j,t)|0;Tj(n,q,c[r>>2]|0,j);if(C)if((c[C+12>>2]|0)==(c[C+16>>2]|0)?(fc[c[(c[C>>2]|0)+36>>2]&127](C)|0)==-1:0){c[f>>2]=0;Q=0}else Q=C;else Q=0;C=(Q|0)==0;do if(D){if((c[D+12>>2]|0)!=(c[D+16>>2]|0))if(C)break;else{F=52;break}if((fc[c[(c[D>>2]|0)+36>>2]&127](D)|0)!=-1)if(C^(D|0)==0)break;else{F=52;break}else{c[g>>2]=0;F=50;break}}else F=50;while(0);if((F|0)==50?C:0)F=52;if((F|0)==52)c[j>>2]=c[j>>2]|2;c[b>>2]=Q;Oe(o);Oe(n);i=e;return}function Fm(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0;e=i;i=i+224|0;l=e+198|0;m=e+196|0;n=e+184|0;o=e+172|0;p=e+168|0;q=e+8|0;r=e+4|0;s=e;t=fm(h)|0;jh(n,h,l,m);c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;Re(o,10,0);if(!(a[o>>0]&1)){h=o+1|0;u=h;v=o+8|0;w=h}else{h=o+8|0;u=o+1|0;v=h;w=c[h>>2]|0}c[p>>2]=w;c[r>>2]=q;c[s>>2]=0;h=o+4|0;x=a[m>>0]|0;m=c[f>>2]|0;y=w;a:while(1){if(m)if((c[m+12>>2]|0)==(c[m+16>>2]|0)?(fc[c[(c[m>>2]|0)+36>>2]&127](m)|0)==-1:0){c[f>>2]=0;z=0}else z=m;else z=0;w=(z|0)==0;A=c[g>>2]|0;do if(A){if((c[A+12>>2]|0)!=(c[A+16>>2]|0))if(w){B=A;break}else{C=z;D=A;E=y;break a}if((fc[c[(c[A>>2]|0)+36>>2]&127](A)|0)!=-1)if(w){B=A;break}else{C=z;D=A;E=y;break a}else{c[g>>2]=0;F=14;break}}else F=14;while(0);if((F|0)==14){F=0;if(w){C=z;D=0;E=y;break}else B=0}A=a[o>>0]|0;H=(A&1)==0;if(H)I=(A&255)>>>1;else I=c[h>>2]|0;if((c[p>>2]|0)==(y+I|0)){if(H){J=(A&255)>>>1;K=(A&255)>>>1}else{A=c[h>>2]|0;J=A;K=A}Re(o,J<<1,0);if(!(a[o>>0]&1))L=10;else L=(c[o>>2]&-2)+-1|0;Re(o,L,0);if(!(a[o>>0]&1))M=u;else M=c[v>>2]|0;c[p>>2]=M+K;N=M}else N=y;A=z+12|0;H=c[A>>2]|0;O=z+16|0;if((H|0)==(c[O>>2]|0))P=fc[c[(c[z>>2]|0)+36>>2]&127](z)|0;else P=d[H>>0]|0;if(Vg(P&255,t,N,p,s,x,n,q,r,l)|0){C=z;D=B;E=N;break}H=c[A>>2]|0;if((H|0)==(c[O>>2]|0)){fc[c[(c[z>>2]|0)+40>>2]&127](z)|0;m=z;y=N;continue}else{c[A>>2]=H+1;m=z;y=N;continue}}N=a[n>>0]|0;if(!(N&1))Q=(N&255)>>>1;else Q=c[n+4>>2]|0;if((Q|0)!=0?(Q=c[r>>2]|0,(Q-q|0)<160):0){N=c[s>>2]|0;c[r>>2]=Q+4;c[Q>>2]=N}N=wo(E,c[p>>2]|0,j,t)|0;t=k;c[t>>2]=N;c[t+4>>2]=G;Tj(n,q,c[r>>2]|0,j);if(C)if((c[C+12>>2]|0)==(c[C+16>>2]|0)?(fc[c[(c[C>>2]|0)+36>>2]&127](C)|0)==-1:0){c[f>>2]=0;R=0}else R=C;else R=0;C=(R|0)==0;do if(D){if((c[D+12>>2]|0)!=(c[D+16>>2]|0))if(C)break;else{F=52;break}if((fc[c[(c[D>>2]|0)+36>>2]&127](D)|0)!=-1)if(C^(D|0)==0)break;else{F=52;break}else{c[g>>2]=0;F=50;break}}else F=50;while(0);if((F|0)==50?C:0)F=52;if((F|0)==52)c[j>>2]=c[j>>2]|2;c[b>>2]=R;Oe(o);Oe(n);i=e;return}function Gm(e,f,g,h,j,k,l){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0;f=i;i=i+224|0;m=f+198|0;n=f+196|0;o=f+184|0;p=f+172|0;q=f+168|0;r=f+8|0;s=f+4|0;t=f;u=fm(j)|0;jh(o,j,m,n);c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;Re(p,10,0);if(!(a[p>>0]&1)){j=p+1|0;v=j;w=p+8|0;x=j}else{j=p+8|0;v=p+1|0;w=j;x=c[j>>2]|0}c[q>>2]=x;c[s>>2]=r;c[t>>2]=0;j=p+4|0;y=a[n>>0]|0;n=c[g>>2]|0;z=x;a:while(1){if(n)if((c[n+12>>2]|0)==(c[n+16>>2]|0)?(fc[c[(c[n>>2]|0)+36>>2]&127](n)|0)==-1:0){c[g>>2]=0;A=0}else A=n;else A=0;x=(A|0)==0;B=c[h>>2]|0;do if(B){if((c[B+12>>2]|0)!=(c[B+16>>2]|0))if(x){C=B;break}else{D=A;E=B;F=z;break a}if((fc[c[(c[B>>2]|0)+36>>2]&127](B)|0)!=-1)if(x){C=B;break}else{D=A;E=B;F=z;break a}else{c[h>>2]=0;G=14;break}}else G=14;while(0);if((G|0)==14){G=0;if(x){D=A;E=0;F=z;break}else C=0}B=a[p>>0]|0;H=(B&1)==0;if(H)I=(B&255)>>>1;else I=c[j>>2]|0;if((c[q>>2]|0)==(z+I|0)){if(H){J=(B&255)>>>1;K=(B&255)>>>1}else{B=c[j>>2]|0;J=B;K=B}Re(p,J<<1,0);if(!(a[p>>0]&1))L=10;else L=(c[p>>2]&-2)+-1|0;Re(p,L,0);if(!(a[p>>0]&1))M=v;else M=c[w>>2]|0;c[q>>2]=M+K;N=M}else N=z;B=A+12|0;H=c[B>>2]|0;O=A+16|0;if((H|0)==(c[O>>2]|0))P=fc[c[(c[A>>2]|0)+36>>2]&127](A)|0;else P=d[H>>0]|0;if(Vg(P&255,u,N,q,t,y,o,r,s,m)|0){D=A;E=C;F=N;break}H=c[B>>2]|0;if((H|0)==(c[O>>2]|0)){fc[c[(c[A>>2]|0)+40>>2]&127](A)|0;n=A;z=N;continue}else{c[B>>2]=H+1;n=A;z=N;continue}}N=a[o>>0]|0;if(!(N&1))Q=(N&255)>>>1;else Q=c[o+4>>2]|0;if((Q|0)!=0?(Q=c[s>>2]|0,(Q-r|0)<160):0){N=c[t>>2]|0;c[s>>2]=Q+4;c[Q>>2]=N}b[l>>1]=xo(F,c[q>>2]|0,k,u)|0;Tj(o,r,c[s>>2]|0,k);if(D)if((c[D+12>>2]|0)==(c[D+16>>2]|0)?(fc[c[(c[D>>2]|0)+36>>2]&127](D)|0)==-1:0){c[g>>2]=0;R=0}else R=D;else R=0;D=(R|0)==0;do if(E){if((c[E+12>>2]|0)!=(c[E+16>>2]|0))if(D)break;else{G=52;break}if((fc[c[(c[E>>2]|0)+36>>2]&127](E)|0)!=-1)if(D^(E|0)==0)break;else{G=52;break}else{c[h>>2]=0;G=50;break}}else G=50;while(0);if((G|0)==50?D:0)G=52;if((G|0)==52)c[k>>2]=c[k>>2]|2;c[e>>2]=R;Oe(p);Oe(o);i=f;return}function Hm(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;e=i;i=i+224|0;l=e+198|0;m=e+196|0;n=e+184|0;o=e+172|0;p=e+168|0;q=e+8|0;r=e+4|0;s=e;t=fm(h)|0;jh(n,h,l,m);c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;Re(o,10,0);if(!(a[o>>0]&1)){h=o+1|0;u=h;v=o+8|0;w=h}else{h=o+8|0;u=o+1|0;v=h;w=c[h>>2]|0}c[p>>2]=w;c[r>>2]=q;c[s>>2]=0;h=o+4|0;x=a[m>>0]|0;m=c[f>>2]|0;y=w;a:while(1){if(m)if((c[m+12>>2]|0)==(c[m+16>>2]|0)?(fc[c[(c[m>>2]|0)+36>>2]&127](m)|0)==-1:0){c[f>>2]=0;z=0}else z=m;else z=0;w=(z|0)==0;A=c[g>>2]|0;do if(A){if((c[A+12>>2]|0)!=(c[A+16>>2]|0))if(w){B=A;break}else{C=z;D=A;E=y;break a}if((fc[c[(c[A>>2]|0)+36>>2]&127](A)|0)!=-1)if(w){B=A;break}else{C=z;D=A;E=y;break a}else{c[g>>2]=0;F=14;break}}else F=14;while(0);if((F|0)==14){F=0;if(w){C=z;D=0;E=y;break}else B=0}A=a[o>>0]|0;G=(A&1)==0;if(G)H=(A&255)>>>1;else H=c[h>>2]|0;if((c[p>>2]|0)==(y+H|0)){if(G){I=(A&255)>>>1;J=(A&255)>>>1}else{A=c[h>>2]|0;I=A;J=A}Re(o,I<<1,0);if(!(a[o>>0]&1))K=10;else K=(c[o>>2]&-2)+-1|0;Re(o,K,0);if(!(a[o>>0]&1))L=u;else L=c[v>>2]|0;c[p>>2]=L+J;M=L}else M=y;A=z+12|0;G=c[A>>2]|0;N=z+16|0;if((G|0)==(c[N>>2]|0))O=fc[c[(c[z>>2]|0)+36>>2]&127](z)|0;else O=d[G>>0]|0;if(Vg(O&255,t,M,p,s,x,n,q,r,l)|0){C=z;D=B;E=M;break}G=c[A>>2]|0;if((G|0)==(c[N>>2]|0)){fc[c[(c[z>>2]|0)+40>>2]&127](z)|0;m=z;y=M;continue}else{c[A>>2]=G+1;m=z;y=M;continue}}M=a[n>>0]|0;if(!(M&1))P=(M&255)>>>1;else P=c[n+4>>2]|0;if((P|0)!=0?(P=c[r>>2]|0,(P-q|0)<160):0){M=c[s>>2]|0;c[r>>2]=P+4;c[P>>2]=M}c[k>>2]=yo(E,c[p>>2]|0,j,t)|0;Tj(n,q,c[r>>2]|0,j);if(C)if((c[C+12>>2]|0)==(c[C+16>>2]|0)?(fc[c[(c[C>>2]|0)+36>>2]&127](C)|0)==-1:0){c[f>>2]=0;Q=0}else Q=C;else Q=0;C=(Q|0)==0;do if(D){if((c[D+12>>2]|0)!=(c[D+16>>2]|0))if(C)break;else{F=52;break}if((fc[c[(c[D>>2]|0)+36>>2]&127](D)|0)!=-1)if(C^(D|0)==0)break;else{F=52;break}else{c[g>>2]=0;F=50;break}}else F=50;while(0);if((F|0)==50?C:0)F=52;if((F|0)==52)c[j>>2]=c[j>>2]|2;c[b>>2]=Q;Oe(o);Oe(n);i=e;return}function Im(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;e=i;i=i+224|0;l=e+198|0;m=e+196|0;n=e+184|0;o=e+172|0;p=e+168|0;q=e+8|0;r=e+4|0;s=e;t=fm(h)|0;jh(n,h,l,m);c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;Re(o,10,0);if(!(a[o>>0]&1)){h=o+1|0;u=h;v=o+8|0;w=h}else{h=o+8|0;u=o+1|0;v=h;w=c[h>>2]|0}c[p>>2]=w;c[r>>2]=q;c[s>>2]=0;h=o+4|0;x=a[m>>0]|0;m=c[f>>2]|0;y=w;a:while(1){if(m)if((c[m+12>>2]|0)==(c[m+16>>2]|0)?(fc[c[(c[m>>2]|0)+36>>2]&127](m)|0)==-1:0){c[f>>2]=0;z=0}else z=m;else z=0;w=(z|0)==0;A=c[g>>2]|0;do if(A){if((c[A+12>>2]|0)!=(c[A+16>>2]|0))if(w){B=A;break}else{C=z;D=A;E=y;break a}if((fc[c[(c[A>>2]|0)+36>>2]&127](A)|0)!=-1)if(w){B=A;break}else{C=z;D=A;E=y;break a}else{c[g>>2]=0;F=14;break}}else F=14;while(0);if((F|0)==14){F=0;if(w){C=z;D=0;E=y;break}else B=0}A=a[o>>0]|0;G=(A&1)==0;if(G)H=(A&255)>>>1;else H=c[h>>2]|0;if((c[p>>2]|0)==(y+H|0)){if(G){I=(A&255)>>>1;J=(A&255)>>>1}else{A=c[h>>2]|0;I=A;J=A}Re(o,I<<1,0);if(!(a[o>>0]&1))K=10;else K=(c[o>>2]&-2)+-1|0;Re(o,K,0);if(!(a[o>>0]&1))L=u;else L=c[v>>2]|0;c[p>>2]=L+J;M=L}else M=y;A=z+12|0;G=c[A>>2]|0;N=z+16|0;if((G|0)==(c[N>>2]|0))O=fc[c[(c[z>>2]|0)+36>>2]&127](z)|0;else O=d[G>>0]|0;if(Vg(O&255,t,M,p,s,x,n,q,r,l)|0){C=z;D=B;E=M;break}G=c[A>>2]|0;if((G|0)==(c[N>>2]|0)){fc[c[(c[z>>2]|0)+40>>2]&127](z)|0;m=z;y=M;continue}else{c[A>>2]=G+1;m=z;y=M;continue}}M=a[n>>0]|0;if(!(M&1))P=(M&255)>>>1;else P=c[n+4>>2]|0;if((P|0)!=0?(P=c[r>>2]|0,(P-q|0)<160):0){M=c[s>>2]|0;c[r>>2]=P+4;c[P>>2]=M}c[k>>2]=zo(E,c[p>>2]|0,j,t)|0;Tj(n,q,c[r>>2]|0,j);if(C)if((c[C+12>>2]|0)==(c[C+16>>2]|0)?(fc[c[(c[C>>2]|0)+36>>2]&127](C)|0)==-1:0){c[f>>2]=0;Q=0}else Q=C;else Q=0;C=(Q|0)==0;do if(D){if((c[D+12>>2]|0)!=(c[D+16>>2]|0))if(C)break;else{F=52;break}if((fc[c[(c[D>>2]|0)+36>>2]&127](D)|0)!=-1)if(C^(D|0)==0)break;else{F=52;break}else{c[g>>2]=0;F=50;break}}else F=50;while(0);if((F|0)==50?C:0)F=52;if((F|0)==52)c[j>>2]=c[j>>2]|2;c[b>>2]=Q;Oe(o);Oe(n);i=e;return}function Jm(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0;e=i;i=i+224|0;l=e+198|0;m=e+196|0;n=e+184|0;o=e+172|0;p=e+168|0;q=e+8|0;r=e+4|0;s=e;t=fm(h)|0;jh(n,h,l,m);c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;Re(o,10,0);if(!(a[o>>0]&1)){h=o+1|0;u=h;v=o+8|0;w=h}else{h=o+8|0;u=o+1|0;v=h;w=c[h>>2]|0}c[p>>2]=w;c[r>>2]=q;c[s>>2]=0;h=o+4|0;x=a[m>>0]|0;m=c[f>>2]|0;y=w;a:while(1){if(m)if((c[m+12>>2]|0)==(c[m+16>>2]|0)?(fc[c[(c[m>>2]|0)+36>>2]&127](m)|0)==-1:0){c[f>>2]=0;z=0}else z=m;else z=0;w=(z|0)==0;A=c[g>>2]|0;do if(A){if((c[A+12>>2]|0)!=(c[A+16>>2]|0))if(w){B=A;break}else{C=z;D=A;E=y;break a}if((fc[c[(c[A>>2]|0)+36>>2]&127](A)|0)!=-1)if(w){B=A;break}else{C=z;D=A;E=y;break a}else{c[g>>2]=0;F=14;break}}else F=14;while(0);if((F|0)==14){F=0;if(w){C=z;D=0;E=y;break}else B=0}A=a[o>>0]|0;H=(A&1)==0;if(H)I=(A&255)>>>1;else I=c[h>>2]|0;if((c[p>>2]|0)==(y+I|0)){if(H){J=(A&255)>>>1;K=(A&255)>>>1}else{A=c[h>>2]|0;J=A;K=A}Re(o,J<<1,0);if(!(a[o>>0]&1))L=10;else L=(c[o>>2]&-2)+-1|0;Re(o,L,0);if(!(a[o>>0]&1))M=u;else M=c[v>>2]|0;c[p>>2]=M+K;N=M}else N=y;A=z+12|0;H=c[A>>2]|0;O=z+16|0;if((H|0)==(c[O>>2]|0))P=fc[c[(c[z>>2]|0)+36>>2]&127](z)|0;else P=d[H>>0]|0;if(Vg(P&255,t,N,p,s,x,n,q,r,l)|0){C=z;D=B;E=N;break}H=c[A>>2]|0;if((H|0)==(c[O>>2]|0)){fc[c[(c[z>>2]|0)+40>>2]&127](z)|0;m=z;y=N;continue}else{c[A>>2]=H+1;m=z;y=N;continue}}N=a[n>>0]|0;if(!(N&1))Q=(N&255)>>>1;else Q=c[n+4>>2]|0;if((Q|0)!=0?(Q=c[r>>2]|0,(Q-q|0)<160):0){N=c[s>>2]|0;c[r>>2]=Q+4;c[Q>>2]=N}N=Ao(E,c[p>>2]|0,j,t)|0;t=k;c[t>>2]=N;c[t+4>>2]=G;Tj(n,q,c[r>>2]|0,j);if(C)if((c[C+12>>2]|0)==(c[C+16>>2]|0)?(fc[c[(c[C>>2]|0)+36>>2]&127](C)|0)==-1:0){c[f>>2]=0;R=0}else R=C;else R=0;C=(R|0)==0;do if(D){if((c[D+12>>2]|0)!=(c[D+16>>2]|0))if(C)break;else{F=52;break}if((fc[c[(c[D>>2]|0)+36>>2]&127](D)|0)!=-1)if(C^(D|0)==0)break;else{F=52;break}else{c[g>>2]=0;F=50;break}}else F=50;while(0);if((F|0)==50?C:0)F=52;if((F|0)==52)c[j>>2]=c[j>>2]|2;c[b>>2]=R;Oe(o);Oe(n);i=e;return}function Km(b,e,f,h,j,k,l){b=b|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;e=i;i=i+240|0;m=e+200|0;n=e+199|0;o=e+198|0;p=e+184|0;q=e+172|0;r=e+168|0;s=e+8|0;t=e+4|0;u=e;v=e+197|0;w=e+196|0;kh(p,j,m,n,o);c[q+0>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;Re(q,10,0);if(!(a[q>>0]&1)){j=q+1|0;x=j;y=q+8|0;z=j}else{j=q+8|0;x=q+1|0;y=j;z=c[j>>2]|0}c[r>>2]=z;c[t>>2]=s;c[u>>2]=0;a[v>>0]=1;a[w>>0]=69;j=q+4|0;A=a[n>>0]|0;n=a[o>>0]|0;o=c[f>>2]|0;B=z;a:while(1){if(o)if((c[o+12>>2]|0)==(c[o+16>>2]|0)?(fc[c[(c[o>>2]|0)+36>>2]&127](o)|0)==-1:0){c[f>>2]=0;C=0}else C=o;else C=0;z=(C|0)==0;D=c[h>>2]|0;do if(D){if((c[D+12>>2]|0)!=(c[D+16>>2]|0))if(z){E=D;break}else{F=C;G=D;H=B;break a}if((fc[c[(c[D>>2]|0)+36>>2]&127](D)|0)!=-1)if(z){E=D;break}else{F=C;G=D;H=B;break a}else{c[h>>2]=0;I=14;break}}else I=14;while(0);if((I|0)==14){I=0;if(z){F=C;G=0;H=B;break}else E=0}D=a[q>>0]|0;J=(D&1)==0;if(J)K=(D&255)>>>1;else K=c[j>>2]|0;if((c[r>>2]|0)==(B+K|0)){if(J){L=(D&255)>>>1;M=(D&255)>>>1}else{D=c[j>>2]|0;L=D;M=D}Re(q,L<<1,0);if(!(a[q>>0]&1))N=10;else N=(c[q>>2]&-2)+-1|0;Re(q,N,0);if(!(a[q>>0]&1))O=x;else O=c[y>>2]|0;c[r>>2]=O+M;P=O}else P=B;D=C+12|0;J=c[D>>2]|0;Q=C+16|0;if((J|0)==(c[Q>>2]|0))R=fc[c[(c[C>>2]|0)+36>>2]&127](C)|0;else R=d[J>>0]|0;if(lh(R&255,v,w,P,r,A,n,p,s,t,u,m)|0){F=C;G=E;H=P;break}J=c[D>>2]|0;if((J|0)==(c[Q>>2]|0)){fc[c[(c[C>>2]|0)+40>>2]&127](C)|0;o=C;B=P;continue}else{c[D>>2]=J+1;o=C;B=P;continue}}P=a[p>>0]|0;if(!(P&1))S=(P&255)>>>1;else S=c[p+4>>2]|0;if(!((S|0)==0|(a[v>>0]|0)==0)?(v=c[t>>2]|0,(v-s|0)<160):0){S=c[u>>2]|0;c[t>>2]=v+4;c[v>>2]=S}g[l>>2]=+Bo(H,c[r>>2]|0,k);Tj(p,s,c[t>>2]|0,k);if(F)if((c[F+12>>2]|0)==(c[F+16>>2]|0)?(fc[c[(c[F>>2]|0)+36>>2]&127](F)|0)==-1:0){c[f>>2]=0;T=0}else T=F;else T=0;F=(T|0)==0;do if(G){if((c[G+12>>2]|0)!=(c[G+16>>2]|0))if(F)break;else{I=52;break}if((fc[c[(c[G>>2]|0)+36>>2]&127](G)|0)!=-1)if(F^(G|0)==0)break;else{I=52;break}else{c[h>>2]=0;I=50;break}}else I=50;while(0);if((I|0)==50?F:0)I=52;if((I|0)==52)c[k>>2]=c[k>>2]|2;c[b>>2]=T;Oe(q);Oe(p);i=e;return}function Lm(b,e,f,g,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;e=i;i=i+240|0;m=e+200|0;n=e+199|0;o=e+198|0;p=e+184|0;q=e+172|0;r=e+168|0;s=e+8|0;t=e+4|0;u=e;v=e+197|0;w=e+196|0;kh(p,j,m,n,o);c[q+0>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;Re(q,10,0);if(!(a[q>>0]&1)){j=q+1|0;x=j;y=q+8|0;z=j}else{j=q+8|0;x=q+1|0;y=j;z=c[j>>2]|0}c[r>>2]=z;c[t>>2]=s;c[u>>2]=0;a[v>>0]=1;a[w>>0]=69;j=q+4|0;A=a[n>>0]|0;n=a[o>>0]|0;o=c[f>>2]|0;B=z;a:while(1){if(o)if((c[o+12>>2]|0)==(c[o+16>>2]|0)?(fc[c[(c[o>>2]|0)+36>>2]&127](o)|0)==-1:0){c[f>>2]=0;C=0}else C=o;else C=0;z=(C|0)==0;D=c[g>>2]|0;do if(D){if((c[D+12>>2]|0)!=(c[D+16>>2]|0))if(z){E=D;break}else{F=C;G=D;H=B;break a}if((fc[c[(c[D>>2]|0)+36>>2]&127](D)|0)!=-1)if(z){E=D;break}else{F=C;G=D;H=B;break a}else{c[g>>2]=0;I=14;break}}else I=14;while(0);if((I|0)==14){I=0;if(z){F=C;G=0;H=B;break}else E=0}D=a[q>>0]|0;J=(D&1)==0;if(J)K=(D&255)>>>1;else K=c[j>>2]|0;if((c[r>>2]|0)==(B+K|0)){if(J){L=(D&255)>>>1;M=(D&255)>>>1}else{D=c[j>>2]|0;L=D;M=D}Re(q,L<<1,0);if(!(a[q>>0]&1))N=10;else N=(c[q>>2]&-2)+-1|0;Re(q,N,0);if(!(a[q>>0]&1))O=x;else O=c[y>>2]|0;c[r>>2]=O+M;P=O}else P=B;D=C+12|0;J=c[D>>2]|0;Q=C+16|0;if((J|0)==(c[Q>>2]|0))R=fc[c[(c[C>>2]|0)+36>>2]&127](C)|0;else R=d[J>>0]|0;if(lh(R&255,v,w,P,r,A,n,p,s,t,u,m)|0){F=C;G=E;H=P;break}J=c[D>>2]|0;if((J|0)==(c[Q>>2]|0)){fc[c[(c[C>>2]|0)+40>>2]&127](C)|0;o=C;B=P;continue}else{c[D>>2]=J+1;o=C;B=P;continue}}P=a[p>>0]|0;if(!(P&1))S=(P&255)>>>1;else S=c[p+4>>2]|0;if(!((S|0)==0|(a[v>>0]|0)==0)?(v=c[t>>2]|0,(v-s|0)<160):0){S=c[u>>2]|0;c[t>>2]=v+4;c[v>>2]=S}h[l>>3]=+Co(H,c[r>>2]|0,k);Tj(p,s,c[t>>2]|0,k);if(F)if((c[F+12>>2]|0)==(c[F+16>>2]|0)?(fc[c[(c[F>>2]|0)+36>>2]&127](F)|0)==-1:0){c[f>>2]=0;T=0}else T=F;else T=0;F=(T|0)==0;do if(G){if((c[G+12>>2]|0)!=(c[G+16>>2]|0))if(F)break;else{I=52;break}if((fc[c[(c[G>>2]|0)+36>>2]&127](G)|0)!=-1)if(F^(G|0)==0)break;else{I=52;break}else{c[g>>2]=0;I=50;break}}else I=50;while(0);if((I|0)==50?F:0)I=52;if((I|0)==52)c[k>>2]=c[k>>2]|2;c[b>>2]=T;Oe(q);Oe(p);i=e;return}function Mm(b,e,f,g,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0;e=i;i=i+240|0;m=e+200|0;n=e+199|0;o=e+198|0;p=e+184|0;q=e+172|0;r=e+168|0;s=e+8|0;t=e+4|0;u=e;v=e+197|0;w=e+196|0;kh(p,j,m,n,o);c[q+0>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;Re(q,10,0);if(!(a[q>>0]&1)){j=q+1|0;x=j;y=q+8|0;z=j}else{j=q+8|0;x=q+1|0;y=j;z=c[j>>2]|0}c[r>>2]=z;c[t>>2]=s;c[u>>2]=0;a[v>>0]=1;a[w>>0]=69;j=q+4|0;A=a[n>>0]|0;n=a[o>>0]|0;o=c[f>>2]|0;B=z;a:while(1){if(o)if((c[o+12>>2]|0)==(c[o+16>>2]|0)?(fc[c[(c[o>>2]|0)+36>>2]&127](o)|0)==-1:0){c[f>>2]=0;C=0}else C=o;else C=0;z=(C|0)==0;D=c[g>>2]|0;do if(D){if((c[D+12>>2]|0)!=(c[D+16>>2]|0))if(z){E=D;break}else{F=C;G=D;H=B;break a}if((fc[c[(c[D>>2]|0)+36>>2]&127](D)|0)!=-1)if(z){E=D;break}else{F=C;G=D;H=B;break a}else{c[g>>2]=0;I=14;break}}else I=14;while(0);if((I|0)==14){I=0;if(z){F=C;G=0;H=B;break}else E=0}D=a[q>>0]|0;J=(D&1)==0;if(J)K=(D&255)>>>1;else K=c[j>>2]|0;if((c[r>>2]|0)==(B+K|0)){if(J){L=(D&255)>>>1;M=(D&255)>>>1}else{D=c[j>>2]|0;L=D;M=D}Re(q,L<<1,0);if(!(a[q>>0]&1))N=10;else N=(c[q>>2]&-2)+-1|0;Re(q,N,0);if(!(a[q>>0]&1))O=x;else O=c[y>>2]|0;c[r>>2]=O+M;P=O}else P=B;D=C+12|0;J=c[D>>2]|0;Q=C+16|0;if((J|0)==(c[Q>>2]|0))R=fc[c[(c[C>>2]|0)+36>>2]&127](C)|0;else R=d[J>>0]|0;if(lh(R&255,v,w,P,r,A,n,p,s,t,u,m)|0){F=C;G=E;H=P;break}J=c[D>>2]|0;if((J|0)==(c[Q>>2]|0)){fc[c[(c[C>>2]|0)+40>>2]&127](C)|0;o=C;B=P;continue}else{c[D>>2]=J+1;o=C;B=P;continue}}P=a[p>>0]|0;if(!(P&1))S=(P&255)>>>1;else S=c[p+4>>2]|0;if(!((S|0)==0|(a[v>>0]|0)==0)?(v=c[t>>2]|0,(v-s|0)<160):0){S=c[u>>2]|0;c[t>>2]=v+4;c[v>>2]=S}h[l>>3]=+Do(H,c[r>>2]|0,k);Tj(p,s,c[t>>2]|0,k);if(F)if((c[F+12>>2]|0)==(c[F+16>>2]|0)?(fc[c[(c[F>>2]|0)+36>>2]&127](F)|0)==-1:0){c[f>>2]=0;T=0}else T=F;else T=0;F=(T|0)==0;do if(G){if((c[G+12>>2]|0)!=(c[G+16>>2]|0))if(F)break;else{I=52;break}if((fc[c[(c[G>>2]|0)+36>>2]&127](G)|0)!=-1)if(F^(G|0)==0)break;else{I=52;break}else{c[g>>2]=0;I=50;break}}else I=50;while(0);if((I|0)==50?F:0)I=52;if((I|0)==52)c[k>>2]=c[k>>2]|2;c[b>>2]=T;Oe(q);Oe(p);i=e;return}function Nm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;c[g>>2]=e;e=cb(b|0)|0;b=bp(a,d,g)|0;if(e)cb(e|0)|0;i=f;return b|0}function Om(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;k=i;i=i+112|0;l=k;m=(f-e|0)/12|0;if(m>>>0>100){n=kq(m)|0;if(!n)fq();else{o=n;p=n}}else{o=0;p=l}l=(e|0)==(f|0);if(l){q=0;r=m}else{n=e;s=0;t=m;m=p;while(1){u=a[n>>0]|0;if(!(u&1))v=(u&255)>>>1;else v=c[n+4>>2]|0;if(!v){a[m>>0]=2;w=s+1|0;x=t+-1|0}else{a[m>>0]=1;w=s;x=t}n=n+12|0;if((n|0)==(f|0)){q=w;r=x;break}else{s=w;t=x;m=m+1|0}}}m=0;x=q;q=r;a:while(1){r=m;while(1){t=c[b>>2]|0;do if(t){w=c[t+12>>2]|0;if((w|0)==(c[t+16>>2]|0))y=fc[c[(c[t>>2]|0)+36>>2]&127](t)|0;else y=c[w>>2]|0;if((y|0)==-1){c[b>>2]=0;z=1;break}else{z=(c[b>>2]|0)==0;break}}else z=1;while(0);t=c[d>>2]|0;if(t){w=c[t+12>>2]|0;if((w|0)==(c[t+16>>2]|0))A=fc[c[(c[t>>2]|0)+36>>2]&127](t)|0;else A=c[w>>2]|0;if((A|0)==-1){c[d>>2]=0;B=0;C=1}else{B=t;C=0}}else{B=0;C=1}t=c[b>>2]|0;if(!((z^C)&(q|0)!=0)){D=t;E=B;break a}w=c[t+12>>2]|0;if((w|0)==(c[t+16>>2]|0))F=fc[c[(c[t>>2]|0)+36>>2]&127](t)|0;else F=c[w>>2]|0;if(j)G=F;else G=oc[c[(c[g>>2]|0)+28>>2]&15](g,F)|0;w=r+1|0;if(l)r=w;else{H=w;I=G;J=r;break}}r=0;w=e;t=x;s=q;n=p;while(1){do if((a[n>>0]|0)==1){if(!(a[w>>0]&1))K=w+4|0;else K=c[w+8>>2]|0;v=c[K+(J<<2)>>2]|0;if(j)L=v;else L=oc[c[(c[g>>2]|0)+28>>2]&15](g,v)|0;if((I|0)!=(L|0)){a[n>>0]=0;M=r;N=t;O=s+-1|0;break}v=a[w>>0]|0;if(!(v&1))P=(v&255)>>>1;else P=c[w+4>>2]|0;if((P|0)==(H|0)){a[n>>0]=2;M=1;N=t+1|0;O=s+-1|0}else{M=1;N=t;O=s}}else{M=r;N=t;O=s}while(0);w=w+12|0;if((w|0)==(f|0))break;else{r=M;t=N;s=O;n=n+1|0}}if(!M){m=H;x=N;q=O;continue}n=c[b>>2]|0;s=n+12|0;t=c[s>>2]|0;if((t|0)==(c[n+16>>2]|0))fc[c[(c[n>>2]|0)+40>>2]&127](n)|0;else c[s>>2]=t+4;if((N+O|0)>>>0<2){m=H;x=N;q=O;continue}else{Q=e;R=N;S=p}while(1){if((a[S>>0]|0)==2){t=a[Q>>0]|0;if(!(t&1))T=(t&255)>>>1;else T=c[Q+4>>2]|0;if((T|0)!=(H|0)){a[S>>0]=0;U=R+-1|0}else U=R}else U=R;t=Q+12|0;if((t|0)==(f|0)){m=H;x=U;q=O;continue a}else{Q=t;R=U;S=S+1|0}}}do if(D){S=c[D+12>>2]|0;if((S|0)==(c[D+16>>2]|0))V=fc[c[(c[D>>2]|0)+36>>2]&127](D)|0;else V=c[S>>2]|0;if((V|0)==-1){c[b>>2]=0;W=1;break}else{W=(c[b>>2]|0)==0;break}}else W=1;while(0);do if(E){b=c[E+12>>2]|0;if((b|0)==(c[E+16>>2]|0))X=fc[c[(c[E>>2]|0)+36>>2]&127](E)|0;else X=c[b>>2]|0;if((X|0)!=-1)if(W)break;else{Y=76;break}else{c[d>>2]=0;Y=74;break}}else Y=74;while(0);if((Y|0)==74?W:0)Y=76;if((Y|0)==76)c[h>>2]=c[h>>2]|2;b:do if(l)Y=80;else{W=e;d=p;while(1){if((a[d>>0]|0)==2){Z=W;break b}W=W+12|0;if((W|0)==(f|0)){Y=80;break}else d=d+1|0}}while(0);if((Y|0)==80){c[h>>2]=c[h>>2]|4;Z=f}if(o)lq(o);i=k;return Z|0}function Pm(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;d=i;i=i+304|0;k=d+200|0;l=d+196|0;m=d+184|0;n=d+172|0;o=d+168|0;p=d+8|0;q=d+4|0;r=d;s=fm(g)|0;mh(m,g,k,l);c[n+0>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;Re(n,10,0);if(!(a[n>>0]&1)){g=n+1|0;t=g;u=n+8|0;v=g}else{g=n+8|0;t=n+1|0;u=g;v=c[g>>2]|0}c[o>>2]=v;c[q>>2]=p;c[r>>2]=0;g=n+4|0;w=c[l>>2]|0;l=c[e>>2]|0;x=v;a:while(1){if(l){v=c[l+12>>2]|0;if((v|0)==(c[l+16>>2]|0))y=fc[c[(c[l>>2]|0)+36>>2]&127](l)|0;else y=c[v>>2]|0;if((y|0)==-1){c[e>>2]=0;z=1;A=0}else{z=0;A=l}}else{z=1;A=0}v=c[f>>2]|0;do if(v){B=c[v+12>>2]|0;if((B|0)==(c[v+16>>2]|0))C=fc[c[(c[v>>2]|0)+36>>2]&127](v)|0;else C=c[B>>2]|0;if((C|0)!=-1)if(z){D=v;break}else{E=A;F=v;G=x;break a}else{c[f>>2]=0;H=17;break}}else H=17;while(0);if((H|0)==17){H=0;if(z){E=A;F=0;G=x;break}else D=0}v=a[n>>0]|0;B=(v&1)==0;if(B)I=(v&255)>>>1;else I=c[g>>2]|0;if((c[o>>2]|0)==(x+I|0)){if(B){J=(v&255)>>>1;K=(v&255)>>>1}else{v=c[g>>2]|0;J=v;K=v}Re(n,J<<1,0);if(!(a[n>>0]&1))L=10;else L=(c[n>>2]&-2)+-1|0;Re(n,L,0);if(!(a[n>>0]&1))M=t;else M=c[u>>2]|0;c[o>>2]=M+K;N=M}else N=x;v=A+12|0;B=c[v>>2]|0;O=A+16|0;if((B|0)==(c[O>>2]|0))P=fc[c[(c[A>>2]|0)+36>>2]&127](A)|0;else P=c[B>>2]|0;if(ih(P,s,N,o,r,w,m,p,q,k)|0){E=A;F=D;G=N;break}B=c[v>>2]|0;if((B|0)==(c[O>>2]|0)){fc[c[(c[A>>2]|0)+40>>2]&127](A)|0;l=A;x=N;continue}else{c[v>>2]=B+4;l=A;x=N;continue}}N=a[m>>0]|0;if(!(N&1))Q=(N&255)>>>1;else Q=c[m+4>>2]|0;if((Q|0)!=0?(Q=c[q>>2]|0,(Q-p|0)<160):0){N=c[r>>2]|0;c[q>>2]=Q+4;c[Q>>2]=N}c[j>>2]=vo(G,c[o>>2]|0,h,s)|0;Tj(m,p,c[q>>2]|0,h);if(E){q=c[E+12>>2]|0;if((q|0)==(c[E+16>>2]|0))R=fc[c[(c[E>>2]|0)+36>>2]&127](E)|0;else R=c[q>>2]|0;if((R|0)==-1){c[e>>2]=0;S=0;T=1}else{S=E;T=0}}else{S=0;T=1}do if(F){E=c[F+12>>2]|0;if((E|0)==(c[F+16>>2]|0))U=fc[c[(c[F>>2]|0)+36>>2]&127](F)|0;else U=c[E>>2]|0;if((U|0)!=-1)if(T)break;else{H=58;break}else{c[f>>2]=0;H=56;break}}else H=56;while(0);if((H|0)==56?T:0)H=58;if((H|0)==58)c[h>>2]=c[h>>2]|2;c[b>>2]=S;Oe(n);Oe(m);i=d;return}function Qm(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;d=i;i=i+304|0;k=d+200|0;l=d+196|0;m=d+184|0;n=d+172|0;o=d+168|0;p=d+8|0;q=d+4|0;r=d;s=fm(g)|0;mh(m,g,k,l);c[n+0>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;Re(n,10,0);if(!(a[n>>0]&1)){g=n+1|0;t=g;u=n+8|0;v=g}else{g=n+8|0;t=n+1|0;u=g;v=c[g>>2]|0}c[o>>2]=v;c[q>>2]=p;c[r>>2]=0;g=n+4|0;w=c[l>>2]|0;l=c[e>>2]|0;x=v;a:while(1){if(l){v=c[l+12>>2]|0;if((v|0)==(c[l+16>>2]|0))y=fc[c[(c[l>>2]|0)+36>>2]&127](l)|0;else y=c[v>>2]|0;if((y|0)==-1){c[e>>2]=0;z=1;A=0}else{z=0;A=l}}else{z=1;A=0}v=c[f>>2]|0;do if(v){B=c[v+12>>2]|0;if((B|0)==(c[v+16>>2]|0))C=fc[c[(c[v>>2]|0)+36>>2]&127](v)|0;else C=c[B>>2]|0;if((C|0)!=-1)if(z){D=v;break}else{E=A;F=v;H=x;break a}else{c[f>>2]=0;I=17;break}}else I=17;while(0);if((I|0)==17){I=0;if(z){E=A;F=0;H=x;break}else D=0}v=a[n>>0]|0;B=(v&1)==0;if(B)J=(v&255)>>>1;else J=c[g>>2]|0;if((c[o>>2]|0)==(x+J|0)){if(B){K=(v&255)>>>1;L=(v&255)>>>1}else{v=c[g>>2]|0;K=v;L=v}Re(n,K<<1,0);if(!(a[n>>0]&1))M=10;else M=(c[n>>2]&-2)+-1|0;Re(n,M,0);if(!(a[n>>0]&1))N=t;else N=c[u>>2]|0;c[o>>2]=N+L;O=N}else O=x;v=A+12|0;B=c[v>>2]|0;P=A+16|0;if((B|0)==(c[P>>2]|0))Q=fc[c[(c[A>>2]|0)+36>>2]&127](A)|0;else Q=c[B>>2]|0;if(ih(Q,s,O,o,r,w,m,p,q,k)|0){E=A;F=D;H=O;break}B=c[v>>2]|0;if((B|0)==(c[P>>2]|0)){fc[c[(c[A>>2]|0)+40>>2]&127](A)|0;l=A;x=O;continue}else{c[v>>2]=B+4;l=A;x=O;continue}}O=a[m>>0]|0;if(!(O&1))R=(O&255)>>>1;else R=c[m+4>>2]|0;if((R|0)!=0?(R=c[q>>2]|0,(R-p|0)<160):0){O=c[r>>2]|0;c[q>>2]=R+4;c[R>>2]=O}O=wo(H,c[o>>2]|0,h,s)|0;s=j;c[s>>2]=O;c[s+4>>2]=G;Tj(m,p,c[q>>2]|0,h);if(E){q=c[E+12>>2]|0;if((q|0)==(c[E+16>>2]|0))S=fc[c[(c[E>>2]|0)+36>>2]&127](E)|0;else S=c[q>>2]|0;if((S|0)==-1){c[e>>2]=0;T=0;U=1}else{T=E;U=0}}else{T=0;U=1}do if(F){E=c[F+12>>2]|0;if((E|0)==(c[F+16>>2]|0))V=fc[c[(c[F>>2]|0)+36>>2]&127](F)|0;else V=c[E>>2]|0;if((V|0)!=-1)if(U)break;else{I=58;break}else{c[f>>2]=0;I=56;break}}else I=56;while(0);if((I|0)==56?U:0)I=58;if((I|0)==58)c[h>>2]=c[h>>2]|2;c[b>>2]=T;Oe(n);Oe(m);i=d;return}function Rm(d,e,f,g,h,j,k){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;e=i;i=i+304|0;l=e+200|0;m=e+196|0;n=e+184|0;o=e+172|0;p=e+168|0;q=e+8|0;r=e+4|0;s=e;t=fm(h)|0;mh(n,h,l,m);c[o+0>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;Re(o,10,0);if(!(a[o>>0]&1)){h=o+1|0;u=h;v=o+8|0;w=h}else{h=o+8|0;u=o+1|0;v=h;w=c[h>>2]|0}c[p>>2]=w;c[r>>2]=q;c[s>>2]=0;h=o+4|0;x=c[m>>2]|0;m=c[f>>2]|0;y=w;a:while(1){if(m){w=c[m+12>>2]|0;if((w|0)==(c[m+16>>2]|0))z=fc[c[(c[m>>2]|0)+36>>2]&127](m)|0;else z=c[w>>2]|0;if((z|0)==-1){c[f>>2]=0;A=1;B=0}else{A=0;B=m}}else{A=1;B=0}w=c[g>>2]|0;do if(w){C=c[w+12>>2]|0;if((C|0)==(c[w+16>>2]|0))D=fc[c[(c[w>>2]|0)+36>>2]&127](w)|0;else D=c[C>>2]|0;if((D|0)!=-1)if(A){E=w;break}else{F=B;G=w;H=y;break a}else{c[g>>2]=0;I=17;break}}else I=17;while(0);if((I|0)==17){I=0;if(A){F=B;G=0;H=y;break}else E=0}w=a[o>>0]|0;C=(w&1)==0;if(C)J=(w&255)>>>1;else J=c[h>>2]|0;if((c[p>>2]|0)==(y+J|0)){if(C){K=(w&255)>>>1;L=(w&255)>>>1}else{w=c[h>>2]|0;K=w;L=w}Re(o,K<<1,0);if(!(a[o>>0]&1))M=10;else M=(c[o>>2]&-2)+-1|0;Re(o,M,0);if(!(a[o>>0]&1))N=u;else N=c[v>>2]|0;c[p>>2]=N+L;O=N}else O=y;w=B+12|0;C=c[w>>2]|0;P=B+16|0;if((C|0)==(c[P>>2]|0))Q=fc[c[(c[B>>2]|0)+36>>2]&127](B)|0;else Q=c[C>>2]|0;if(ih(Q,t,O,p,s,x,n,q,r,l)|0){F=B;G=E;H=O;break}C=c[w>>2]|0;if((C|0)==(c[P>>2]|0)){fc[c[(c[B>>2]|0)+40>>2]&127](B)|0;m=B;y=O;continue}else{c[w>>2]=C+4;m=B;y=O;continue}}O=a[n>>0]|0;if(!(O&1))R=(O&255)>>>1;else R=c[n+4>>2]|0;if((R|0)!=0?(R=c[r>>2]|0,(R-q|0)<160):0){O=c[s>>2]|0;c[r>>2]=R+4;c[R>>2]=O}b[k>>1]=xo(H,c[p>>2]|0,j,t)|0;Tj(n,q,c[r>>2]|0,j);if(F){r=c[F+12>>2]|0;if((r|0)==(c[F+16>>2]|0))S=fc[c[(c[F>>2]|0)+36>>2]&127](F)|0;else S=c[r>>2]|0;if((S|0)==-1){c[f>>2]=0;T=0;U=1}else{T=F;U=0}}else{T=0;U=1}do if(G){F=c[G+12>>2]|0;if((F|0)==(c[G+16>>2]|0))V=fc[c[(c[G>>2]|0)+36>>2]&127](G)|0;else V=c[F>>2]|0;if((V|0)!=-1)if(U)break;else{I=58;break}else{c[g>>2]=0;I=56;break}}else I=56;while(0);if((I|0)==56?U:0)I=58;if((I|0)==58)c[j>>2]=c[j>>2]|2;c[d>>2]=T;Oe(o);Oe(n);i=e;return}
function rc(a){a=a|0;var b=0;b=i;i=i+a|0;i=i+15&-16;return b|0}function sc(){return i|0}function tc(a){a=a|0;i=a}function uc(a,b){a=a|0;b=b|0;if(!r){r=a;s=b}}function vc(b){b=b|0;a[k>>0]=a[b>>0];a[k+1>>0]=a[b+1>>0];a[k+2>>0]=a[b+2>>0];a[k+3>>0]=a[b+3>>0]}function wc(b){b=b|0;a[k>>0]=a[b>>0];a[k+1>>0]=a[b+1>>0];a[k+2>>0]=a[b+2>>0];a[k+3>>0]=a[b+3>>0];a[k+4>>0]=a[b+4>>0];a[k+5>>0]=a[b+5>>0];a[k+6>>0]=a[b+6>>0];a[k+7>>0]=a[b+7>>0]}function xc(a){a=a|0;G=a}function yc(){return G|0}function zc(b,c,e){b=b|0;c=c|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=0;do{g=f<<3;h=~~(+(d[b+(g|3)>>0]|0)*.05882352963089943+.5);if((h|0)<0)i=0;else i=(h|0)>15?15:h;h=~~(+(d[b+(g|7)>>0]|0)*.05882352963089943+.5);if((h|0)<0)j=0;else j=(h|0)>15?240:h<<4;h=f<<1;a[e+f>>0]=((1<<(h|1)&c|0)==0?0:j)|((1<<h&c|0)==0?0:i);f=f+1|0}while((f|0)!=8);return}function Ac(b,c,e){b=b|0;c=c|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;f=i;i=i+64|0;g=f+48|0;h=f+40|0;j=f+32|0;k=f+16|0;l=f;m=0;n=255;o=0;p=255;q=0;while(1){if(!(1<<q&c)){r=n;s=o;t=p;u=m}else{v=a[b+(q<<2|3)>>0]|0;w=v&255;r=v<<24>>24!=0&(w|0)<(n|0)?w:n;s=v<<24>>24!=-1&(w|0)>(o|0)?w:o;t=(w|0)<(p|0)?w:p;u=(w|0)>(m|0)?w:m}q=q+1|0;if((q|0)==16){x=r;y=s;z=t;A=u;break}else{m=u;n=r;o=s;p=t}}t=(x|0)>(y|0)?y:x;x=(z|0)>(A|0)?A:z;if((y-t|0)<5){z=t+5|0;B=(z|0)>255?255:z}else B=y;if((B-t|0)<5){y=B+-5|0;C=(y|0)>0?y:0}else C=t;if((A-x|0)<7){t=x+7|0;D=(t|0)>255?255:t}else D=A;if((D-x|0)<7){A=D+-7|0;E=(A|0)>0?A:0}else E=x;x=C&255;a[h>>0]=x;A=B&255;a[h+1>>0]=A;a[h+2>>0]=((C<<2)+B|0)/5|0;a[h+3>>0]=((C*3|0)+(B<<1)|0)/5|0;a[h+4>>0]=((C<<1)+(B*3|0)|0)/5|0;a[h+5>>0]=(C+(B<<2)|0)/5|0;a[h+6>>0]=0;a[h+7>>0]=-1;t=E&255;a[j>>0]=t;y=D&255;a[j+1>>0]=y;a[j+2>>0]=((E*6|0)+D|0)/7|0;a[j+3>>0]=((E*5|0)+(D<<1)|0)/7|0;a[j+4>>0]=((E<<2)+(D*3|0)|0)/7|0;a[j+5>>0]=((E*3|0)+(D<<2)|0)/7|0;a[j+6>>0]=((E<<1)+(D*5|0)|0)/7|0;a[j+7>>0]=(E+(D*6|0)|0)/7|0;z=Bc(b,c,h,k)|0;if((z|0)>(Bc(b,c,j,l)|0)){if((E|0)<(D|0))F=0;else{a[e>>0]=t;a[e+1>>0]=y;D=(d[l+1>>0]|0)<<3|(d[l>>0]|0)|(d[l+2>>0]|0)<<6;E=(d[l+3>>0]|0)<<9|D|(d[l+4>>0]|0)<<12|(d[l+5>>0]|0)<<15;j=(d[l+6>>0]|0)<<18|E|(d[l+7>>0]|0)<<21;a[e+2>>0]=D;a[e+3>>0]=E>>>8;a[e+4>>0]=j>>>16;j=(d[l+9>>0]|0)<<3|(d[l+8>>0]|0)|(d[l+10>>0]|0)<<6;E=(d[l+11>>0]|0)<<9|j|(d[l+12>>0]|0)<<12|(d[l+13>>0]|0)<<15;D=(d[l+14>>0]|0)<<18|E|(d[l+15>>0]|0)<<21;a[e+5>>0]=j;a[e+6>>0]=E>>>8;a[e+7>>0]=D>>>16;i=f;return}do{D=a[l+F>>0]|0;if(D<<24>>24==1)a[g+F>>0]=0;else if(!(D<<24>>24))a[g+F>>0]=1;else a[g+F>>0]=9-(D&255);F=F+1|0}while((F|0)!=16);a[e>>0]=y;a[e+1>>0]=t;t=(d[g+1>>0]|0)<<3|(d[g>>0]|0)|(d[g+2>>0]|0)<<6;y=(d[g+3>>0]|0)<<9|t|(d[g+4>>0]|0)<<12|(d[g+5>>0]|0)<<15;F=(d[g+6>>0]|0)<<18|y|(d[g+7>>0]|0)<<21;a[e+2>>0]=t;a[e+3>>0]=y>>>8;a[e+4>>0]=F>>>16;F=(d[g+9>>0]|0)<<3|(d[g+8>>0]|0)|(d[g+10>>0]|0)<<6;y=(d[g+11>>0]|0)<<9|F|(d[g+12>>0]|0)<<12|(d[g+13>>0]|0)<<15;t=(d[g+14>>0]|0)<<18|y|(d[g+15>>0]|0)<<21;a[e+5>>0]=F;a[e+6>>0]=y>>>8;a[e+7>>0]=t>>>16;i=f;return}if((C|0)>(B|0))G=0;else{a[e>>0]=x;a[e+1>>0]=A;B=(d[k+1>>0]|0)<<3|(d[k>>0]|0)|(d[k+2>>0]|0)<<6;C=(d[k+3>>0]|0)<<9|B|(d[k+4>>0]|0)<<12|(d[k+5>>0]|0)<<15;t=(d[k+6>>0]|0)<<18|C|(d[k+7>>0]|0)<<21;a[e+2>>0]=B;a[e+3>>0]=C>>>8;a[e+4>>0]=t>>>16;t=(d[k+9>>0]|0)<<3|(d[k+8>>0]|0)|(d[k+10>>0]|0)<<6;C=(d[k+11>>0]|0)<<9|t|(d[k+12>>0]|0)<<12|(d[k+13>>0]|0)<<15;B=(d[k+14>>0]|0)<<18|C|(d[k+15>>0]|0)<<21;a[e+5>>0]=t;a[e+6>>0]=C>>>8;a[e+7>>0]=B>>>16;i=f;return}do{B=a[k+G>>0]|0;C=B&255;do if(B<<24>>24==1)a[g+G>>0]=0;else if(B<<24>>24)if((B&255)<6){a[g+G>>0]=7-C;break}else{a[g+G>>0]=B;break}else a[g+G>>0]=1;while(0);G=G+1|0}while((G|0)!=16);a[e>>0]=A;a[e+1>>0]=x;x=(d[g+1>>0]|0)<<3|(d[g>>0]|0)|(d[g+2>>0]|0)<<6;A=(d[g+3>>0]|0)<<9|x|(d[g+4>>0]|0)<<12|(d[g+5>>0]|0)<<15;G=(d[g+6>>0]|0)<<18|A|(d[g+7>>0]|0)<<21;a[e+2>>0]=x;a[e+3>>0]=A>>>8;a[e+4>>0]=G>>>16;G=(d[g+9>>0]|0)<<3|(d[g+8>>0]|0)|(d[g+10>>0]|0)<<6;A=(d[g+11>>0]|0)<<9|G|(d[g+12>>0]|0)<<12|(d[g+13>>0]|0)<<15;x=(d[g+14>>0]|0)<<18|A|(d[g+15>>0]|0)<<21;a[e+5>>0]=G;a[e+6>>0]=A>>>8;a[e+7>>0]=x>>>16;i=f;return}function Bc(b,c,e,f){b=b|0;c=c|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;g=0;h=0;while(1){if(!(1<<h&c)){a[f+h>>0]=0;i=g}else{j=d[b+(h<<2|3)>>0]|0;k=j-(d[e>>0]|0)|0;l=ca(k,k)|0;k=j-(d[e+1>>0]|0)|0;m=ca(k,k)|0;k=m>>>0<l>>>0;n=k?m:l;l=j-(d[e+2>>0]|0)|0;m=ca(l,l)|0;l=m>>>0<n>>>0;o=l?m:n;n=j-(d[e+3>>0]|0)|0;m=ca(n,n)|0;n=m>>>0<o>>>0;p=n?m:o;o=j-(d[e+4>>0]|0)|0;m=ca(o,o)|0;o=m>>>0<p>>>0;q=o?m:p;p=j-(d[e+5>>0]|0)|0;m=ca(p,p)|0;p=m>>>0<q>>>0;r=p?m:q;q=j-(d[e+6>>0]|0)|0;m=ca(q,q)|0;q=m>>>0<r>>>0;s=q?m:r;r=j-(d[e+7>>0]|0)|0;j=ca(r,r)|0;r=(j|0)<(s|0);a[f+h>>0]=r?7:q?6:p?5:o?4:n?3:l?2:k&1;i=(r?j:s)+g|0}h=h+1|0;if((h|0)==16){t=i;break}else g=i}return t|0}function Cc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0;e=i;i=i+48|0;f=e+16|0;h=e;Ic(a,b,d);c[a>>2]=16;d=a+16|0;b=c[a+8>>2]|0;c[a+12>>2]=(b&256|0)!=0?8:1;g[a+444>>2]=3402823466385288598117041.0e14;g[a+448>>2]=3402823466385288598117041.0e14;g[a+452>>2]=3402823466385288598117041.0e14;g[a+456>>2]=3402823466385288598117041.0e14;j=(b&32|0)==0;g[a+428>>2]=j?1.0:.2125999927520752;g[a+432>>2]=j?1.0:.7152000069618225;g[a+436>>2]=j?1.0:.0722000002861023;g[a+440>>2]=j?1.0:0.0;j=c[a+4>>2]|0;Mc(f,c[j>>2]|0,j+4|0,j+196|0);Nc(h,f);c[d+0>>2]=c[h+0>>2];c[d+4>>2]=c[h+4>>2];c[d+8>>2]=c[h+8>>2];i=e;return}function Dc(b,e,f){b=b|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0.0,t=0.0,u=0,v=0,w=0,x=0.0,y=0.0;h=i;i=i+64|0;j=h;k=b+4|0;l=c[k>>2]|0;m=c[l>>2]|0;n=f<<4;o=(m|0)>0;if(o){p=e+4|0;q=e+8|0;r=0;do{g[j+(r<<2)>>2]=+g[l+(r*12|0)+4>>2]*+g[e>>2]+ +g[l+(r*12|0)+8>>2]*+g[p>>2]+ +g[l+(r*12|0)+12>>2]*+g[q>>2];a[b+(r+n)+28>>0]=r;r=r+1|0}while((r|0)!=(m|0));if(o){r=0;do{a:do if((r|0)>0){s=+g[j+(r<<2)>>2];q=r;do{l=q;q=q+-1|0;p=j+(q<<2)|0;t=+g[p>>2];if(!(s<t))break a;g[j+(l<<2)>>2]=t;g[p>>2]=s;p=b+(l+n)+28|0;l=b+(q+n)+28|0;e=a[p>>0]|0;a[p>>0]=a[l>>0]|0;a[l>>0]=e}while((q|0)>0)}while(0);r=r+1|0}while((r|0)!=(m|0))}}b:do if((f|0)>0){if(o)u=0;else{v=0;i=h;return v|0}c:while(1){r=u<<4;j=0;while(1){if((a[b+(j+n)+28>>0]|0)!=(a[b+(j+r)+28>>0]|0))break;j=j+1|0;if((j|0)>=(m|0)){v=0;break c}}u=u+1|0;if((u|0)>=(f|0))break b}i=h;return v|0}while(0);f=c[k>>2]|0;k=b+412|0;u=b+416|0;j=b+420|0;r=b+424|0;c[k+0>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;if(o)w=0;else{v=1;i=h;return v|0}do{o=d[b+(w+n)+28>>0]|0;s=+g[f+(o<<2)+196>>2];t=+g[f+(o*12|0)+4>>2]*s;x=+g[f+(o*12|0)+8>>2]*s;y=+g[f+(o*12|0)+12>>2]*s;g[b+(w<<4)+156>>2]=t;g[b+(w<<4)+160>>2]=x;g[b+(w<<4)+164>>2]=y;g[b+(w<<4)+168>>2]=s;g[k>>2]=t+ +g[k>>2];g[u>>2]=x+ +g[u>>2];g[j>>2]=y+ +g[j>>2];g[r>>2]=s+ +g[r>>2];w=w+1|0}while((w|0)!=(m|0));v=1;i=h;return v|0}function Ec(b,e){b=b|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,R=0.0,S=0.0,T=0,U=0,V=0,W=0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ca=0.0,da=0.0,ea=0.0,fa=0.0,ga=0.0,ha=0.0,ia=0.0,ja=0.0,ka=0.0,la=0.0,ma=0.0,na=0.0,oa=0.0,pa=0.0,qa=0.0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0.0,xa=0.0,ya=0.0,za=0.0,Aa=0.0,Ba=0.0,Ca=0.0,Da=0.0,Ea=0.0,Fa=0.0,Ga=0.0,Ha=0.0,Ia=0.0,Ja=0.0,Ka=0.0,La=0.0,Ma=0.0,Na=0.0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0.0,Ta=0.0,Ua=0.0,Va=0.0,Wa=0.0,Xa=0.0,Ya=0.0,Za=0.0,_a=0.0,$a=0.0,ab=0.0,bb=0.0,cb=0.0,db=0.0,eb=0.0,fb=0.0,gb=0.0,hb=0.0,ib=0.0,jb=0.0,kb=0.0,lb=0.0,mb=0,nb=0,ob=0,pb=0.0,qb=0.0,rb=0.0,sb=0.0,tb=0.0,ub=0.0,vb=0.0,wb=0.0,xb=0.0,yb=0.0,zb=0,Ab=0,Bb=0,Cb=0.0,Db=0.0,Eb=0.0,Fb=0.0,Gb=0.0,Hb=0.0,Ib=0.0,Jb=0.0,Kb=0.0,Lb=0.0,Mb=0,Nb=0,Ob=0,Pb=0.0,Qb=0.0,Rb=0.0,Sb=0.0,Tb=0.0,Ub=0.0,Vb=0.0,Wb=0.0,Xb=0.0,Yb=0.0,Zb=0,_b=0,$b=0;f=i;i=i+80|0;h=f+56|0;j=f+24|0;k=f+40|0;l=f+12|0;m=f;n=b+4|0;o=c[c[n>>2]>>2]|0;Dc(b,b+16|0,0)|0;p=b+444|0;q=b+448|0;r=b+452|0;s=b+456|0;t=(o|0)>0;u=b+12|0;v=j+4|0;w=j+8|0;x=b+156|0;y=b+160|0;z=b+164|0;A=b+168|0;B=b+412|0;C=b+416|0;D=b+420|0;E=b+424|0;F=b+428|0;G=b+432|0;H=b+436|0;I=0.0;J=0.0;K=0.0;L=0.0;M=0.0;N=0.0;O=+g[s>>2];P=+g[r>>2];R=+g[q>>2];S=+g[p>>2];T=0;U=0;V=0;W=0;while(1){if(t){X=+g[B>>2];Y=+g[C>>2];Z=+g[D>>2];_=+g[E>>2];$=+g[F>>2];aa=+g[G>>2];ca=+g[H>>2];da=S;ea=R;fa=P;ga=O;ha=N;ia=M;ja=L;ka=K;la=J;ma=I;na=0.0;oa=0.0;pa=0.0;qa=0.0;ra=T;sa=U;ta=V;ua=0;while(1){va=(ua|0)==0;if(va){wa=+g[A>>2];xa=+g[z>>2];ya=+g[y>>2];za=+g[x>>2]}else{wa=0.0;xa=0.0;ya=0.0;za=0.0}Aa=da;Ba=ea;Ca=fa;Da=ga;Ea=ma;Fa=la;Ga=ka;Ha=ja;Ia=ia;Ja=ha;Ka=za;La=ya;Ma=xa;Na=wa;Oa=ra;Pa=sa;Qa=ta;Ra=va?1:ua;while(1){Sa=Ka*.5;Ta=La*.5;Ua=Ma*.5;Va=Na*.25;Wa=na+Sa;Xa=oa+Ta;Ya=pa+Ua;Za=qa+Va;_a=Sa+(X-Ka-na);Sa=Ta+(Y-La-oa);Ta=Ua+(Z-Ma-pa);Ua=Va+(_-Na-qa);$a=1.0/(Za*Ua-Va*Va);ab=$a*(Wa*Ua-Va*_a);bb=$a*(Xa*Ua-Va*Sa);cb=$a*(Ya*Ua-Va*Ta);db=$a*(Za*_a-Va*Wa);eb=$a*(Za*Sa-Va*Xa);fb=$a*(Za*Ta-Va*Ya);$a=ab>0.0?ab:0.0;ab=bb>0.0?bb:0.0;bb=cb>0.0?cb:0.0;cb=db>0.0?db:0.0;db=eb>0.0?eb:0.0;eb=fb>0.0?fb:0.0;fb=$a<1.0?$a*31.0+.5:31.5;$a=ab<1.0?ab*63.0+.5:63.5;ab=bb<1.0?bb*31.0+.5:31.5;if(fb>0.0)gb=+Q(+fb);else gb=+ba(+fb);if($a>0.0)hb=+Q(+$a);else hb=+ba(+$a);if(ab>0.0)ib=+Q(+ab);else ib=+ba(+ab);ab=gb*.032258063554763794;$a=hb*.01587301678955555;fb=ib*.032258063554763794;bb=cb<1.0?cb*31.0+.5:31.5;cb=db<1.0?db*63.0+.5:63.5;db=eb<1.0?eb*31.0+.5:31.5;if(bb>0.0)jb=+Q(+bb);else jb=+ba(+bb);if(cb>0.0)kb=+Q(+cb);else kb=+ba(+cb);if(db>0.0)lb=+Q(+db);else lb=+ba(+db);db=jb*.032258063554763794;cb=kb*.01587301678955555;bb=lb*.032258063554763794;eb=(Za*(ab*ab)+Ua*(db*db)+(Va*(ab*db)-Wa*ab-_a*db)*2.0)*$+(Za*($a*$a)+Ua*(cb*cb)+(Va*($a*cb)-Xa*$a-Sa*cb)*2.0)*aa+(Za*(fb*fb)+Ua*(bb*bb)+(Va*(fb*bb)-Ya*fb-Ta*bb)*2.0)*ca;va=eb<Aa|eb<Ba|eb<Ca|eb<Da;Ta=va?fb:Ea;fb=va?$a:Fa;$a=va?ab:Ga;ab=va?bb:Ha;bb=va?cb:Ia;cb=va?db:Ja;db=va?eb:Da;Ya=va?eb:Ca;Va=va?eb:Ba;Ua=va?eb:Aa;mb=va?Ra:Qa;nb=va?ua:Oa;ob=va?W:Pa;if((Ra|0)==(o|0)){pb=Ta;qb=fb;rb=$a;sb=ab;tb=bb;ub=cb;vb=db;wb=Ya;xb=Va;yb=Ua;zb=nb;Ab=ob;Bb=mb;break}Aa=Ua;Ba=Va;Ca=Ya;Da=db;Ea=Ta;Fa=fb;Ga=$a;Ha=ab;Ia=bb;Ja=cb;Ka=Ka+ +g[b+(Ra<<4)+156>>2];La=La+ +g[b+(Ra<<4)+160>>2];Ma=Ma+ +g[b+(Ra<<4)+164>>2];Na=Na+ +g[b+(Ra<<4)+168>>2];Oa=nb;Pa=ob;Qa=mb;Ra=Ra+1|0}Ra=ua+1|0;if((Ra|0)==(o|0)){Cb=pb;Db=qb;Eb=rb;Fb=sb;Gb=tb;Hb=ub;Ib=vb;Jb=wb;Kb=xb;Lb=yb;Mb=zb;Nb=Ab;Ob=Bb;break}else{da=yb;ea=xb;fa=wb;ga=vb;ha=ub;ia=tb;ja=sb;ka=rb;la=qb;ma=pb;na=na+ +g[b+(ua<<4)+156>>2];oa=oa+ +g[b+(ua<<4)+160>>2];pa=pa+ +g[b+(ua<<4)+164>>2];qa=qa+ +g[b+(ua<<4)+168>>2];ra=zb;sa=Ab;ta=Bb;ua=Ra}}}else{Cb=I;Db=J;Eb=K;Fb=L;Gb=M;Hb=N;Ib=O;Jb=P;Kb=R;Lb=S;Mb=T;Nb=U;Ob=V}if((Nb|0)!=(W|0)){Pb=Cb;Qb=Db;Rb=Eb;Sb=Fb;Tb=Gb;Ub=Hb;Vb=Ib;Wb=Jb;Xb=Kb;Yb=Lb;Zb=Mb;_b=Nb;$b=Ob;break}ua=W+1|0;if((ua|0)==(c[u>>2]|0)){Pb=Cb;Qb=Db;Rb=Eb;Sb=Fb;Tb=Gb;Ub=Hb;Vb=Ib;Wb=Jb;Xb=Kb;Yb=Lb;Zb=Mb;_b=W;$b=Ob;break}g[j>>2]=Hb-Eb;g[v>>2]=Gb-Db;g[w>>2]=Fb-Cb;if(Dc(b,j,ua)|0){ta=W;I=Cb;J=Db;K=Eb;L=Fb;M=Gb;N=Hb;O=Ib;P=Jb;R=Kb;S=Lb;T=Mb;V=Ob;W=ua;U=ta}else{Pb=Cb;Qb=Db;Rb=Eb;Sb=Fb;Tb=Gb;Ub=Hb;Vb=Ib;Wb=Jb;Xb=Kb;Yb=Lb;Zb=Mb;_b=W;$b=Ob;break}}if(((!(Yb<+g[p>>2])?!(Xb<+g[q>>2]):0)?!(Wb<+g[r>>2]):0)?!(Vb<+g[s>>2]):0){i=f;return}Ob=_b<<4;if((Zb|0)>0){_b=0;do{a[k+(d[b+(_b+Ob)+28>>0]|0)>>0]=0;_b=_b+1|0}while((_b|0)!=(Zb|0))}if((Zb|0)<($b|0)){_b=Zb;do{a[k+(d[b+(_b+Ob)+28>>0]|0)>>0]=2;_b=_b+1|0}while((_b|0)!=($b|0))}if(($b|0)<(o|0)){_b=$b;do{a[k+(d[b+(_b+Ob)+28>>0]|0)>>0]=1;_b=_b+1|0}while((_b|0)!=(o|0))}Lc(c[n>>2]|0,k,h);g[l>>2]=Rb;g[l+4>>2]=Qb;g[l+8>>2]=Pb;g[m>>2]=Ub;g[m+4>>2]=Tb;g[m+8>>2]=Sb;Gc(l,m,h,e);g[p>>2]=Yb;g[q>>2]=Xb;g[r>>2]=Wb;g[s>>2]=Vb;i=f;return}function Fc(b,e){b=b|0;e=e|0;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,R=0.0,S=0.0,T=0,U=0,V=0,W=0,X=0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ca=0.0,da=0.0,ea=0.0,fa=0.0,ga=0.0,ha=0.0,ia=0.0,ja=0.0,ka=0.0,la=0.0,ma=0.0,na=0.0,oa=0.0,pa=0.0,qa=0.0,ra=0.0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0.0,ya=0.0,za=0.0,Aa=0.0,Ba=0.0,Ca=0.0,Da=0.0,Ea=0.0,Fa=0.0,Ga=0.0,Ha=0.0,Ia=0.0,Ja=0.0,Ka=0.0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0.0,Sa=0.0,Ta=0.0,Ua=0.0,Va=0.0,Wa=0.0,Xa=0.0,Ya=0.0,Za=0.0,_a=0.0,$a=0.0,ab=0.0,bb=0.0,cb=0.0,db=0.0,eb=0.0,fb=0.0,gb=0.0,hb=0.0,ib=0.0,jb=0.0,kb=0.0,lb=0.0,mb=0.0,nb=0.0,ob=0.0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0.0,vb=0.0,wb=0.0,xb=0.0,yb=0.0,zb=0.0,Ab=0.0,Bb=0.0,Cb=0.0,Db=0.0,Eb=0.0,Fb=0.0,Gb=0.0,Hb=0.0,Ib=0.0,Jb=0.0,Kb=0.0,Lb=0.0,Mb=0.0,Nb=0.0,Ob=0.0,Pb=0.0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0.0,Vb=0.0,Wb=0.0,Xb=0.0,Yb=0.0,Zb=0.0,_b=0.0,$b=0.0,ac=0.0,bc=0.0,cc=0,dc=0,ec=0,fc=0,gc=0.0,hc=0.0,ic=0.0,jc=0.0,kc=0.0,lc=0.0,mc=0.0,nc=0.0,oc=0.0,pc=0.0,qc=0,rc=0,sc=0,tc=0,uc=0.0,vc=0.0,wc=0.0,xc=0.0,yc=0.0,zc=0.0,Ac=0.0,Bc=0.0,Cc=0.0,Ec=0.0,Fc=0,Gc=0,Ic=0,Jc=0,Kc=0.0,Mc=0.0,Nc=0.0,Oc=0.0,Pc=0.0,Qc=0.0,Rc=0.0,Sc=0.0,Tc=0.0,Uc=0.0,Vc=0,Wc=0,Xc=0,Yc=0;f=i;i=i+80|0;h=f+56|0;j=f+24|0;k=f+40|0;l=f+12|0;m=f;n=b+4|0;o=c[c[n>>2]>>2]|0;Dc(b,b+16|0,0)|0;p=b+444|0;q=b+448|0;r=b+452|0;s=b+456|0;t=(o|0)>0;u=b+12|0;v=j+4|0;w=j+8|0;x=b+156|0;y=b+160|0;z=b+164|0;A=b+168|0;B=b+412|0;C=b+416|0;D=b+420|0;E=b+424|0;F=b+428|0;G=b+432|0;H=b+436|0;I=0.0;J=0.0;K=0.0;L=0.0;M=0.0;N=0.0;O=+g[s>>2];P=+g[r>>2];R=+g[q>>2];S=+g[p>>2];T=0;U=0;V=0;W=0;X=0;while(1){if(t){Y=+g[B>>2];Z=+g[C>>2];_=+g[D>>2];$=+g[E>>2];aa=+g[F>>2];ca=+g[G>>2];da=+g[H>>2];ea=S;fa=R;ga=P;ha=O;ia=N;ja=M;ka=L;la=K;ma=J;na=I;oa=0.0;pa=0.0;qa=0.0;ra=0.0;sa=T;ta=U;ua=V;va=W;wa=0;while(1){xa=na;ya=ma;za=la;Aa=ka;Ba=ja;Ca=ia;Da=ha;Ea=ga;Fa=fa;Ga=ea;Ha=0.0;Ia=0.0;Ja=0.0;Ka=0.0;La=sa;Ma=ta;Na=ua;Oa=va;Pa=wa;while(1){Qa=(Pa|0)==0;if(Qa){Ra=+g[A>>2];Sa=+g[z>>2];Ta=+g[y>>2];Ua=+g[x>>2]}else{Ra=0.0;Sa=0.0;Ta=0.0;Ua=0.0}Va=oa+Ha*.6666666865348816;Wa=pa+Ia*.6666666865348816;Xa=qa+Ja*.6666666865348816;Ya=ra+Ka*.4444444477558136;Za=Ha*.3333333432674408;_a=Ia*.3333333432674408;$a=Ja*.3333333432674408;ab=Ka*.1111111119389534;bb=Ga;cb=Fa;db=Ea;eb=Da;fb=xa;gb=ya;hb=za;ib=Aa;jb=Ba;kb=Ca;lb=Ua;mb=Ta;nb=Sa;ob=Ra;pb=La;qb=Ma;rb=Na;sb=Oa;tb=Qa?1:Pa;while(1){ub=Va+lb*.3333333432674408;vb=Wa+mb*.3333333432674408;wb=Xa+nb*.3333333432674408;xb=Ya+ob*.1111111119389534;yb=Za+(lb*.6666666865348816+(Y-lb-Ha-oa));zb=_a+(mb*.6666666865348816+(Z-mb-Ia-pa));Ab=$a+(nb*.6666666865348816+(_-nb-Ja-qa));Bb=ab+(ob*.4444444477558136+($-ob-Ka-ra));Cb=(Ka+ob)*.2222222238779068;Db=1.0/(xb*Bb-Cb*Cb);Eb=Db*(ub*Bb-Cb*yb);Fb=Db*(vb*Bb-Cb*zb);Gb=Db*(wb*Bb-Cb*Ab);Hb=Db*(xb*yb-Cb*ub);Ib=Db*(xb*zb-Cb*vb);Jb=Db*(xb*Ab-Cb*wb);Db=Eb>0.0?Eb:0.0;Eb=Fb>0.0?Fb:0.0;Fb=Gb>0.0?Gb:0.0;Gb=Hb>0.0?Hb:0.0;Hb=Ib>0.0?Ib:0.0;Ib=Jb>0.0?Jb:0.0;Jb=Db<1.0?Db*31.0+.5:31.5;Db=Eb<1.0?Eb*63.0+.5:63.5;Eb=Fb<1.0?Fb*31.0+.5:31.5;if(Jb>0.0)Kb=+Q(+Jb);else Kb=+ba(+Jb);if(Db>0.0)Lb=+Q(+Db);else Lb=+ba(+Db);if(Eb>0.0)Mb=+Q(+Eb);else Mb=+ba(+Eb);Eb=Kb*.032258063554763794;Db=Lb*.01587301678955555;Jb=Mb*.032258063554763794;Fb=Gb<1.0?Gb*31.0+.5:31.5;Gb=Hb<1.0?Hb*63.0+.5:63.5;Hb=Ib<1.0?Ib*31.0+.5:31.5;if(Fb>0.0)Nb=+Q(+Fb);else Nb=+ba(+Fb);if(Gb>0.0)Ob=+Q(+Gb);else Ob=+ba(+Gb);if(Hb>0.0)Pb=+Q(+Hb);else Pb=+ba(+Hb);Hb=Nb*.032258063554763794;Gb=Ob*.01587301678955555;Fb=Pb*.032258063554763794;Ib=(xb*(Eb*Eb)+Bb*(Hb*Hb)+(Cb*(Eb*Hb)-ub*Eb-yb*Hb)*2.0)*aa+(xb*(Db*Db)+Bb*(Gb*Gb)+(Cb*(Db*Gb)-vb*Db-zb*Gb)*2.0)*ca+(xb*(Jb*Jb)+Bb*(Fb*Fb)+(Cb*(Jb*Fb)-wb*Jb-Ab*Fb)*2.0)*da;Qa=Ib<bb|Ib<cb|Ib<db|Ib<eb;Ab=Qa?Jb:fb;Jb=Qa?Db:gb;Db=Qa?Eb:hb;Eb=Qa?Fb:ib;Fb=Qa?Gb:jb;Gb=Qa?Hb:kb;Hb=Qa?Ib:eb;wb=Qa?Ib:db;Cb=Qa?Ib:cb;Bb=Qa?Ib:bb;Qb=Qa?Pa:rb;Rb=Qa?tb:sb;Sb=Qa?wa:pb;Tb=Qa?X:qb;if((tb|0)==(o|0)){Ub=Ab;Vb=Jb;Wb=Db;Xb=Eb;Yb=Fb;Zb=Gb;_b=Hb;$b=wb;ac=Cb;bc=Bb;cc=Sb;dc=Tb;ec=Qb;fc=Rb;break}bb=Bb;cb=Cb;db=wb;eb=Hb;fb=Ab;gb=Jb;hb=Db;ib=Eb;jb=Fb;kb=Gb;lb=lb+ +g[b+(tb<<4)+156>>2];mb=mb+ +g[b+(tb<<4)+160>>2];nb=nb+ +g[b+(tb<<4)+164>>2];ob=ob+ +g[b+(tb<<4)+168>>2];pb=Sb;qb=Tb;rb=Qb;sb=Rb;tb=tb+1|0}if((Pa|0)==(o|0)){gc=Ub;hc=Vb;ic=Wb;jc=Xb;kc=Yb;lc=Zb;mc=_b;nc=$b;oc=ac;pc=bc;qc=cc;rc=dc;sc=ec;tc=fc;break}xa=Ub;ya=Vb;za=Wb;Aa=Xb;Ba=Yb;Ca=Zb;Da=_b;Ea=$b;Fa=ac;Ga=bc;Ha=Ha+ +g[b+(Pa<<4)+156>>2];Ia=Ia+ +g[b+(Pa<<4)+160>>2];Ja=Ja+ +g[b+(Pa<<4)+164>>2];Ka=Ka+ +g[b+(Pa<<4)+168>>2];La=cc;Ma=dc;Na=ec;Oa=fc;Pa=Pa+1|0}Pa=wa+1|0;if((Pa|0)==(o|0)){uc=gc;vc=hc;wc=ic;xc=jc;yc=kc;zc=lc;Ac=mc;Bc=nc;Cc=oc;Ec=pc;Fc=qc;Gc=rc;Ic=sc;Jc=tc;break}else{ea=pc;fa=oc;ga=nc;ha=mc;ia=lc;ja=kc;ka=jc;la=ic;ma=hc;na=gc;oa=oa+ +g[b+(wa<<4)+156>>2];pa=pa+ +g[b+(wa<<4)+160>>2];qa=qa+ +g[b+(wa<<4)+164>>2];ra=ra+ +g[b+(wa<<4)+168>>2];sa=qc;ta=rc;ua=sc;va=tc;wa=Pa}}}else{uc=I;vc=J;wc=K;xc=L;yc=M;zc=N;Ac=O;Bc=P;Cc=R;Ec=S;Fc=T;Gc=U;Ic=V;Jc=W}if((Gc|0)!=(X|0)){Kc=uc;Mc=vc;Nc=wc;Oc=xc;Pc=yc;Qc=zc;Rc=Ac;Sc=Bc;Tc=Cc;Uc=Ec;Vc=Fc;Wc=Gc;Xc=Ic;Yc=Jc;break}wa=X+1|0;if((wa|0)==(c[u>>2]|0)){Kc=uc;Mc=vc;Nc=wc;Oc=xc;Pc=yc;Qc=zc;Rc=Ac;Sc=Bc;Tc=Cc;Uc=Ec;Vc=Fc;Wc=X;Xc=Ic;Yc=Jc;break}g[j>>2]=zc-wc;g[v>>2]=yc-vc;g[w>>2]=xc-uc;if(Dc(b,j,wa)|0){va=X;I=uc;J=vc;K=wc;L=xc;M=yc;N=zc;O=Ac;P=Bc;R=Cc;S=Ec;T=Fc;V=Ic;W=Jc;X=wa;U=va}else{Kc=uc;Mc=vc;Nc=wc;Oc=xc;Pc=yc;Qc=zc;Rc=Ac;Sc=Bc;Tc=Cc;Uc=Ec;Vc=Fc;Wc=X;Xc=Ic;Yc=Jc;break}}if(((!(Uc<+g[p>>2])?!(Tc<+g[q>>2]):0)?!(Sc<+g[r>>2]):0)?!(Rc<+g[s>>2]):0){i=f;return}Jc=Wc<<4;if((Vc|0)>0){Wc=0;do{a[k+(d[b+(Wc+Jc)+28>>0]|0)>>0]=0;Wc=Wc+1|0}while((Wc|0)!=(Vc|0))}if((Vc|0)<(Xc|0)){Wc=Vc;do{a[k+(d[b+(Wc+Jc)+28>>0]|0)>>0]=2;Wc=Wc+1|0}while((Wc|0)!=(Xc|0))}if((Xc|0)<(Yc|0)){Wc=Xc;do{a[k+(d[b+(Wc+Jc)+28>>0]|0)>>0]=3;Wc=Wc+1|0}while((Wc|0)!=(Yc|0))}if((Yc|0)<(o|0)){Wc=Yc;do{a[k+(d[b+(Wc+Jc)+28>>0]|0)>>0]=1;Wc=Wc+1|0}while((Wc|0)!=(o|0))}Lc(c[n>>2]|0,k,h);g[l>>2]=Nc;g[l+4>>2]=Mc;g[l+8>>2]=Kc;g[m>>2]=Qc;g[m+4>>2]=Pc;g[m+8>>2]=Oc;Hc(l,m,h,e);g[p>>2]=Uc;g[q>>2]=Tc;g[r>>2]=Sc;g[s>>2]=Rc;i=f;return}function Gc(b,c,e,f){b=b|0;c=c|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;h=i;i=i+16|0;j=h;k=~~(+g[b>>2]*31.0+.5);if((k|0)<0)l=0;else l=(k|0)>31?63488:k<<11;k=~~(+g[b+4>>2]*63.0+.5);if((k|0)<0)m=0;else m=(k|0)>63?2016:k<<5;k=~~(+g[b+8>>2]*31.0+.5);if((k|0)<0)n=0;else n=(k|0)>31?31:k;k=m|l|n;n=~~(+g[c>>2]*31.0+.5);if((n|0)<0)o=0;else o=(n|0)>31?63488:n<<11;n=~~(+g[c+4>>2]*63.0+.5);if((n|0)<0)p=0;else p=(n|0)>63?2016:n<<5;n=~~(+g[c+8>>2]*31.0+.5);if((n|0)<0)q=0;else q=(n|0)>31?31:n;n=p|o|q;if((k|0)>(n|0)){q=0;do{o=a[e+q>>0]|0;if(o<<24>>24==1)a[j+q>>0]=0;else if(!(o<<24>>24))a[j+q>>0]=1;else a[j+q>>0]=o;q=q+1|0}while((q|0)!=16);r=n;s=k}else{q=j+0|0;o=e+0|0;e=q+16|0;do{a[q>>0]=a[o>>0]|0;q=q+1|0;o=o+1|0}while((q|0)<(e|0));r=k;s=n}a[f>>0]=r;a[f+1>>0]=r>>>8;a[f+2>>0]=s;a[f+3>>0]=s>>>8;a[f+4>>0]=(d[j+1>>0]|0)<<2|(d[j>>0]|0)|(d[j+2>>0]|0)<<4|(d[j+3>>0]|0)<<6;a[f+5>>0]=(d[j+5>>0]|0)<<2|(d[j+4>>0]|0)|(d[j+6>>0]|0)<<4|(d[j+7>>0]|0)<<6;a[f+6>>0]=(d[j+9>>0]|0)<<2|(d[j+8>>0]|0)|(d[j+10>>0]|0)<<4|(d[j+11>>0]|0)<<6;a[f+7>>0]=(d[j+13>>0]|0)<<2|(d[j+12>>0]|0)|(d[j+14>>0]|0)<<4|(d[j+15>>0]|0)<<6;i=h;return}function Hc(b,c,e,f){b=b|0;c=c|0;e=e|0;f=f|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;h=i;i=i+16|0;j=h;k=~~(+g[b>>2]*31.0+.5);if((k|0)<0)l=0;else l=(k|0)>31?63488:k<<11;k=~~(+g[b+4>>2]*63.0+.5);if((k|0)<0)m=0;else m=(k|0)>63?2016:k<<5;k=~~(+g[b+8>>2]*31.0+.5);if((k|0)<0)n=0;else n=(k|0)>31?31:k;k=m|l|n;n=~~(+g[c>>2]*31.0+.5);if((n|0)<0)o=0;else o=(n|0)>31?63488:n<<11;n=~~(+g[c+4>>2]*63.0+.5);if((n|0)<0)p=0;else p=(n|0)>63?2016:n<<5;n=~~(+g[c+8>>2]*31.0+.5);if((n|0)<0)q=0;else q=(n|0)>31?31:n;n=p|o|q;do if((k|0)>=(n|0))if((k|0)==(n|0)){r=j+0|0;s=r+16|0;do{a[r>>0]=0;r=r+1|0}while((r|0)<(s|0));t=k;u=k;break}else{r=j+0|0;q=e+0|0;s=r+16|0;do{a[r>>0]=a[q>>0]|0;r=r+1|0;q=q+1|0}while((r|0)<(s|0));t=k;u=n;break}else{q=0;do{a[j+q>>0]=(d[e+q>>0]|0)&3^1;q=q+1|0}while((q|0)!=16);t=n;u=k}while(0);a[f>>0]=t;a[f+1>>0]=t>>>8;a[f+2>>0]=u;a[f+3>>0]=u>>>8;a[f+4>>0]=(d[j+1>>0]|0)<<2|(d[j>>0]|0)|(d[j+2>>0]|0)<<4|(d[j+3>>0]|0)<<6;a[f+5>>0]=(d[j+5>>0]|0)<<2|(d[j+4>>0]|0)|(d[j+6>>0]|0)<<4|(d[j+7>>0]|0)<<6;a[f+6>>0]=(d[j+9>>0]|0)<<2|(d[j+8>>0]|0)|(d[j+10>>0]|0)<<4|(d[j+11>>0]|0)<<6;a[f+7>>0]=(d[j+13>>0]|0)<<2|(d[j+12>>0]|0)|(d[j+14>>0]|0)<<4|(d[j+15>>0]|0)<<6;i=h;return}function Ic(a,b,d){a=a|0;b=b|0;d=d|0;c[a>>2]=104;c[a+4>>2]=b;c[a+8>>2]=d;return}function Jc(b,d){b=b|0;d=d|0;var e=0;e=c[b>>2]|0;if(!(c[b+8>>2]&1)){dc[c[e+4>>2]&63](b,d);return}dc[c[e>>2]&63](b,d);if(a[(c[b+4>>2]|0)+324>>0]|0)return;dc[c[(c[b>>2]|0)+4>>2]&63](b,d);return}function Kc(b,e,f,h){b=b|0;e=e|0;f=f|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0.0,u=0.0,v=0.0,w=0;c[b>>2]=0;i=b+324|0;a[i>>0]=0;j=(h&1|0)!=0;k=(h&128|0)!=0;h=0;do{a:do if(!(1<<h&f))c[b+(h<<2)+260>>2]=-1;else{if(j?(a[e+(h<<2|3)>>0]|0)>-1:0){c[b+(h<<2)+260>>2]=-1;a[i>>0]=1;break}l=h<<2;m=e+l|0;n=e+(l|1)|0;o=e+(l|2)|0;b:do if(!h)p=0;else{c:do if(j){q=0;while(1){if(((((1<<q&f|0)!=0?(r=q<<2,(a[m>>0]|0)==(a[e+r>>0]|0)):0)?(a[n>>0]|0)==(a[e+(r|1)>>0]|0):0)?(a[o>>0]|0)==(a[e+(r|2)>>0]|0):0)?(a[e+(r|3)>>0]|0)<0:0){s=q;break c}q=q+1|0;if((q|0)==(h|0)){p=l;break b}}}else{q=0;while(1){if((((1<<q&f|0)!=0?(r=q<<2,(a[m>>0]|0)==(a[e+r>>0]|0)):0)?(a[n>>0]|0)==(a[e+(r|1)>>0]|0):0)?(a[o>>0]|0)==(a[e+(r|2)>>0]|0):0){s=q;break c}q=q+1|0;if((q|0)==(h|0)){p=l;break b}}}while(0);q=c[b+(s<<2)+260>>2]|0;r=b+(q<<2)+196|0;g[r>>2]=+g[r>>2]+(k?+((d[e+(l|3)>>0]|0)+1|0)*.00390625:1.0);c[b+(h<<2)+260>>2]=q;break a}while(0);t=+(d[n>>0]|0)/255.0;u=+(d[o>>0]|0)/255.0;v=+((d[e+(p|3)>>0]|0)+1|0)*.00390625;l=c[b>>2]|0;g[b+(l*12|0)+4>>2]=+(d[m>>0]|0)/255.0;g[b+(l*12|0)+8>>2]=t;g[b+(l*12|0)+12>>2]=u;g[b+(c[b>>2]<<2)+196>>2]=k?v:1.0;c[b+(h<<2)+260>>2]=c[b>>2];c[b>>2]=(c[b>>2]|0)+1}while(0);h=h+1|0}while((h|0)!=16);if((c[b>>2]|0)>0)w=0;else return;do{h=b+(w<<2)+196|0;g[h>>2]=+S(+(+g[h>>2]));w=w+1|0}while((w|0)<(c[b>>2]|0));return}function Lc(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=0;do{g=c[b+(f<<2)+260>>2]|0;if((g|0)==-1)h=3;else h=a[d+g>>0]|0;a[e+f>>0]=h;f=f+1|0}while((f|0)!=16);return}function Mc(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,i=0.0,j=0.0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0,w=0,x=0,y=0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0;f=(b|0)>0;if(f){h=0.0;i=0.0;j=0.0;k=0;l=0.0;while(1){m=+g[e+(k<<2)>>2];n=l+m;o=h+m*+g[d+(k*12|0)>>2];p=i+m*+g[d+(k*12|0)+4>>2];q=j+m*+g[d+(k*12|0)+8>>2];k=k+1|0;if((k|0)==(b|0)){r=q;s=p;t=o;u=n;break}else{h=o;i=p;j=q;l=n}}}else{r=0.0;s=0.0;t=0.0;u=0.0}l=1.0/u;u=t*l;t=s*l;s=r*l;k=a+4|0;v=a+8|0;w=a+12|0;x=a+16|0;y=a+20|0;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[a+16>>2]=0;c[a+20>>2]=0;if(f){z=0.0;A=0.0;B=0.0;C=0.0;D=0.0;E=0.0;F=0}else return;while(1){l=+g[d+(F*12|0)>>2]-u;r=+g[d+(F*12|0)+4>>2]-t;j=+g[d+(F*12|0)+8>>2]-s;i=+g[e+(F<<2)>>2];h=r*i;n=j*i;q=z+l*(l*i);i=A+l*h;p=l*n+B;l=r*h+C;h=r*n+D;r=j*n+E;F=F+1|0;if((F|0)==(b|0)){G=q;H=i;I=p;J=l;K=h;L=r;break}else{z=q;A=i;B=p;C=l;D=h;E=r}}g[a>>2]=G;g[k>>2]=H;g[v>>2]=I;g[w>>2]=J;g[x>>2]=K;g[y>>2]=L;return}function Nc(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0,s=0.0,t=0,u=0,v=0;c=+g[b>>2];d=+g[b+12>>2];e=c*d;f=+g[b+20>>2];h=+g[b+4>>2];i=+g[b+8>>2];j=+g[b+16>>2];k=d*f+(e+c*f)-h*h-i*i-j*j;l=c+d+f;m=l*.3333333432674408;n=k-l*m;o=l*(l*(l*-.07407407462596893))+l*(k*.3333333432674408)-(e*f+h*2.0*i*j-j*(c*j)-i*(d*i)-h*(f*h));e=o*(o*.25);k=n*(n*(n*.03703703731298447))+e;if(k>1.1920928955078125e-07){g[a>>2]=1.0;g[a+4>>2]=1.0;g[a+8>>2]=1.0;return}if(k<-1.1920928955078125e-07){n=+T(+(+S(+(e-k))),.3333333432674408);e=+_(+(+S(+-k)),+(o*-.5))/3.0;k=+U(+e);l=m+n*2.0*k;p=+V(+e)*1.7320507764816284;e=m-n*(k+p);q=m-n*(k-p);r=+R(+e)>+R(+l);p=r?e:l;r=+R(+q)>+R(+p);Oc(a,b,r?q:p);return}if(o<0.0)s=-+T(+(o*-.5),.3333333432674408);else s=+T(+(o*.5),.3333333432674408);o=m+s;p=m-s*2.0;if(!(+R(+o)>+R(+p))){Oc(a,b,p);return}p=c-o;c=d-o;d=f-o;o=+R(+p);f=+R(+h);b=f>o;s=b?f:o;o=+R(+i);r=o>s;f=r?o:s;s=+R(+c);t=s>f;o=t?s:f;f=+R(+j);u=f>o;v=+R(+d)>(u?f:o);switch((v?5:u?4:t?3:r?2:b&1)|0){case 2:{g[a>>2]=i;g[a+4>>2]=0.0;g[a+8>>2]=-p;return}case 4:case 3:{g[a>>2]=0.0;g[a+4>>2]=-j;g[a+8>>2]=c;return}case 1:case 0:{g[a>>2]=-h;g[a+4>>2]=p;g[a+8>>2]=0.0;return}default:{g[a>>2]=0.0;g[a+4>>2]=-d;g[a+8>>2]=j;return}}}function Oc(a,b,c){a=a|0;b=b|0;c=+c;var d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0,o=0,p=0,q=0,r=0;d=+g[b>>2]-c;e=+g[b+4>>2];f=+g[b+8>>2];h=+g[b+12>>2]-c;i=+g[b+16>>2];j=+g[b+20>>2]-c;c=h*j-i*i;k=f*i-e*j;l=e*i-f*h;m=d*j-f*f;j=e*f-d*i;i=d*h-e*e;e=+R(+c);h=+R(+k);b=h>e;d=b?h:e;e=+R(+l);n=e>d;h=n?e:d;d=+R(+m);o=d>h;e=o?d:h;h=+R(+j);p=h>e;q=+R(+i)>(p?h:e);r=q?5:p?4:o?3:n?2:b&1;if((r|0)==3|(r|0)==1){g[a>>2]=k;g[a+4>>2]=m;g[a+8>>2]=j;return}else if(!r){g[a>>2]=c;g[a+4>>2]=k;g[a+8>>2]=l;return}else{g[a>>2]=l;g[a+4>>2]=j;g[a+8>>2]=i;return}}function Pc(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,X=0.0,Y=0.0,Z=0,_=0,$=0;e=i;i=i+48|0;f=e+16|0;h=e;Ic(a,b,d);c[a>>2]=120;d=(c[a+8>>2]&32|0)==0;g[a+12>>2]=d?1.0:.2125999927520752;g[a+16>>2]=d?1.0:.7152000069618225;g[a+20>>2]=d?1.0:.0722000002861023;g[a+48>>2]=3402823466385288598117041.0e14;d=c[a+4>>2]|0;b=c[d>>2]|0;Mc(f,b,d+4|0,d+196|0);Nc(h,f);if((b|0)>0){j=+g[d+4>>2];k=+g[d+8>>2];l=+g[d+12>>2];m=+g[h>>2];n=+g[h+4>>2];o=+g[h+8>>2];p=j*m+k*n+l*o;if((b|0)>1){q=j;r=k;s=l;t=j;u=k;v=l;h=1;w=p;x=p;while(1){p=+g[d+(h*12|0)+4>>2];y=+g[d+(h*12|0)+8>>2];z=+g[d+(h*12|0)+12>>2];A=p*m+y*n+z*o;if(!(A<x))if(A>w){B=v;C=u;D=t;E=z;F=y;G=p;H=A;I=x}else{B=v;C=u;D=t;E=s;F=r;G=q;H=w;I=x}else{B=z;C=y;D=p;E=s;F=r;G=q;H=w;I=A}h=h+1|0;if((h|0)==(b|0)){J=D;K=C;L=B;M=G;N=F;O=E;break}else{q=G;r=F;s=E;t=D;u=C;v=B;w=H;x=I}}}else{J=j;K=k;L=l;M=j;N=k;O=l}}else{J=0.0;K=0.0;L=0.0;M=0.0;N=0.0;O=0.0}l=J>0.0?J:0.0;J=K>0.0?K:0.0;K=L>0.0?L:0.0;L=M>0.0?M:0.0;M=N>0.0?N:0.0;N=O>0.0?O:0.0;O=l<1.0?l*31.0+.5:31.5;l=J<1.0?J*63.0+.5:63.5;J=K<1.0?K*31.0+.5:31.5;if(O>0.0)P=+Q(+O);else P=+ba(+O);if(l>0.0)R=+Q(+l);else R=+ba(+l);if(J>0.0)S=+Q(+J);else S=+ba(+J);g[a+24>>2]=P*.032258063554763794;g[a+28>>2]=R*.01587301678955555;g[a+32>>2]=S*.032258063554763794;S=L<1.0?L*31.0+.5:31.5;L=M<1.0?M*63.0+.5:63.5;M=N<1.0?N*31.0+.5:31.5;if(S>0.0)T=+Q(+S);else T=+ba(+S);if(L>0.0)U=+Q(+L);else U=+ba(+L);if(M>0.0){V=+Q(+M);W=T*.032258063554763794;X=U*.01587301678955555;Y=V*.032258063554763794;Z=a+36|0;g[Z>>2]=W;_=a+40|0;g[_>>2]=X;$=a+44|0;g[$>>2]=Y;i=e;return}else{V=+ba(+M);W=T*.032258063554763794;X=U*.01587301678955555;Y=V*.032258063554763794;Z=a+36|0;g[Z>>2]=W;_=a+40|0;g[_>>2]=X;$=a+44|0;g[$>>2]=Y;i=e;return}}function Qc(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0,L=0.0;e=i;i=i+80|0;f=e;h=e+56|0;j=e+40|0;k=c[b+4>>2]|0;l=c[k>>2]|0;m=b+24|0;c[f+0>>2]=c[m+0>>2];c[f+4>>2]=c[m+4>>2];c[f+8>>2]=c[m+8>>2];n=f+12|0;o=b+36|0;c[n+0>>2]=c[o+0>>2];c[n+4>>2]=c[o+4>>2];c[n+8>>2]=c[o+8>>2];p=+g[m>>2]*.5+ +g[o>>2]*.5;q=+g[b+28>>2]*.5+ +g[b+40>>2]*.5;r=+g[b+32>>2]*.5+ +g[b+44>>2]*.5;g[f+24>>2]=p;g[f+28>>2]=q;g[f+32>>2]=r;if((l|0)>0){s=+g[b+12>>2];t=+g[b+16>>2];u=+g[b+20>>2];v=+g[f>>2];w=+g[f+4>>2];x=+g[f+8>>2];y=+g[f+12>>2];z=+g[f+16>>2];A=+g[f+20>>2];B=0.0;f=0;while(1){C=+g[k+(f*12|0)+4>>2];D=+g[k+(f*12|0)+8>>2];E=+g[k+(f*12|0)+12>>2];F=(C-v)*s;G=(D-w)*t;H=(E-x)*u;I=F*F+G*G+H*H;H=I<3402823466385288598117041.0e14?I:3402823466385288598117041.0e14;I=(C-y)*s;G=(D-z)*t;F=(E-A)*u;J=I*I+G*G+F*F;n=J<H;F=n?J:H;H=(C-p)*s;C=(D-q)*t;D=(E-r)*u;E=H*H+C*C+D*D;K=E<F;a[h+f>>0]=K?2:n&1;D=B+(K?E:F);f=f+1|0;if((f|0)==(l|0)){L=D;break}else B=D}}else L=0.0;l=b+48|0;if(!(L<+g[l>>2])){i=e;return}Lc(k,h,j);Gc(m,o,j,d);g[l>>2]=L;i=e;return}function Rc(b,d){b=b|0;d=d|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0,O=0,P=0.0;e=i;i=i+80|0;f=e;h=e+64|0;j=e+48|0;k=c[b+4>>2]|0;l=c[k>>2]|0;m=b+24|0;c[f+0>>2]=c[m+0>>2];c[f+4>>2]=c[m+4>>2];c[f+8>>2]=c[m+8>>2];n=f+12|0;o=b+36|0;c[n+0>>2]=c[o+0>>2];c[n+4>>2]=c[o+4>>2];c[n+8>>2]=c[o+8>>2];p=+g[m>>2];q=+g[b+28>>2];r=+g[b+32>>2];s=+g[o>>2];t=+g[b+40>>2];u=+g[b+44>>2];v=p*.6666666865348816+s*.3333333432674408;w=q*.6666666865348816+t*.3333333432674408;x=r*.6666666865348816+u*.3333333432674408;g[f+24>>2]=v;g[f+28>>2]=w;g[f+32>>2]=x;y=p*.3333333432674408+s*.6666666865348816;s=q*.3333333432674408+t*.6666666865348816;t=r*.3333333432674408+u*.6666666865348816;g[f+36>>2]=y;g[f+40>>2]=s;g[f+44>>2]=t;if((l|0)>0){u=+g[b+12>>2];r=+g[b+16>>2];q=+g[b+20>>2];p=+g[f>>2];z=+g[f+4>>2];A=+g[f+8>>2];B=+g[f+12>>2];C=+g[f+16>>2];D=+g[f+20>>2];E=0.0;f=0;while(1){F=+g[k+(f*12|0)+4>>2];G=+g[k+(f*12|0)+8>>2];H=+g[k+(f*12|0)+12>>2];I=(F-p)*u;J=(G-z)*r;K=(H-A)*q;L=I*I+J*J+K*K;K=L<3402823466385288598117041.0e14?L:3402823466385288598117041.0e14;L=(F-B)*u;J=(G-C)*r;I=(H-D)*q;M=L*L+J*J+I*I;n=M<K;I=n?M:K;K=(F-v)*u;M=(G-w)*r;J=(H-x)*q;L=K*K+M*M+J*J;N=L<I;J=N?L:I;I=(F-y)*u;F=(G-s)*r;G=(H-t)*q;H=I*I+F*F+G*G;O=H<J;a[h+f>>0]=O?3:N?2:n&1;G=E+(O?H:J);f=f+1|0;if((f|0)==(l|0)){P=G;break}else E=G}}else P=0.0;l=b+48|0;if(!(P<+g[l>>2])){i=e;return}Lc(k,h,j);Hc(m,o,j,d);g[l>>2]=P;i=e;return}function Sc(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,h=0,i=0,j=0,k=0;Ic(b,d,e);c[b>>2]=176;e=c[b+4>>2]|0;d=~~(+g[e+4>>2]*255.0+.5);if((d|0)<0)f=0;else f=(d|0)>255?-1:d&255;a[b+12>>0]=f;f=~~(+g[e+8>>2]*255.0+.5);if((f|0)<0)h=0;else h=(f|0)>255?-1:f&255;a[b+13>>0]=h;h=~~(+g[e+12>>2]*255.0+.5);if((h|0)<0){i=0;j=b+14|0;a[j>>0]=i;k=b+48|0;c[k>>2]=2147483647;return}i=(h|0)>255?-1:h&255;j=b+14|0;a[j>>0]=i;k=b+48|0;c[k>>2]=2147483647;return}function Tc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d;Uc(a,184);f=a+44|0;g=a+48|0;if((c[f>>2]|0)>=(c[g>>2]|0)){i=d;return}Lc(c[a+4>>2]|0,a+40|0,e);Gc(a+16|0,a+28|0,e,b);c[g>>2]=c[f>>2];i=d;return}function Uc(b,e){b=b|0;e=e|0;var f=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0.0,D=0.0;f=b+44|0;c[f>>2]=2147483647;h=b+16|0;i=b+20|0;j=b+24|0;k=b+28|0;l=b+32|0;m=b+36|0;n=b+40|0;o=c[e>>2]|0;p=d[b+12>>0]|0;q=d[o+(p*6|0)+2>>0]|0;r=ca(q,q)|0;q=e+4|0;s=c[q>>2]|0;t=d[b+13>>0]|0;u=d[s+(t*6|0)+2>>0]|0;v=(ca(u,u)|0)+r|0;r=e+8|0;u=c[r>>2]|0;w=d[b+14>>0]|0;b=d[u+(w*6|0)+2>>0]|0;x=(ca(b,b)|0)+v|0;if((x|0)==2147483647){y=o;z=s;A=u;B=2147483647}else{C=+(d[s+(t*6|0)>>0]|0)/63.0;D=+(d[u+(w*6|0)>>0]|0)/31.0;g[h>>2]=+(d[o+(p*6|0)>>0]|0)/31.0;g[i>>2]=C;g[j>>2]=D;D=+(d[s+(t*6|0)+1>>0]|0)/63.0;C=+(d[u+(w*6|0)+1>>0]|0)/31.0;g[k>>2]=+(d[o+(p*6|0)+1>>0]|0)/31.0;g[l>>2]=D;g[m>>2]=C;a[n>>0]=0;c[f>>2]=x;y=c[e>>2]|0;z=c[q>>2]|0;A=c[r>>2]|0;B=x}x=d[y+(p*6|0)+5>>0]|0;r=ca(x,x)|0;x=d[z+(t*6|0)+5>>0]|0;q=(ca(x,x)|0)+r|0;r=d[A+(w*6|0)+5>>0]|0;x=(ca(r,r)|0)+q|0;if((x|0)>=(B|0))return;C=+(d[z+(t*6|0)+3>>0]|0)/63.0;D=+(d[A+(w*6|0)+3>>0]|0)/31.0;g[h>>2]=+(d[y+(p*6|0)+3>>0]|0)/31.0;g[i>>2]=C;g[j>>2]=D;D=+(d[z+(t*6|0)+4>>0]|0)/63.0;C=+(d[A+(w*6|0)+4>>0]|0)/31.0;g[k>>2]=+(d[y+(p*6|0)+4>>0]|0)/31.0;g[l>>2]=D;g[m>>2]=C;a[n>>0]=2;c[f>>2]=x;return}function Vc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d;Uc(a,3272);f=a+44|0;g=a+48|0;if((c[f>>2]|0)>=(c[g>>2]|0)){i=d;return}Lc(c[a+4>>2]|0,a+40|0,e);Hc(a+16|0,a+28|0,e,b);c[g>>2]=c[f>>2];i=d;return}function Wc(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+800|0;g=f+464|0;h=f;j=e&7;if((j|0)==2|(j|0)==4)k=j;else k=1;j=(e&280|0)==16?16:8;l=j|e&128|((e&96|0)==64?64:32)|k;e=(k&6|0)==0?d:d+8|0;Kc(g,a,b,l);m=c[g>>2]|0;do if((m|0)!=1)if((j&16|0)!=0|(m|0)==0){Pc(h,g,l);Jc(h,e);break}else{Cc(h,g,l);Jc(h,e);break}else{Sc(h,g,l);Jc(h,e)}while(0);if(k&2){zc(a,b,d);i=f;return}if(!(k&4)){i=f;return}Ac(a,b,d);i=f;return}function Xc(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;g=i;i=i+64|0;h=g;j=f&7;if((j|0)==2|(j|0)==4)k=j;else k=1;j=((f&280|0)==16?16:8)|f&128|((f&96|0)==64?64:32)|k;f=k<<3&8^8;k=f+8|0;if((d|0)<=0){i=g;return}if((c|0)<=0){l=0;do l=l+4|0;while((l|0)<(d|0));i=g;return}l=f+(ca((c+-1|0)>>>2,k)|0)+8|0;f=e;e=0;while(1){m=f;n=0;while(1){o=0;p=0;q=h;while(1){r=p+e|0;s=ca(r,c)|0;t=p<<2;if((r|0)<(d|0)){r=n+s<<2;u=r|1;a[q>>0]=a[b+r>>0]|0;a[q+1>>0]=a[b+u>>0]|0;a[q+2>>0]=a[b+(u+1)>>0]|0;a[q+3>>0]=a[b+(r|3)>>0]|0;r=1<<t|o;u=n|1;if((u|0)<(c|0)){v=u+s<<2;u=v|1;a[q+4>>0]=a[b+v>>0]|0;a[q+5>>0]=a[b+u>>0]|0;a[q+6>>0]=a[b+(u+1)>>0]|0;a[q+7>>0]=a[b+(v|3)>>0]|0;w=1<<(t|1)|r}else w=r;r=n|2;if((r|0)<(c|0)){v=r+s<<2;r=v|1;a[q+8>>0]=a[b+v>>0]|0;a[q+9>>0]=a[b+r>>0]|0;a[q+10>>0]=a[b+(r+1)>>0]|0;a[q+11>>0]=a[b+(v|3)>>0]|0;x=1<<(t|2)|w}else x=w;v=n|3;if((v|0)<(c|0)){r=v+s<<2;s=r|1;a[q+12>>0]=a[b+r>>0]|0;a[q+13>>0]=a[b+s>>0]|0;a[q+14>>0]=a[b+(s+1)>>0]|0;a[q+15>>0]=a[b+(r|3)>>0]|0;y=1<<(t|3)|x}else y=x}else y=o;p=p+1|0;if((p|0)==4){z=y;break}else{o=y;q=q+16|0}}Wc(h,z,m,j);n=n+4|0;if((n|0)>=(c|0))break;else m=m+k|0}e=e+4|0;if((e|0)>=(d|0))break;else f=f+l|0}i=g;return}function Yc(a){a=a|0;c[a>>2]=0;return}function Zc(a){a=a|0;var b=0;b=c[a>>2]|0;if(!b)return;mp(b);return}function _c(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+4128|0;f=e;g=e+2072|0;h=e+24|0;j=e+8|0;c[j>>2]=d;Mq(h,b,j)|0;c[f>>2]=h;Jq(g,6448,f)|0;f=kp((_q(g|0)|0)+1|0)|0;c[a>>2]=f;dr(f|0,g|0)|0;i=e;return}function $c(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+2064|0;f=e;g=e+8|0;if(!(d<<24>>24)){c[f>>2]=b;Jq(g,6448,f)|0}else{d=c[(Db()|0)>>2]|0;c[f>>2]=b;c[f+4>>2]=d;Jq(g,6408,f)|0}f=kp((_q(g|0)|0)+1|0)|0;c[a>>2]=f;dr(f|0,g|0)|0;i=e;return}function ad(b,d,e){b=b|0;d=d|0;e=e|0;c[b>>2]=6472;a[b+4>>0]=0;c[b+8>>2]=d;c[b+12>>2]=e;c[b+16>>2]=0;c[b+20>>2]=0;return}function bd(a){a=a|0;return}function cd(b){b=b|0;return a[b+4>>0]|0}function dd(b){b=b|0;var d=0;if(!(c[b+8>>2]|0)){$c(13080,6504,0);d=0;return d|0}else{c[b+16>>2]=0;c[b+20>>2]=0;a[b+4>>0]=1;d=1;return d|0}return 0}function ed(b){b=b|0;a[b+4>>0]=0;return}function fd(a){a=a|0;return c[a+20>>2]|0}function gd(b){b=b|0;var d=0;if(!(a[b+4>>0]|0)){d=0;return d|0}d=c[b+16>>2]|0;return d|0}function hd(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;if(!(a[b+4>>0]|0)){f=0;return f|0}if(!e){c[b+16>>2]=0;g=0}else if((e|0)==-1){e=c[b+20>>2]|0;c[b+16>>2]=e;g=e}else g=c[b+16>>2]|0;e=g+d|0;d=(e|0)<0?0:e;e=c[b+20>>2]|0;g=(d|0)>(e|0)?e:d;c[b+16>>2]=g;f=g;return f|0}function id(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;if(!(a[b+4>>0]|0)){e=0;return e|0}f=b+16|0;g=c[f>>2]|0;if((g|0)==(c[b+12>>2]|0)){$c(13080,6528,0);e=0;return e|0}else{h=c[b+8>>2]|0;c[f>>2]=g+1;a[h+g>>0]=d;d=b+20|0;c[d>>2]=(c[d>>2]|0)+1;e=1;return e|0}return 0}function jd(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;if(!(a[b+4>>0]|0)){f=0;return f|0}g=b+16|0;h=c[g>>2]|0;i=b+12|0;j=c[i>>2]|0;if((j|0)==(h|0)){f=0;return f|0}k=c[b+8>>2]|0;if((h+e|0)>>>0>j>>>0){l=j-h|0;$q(k+h|0,d|0,l|0)|0;j=b+20|0;c[j>>2]=(c[j>>2]|0)+l;c[g>>2]=c[i>>2];$c(13080,6528,0);f=l;return f|0}else{$q(k+h|0,d|0,e|0)|0;d=b+20|0;c[d>>2]=(c[d>>2]|0)+e;c[g>>2]=(c[g>>2]|0)+e;f=e;return f|0}return 0}function kd(a){a=a|0;c[a+0>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[a+16>>2]=0;return}function ld(b,e,f,g,h,i){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;if(!b)Oa(9736,7552,3859,9752);if(!e)Oa(9760,7552,3860,9752);if(h>>>0>=39)Oa(9776,7552,3862,9752);if(i>>>0>=39)Oa(9832,7552,3863,9752);j=9888+(h*56|0)|0;k=9888+(i*56|0)|0;if((a[9929+(h*56|0)>>0]|0)!=0?(a[9929+(i*56|0)>>0]|0)!=0:0){if((h|0)==(i|0)){if((h|0)==20|(h|0)==13)l=ca(f>>>0<4&(f|0)!=0?8:(f+3|0)>>>2<<3,g>>>0<4&(g|0)!=0?1:(g+3|0)>>>2)|0;else if((h|0)==15|(h|0)==14)l=ca(f>>>0<4&(f|0)!=0?16:(f+3|0)>>>2<<4,g>>>0<4&(g|0)!=0?1:(g+3|0)>>>2)|0;else{m=ca(g,f)|0;n=8384+(h*30|0)|0;l=ca(m,d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24)|0}$q(e|0,b|0,l|0)|0;o=1;return o|0}if((h|0)==2&(i|0)==0){l=ca(g,f)|0;n=ca(l,d[8444]|d[8445]<<8|d[8446]<<16|d[8447]<<24)|0;l=b+n|0;if((n|0)>0){p=b;q=e}else{o=1;return o|0}while(1){a[q>>0]=a[p>>0]|0;a[q+1>>0]=a[p+1>>0]|0;a[q+2>>0]=a[p+2>>0]|0;a[q+3>>0]=-1;p=p+3|0;if(p>>>0>=l>>>0){o=1;break}else q=q+4|0}return o|0}q=(h|0)==0;if(q&(i|0)==2){l=ca(g,f)|0;p=ca(l,d[8384]|d[8385]<<8|d[8386]<<16|d[8387]<<24)|0;l=b+p|0;if((p|0)>0){r=e;s=b}else{o=1;return o|0}while(1){a[r>>0]=a[s>>0]|0;a[r+1>>0]=a[s+1>>0]|0;a[r+2>>0]=a[s+2>>0]|0;s=s+4|0;if(s>>>0>=l>>>0){o=1;break}else r=r+3|0}return o|0}if((a[9928+(h*56|0)>>0]|0)==0?(a[9928+(i*56|0)>>0]|0)==0:0){r=c[9892+(h*56|0)>>2]|0;if(r>>>0<2){l=c[9892+(i*56|0)>>2]|0;if(l>>>0<2){Jd(b,e,f,g,j,k)|0;o=1;return o|0}if(l>>>0<3){Kd(b,e,f,g,j,k)|0;o=1;return o|0}if(l>>>0<5){Ld(b,e,f,g,j,k)|0;o=1;return o|0}if(l>>>0>=9){o=0;return o|0}Md(b,e,f,g,j,k)|0;o=1;return o|0}if(r>>>0<3){l=c[9892+(i*56|0)>>2]|0;if(l>>>0<2){Nd(b,e,f,g,j,k)|0;o=1;return o|0}if(l>>>0<3){Od(b,e,f,g,j,k)|0;o=1;return o|0}if(l>>>0<5){Pd(b,e,f,g,j,k)|0;o=1;return o|0}if(l>>>0>=9){o=0;return o|0}Qd(b,e,f,g,j,k)|0;o=1;return o|0}if(r>>>0<5){l=c[9892+(i*56|0)>>2]|0;if(l>>>0<2){Rd(b,e,f,g,j,k)|0;o=1;return o|0}if(l>>>0<3){Sd(b,e,f,g,j,k)|0;o=1;return o|0}if(l>>>0<5){Td(b,e,f,g,j,k)|0;o=1;return o|0}if(l>>>0>=9){o=0;return o|0}Ud(b,e,f,g,j,k)|0;o=1;return o|0}if(r>>>0>=9){o=0;return o|0}r=c[9892+(i*56|0)>>2]|0;if(r>>>0<2){Vd(b,e,f,g,j,k)|0;o=1;return o|0}if(r>>>0<3){Wd(b,e,f,g,j,k)|0;o=1;return o|0}if(r>>>0<5){Xd(b,e,f,g,j,k)|0;o=1;return o|0}if(r>>>0>=9){o=0;return o|0}Yd(b,e,f,g,j,k)|0;o=1;return o|0}do if(!q){k=ca(g,f)|0;j=kp(ca(k,d[8384]|d[8385]<<8|d[8386]<<16|d[8387]<<24)|0)|0;if((h|0)==20|(h|0)==13){Ad(b,j,f,g)|0;t=j;u=32;break}else if((h|0)==14){Bd(b,j,f,g)|0;t=j;u=32;break}else if((h|0)!=15)if(!((ld(b,j,f,g,h,0)|0)<<24>>24)){v=0;w=j;break}else{t=j;u=32;break}else{Cd(b,j,f,g)|0;t=j;u=32;break}}else{t=b;u=32}while(0);do if((u|0)==32){if((i|0)==20){$c(13080,9688,0);v=0;w=t;break}else if((i|0)==13)x=1;else if((i|0)==14)x=2;else if((i|0)==15)x=4;else{v=ld(t,e,f,g,0,i)|0;w=t;break}Xc(t,f,g,e,x);v=1;w=t}while(0);if((w|0)==(b|0)|(w|0)==0){o=v;return o|0}mp(w);o=v;return o|0}$c(13080,12072,0);o=0;return o|0}function md(a){a=a|0;nd(a);return}function nd(a){a=a|0;var b=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;b=c[a>>2]|0;do if(b){e=b+68|0;if(d[e>>0]|d[e+1>>0]<<8|d[e+2>>0]<<16|d[e+3>>0]<<24){e=b;f=0;while(1){g=e+(f<<3)+340|0;h=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;if(!h)i=e;else{mp(h);i=c[a>>2]|0}f=f+1|0;h=i+68|0;if(f>>>0>=(d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24)>>>0){j=i;break}else e=i}if(!j)break;else k=j}else k=b;lp(k)}while(0);c[a>>2]=0;c[a+4>>2]=0;k=a+8|0;b=c[k>>2]|0;if(b)mp(b);c[k>>2]=0;c[a+12>>2]=0;k=a+16|0;a=c[k>>2]|0;if(!a){c[k>>2]=0;return}mp(a);c[k>>2]=0;return}function od(b,e,f,h,j,l,m,n,o,p){b=b|0;e=e|0;f=f|0;h=h|0;j=j|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;var q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;q=i;i=i+16|0;r=q;nd(b);if(!e){$c(13080,6648,0);s=0;i=q;return s|0}if((e+65535|-65536)&e){t=e+-1|0;if(!(t&e))u=e;else{v=t>>>1|t;t=v>>>2|v;v=t>>>4|t;t=v>>>8|v;u=(t>>>16|t)+1|0}c[r>>2]=e;c[r+4>>2]=u>>>1;c[r+8>>2]=u;_c(13080,6696,r);s=0;i=q;return s|0}if(!f){$c(13080,6784,0);s=0;i=q;return s|0}if((f+65535|-65536)&f){u=f+-1|0;if(!(u&f))w=f;else{t=u>>>1|u;u=t>>>2|t;t=u>>>4|u;u=t>>>8|t;w=(u>>>16|u)+1|0}c[r>>2]=f;c[r+4>>2]=w>>>1;c[r+8>>2]=w;_c(13080,6832,r);s=0;i=q;return s|0}do if(!l)x=1;else{if((l+65535|-65536)&l){w=l+-1|0;if(!(w&l)){x=l;break}u=w>>>1|w;w=u>>>2|u;u=w>>>4|w;w=u>>>8|u;x=(w>>>16|w)+1|0;break}if(m>>>0>38){$c(13080,7008,0);s=0;i=q;return s|0}if(!(a[8405+(m*30|0)>>0]|0)){$c(13080,7032,0);s=0;i=q;return s|0}if((h+-1|0)>>>0>65534){c[r>>2]=h;_c(13080,7064,r);s=0;i=q;return s|0}if(!((j|0)==1|(j|0)==6|(j|0)==7)){c[r>>2]=j;_c(13080,7096,r);s=0;i=q;return s|0}w=jp(592)|0;c[b>>2]=w;cr(w|0,0,592)|0;a[w>>0]=86;a[w+1>>0]=84;a[w+2>>0]=70;a[w+3>>0]=0;u=w+4|0;a[u>>0]=7;a[u+1>>0]=0;a[u+2>>0]=0;a[u+3>>0]=0;u=w+8|0;a[u>>0]=3;a[u+1>>0]=0;a[u+2>>0]=0;a[u+3>>0]=0;u=w+12|0;a[u>>0]=0;a[u+1>>0]=0;a[u+2>>0]=0;a[u+3>>0]=0;u=e&65535;t=w+16|0;a[t>>0]=u;a[t+1>>0]=u>>8;t=f&65535;v=w+18|0;a[v>>0]=t;a[v+1>>0]=t>>8;v=8400+(m*30|0)|0;y=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;v=o<<24>>24!=0;z=(v?0:768)|((j|0)==1?0:16384)|(y>>>0>1?8192:0)|((y|0)==1?4096:0);y=w+20|0;a[y>>0]=z;a[y+1>>0]=z>>8;a[y+2>>0]=z>>16;a[y+3>>0]=z>>24;z=h&65535;y=w+24|0;a[y>>0]=z;a[y+1>>0]=z>>8;z=((j|0)==6)<<31>>31;y=w+26|0;a[y>>0]=z;a[y+1>>0]=z>>8;z=w+32|0;g[k>>2]=1.0;a[z>>0]=a[k>>0];a[z+1>>0]=a[k+1>>0];a[z+2>>0]=a[k+2>>0];a[z+3>>0]=a[k+3>>0];z=w+36|0;g[k>>2]=1.0;a[z>>0]=a[k>>0];a[z+1>>0]=a[k+1>>0];a[z+2>>0]=a[k+2>>0];a[z+3>>0]=a[k+3>>0];z=w+40|0;g[k>>2]=1.0;a[z>>0]=a[k>>0];a[z+1>>0]=a[k+1>>0];a[z+2>>0]=a[k+2>>0];a[z+3>>0]=a[k+3>>0];z=w+48|0;g[k>>2]=1.0;a[z>>0]=a[k>>0];a[z+1>>0]=a[k+1>>0];a[z+2>>0]=a[k+2>>0];a[z+3>>0]=a[k+3>>0];z=w+52|0;a[z>>0]=m;a[z+1>>0]=m>>8;a[z+2>>0]=m>>16;a[z+3>>0]=m>>24;if(v){v=l;z=f;y=e;A=0;while(1){B=A+1|0;y=y>>>1;z=z>>>1;v=v>>>1;if(!(z|y|v)){C=B;break}else A=B}D=C&255}else D=1;a[w+56>>0]=D;A=l&65535;v=w+63|0;a[v>>0]=A;a[v+1>>0]=A>>8;A=w+68|0;a[A>>0]=0;a[A+1>>0]=0;a[A+2>>0]=0;a[A+3>>0]=0;v=w+57|0;if(!(n<<24>>24)){a[v>>0]=-1;a[v+1>>0]=-1>>8;a[v+2>>0]=-1>>16;a[v+3>>0]=-1>>24;a[w+61>>0]=0;a[w+62>>0]=0;c[b+12>>2]=0;c[b+16>>2]=0;E=f&65535;F=e&65535}else{a[v>>0]=13;a[v+1>>0]=0;a[v+2>>0]=0;a[v+3>>0]=0;v=e&65535;y=f&65535;if((u&65535)<17&(t&65535)<17){G=y;H=v}else{z=y;B=v;while(1){I=B>>>1;J=z>>>1;K=(I|0)==0?1:I;I=(J|0)==0?1:J;if(K>>>0<17&I>>>0<17){G=I;H=K;break}else{z=I;B=K}}}B=H&255;a[w+61>>0]=B;z=G&255;a[w+62>>0]=z;t=ca((B&255)<4&B<<24>>24!=0?8:((H&255)+3|0)>>>2<<3,(z&255)<4&z<<24>>24!=0?1:((G&255)+3|0)>>>2)|0;c[b+12>>2]=t;c[b+16>>2]=kp(t)|0;a[A>>0]=1;a[A+1>>0]=0;a[A+2>>0]=0;a[A+3>>0]=0;t=w+80|0;a[t>>0]=1;a[t+1>>0]=0;a[t+2>>0]=0;a[t+3>>0]=0;E=y;F=v}t=ca(ca(j,h)|0,pd(F,E,l&65535,D&255,m)|0)|0;z=b+4|0;c[z>>2]=t;B=b+8|0;c[B>>2]=kp(t)|0;t=c[b>>2]|0;u=t+68|0;K=d[u>>0]|d[u+1>>0]<<8|d[u+2>>0]<<16|d[u+3>>0]<<24;I=K+1|0;a[u>>0]=I;a[u+1>>0]=I>>8;a[u+2>>0]=I>>16;a[u+3>>0]=I>>24;I=t+(K<<3)+80|0;a[I>>0]=48;a[I+1>>0]=0;a[I+2>>0]=0;a[I+3>>0]=0;if(p<<24>>24){cr(c[b+16>>2]|0,0,c[b+12>>2]|0)|0;cr(c[B>>2]|0,0,c[z>>2]|0)|0}qd(b);s=1;i=q;return s|0}while(0);c[r>>2]=l;c[r+4>>2]=x>>>1;c[r+8>>2]=x;_c(13080,6920,r);s=0;i=q;return s|0}function pd(a,b,c,e,f){a=a|0;b=b|0;c=c|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;if(!((a|0)!=0&(b|0)!=0&(c|0)!=0))Oa(9552,7552,2926,9600);if(!e){g=0;return g|0}h=f>>>0<39;i=8384+(f*30|0)|0;j=a;a=b;b=c;c=0;k=0;while(1){if((f|0)==15|(f|0)==14)l=ca(ca(b<<4,a>>>0<4&(a|0)!=0?1:(a+3|0)>>>2)|0,j>>>0<4&(j|0)!=0?1:(j+3|0)>>>2)|0;else if((f|0)==20|(f|0)==13)l=ca(ca(b<<3,a>>>0<4&(a|0)!=0?1:(a+3|0)>>>2)|0,j>>>0<4&(j|0)!=0?1:(j+3|0)>>>2)|0;else{if(!h){m=9;break}l=ca(ca(ca(a,b)|0,j)|0,d[i>>0]|d[i+1>>0]<<8|d[i+2>>0]<<16|d[i+3>>0]<<24)|0}n=l+k|0;o=j>>>1;p=a>>>1;q=b>>>1;c=c+1|0;if(c>>>0>=e>>>0){g=n;m=12;break}else{j=(o|0)==0?1:o;a=(p|0)==0?1:p;b=(q|0)==0?1:q;k=n}}if((m|0)==9)Oa(8296,7552,2878,8352);else if((m|0)==12)return g|0;return 0}function qd(b){b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;e=c[b>>2]|0;if(!e)return;f=e+4|0;g=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;a:do if(g>>>0<=7){if((g|0)!=7){f=e+68|0;a[f>>0]=0;a[f+1>>0]=0;a[f+2>>0]=0;a[f+3>>0]=0;break}f=e+8|0;if((d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24)>>>0<=2){f=e+68|0;a[f>>0]=0;a[f+1>>0]=0;a[f+2>>0]=0;a[f+3>>0]=0}f=e+8|0;switch(d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24|0){case 3:{f=e+68|0;h=((d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24)<<3)+80|0;f=e+12|0;a[f>>0]=h;a[f+1>>0]=h>>8;a[f+2>>0]=h>>16;a[f+3>>0]=h>>24;break a;break}case 5:{h=e+68|0;f=((d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24)<<3)+80|0;h=e+12|0;a[h>>0]=f;a[h+1>>0]=f>>8;a[h+2>>0]=f>>16;a[h+3>>0]=f>>24;break a;break}case 4:{f=e+68|0;h=((d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24)<<3)+80|0;f=e+12|0;a[f>>0]=h;a[f+1>>0]=h>>8;a[f+2>>0]=h>>16;a[f+3>>0]=h>>24;break a;break}case 1:{h=e+12|0;a[h>>0]=64;a[h+1>>0]=0;a[h+2>>0]=0;a[h+3>>0]=0;break a;break}case 2:{h=e+12|0;a[h>>0]=80;a[h+1>>0]=0;a[h+2>>0]=0;a[h+3>>0]=0;break a;break}case 0:{h=e+12|0;a[h>>0]=64;a[h+1>>0]=0;a[h+2>>0]=0;a[h+3>>0]=0;break a;break}default:break a}}while(0);g=e+68|0;h=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;if(!h)return;g=e+12|0;f=b+12|0;i=b+4|0;b=0;j=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;while(1){g=e+(b<<3)+80|0;k=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;if((k|0)==48){l=e+(b<<3)+84|0;a[l>>0]=j;a[l+1>>0]=j>>8;a[l+2>>0]=j>>16;a[l+3>>0]=j>>24;m=(c[i>>2]|0)+j|0}else if((k|0)!=1)if(!(a[g+3>>0]&2)){g=e+(b<<3)+84|0;a[g>>0]=j;a[g+1>>0]=j>>8;a[g+2>>0]=j>>16;a[g+3>>0]=j>>24;g=e+(b<<3)+336|0;m=j+4+(d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24)|0}else m=j;else{g=e+(b<<3)+84|0;a[g>>0]=j;a[g+1>>0]=j>>8;a[g+2>>0]=j>>16;a[g+3>>0]=j>>24;m=(c[f>>2]|0)+j|0}b=b+1|0;if(b>>>0>=h>>>0)break;else j=m}return}function rd(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;i=i+16|0;h=g;c[h>>2]=e;e=sd(a,b,d,1,1,1,h,f)|0;i=g;return e|0}function sd(b,e,f,h,j,l,m,n){b=b|0;e=e|0;f=f|0;h=h|0;j=j|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,U=0.0,V=0.0,W=0,X=0,Y=0,Z=0.0,_=0.0,$=0.0,aa=0,ba=0,da=0,ea=0,fa=0;o=i;i=i+272|0;p=o;q=o+264|0;r=o+260|0;s=o+256|0;t=h>>>0<j>>>0?j:h;u=t>>>0<l>>>0?l:t;t=j>>>0>1;v=l>>>0>1;if((!((h|0)==1&t&v)?(w=h>>>0>1,x=(j|0)==1,!(w&x&v)):0)?!(w&t&(l|0)==1):0){t=d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24;w=n+4|0;y=d[w>>0]|d[w+1>>0]<<8|d[w+2>>0]<<16|d[w+3>>0]<<24;if((t|0)!=7|y>>>0>5){c[p>>2]=t;c[p+4>>2]=y;c[p+8>>2]=7;c[p+12>>2]=0;c[p+16>>2]=7;c[p+20>>2]=5;_c(13080,7280,p);z=0;i=o;return z|0}if(y>>>0<2&v){c[p>>2]=7;c[p+4>>2]=2;_c(13080,7336,p);z=0;i=o;return z|0}if((y|0)==0&(j|0)==7){c[p>>2]=7;c[p+4>>2]=1;_c(13080,7400,p);z=0;i=o;return z|0}y=n+36|0;t=a[y>>0]|0;if(t<<24>>24!=0&v){$c(13080,7456,0);z=0;i=o;return z|0}do if(a[n+47>>0]|0){v=n+48|0;A=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;if((A|0)==2|(A|0)==1|(A|0)==0){if(e){v=e+-1|0;if(!(v&e))B=e;else{C=v>>>1|v;v=C>>>2|C;C=v>>>4|v;v=C>>>8|C;D=(v>>>16|v)+1|0;E=18}}else{D=1;E=18}if((E|0)==18){if(!A){v=D>>>1;F=(e-v|0)>>>0<(D-e|0)>>>0?v:D}else if((A|0)==2)F=D>>>1;else F=D;B=(F|0)==0?1:F}v=(a[n+68>>0]|0)==0;if(v)G=B;else{C=n+69|0;H=d[C>>0]|d[C+1>>0]<<8|d[C+2>>0]<<16|d[C+3>>0]<<24;G=B>>>0>H>>>0?H:B}if(f){H=f+-1|0;if(!(H&f))I=f;else{C=H>>>1|H;H=C>>>2|C;C=H>>>4|H;H=C>>>8|C;J=(H>>>16|H)+1|0;E=27}}else{J=1;E=27}if((E|0)==27){if(!A){H=J>>>1;K=(f-H|0)>>>0<(J-f|0)>>>0?H:J}else if((A|0)==2)K=J>>>1;else K=J;I=(K|0)==0?1:K}if(v){L=I;M=G}else{v=n+73|0;H=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;L=I>>>0>H>>>0?H:I;M=G}}else if((A|0)==3){A=n+60|0;H=n+64|0;L=d[H>>0]|d[H+1>>0]<<8|d[H+2>>0]<<16|d[H+3>>0]<<24;M=d[A>>0]|d[A+1>>0]<<8|d[A+2>>0]<<16|d[A+3>>0]<<24}else{L=f;M=e}if(M+-1&M)Oa(7512,7552,656,7568);if(L+-1&L)Oa(7576,7552,657,7568);if(!((M|0)==(e|0)&(L|0)==(f|0))){A=kp(u>>>0>1073741823?-1:u<<2)|0;cr(A|0,0,u<<2|0)|0;if(u){H=ca(L,M)|0;v=n+52|0;C=n+56|0;N=0;while(1){O=kp(ca(H,d[8384]|d[8385]<<8|d[8386]<<16|d[8387]<<24)|0)|0;c[A+(N<<2)>>2]=O;if((d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24)>>>0>=14){E=42;break}if((d[C>>0]|d[C+1>>0]<<8|d[C+2>>0]<<16|d[C+3>>0]<<24)>>>0>=19){E=44;break}jb(c[m+(N<<2)>>2]|0,O|0,e|0,f|0,M|0,L|0);N=N+1|0;if(N>>>0>=u>>>0){E=46;break}}if((E|0)==42)Oa(12416,7552,4070,12472);else if((E|0)==44)Oa(12480,7552,4071,12472);else if((E|0)==46){P=M;Q=L;R=A;S=a[y>>0]|0;break}}else{P=M;Q=L;R=A;S=t}}else{P=e;Q=f;R=m;S=t}}else{P=e;Q=f;R=m;S=t}while(0);t=n+104|0;m=(j|0)==6;f=n+8|0;e=n+45|0;if(!((od(b,P,Q,h,(m&(a[t>>0]|0)!=0&1)+j|0,l,d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24,a[e>>0]|0,S,0)|0)<<24>>24)){S=Ia(4)|0;c[S>>2]=0;Xb(S|0,26904,0)}S=d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24;f=c[b>>2]|0;L=f+4|0;a[L>>0]=S;a[L+1>>0]=S>>8;a[L+2>>0]=S>>16;a[L+3>>0]=S>>24;S=d[w>>0]|d[w+1>>0]<<8|d[w+2>>0]<<16|d[w+3>>0]<<24;w=f+8|0;a[w>>0]=S;a[w+1>>0]=S>>8;a[w+2>>0]=S>>16;a[w+3>>0]=S>>24;qd(b);if(!((a[n+77>>0]|0)==0|(h|0)==0)){S=(j|0)==0;w=(l|0)==0;f=n+78|0;L=0;do{if(!S){M=0;do{if(!w){E=M+L|0;u=0;do{G=c[R+(E+u<<2)>>2]|0;I=c[b>>2]|0;K=I+16|0;J=(d[K>>0]|d[K+1>>0]<<8)&65535;K=I+18|0;I=(d[K>>0]|d[K+1>>0]<<8)&65535;a[k>>0]=a[f>>0];a[k+1>>0]=a[f+1>>0];a[k+2>>0]=a[f+2>>0];a[k+3>>0]=a[f+3>>0];U=+g[k>>2];do if(!(U==1.0)){V=1.0/U;K=0;do{a[p+K>>0]=~~(+T(+(+(K>>>0)/255.0),+V)*255.0);K=K+1|0}while((K|0)!=256);K=ca(J<<2,I)|0;B=G+K|0;if((K|0)>0)W=G;else break;do{a[W>>0]=a[p+(d[W>>0]|0)>>0]|0;K=W+1|0;a[K>>0]=a[p+(d[K>>0]|0)>>0]|0;K=W+2|0;a[K>>0]=a[p+(d[K>>0]|0)>>0]|0;W=W+4|0}while(W>>>0<B>>>0)}while(0);u=u+1|0}while((u|0)!=(l|0))}M=M+1|0}while((M|0)!=(j|0))}L=L+1|0}while((L|0)!=(h|0))}a:do if((a[n+82>>0]|0)!=0&x){L=n+83|0;W=d[L>>0]|d[L+1>>0]<<8|d[L+2>>0]<<16|d[L+3>>0]<<24;if((W|0)!=5){L=(c[b>>2]|0)+20|0;p=d[L>>0]|d[L+1>>0]<<8|d[L+2>>0]<<16|d[L+3>>0]<<24|128;a[L>>0]=p;a[L+1>>0]=p>>8;a[L+2>>0]=p>>16;a[L+3>>0]=p>>24}if(h){p=(l|0)==0;L=0;while(1){if(!p)break;L=L+1|0;if(L>>>0>=h>>>0)break a}L=n+91|0;p=d[L>>0]|d[L+1>>0]<<8|d[L+2>>0]<<16|d[L+3>>0]<<24;if(W>>>0>=6)Oa(12112,7552,4024,12168);L=n+87|0;if((d[L>>0]|d[L+1>>0]<<8|d[L+2>>0]<<16|d[L+3>>0]<<24)>>>0>=8)Oa(12192,7552,4025,12168);if(p>>>0<4){$c(13080,12352,0);p=Ia(4)|0;c[p>>2]=0;Xb(p|0,26904,0)}else Oa(12280,7552,4026,12168)}}while(0);if((a[y>>0]|0)!=0?(a[(c[b>>2]|0)+56>>0]|0)!=1:0){$c(13080,7616,0);y=Ia(4)|0;c[y>>2]=0;Xb(y|0,26904,0)}y=(h|0)==0;b:do if(!y){x=(j|0)==0;p=(l|0)==0;L=b+8|0;f=0;c:while(1){if(!x){w=0;do{if(!p){S=w+f|0;M=0;do{A=c[R+(S+M<<2)>>2]|0;u=c[L>>2]|0;E=(c[b>>2]|0)+52|0;G=u+(zd(b,f,w,M,0,d[E>>0]|d[E+1>>0]<<8|d[E+2>>0]<<16|d[E+3>>0]<<24)|0)|0;E=c[b>>2]|0;u=E+16|0;I=E+18|0;J=E+52|0;M=M+1|0;if(!((ld(A,G,(d[u>>0]|d[u+1>>0]<<8)&65535,(d[I>>0]|d[I+1>>0]<<8)&65535,0,d[J>>0]|d[J+1>>0]<<8|d[J+2>>0]<<16|d[J+3>>0]<<24)|0)<<24>>24))break c}while(M>>>0<l>>>0)}w=w+1|0}while(w>>>0<j>>>0)}f=f+1|0;if(f>>>0>=h>>>0)break b}f=Ia(4)|0;c[f>>2]=0;Xb(f|0,26904,0)}while(0);if((a[e>>0]|0)!=0?(td(b)|0)<<24>>24==0:0){e=Ia(4)|0;c[e>>2]=0;Xb(e|0,26904,0)}if((a[t>>0]|0)!=0&m?(ud(b)|0)<<24>>24==0:0){m=Ia(4)|0;c[m>>2]=0;Xb(m|0,26904,0)}m=c[b>>2]|0;if(!(a[n+46>>0]|0))if(!m)X=0;else{t=n+32|0;a[k>>0]=a[t>>0];a[k+1>>0]=a[t+1>>0];a[k+2>>0]=a[t+2>>0];a[k+3>>0]=a[t+3>>0];U=+g[k>>2];t=n+28|0;a[k>>0]=a[t>>0];a[k+1>>0]=a[t+1>>0];a[k+2>>0]=a[t+2>>0];a[k+3>>0]=a[t+3>>0];V=+g[k>>2];t=n+24|0;a[k>>0]=a[t>>0];a[k+1>>0]=a[t+1>>0];a[k+2>>0]=a[t+2>>0];a[k+3>>0]=a[t+3>>0];t=m+32|0;g[k>>2]=+g[k>>2];a[t>>0]=a[k>>0];a[t+1>>0]=a[k+1>>0];a[t+2>>0]=a[k+2>>0];a[t+3>>0]=a[k+3>>0];t=m+36|0;g[k>>2]=V;a[t>>0]=a[k>>0];a[t+1>>0]=a[k+1>>0];a[t+2>>0]=a[k+2>>0];a[t+3>>0]=a[k+3>>0];t=m+40|0;g[k>>2]=U;a[t>>0]=a[k>>0];a[t+1>>0]=a[k+1>>0];a[t+2>>0]=a[k+2>>0];a[t+3>>0]=a[k+3>>0];X=m}else{t=m+32|0;g[k>>2]=0.0;a[t>>0]=a[k>>0];a[t+1>>0]=a[k+1>>0];a[t+2>>0]=a[k+2>>0];a[t+3>>0]=a[k+3>>0];t=m+36|0;g[k>>2]=0.0;a[t>>0]=a[k>>0];a[t+1>>0]=a[k+1>>0];a[t+2>>0]=a[k+2>>0];a[t+3>>0]=a[k+3>>0];t=m+40|0;g[k>>2]=0.0;a[t>>0]=a[k>>0];a[t+1>>0]=a[k+1>>0];a[t+2>>0]=a[k+2>>0];a[t+3>>0]=a[k+3>>0];if(y){Y=m;Z=0.0;_=0.0;$=0.0}else{y=(j|0)==0;t=(l|0)==0;e=m;m=0;while(1){if(y)aa=e;else{f=e;L=0;while(1){if(t)ba=f;else{p=L+m|0;x=0;do{vd(c[R+(p+x<<2)>>2]|0,P,Q,q,r,s);U=+g[q>>2];W=c[b>>2]|0;w=W+32|0;a[k>>0]=a[w>>0];a[k+1>>0]=a[w+1>>0];a[k+2>>0]=a[w+2>>0];a[k+3>>0]=a[w+3>>0];g[k>>2]=U+ +g[k>>2];a[w>>0]=a[k>>0];a[w+1>>0]=a[k+1>>0];a[w+2>>0]=a[k+2>>0];a[w+3>>0]=a[k+3>>0];U=+g[r>>2];w=W+36|0;a[k>>0]=a[w>>0];a[k+1>>0]=a[w+1>>0];a[k+2>>0]=a[w+2>>0];a[k+3>>0]=a[w+3>>0];g[k>>2]=U+ +g[k>>2];a[w>>0]=a[k>>0];a[w+1>>0]=a[k+1>>0];a[w+2>>0]=a[k+2>>0];a[w+3>>0]=a[k+3>>0];U=+g[s>>2];w=W+40|0;a[k>>0]=a[w>>0];a[k+1>>0]=a[w+1>>0];a[k+2>>0]=a[w+2>>0];a[k+3>>0]=a[w+3>>0];g[k>>2]=U+ +g[k>>2];a[w>>0]=a[k>>0];a[w+1>>0]=a[k+1>>0];a[w+2>>0]=a[k+2>>0];a[w+3>>0]=a[k+3>>0];x=x+1|0}while((x|0)!=(l|0));ba=W}L=L+1|0;if((L|0)==(j|0)){aa=ba;break}else f=ba}}m=m+1|0;if((m|0)==(h|0)){da=aa;break}else e=aa}aa=da+32|0;a[k>>0]=a[aa>>0];a[k+1>>0]=a[aa+1>>0];a[k+2>>0]=a[aa+2>>0];a[k+3>>0]=a[aa+3>>0];U=+g[k>>2];aa=da+36|0;a[k>>0]=a[aa>>0];a[k+1>>0]=a[aa+1>>0];a[k+2>>0]=a[aa+2>>0];a[k+3>>0]=a[aa+3>>0];V=+g[k>>2];aa=da+40|0;a[k>>0]=a[aa>>0];a[k+1>>0]=a[aa+1>>0];a[k+2>>0]=a[aa+2>>0];a[k+3>>0]=a[aa+3>>0];Y=da;Z=U;_=V;$=+g[k>>2]}V=1.0/+((ca(ca(j,h)|0,l)|0)>>>0);l=Y+32|0;g[k>>2]=V*Z;a[l>>0]=a[k>>0];a[l+1>>0]=a[k+1>>0];a[l+2>>0]=a[k+2>>0];a[l+3>>0]=a[k+3>>0];l=Y+36|0;g[k>>2]=V*_;a[l>>0]=a[k>>0];a[l+1>>0]=a[k+1>>0];a[l+2>>0]=a[k+2>>0];a[l+3>>0]=a[k+3>>0];l=Y+40|0;g[k>>2]=V*$;a[l>>0]=a[k>>0];a[l+1>>0]=a[k+1>>0];a[l+2>>0]=a[k+2>>0];a[l+3>>0]=a[k+3>>0];X=Y}Y=n+12|0;l=d[Y>>0]|d[Y+1>>0]<<8|d[Y+2>>0]<<16|d[Y+3>>0]<<24;Y=X;X=0;h=1;while(1){do if(!(l&h))ea=Y;else{if(!Y){ea=0;break}if((h|0)==4096|(h|0)==8192|(h|0)==16384){ea=Y;break}j=Y+20|0;da=d[j>>0]|d[j+1>>0]<<8|d[j+2>>0]<<16|d[j+3>>0]<<24|h;a[j>>0]=da;a[j+1>>0]=da>>8;a[j+2>>0]=da>>16;a[j+3>>0]=da>>24;ea=Y}while(0);X=X+1|0;if((X|0)==30){fa=ea;break}else{Y=ea;h=h<<1}}h=n+16|0;ea=d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24;if(!fa){z=1;i=o;return z|0}h=fa+20|0;if(!((d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24)&16384)){h=fa+24|0;Y=(d[h>>0]|d[h+1>>0]<<8)&65535;h=(Y>>>0>ea>>>0?ea:Y+65535|0)&65535;Y=fa+26|0;a[Y>>0]=h;a[Y+1>>0]=h>>8}h=n+20|0;a[k>>0]=a[h>>0];a[k+1>>0]=a[h+1>>0];a[k+2>>0]=a[h+2>>0];a[k+3>>0]=a[h+3>>0];h=fa+48|0;g[k>>2]=+g[k>>2];a[h>>0]=a[k>>0];a[h+1>>0]=a[k+1>>0];a[h+2>>0]=a[k+2>>0];a[h+3>>0]=a[k+3>>0];z=1;i=o;return z|0}$c(13080,7128,0);z=0;i=o;return z|0}function td(b){b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=c[b>>2]|0;if(!e){f=0;return f|0}g=e+57|0;h=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;if((h|0)==-1){$c(13080,7696,0);f=0;return f|0}g=c[b+8>>2]|0;if(!g){$c(13080,7736,0);f=0;return f|0}i=a[e+56>>0]|0;j=e+16|0;k=(d[j>>0]|d[j+1>>0]<<8)&65535;j=e+18|0;l=(d[j>>0]|d[j+1>>0]<<8)&65535;j=e+61|0;a:do if(!(i<<24>>24))m=e+62|0;else{n=d[j>>0]|0;o=e+62|0;p=0;while(1){q=k>>>p;r=l>>>p;s=(r|0)==0?1:r;if((((q|0)==0?1:q)|0)==(n|0)?(s|0)==(d[o>>0]|0|0):0){t=s;u=p;break}p=p+1|0;if(p>>>0>=(i&255)>>>0){m=o;break a}}o=e+52|0;p=d[o>>0]|d[o+1>>0]<<8|d[o+2>>0]<<16|d[o+3>>0]<<24;o=g+(zd(b,0,0,0,u,p)|0)|0;s=c[b>>2]|0;q=(s|0)==0;if((p|0)==(h|0)){if(!q?(p=c[b+16>>2]|0,(p|0)!=0):0)$q(p|0,o|0,c[b+12>>2]|0)|0}else{if(q)v=0;else v=c[b+16>>2]|0;q=s+52|0;p=s+57|0;if(!((ld(o,v,n,t,d[q>>0]|d[q+1>>0]<<8|d[q+2>>0]<<16|d[q+3>>0]<<24,d[p>>0]|d[p+1>>0]<<8|d[p+2>>0]<<16|d[p+3>>0]<<24)|0)<<24>>24)){f=0;return f|0}}f=1;return f|0}while(0);t=ca(l,k)|0;k=d[8384]|d[8385]<<8|d[8386]<<16|d[8387]<<24;l=kp(ca(t,k)|0)|0;t=kp(ca(ca(d[m>>0]|0,d[j>>0]|0)|0,k)|0)|0;k=e+52|0;e=g+(zd(b,0,0,0,0,d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24)|0)|0;k=c[b>>2]|0;g=k+16|0;j=k+18|0;m=k+52|0;if(!((ld(e,l,(d[g>>0]|d[g+1>>0]<<8)&65535,(d[j>>0]|d[j+1>>0]<<8)&65535,d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24,0)|0)<<24>>24)){mp(l);mp(t);f=0;return f|0}m=c[b>>2]|0;j=m+16|0;g=m+18|0;jb(l|0,t|0,(d[j>>0]|d[j+1>>0]<<8)&65535|0,(d[g>>0]|d[g+1>>0]<<8)&65535|0,d[m+61>>0]|0|0,d[m+62>>0]|0|0);m=c[b>>2]|0;if(!m)w=0;else w=c[b+16>>2]|0;b=m+57|0;g=ld(t,w,d[m+61>>0]|0,d[m+62>>0]|0,0,d[b>>0]|d[b+1>>0]<<8|d[b+2>>0]<<16|d[b+3>>0]<<24)|0;mp(l);mp(t);f=g<<24>>24!=0&1;return f|0}function ud(b){b=b|0;var e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,T=0,U=0.0,V=0.0,W=0.0,X=0,Y=0.0,Z=0.0,_=0,$=0.0,aa=0.0,ba=0.0,da=0.0,ea=0.0,fa=0.0,ga=0.0,ha=0.0,ia=0.0,ja=0.0,ka=0.0,la=0.0,ma=0.0,na=0.0;e=i;i=i+64|0;f=e+40|0;h=e+24|0;j=e+12|0;k=e;l=c[b>>2]|0;if(!l){m=0;i=e;return m|0}n=l+20|0;if(!((d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24)&16384)){$c(13080,8096,0);m=0;i=e;return m|0}n=l+26|0;if((d[n>>0]|d[n+1>>0]<<8)<<16>>16==-1){$c(13080,8128,0);m=0;i=e;return m|0}n=b+8|0;if(!(c[n>>2]|0)){$c(13080,8176,0);m=0;i=e;return m|0}o=l+16|0;p=d[o>>0]|d[o+1>>0]<<8;o=p&65535;q=l+18|0;r=d[q>>0]|d[q+1>>0]<<8;q=r&65535;c[f+0>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[f+16>>2]=0;c[f+20>>2]=0;s=ca(q,o)|0;t=l;l=0;while(1){u=c[8224+(l<<2)>>2]|0;v=kp(ca(s,d[8384]|d[8385]<<8|d[8386]<<16|d[8387]<<24)|0)|0;c[f+(u<<2)>>2]=v;w=c[n>>2]|0;x=t+52|0;y=w+(zd(b,0,l,0,0,d[x>>0]|d[x+1>>0]<<8|d[x+2>>0]<<16|d[x+3>>0]<<24)|0)|0;x=(c[b>>2]|0)+52|0;if(!((ld(y,v,o,q,d[x>>0]|d[x+1>>0]<<8|d[x+2>>0]<<16|d[x+3>>0]<<24,0)|0)<<24>>24)){z=10;break}c[7784+(u*52|0)>>2]=v;v=l+1|0;if(v>>>0>=6)break;t=c[b>>2]|0;l=v}if((z|0)==10){l=c[f>>2]|0;if(l)mp(l);l=c[f+4>>2]|0;if(l)mp(l);l=c[f+8>>2]|0;if(l)mp(l);l=c[f+12>>2]|0;if(l)mp(l);l=c[f+16>>2]|0;if(l)mp(l);l=c[f+20>>2]|0;if(l)mp(l);$c(13080,8248,0);m=0;i=e;return m|0}l=kp(ca(d[8384]|d[8385]<<8|d[8386]<<16|d[8387]<<24,s)|0)|0;t=c[f>>2]|0;v=c[b>>2]|0;u=v+16|0;x=d[u>>0]|d[u+1>>0]<<8;u=x&65535;y=v+18|0;w=d[y>>0]|d[y+1>>0]<<8;y=w&65535;A=u>>>1;B=(A|0)==0;if(!B){C=w<<16>>16==0;D=u+-1|0;E=0;do{if(!C){F=D-E|0;G=0;do{H=ca(G,u)|0;I=t+(H+E<<2)|0;J=t+(F+H<<2)|0;H=c[I>>2]|0;c[I>>2]=c[J>>2];c[J>>2]=H;G=G+1|0}while((G|0)!=(y|0))}E=E+1|0}while(E>>>0<A>>>0);E=f+8|0;t=c[E>>2]|0;if(!B){D=w<<16>>16==0;C=u+-1|0;G=0;do{if(!D){F=C-G|0;H=0;do{J=ca(H,u)|0;I=t+(J+G<<2)|0;K=t+(F+J<<2)|0;J=c[I>>2]|0;c[I>>2]=c[K>>2];c[K>>2]=J;H=H+1|0}while((H|0)!=(y|0))}G=G+1|0}while(G>>>0<A>>>0);G=f+12|0;t=c[G>>2]|0;if(B){L=t;M=E;N=G}else{B=w<<16>>16==0;w=u+-1|0;C=0;do{if(!B){D=w-C|0;H=0;do{F=ca(H,u)|0;J=t+(F+C<<2)|0;K=t+(D+F<<2)|0;F=c[J>>2]|0;c[J>>2]=c[K>>2];c[K>>2]=F;H=H+1|0}while((H|0)!=(y|0))}C=C+1|0}while(C>>>0<A>>>0);L=t;M=E;N=G}}else{O=E;z=28}}else{O=f+8|0;z=28}if((z|0)==28){z=f+12|0;L=c[z>>2]|0;M=O;N=z}z=f+16|0;O=c[z>>2]|0;E=x<<16>>16==0;if(!E){x=y>>>1;G=(x|0)==0;t=y+-1|0;A=0;do{if(!G){C=0;do{w=O+((ca(C,u)|0)+A<<2)|0;B=O+((ca(t-C|0,u)|0)+A<<2)|0;H=c[w>>2]|0;c[w>>2]=c[B>>2];c[B>>2]=H;C=C+1|0}while(C>>>0<x>>>0)}A=A+1|0}while((A|0)!=(u|0));A=f+20|0;x=c[A>>2]|0;if(E)P=A;else{E=y>>>1;t=(E|0)==0;O=y+-1|0;y=0;do{if(!t){G=0;do{C=x+((ca(G,u)|0)+y<<2)|0;H=x+((ca(O-G|0,u)|0)+y<<2)|0;B=c[C>>2]|0;c[C>>2]=c[H>>2];c[H>>2]=B;G=G+1|0}while(G>>>0<E>>>0)}y=y+1|0}while((y|0)!=(u|0));P=A}}else P=f+20|0;A=s<<2;u=L+A|0;if((A|0)>0){A=L;L=0;y=0;E=0;while(1){O=(d[A>>0]|0)+E|0;x=(d[A+1>>0]|0)+y|0;t=(d[A+2>>0]|0)+L|0;A=A+4|0;if(A>>>0>=u>>>0){Q=t;R=x;T=O;break}else{L=t;y=x;E=O}}}else{Q=0;R=0;T=0}U=+(((T>>>0)/(s>>>0)|0)>>>0)*.003920999821275473;V=+(((R>>>0)/(s>>>0)|0)>>>0)*.003920999821275473;W=+(((Q>>>0)/(s>>>0)|0)>>>0)*.003920999821275473;if(!(r<<16>>16))X=v;else{v=p<<16>>16==0;Y=+(p&65535);Z=+(r&65535);r=k+4|0;p=k+8|0;s=h+4|0;Q=h+8|0;R=o<<2;T=l;E=0;while(1){if(v)_=T;else{$=+(E>>>0);y=T;L=0;while(1){aa=+(L>>>0);u=0;ba=0.0;da=0.0;ea=0.0;while(1){fa=(aa+ +(Dq()|0)*4.656612873077393e-10)/Y+-.5;ga=($+ +(Dq()|0)*4.656612873077393e-10)/Z+-.5;ha=fa*fa+ga*ga;if(!(ha>=.25)){g[k>>2]=fa;g[r>>2]=ga;g[p>>2]=+S(+(.25-ha));fe(k,2.0);g[h>>2]=0.0;g[s>>2]=0.0;g[Q>>2]=1.0;he(k,h,j);A=ie(j)|0;O=7824+(A*52|0)|0;x=7812+(A*52|0)|0;ha=+ge(O,x);fe(j,ha/+ge(j,x));ee(j,O,h);ha=+ge(h,7788+(A*52|0)|0);O=(ca(~~(Z*+ge(h,7800+(A*52|0)|0))>>>0,o)|0)+(~~(Y*ha)>>>0)|0;x=(c[7784+(A*52|0)>>2]|0)+(O<<2)|0;ia=+(d[x>>0]|0)/255.0;ja=+(d[x+1>>0]|0)/255.0;ka=+(d[x+2>>0]|0)/255.0}else{ia=U;ja=V;ka=W}ha=da+ka;ga=ea+ja;fa=ba+ia;u=u+1|0;if((u|0)==4){la=fa;ma=ha;na=ga;break}else{ba=fa;da=ha;ea=ga}}a[y>>0]=~~(la*255.0*.25);a[y+1>>0]=~~(na*255.0*.25);a[y+2>>0]=~~(ma*255.0*.25);a[y+3>>0]=-1;L=L+1|0;if((L|0)==(o|0))break;else y=y+4|0}_=T+R|0}E=E+1|0;if((E|0)==(q|0))break;else T=_}X=c[b>>2]|0}_=c[n>>2]|0;n=X+52|0;X=_+(zd(b,0,6,0,0,d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24)|0)|0;n=c[b>>2]|0;b=n+16|0;_=n+18|0;T=n+52|0;n=(ld(l,X,(d[b>>0]|d[b+1>>0]<<8)&65535,(d[_>>0]|d[_+1>>0]<<8)&65535,0,d[T>>0]|d[T+1>>0]<<8|d[T+2>>0]<<16|d[T+3>>0]<<24)|0)<<24>>24==0;T=c[f>>2]|0;_=(T|0)==0;if(n){if(!_)mp(T);n=c[f+4>>2]|0;if(n)mp(n);n=c[M>>2]|0;if(n)mp(n);n=c[N>>2]|0;if(n)mp(n);n=c[z>>2]|0;if(n)mp(n);n=c[P>>2]|0;if(n)mp(n);mp(l);m=0;i=e;return m|0}else{if(!_)mp(T);T=c[f+4>>2]|0;if(T)mp(T);T=c[M>>2]|0;if(T)mp(T);T=c[N>>2]|0;if(T)mp(T);T=c[z>>2]|0;if(T)mp(T);T=c[P>>2]|0;if(T)mp(T);mp(l);m=1;i=e;return m|0}return 0}function vd(a,b,c,e,f,h){a=a|0;b=b|0;c=c|0;e=e|0;f=f|0;h=h|0;var j=0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0,w=0.0,x=0.0,y=0.0,z=0,A=0,B=0.0,C=0.0,D=0.0,E=0,F=0.0,G=0.0,H=0.0;j=i;i=i+1024|0;k=j;g[h>>2]=0.0;g[f>>2]=0.0;g[e>>2]=0.0;l=0;do{g[k+(l<<2)>>2]=+T(+(+(l>>>0)/255.0),2.200000047683716);l=l+1|0}while((l|0)!=256);if(!c){m=0.0;n=+(c>>>0);o=1.0/n;p=o*m;g[e>>2]=p;q=+g[f>>2];r=o*q;g[f>>2]=r;s=+g[h>>2];t=o*s;g[h>>2]=t;i=j;return}l=(b|0)==0;u=1.0/+(b>>>0);v=0;do{if(l){w=0.0;x=0.0;y=0.0}else{z=ca(v,b)|0;A=0;B=0.0;C=0.0;D=0.0;while(1){E=A+z<<2;F=B+ +g[k+((d[a+E>>0]|0)<<2)>>2];G=C+ +g[k+((d[a+(E|1)>>0]|0)<<2)>>2];H=D+ +g[k+((d[a+(E|2)>>0]|0)<<2)>>2];A=A+1|0;if((A|0)==(b|0)){w=F;x=G;y=H;break}else{B=F;C=G;D=H}}}g[e>>2]=+g[e>>2]+w*u;g[f>>2]=x*u+ +g[f>>2];g[h>>2]=y*u+ +g[h>>2];v=v+1|0}while((v|0)!=(c|0));m=+g[e>>2];n=+(c>>>0);o=1.0/n;p=o*m;g[e>>2]=p;q=+g[f>>2];r=o*q;g[f>>2]=r;s=+g[h>>2];t=o*s;g[h>>2]=t;i=j;return}function wd(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+32|0;g=f;c[e>>2]=0;ad(g,b,d);d=xd(a,g)|0;c[e>>2]=fd(g)|0;bd(g);i=f;return d|0}function xd(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;if((c[b>>2]|0)!=0?(f=b+8|0,(c[f>>2]|0)!=0):0){if(!((fc[c[(c[e>>2]|0)+4>>2]&127](e)|0)<<24>>24)){g=Ia(4)|0;c[g>>2]=0;Xb(g|0,26904,0)}g=c[b>>2]|0;h=g+12|0;i=$b[c[(c[e>>2]|0)+28>>2]&31](e,g,d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24)|0;h=c[b>>2]|0;g=h+12|0;if((i|0)!=(d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24|0)){g=Ia(4)|0;c[g>>2]=0;Xb(g|0,26904,0)}a:do if(h){g=h+4|0;i=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;if(i>>>0<=7){if((i|0)!=7){j=25;break}i=h+8|0;if((d[i>>0]|d[i+1>>0]<<8|d[i+2>>0]<<16|d[i+3>>0]<<24)>>>0<=2){j=25;break}}i=h+68|0;if(d[i>>0]|d[i+1>>0]<<8|d[i+2>>0]<<16|d[i+3>>0]<<24){i=b+16|0;g=b+12|0;k=b+4|0;l=h;m=0;while(1){n=l+(m<<3)+80|0;o=d[n>>0]|d[n+1>>0]<<8|d[n+2>>0]<<16|d[n+3>>0]<<24;if((o|0)==1){p=$b[c[(c[e>>2]|0)+28>>2]&31](e,c[i>>2]|0,c[g>>2]|0)|0;if((p|0)!=(c[g>>2]|0)){j=16;break}}else if((o|0)==48){o=$b[c[(c[e>>2]|0)+28>>2]&31](e,c[f>>2]|0,c[k>>2]|0)|0;if((o|0)!=(c[k>>2]|0)){j=18;break}}else if(!(a[n+3>>0]&2)){if(($b[c[(c[e>>2]|0)+28>>2]&31](e,l+(m<<3)+336|0,4)|0)!=4){j=21;break}n=c[b>>2]|0;o=n+(m<<3)+340|0;p=n+(m<<3)+336|0;n=$b[c[(c[e>>2]|0)+28>>2]&31](e,d[o>>0]|d[o+1>>0]<<8|d[o+2>>0]<<16|d[o+3>>0]<<24,d[p>>0]|d[p+1>>0]<<8|d[p+2>>0]<<16|d[p+3>>0]<<24)|0;p=(c[b>>2]|0)+(m<<3)+336|0;if((n|0)!=(d[p>>0]|d[p+1>>0]<<8|d[p+2>>0]<<16|d[p+3>>0]<<24|0)){j=23;break}}m=m+1|0;l=c[b>>2]|0;p=l+68|0;if(m>>>0>=(d[p>>0]|d[p+1>>0]<<8|d[p+2>>0]<<16|d[p+3>>0]<<24)>>>0)break a}if((j|0)==16){m=Ia(4)|0;c[m>>2]=0;Xb(m|0,26904,0)}else if((j|0)==18){m=Ia(4)|0;c[m>>2]=0;Xb(m|0,26904,0)}else if((j|0)==21){m=Ia(4)|0;c[m>>2]=0;Xb(m|0,26904,0)}else if((j|0)==23){m=Ia(4)|0;c[m>>2]=0;Xb(m|0,26904,0)}}}else j=25;while(0);if((j|0)==25){j=h+57|0;do if((d[j>>0]|d[j+1>>0]<<8|d[j+2>>0]<<16|d[j+3>>0]<<24|0)!=-1){m=b+12|0;l=$b[c[(c[e>>2]|0)+28>>2]&31](e,c[b+16>>2]|0,c[m>>2]|0)|0;if((l|0)==(c[m>>2]|0)){q=c[b>>2]|0;break}else{m=Ia(4)|0;c[m>>2]=0;Xb(m|0,26904,0)}}else q=h;while(0);h=q+52|0;if((d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24|0)!=-1?(h=b+4|0,b=$b[c[(c[e>>2]|0)+28>>2]&31](e,c[f>>2]|0,c[h>>2]|0)|0,(b|0)!=(c[h>>2]|0)):0){h=Ia(4)|0;c[h>>2]=0;Xb(h|0,26904,0)}}cc[c[(c[e>>2]|0)+8>>2]&127](e);r=1;return r|0}$c(13080,7672,0);r=0;return r|0}function yd(b){b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;e=c[b>>2]|0;if(!e){f=0;return f|0}g=e+4|0;h=d[g>>0]|d[g+1>>0]<<8|d[g+2>>0]<<16|d[g+3>>0]<<24;if(h>>>0<=7)if((h|0)==7?(h=e+8|0,(d[h>>0]|d[h+1>>0]<<8|d[h+2>>0]<<16|d[h+3>>0]<<24)>>>0>2):0)i=5;else j=0;else i=5;if((i|0)==5){i=e+68|0;h=d[i>>0]|d[i+1>>0]<<8|d[i+2>>0]<<16|d[i+3>>0]<<24;if(!h)j=0;else{i=0;g=0;while(1){k=e+(i<<3)+80|0;l=d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24;if(!((l|0)==48|(l|0)==1)?(a[k+3>>0]&2)==0:0){k=e+(i<<3)+336|0;m=g+4+(d[k>>0]|d[k+1>>0]<<8|d[k+2>>0]<<16|d[k+3>>0]<<24)|0}else m=g;i=i+1|0;if(i>>>0>=h>>>0){j=m;break}else g=m}}}m=e+12|0;f=(d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24)+j+(c[b+12>>2]|0)+(c[b+4>>2]|0)|0;return f|0}function zd(a,b,e,f,g,h){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;i=c[a>>2]|0;j=i+24|0;k=(d[j>>0]|d[j+1>>0]<<8)&65535;j=i+20|0;if((d[j>>0]|d[j+1>>0]<<8|d[j+2>>0]<<16|d[j+3>>0]<<24)&16384){j=i+26|0;if((d[j>>0]|d[j+1>>0]<<8)<<16>>16==-1)l=6;else{j=i+8|0;l=(d[j>>0]|d[j+1>>0]<<8|d[j+2>>0]<<16|d[j+3>>0]<<24)>>>0<5?7:6}}else l=1;j=i+63|0;m=(d[j>>0]|d[j+1>>0]<<8)&65535;j=d[i+56>>0]|0;n=k>>>0>b>>>0?b:k+-1|0;b=l>>>0>e>>>0?e:l+-1|0;e=m>>>0>f>>>0?f:m+-1|0;f=j+-1|0;o=j>>>0>g>>>0?g:f;g=i+16|0;j=(d[g>>0]|d[g+1>>0]<<8)&65535;g=i+18|0;p=(d[g>>0]|d[g+1>>0]<<8)&65535;g=i+63|0;i=(d[g>>0]|d[g+1>>0]<<8)&65535;a:do if((f|0)>(o|0)){g=h>>>0<39;q=8384+(h*30|0)|0;r=ca(l,k)|0;if((h|0)==20){s=f;t=0;while(1){u=j>>>s;v=p>>>s;w=i>>>s;x=(u|0)==0?1:u;u=(v|0)==0?1:v;v=(ca(r,ca(ca((w|0)==0?8:w<<3,x>>>0<4&(x|0)!=0?1:(x+3|0)>>>2)|0,u>>>0<4&(u|0)!=0?1:(u+3|0)>>>2)|0)|0)+t|0;s=s+-1|0;if((s|0)<=(o|0)){y=v;break}else t=v}}else if((h|0)==13){t=f;s=0;while(1){v=j>>>t;u=p>>>t;x=i>>>t;w=(v|0)==0?1:v;v=(u|0)==0?1:u;u=(ca(r,ca(ca((x|0)==0?8:x<<3,w>>>0<4&(w|0)!=0?1:(w+3|0)>>>2)|0,v>>>0<4&(v|0)!=0?1:(v+3|0)>>>2)|0)|0)+s|0;t=t+-1|0;if((t|0)<=(o|0)){y=u;break}else s=u}}else{s=f;t=0;while(1){u=j>>>s;v=p>>>s;w=i>>>s;x=(u|0)==0?1:u;u=(v|0)==0?1:v;v=(w|0)==0?1:w;if((h|0)==20|(h|0)==13)z=ca(ca(v<<3,x>>>0<4&(x|0)!=0?1:(x+3|0)>>>2)|0,u>>>0<4&(u|0)!=0?1:(u+3|0)>>>2)|0;else if((h|0)==15|(h|0)==14)z=ca(ca(v<<4,x>>>0<4&(x|0)!=0?1:(x+3|0)>>>2)|0,u>>>0<4&(u|0)!=0?1:(u+3|0)>>>2)|0;else{if(!g)break;w=ca(ca(u,x)|0,v)|0;z=ca(w,d[q>>0]|d[q+1>>0]<<8|d[q+2>>0]<<16|d[q+3>>0]<<24)|0}w=(ca(r,z)|0)+t|0;s=s+-1|0;if((s|0)<=(o|0)){y=w;break a}else t=w}Oa(8296,7552,2878,8352)}}else y=0;while(0);z=j>>>o;j=p>>>o;p=i>>>o;i=(z|0)==0?1:z;z=(j|0)==0?1:j;j=(p|0)==0?1:p;do if((h|0)==20|(h|0)==13)A=ca(ca(j<<3,i>>>0<4&(i|0)!=0?1:(i+3|0)>>>2)|0,z>>>0<4&(z|0)!=0?1:(z+3|0)>>>2)|0;else if(!((h|0)==15|(h|0)==14))if(h>>>0<39){p=ca(ca(z,i)|0,j)|0;f=8384+(h*30|0)|0;A=ca(p,d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24)|0;break}else Oa(8296,7552,2878,8352);else A=ca(ca(j<<4,i>>>0<4&(i|0)!=0?1:(i+3|0)>>>2)|0,z>>>0<4&(z|0)!=0?1:(z+3|0)>>>2)|0;while(0);j=1>>>o;o=(j|0)==0?1:j;do if((h|0)==20|(h|0)==13)B=ca(ca(o<<3,i>>>0<4&(i|0)!=0?1:(i+3|0)>>>2)|0,z>>>0<4&(z|0)!=0?1:(z+3|0)>>>2)|0;else if(!((h|0)==15|(h|0)==14))if(h>>>0<39){j=8384+(h*30|0)|0;B=ca(ca(ca(i,o)|0,z)|0,d[j>>0]|d[j+1>>0]<<8|d[j+2>>0]<<16|d[j+3>>0]<<24)|0;break}else Oa(8296,7552,2878,8352);else B=ca(ca(o<<4,i>>>0<4&(i|0)!=0?1:(i+3|0)>>>2)|0,z>>>0<4&(z|0)!=0?1:(z+3|0)>>>2)|0;while(0);z=(ca(B,e)|0)+y+(ca(ca((ca(n,l)|0)+b|0,m)|0,A)|0)|0;if(z>>>0<(c[a+4>>2]|0)>>>0)return z|0;else Oa(9624,7552,3074,9664);return 0}function Ad(d,f,g,h){d=d|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;j=i;i=i+16|0;k=j;l=g<<2;if(!h){i=j;return 1}m=(g|0)==0;n=k+1|0;o=k+2|0;p=k+3|0;q=k+4|0;r=k+5|0;s=k+6|0;t=k+7|0;u=k+10|0;v=k+9|0;w=k+8|0;x=k+11|0;y=k+14|0;z=k+13|0;A=k+12|0;B=k+15|0;C=d;d=0;while(1){if(m)D=C;else{E=C;F=0;while(1){G=E+2|0;H=c[E+4>>2]|0;I=E+8|0;J=(e[E>>1]|0)>>>11&65535;K=J<<3;a[k>>0]=K;L=((e[E>>1]|0)>>>5&65535)<<2;a[n>>0]=L;M=b[E>>1]|0;N=(M&65535)<<3;a[o>>0]=N;a[p>>0]=-1;O=(e[G>>1]|0)>>>11&65535;P=O<<3;a[q>>0]=P;Q=((e[G>>1]|0)>>>5&65535)<<2;a[r>>0]=Q;R=b[G>>1]|0;G=(R&65535)<<3;a[s>>0]=G;a[t>>0]=-1;S=N&248;if((M&65535)>(R&65535)){R=G&248;a[u>>0]=(((S<<1|1)+R|0)>>>0)/3|0;M=L&252;N=Q&252;a[v>>0]=(((N|1)+(M<<1)|0)>>>0)/3|0;a[w>>0]=(((P|1)+(J<<4)|0)>>>0)/3|0;a[x>>0]=-1;a[y>>0]=(((S|1)+(R<<1)|0)>>>0)/3|0;a[z>>0]=(((M|1)+(N<<1)|0)>>>0)/3|0;T=-1;U=(K|1)+(O<<4)|0}else{N=G&248;a[u>>0]=(N+S|0)>>>1;G=L&252;L=Q&252;a[v>>0]=(L+G|0)>>>1;a[w>>0]=(P+K|0)>>>1;a[x>>0]=-1;a[y>>0]=(((S|1)+(N<<1)|0)>>>0)/3|0;a[z>>0]=(((G|1)+(L<<1)|0)>>>0)/3|0;T=0;U=(K|1)+(O<<4)|0}a[A>>0]=(U>>>0)/3|0;a[B>>0]=T;O=0;K=0;while(1){L=O+d|0;G=L>>>0<h>>>0;N=ca(l,L)|0;L=K<<1;S=(3<<L&H)>>>L;if(G){L=(F<<2)+N|0;a[f+L>>0]=a[k+(S<<2)>>0]|0;a[f+(L|1)>>0]=a[k+(S<<2)+1>>0]|0;a[f+(L|2)>>0]=a[k+(S<<2)+2>>0]|0;a[f+(L|3)>>0]=a[k+(S<<2)+3>>0]|0}S=K|1;L=S<<1;P=(3<<L&H)>>>L;L=F|1;if(!(L>>>0>=g>>>0|G^1)){Q=(L<<2)+N|0;a[f+Q>>0]=a[k+(P<<2)>>0]|0;a[f+(Q|1)>>0]=a[k+(P<<2)+1>>0]|0;a[f+(Q|2)>>0]=a[k+(P<<2)+2>>0]|0;a[f+(Q|3)>>0]=a[k+(P<<2)+3>>0]|0}P=(S<<1)+2|0;S=(3<<P&H)>>>P;P=F|2;if(!(P>>>0>=g>>>0|G^1)){Q=(P<<2)+N|0;a[f+Q>>0]=a[k+(S<<2)>>0]|0;a[f+(Q|1)>>0]=a[k+(S<<2)+1>>0]|0;a[f+(Q|2)>>0]=a[k+(S<<2)+2>>0]|0;a[f+(Q|3)>>0]=a[k+(S<<2)+3>>0]|0}S=K<<1|6;Q=(3<<S&H)>>>S;S=F|3;if(!(S>>>0>=g>>>0|G^1)){G=(S<<2)+N|0;a[f+G>>0]=a[k+(Q<<2)>>0]|0;a[f+(G|1)>>0]=a[k+(Q<<2)+1>>0]|0;a[f+(G|2)>>0]=a[k+(Q<<2)+2>>0]|0;a[f+(G|3)>>0]=a[k+(Q<<2)+3>>0]|0}O=O+1|0;if((O|0)==4)break;else K=K+4|0}F=F+4|0;if(F>>>0>=g>>>0){D=I;break}else E=I}}d=d+4|0;if(d>>>0>=h>>>0)break;else C=D}i=j;return 1}function Bd(d,f,g,h){d=d|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;j=i;i=i+16|0;k=j;l=g<<2;if(!h){i=j;return 1}m=(g|0)==0;n=k+1|0;o=k+2|0;p=k+3|0;q=k+4|0;r=k+5|0;s=k+6|0;t=k+7|0;u=k+10|0;v=k+9|0;w=k+8|0;x=k+11|0;y=k+14|0;z=k+13|0;A=k+12|0;B=k+15|0;C=d;d=0;while(1){if(m)D=C;else{E=C;F=0;while(1){G=E+8|0;H=E+10|0;I=c[E+12>>2]|0;J=(e[G>>1]|0)>>>11&65535;K=J<<3;a[k>>0]=K;L=((e[G>>1]|0)>>>5&65535)<<2;a[n>>0]=L;M=(e[G>>1]|0)<<3;a[o>>0]=M;a[p>>0]=-1;G=(e[H>>1]|0)>>>11&65535;N=G<<3;a[q>>0]=N;O=((e[H>>1]|0)>>>5&65535)<<2;a[r>>0]=O;P=(e[H>>1]|0)<<3;a[s>>0]=P;a[t>>0]=-1;H=M&248;M=P&248;a[u>>0]=(((M|1)+(H<<1)|0)>>>0)/3|0;P=L&252;L=O&252;a[v>>0]=(((L|1)+(P<<1)|0)>>>0)/3|0;a[w>>0]=(((N|1)+(J<<4)|0)>>>0)/3|0;a[x>>0]=-1;a[y>>0]=(((H|1)+(M<<1)|0)>>>0)/3|0;a[z>>0]=(((P|1)+(L<<1)|0)>>>0)/3|0;a[A>>0]=(((K|1)+(G<<4)|0)>>>0)/3|0;a[B>>0]=-1;G=0;K=0;while(1){L=G+d|0;P=L>>>0<h>>>0;M=ca(L,l)|0;L=K<<1;H=(3<<L&I)>>>L;if(P){L=(F<<2)+M|0;a[f+L>>0]=a[k+(H<<2)>>0]|0;a[f+(L|1)>>0]=a[k+(H<<2)+1>>0]|0;a[f+(L|2)>>0]=a[k+(H<<2)+2>>0]|0}H=K|1;L=H<<1;J=(3<<L&I)>>>L;L=F|1;N=L>>>0<g>>>0;if(N&P){O=(L<<2)+M|0;a[f+O>>0]=a[k+(J<<2)>>0]|0;a[f+(O|1)>>0]=a[k+(J<<2)+1>>0]|0;a[f+(O|2)>>0]=a[k+(J<<2)+2>>0]|0}J=(H<<1)+2|0;H=(3<<J&I)>>>J;J=F|2;O=J>>>0<g>>>0;if(O&P){Q=(J<<2)+M|0;a[f+Q>>0]=a[k+(H<<2)>>0]|0;a[f+(Q|1)>>0]=a[k+(H<<2)+1>>0]|0;a[f+(Q|2)>>0]=a[k+(H<<2)+2>>0]|0}H=K<<1|6;Q=(3<<H&I)>>>H;H=F|3;R=H>>>0<g>>>0;if(R&P){P=(H<<2)+M|0;a[f+P>>0]=a[k+(Q<<2)>>0]|0;a[f+(P|1)>>0]=a[k+(Q<<2)+1>>0]|0;a[f+(P|2)>>0]=a[k+(Q<<2)+2>>0]|0}G=G+1|0;if((G|0)==4){S=L;T=N;U=J;V=O;W=H;X=R;break}else K=K+4|0}K=0;do{G=b[E+(K<<1)>>1]|0;I=K+d|0;R=I>>>0<h>>>0;H=ca(I,l)|0;if(R){I=G&65535;a[f+((F<<2)+H|3)>>0]=I&15|I<<4}if(T&R){I=(G&65535)>>>4&65535;a[f+((S<<2)+H|3)>>0]=I&15|I<<4}if(V&R){I=(G&65535)>>>8&65535;a[f+((U<<2)+H|3)>>0]=I&15|I<<4}if(X&R){R=(G&65535)>>>12&65535;a[f+((W<<2)+H|3)>>0]=R|R<<4}K=K+1|0}while((K|0)!=4);K=E+16|0;F=F+4|0;if(F>>>0>=g>>>0){D=K;break}else E=K}}d=d+4|0;if(d>>>0>=h>>>0)break;else C=D}i=j;return 1}function Cd(b,d,f,g){b=b|0;d=d|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,da=0,ea=0,fa=0,ga=0;h=i;i=i+32|0;j=h+8|0;k=h;l=f<<2;if(!g){i=h;return 1}m=(f|0)==0;n=k+1|0;o=j+1|0;p=j+2|0;q=j+3|0;r=j+4|0;s=j+5|0;t=j+6|0;u=j+7|0;v=j+10|0;w=j+9|0;x=j+8|0;y=j+11|0;z=j+14|0;A=j+13|0;B=j+12|0;C=j+15|0;D=k+2|0;E=k+3|0;F=k+4|0;G=k+5|0;H=k+6|0;I=k+7|0;J=b;b=0;while(1){if(m)K=J;else{L=J;M=0;while(1){N=a[L>>0]|0;a[k>>0]=N;O=a[L+1>>0]|0;a[n>>0]=O;P=L+8|0;Q=L+10|0;R=c[L+12>>2]|0;S=(e[P>>1]|0)>>>11&65535;T=S<<3;a[j>>0]=T;U=((e[P>>1]|0)>>>5&65535)<<2;a[o>>0]=U;V=(e[P>>1]|0)<<3;a[p>>0]=V;a[q>>0]=-1;P=(e[Q>>1]|0)>>>11&65535;W=P<<3;a[r>>0]=W;X=((e[Q>>1]|0)>>>5&65535)<<2;a[s>>0]=X;Y=(e[Q>>1]|0)<<3;a[t>>0]=Y;a[u>>0]=-1;Q=V&248;V=Y&248;a[v>>0]=(((V|1)+(Q<<1)|0)>>>0)/3|0;Y=U&252;U=X&252;a[w>>0]=(((U|1)+(Y<<1)|0)>>>0)/3|0;a[x>>0]=(((W|1)+(S<<4)|0)>>>0)/3|0;a[y>>0]=-1;a[z>>0]=(((Q|1)+(V<<1)|0)>>>0)/3|0;a[A>>0]=(((Y|1)+(U<<1)|0)>>>0)/3|0;a[B>>0]=(((T|1)+(P<<4)|0)>>>0)/3|0;a[C>>0]=-1;P=0;T=0;while(1){U=P+b|0;Y=U>>>0<g>>>0;V=ca(U,l)|0;U=T<<1;Q=(3<<U&R)>>>U;if(Y){U=(M<<2)+V|0;a[d+U>>0]=a[j+(Q<<2)>>0]|0;a[d+(U|1)>>0]=a[j+(Q<<2)+1>>0]|0;a[d+(U|2)>>0]=a[j+(Q<<2)+2>>0]|0}Q=T|1;U=Q<<1;S=(3<<U&R)>>>U;U=M|1;W=U>>>0<f>>>0;if(W&Y){X=(U<<2)+V|0;a[d+X>>0]=a[j+(S<<2)>>0]|0;a[d+(X|1)>>0]=a[j+(S<<2)+1>>0]|0;a[d+(X|2)>>0]=a[j+(S<<2)+2>>0]|0}S=(Q<<1)+2|0;Q=(3<<S&R)>>>S;S=M|2;X=S>>>0<f>>>0;if(X&Y){Z=(S<<2)+V|0;a[d+Z>>0]=a[j+(Q<<2)>>0]|0;a[d+(Z|1)>>0]=a[j+(Q<<2)+1>>0]|0;a[d+(Z|2)>>0]=a[j+(Q<<2)+2>>0]|0}Q=T<<1|6;Z=(3<<Q&R)>>>Q;Q=M|3;_=Q>>>0<f>>>0;if(_&Y){Y=(Q<<2)+V|0;a[d+Y>>0]=a[j+(Z<<2)>>0]|0;a[d+(Y|1)>>0]=a[j+(Z<<2)+1>>0]|0;a[d+(Y|2)>>0]=a[j+(Z<<2)+2>>0]|0}P=P+1|0;if((P|0)==4){$=U;aa=W;ba=S;da=X;ea=Q;fa=_;break}else T=T+4|0}T=L+16|0;P=N&255;R=O&255;if((N&255)>(O&255)){a[D>>0]=((R+3+(P*6|0)|0)>>>0)/7|0;a[E>>0]=(((P*5|0)+3+(R<<1)|0)>>>0)/7|0;a[F>>0]=(((P<<2|3)+(R*3|0)|0)>>>0)/7|0;a[G>>0]=(((P*3|0)+3+(R<<2)|0)>>>0)/7|0;a[H>>0]=(((P<<1)+3+(R*5|0)|0)>>>0)/7|0;ga=(((P+3+(R*6|0)|0)>>>0)/7|0)&255}else{a[D>>0]=((R+2+(P<<2)|0)>>>0)/5|0;a[E>>0]=(((P*3|0)+2+(R<<1)|0)>>>0)/5|0;a[F>>0]=(((P<<1)+2+(R*3|0)|0)>>>0)/5|0;a[G>>0]=((P+2+(R<<2)|0)>>>0)/5|0;a[H>>0]=0;ga=-1}a[I>>0]=ga;R=c[L+2>>2]|0;P=ca(b,l)|0;a[d+((M<<2)+P|3)>>0]=a[k+(R&7)>>0]|0;if(aa)a[d+(($<<2)+P|3)>>0]=a[k+(R>>>3&7)>>0]|0;if(da)a[d+((ba<<2)+P|3)>>0]=a[k+(R>>>6&7)>>0]|0;if(fa)a[d+((ea<<2)+P|3)>>0]=a[k+(R>>>9&7)>>0]|0;P=b|1;_=P>>>0<g>>>0;Q=ca(P,l)|0;if(_)a[d+((M<<2)+Q|3)>>0]=a[k+(R>>>12&7)>>0]|0;if(aa&_)a[d+(($<<2)+Q|3)>>0]=a[k+(R>>>15&7)>>0]|0;if(da&_)a[d+((ba<<2)+Q|3)>>0]=a[k+(R>>>18&7)>>0]|0;if(fa&_)a[d+((ea<<2)+Q|3)>>0]=a[k+(R>>>21&7)>>0]|0;R=c[L+5>>2]|0;Q=b|2;_=Q>>>0<g>>>0;P=ca(Q,l)|0;if(_)a[d+((M<<2)+P|3)>>0]=a[k+(R&7)>>0]|0;if(aa&_)a[d+(($<<2)+P|3)>>0]=a[k+(R>>>3&7)>>0]|0;if(da&_)a[d+((ba<<2)+P|3)>>0]=a[k+(R>>>6&7)>>0]|0;if(fa&_)a[d+((ea<<2)+P|3)>>0]=a[k+(R>>>9&7)>>0]|0;P=b|3;_=P>>>0<g>>>0;Q=ca(P,l)|0;if(_)a[d+((M<<2)+Q|3)>>0]=a[k+(R>>>12&7)>>0]|0;if(aa&_)a[d+(($<<2)+Q|3)>>0]=a[k+(R>>>15&7)>>0]|0;if(da&_)a[d+((ba<<2)+Q|3)>>0]=a[k+(R>>>18&7)>>0]|0;if(fa&_)a[d+((ea<<2)+Q|3)>>0]=a[k+(R>>>21&7)>>0]|0;M=M+4|0;if(M>>>0>=f>>>0){K=T;break}else L=T}}b=b+4|0;if(b>>>0>=g>>>0)break;else J=K}i=h;return 1}function Dd(a,c,d,f){a=a|0;c=c|0;d=d|0;f=f|0;f=~~(+g[3276]*+(e[a>>1]|0)+ +g[3278]*+(e[c>>1]|0)+ +g[3280]*+(e[d>>1]|0))&65535;b[d>>1]=f;b[c>>1]=f;b[a>>1]=f;return}function Ed(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;e=b[a>>1]|0;b[c>>1]=e;b[d>>1]=e;return}function Fd(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;if(b[e>>1]|0){b[e>>1]=-1;return}b[a>>1]=b[6564]|0;b[c>>1]=b[6568]|0;b[d>>1]=b[6572]|0;b[e>>1]=-1;return}function Gd(a,c,d,e){a=a|0;c=c|0;d=d|0;e=e|0;var f=0;if(((b[a>>1]|0)==(b[6564]|0)?(b[c>>1]|0)==(b[6568]|0):0)?(b[d>>1]|0)==(b[6572]|0):0){b[a>>1]=b[6576]|0;b[c>>1]=b[6580]|0;b[d>>1]=b[6584]|0;f=0}else f=-1;b[e>>1]=f;return}function Hd(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return}function Id(a,c,d,f){a=a|0;c=c|0;d=d|0;f=f|0;var h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0;h=+(e[a>>1]|0);i=+(e[d>>1]|0);j=h*.29899999499320984+ +(e[c>>1]|0)*.5870000123977661+i*.11400000005960464;k=(i-j)*.5649999976158142;i=(h-j)*.7129999995231628;h=+g[3294]*j/+g[2432];l=h/(h+1.0)/j;h=+g[3296];m=+g[3298];n=+T(+(h+l*(j+i*1.402999997138977)),+m)*65535.0;o=n<0.0?0.0:n;b[a>>1]=o>65335.0?-201:~~o&65535;o=+T(+(l*(j-k*.3440000116825104-i*.7139999866485596)+h),+m)*65535.0;i=o<0.0?0.0:o;b[c>>1]=i>65335.0?-201:~~i&65535;i=+T(+(l*(j+k*1.7699999809265137)+h),+m)*65535.0;m=i<0.0?0.0:i;b[d>>1]=m>65335.0?-201:~~m&65535;return}function Jd(f,h,j,k,l,m){f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,ba=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0;n=i;i=i+48|0;o=n+38|0;p=n+36|0;q=n+34|0;r=n+32|0;s=n+30|0;t=n+28|0;u=n+26|0;v=n+24|0;w=n+22|0;x=n+20|0;y=n+18|0;z=n+16|0;A=n+14|0;B=n+12|0;C=n+10|0;D=n+8|0;E=n+6|0;F=n+4|0;G=n+2|0;H=n;b[o>>1]=0;b[p>>1]=0;b[q>>1]=0;b[r>>1]=0;b[s>>1]=0;b[t>>1]=0;b[u>>1]=0;b[v>>1]=0;b[w>>1]=0;b[x>>1]=0;b[y>>1]=0;b[z>>1]=0;b[A>>1]=0;b[B>>1]=0;b[C>>1]=0;b[D>>1]=0;_d(l,o,p,q,r,s,t,u,v);_d(m,w,x,y,z,A,B,C,D);if((c[l+52>>2]|0)==24){g[2432]=0.0;I=ca(k,j)|0;J=c[l+4>>2]|0;K=ca(J,I)|0;L=f+K|0;if((K|0)>0){M=0.0;K=f;while(1){N=+aa(+(+(e[K>>1]|0)*.29899999499320984+ +(e[K+2>>1]|0)*.5870000123977661+ +(e[K+4>>1]|0)*.11400000005960464+1.000000013351432e-10))+M;K=K+J|0;if(K>>>0>=L>>>0){O=N;break}else M=N}g[2432]=O;P=O}else P=0.0;g[2432]=+$(+(P/+(I>>>0)));Q=I;R=J}else{Q=ca(k,j)|0;R=c[l+4>>2]|0}j=l+4|0;k=ca(Q,R)|0;Q=f+k|0;if((k|0)<=0){i=n;return 1}k=l+48|0;J=m+44|0;I=m+8|0;L=l+8|0;K=m+12|0;S=l+12|0;T=m+16|0;U=l+16|0;V=m+20|0;W=l+20|0;l=m+4|0;m=f;f=h;h=R;while(1){if(!h)X=0;else{R=0;Y=0;while(1){Z=d[m+Y>>0]<<(Y<<3&2040)|R&255;Y=Y+1|0;if(Y>>>0>=h>>>0){_=Z;break}else R=Z}X=_&255}b[E>>1]=0;b[F>>1]=0;b[G>>1]=0;b[H>>1]=-1;R=b[s>>1]|0;if(!(R<<16>>16))ba=0;else ba=(X&255)>>>(e[o>>1]&255)&(R&65535)&65535;Y=b[t>>1]|0;if(!(Y<<16>>16))da=0;else da=(X&255)>>>(e[p>>1]&255)&(Y&65535)&65535;Z=b[u>>1]|0;if(!(Z<<16>>16))ea=0;else ea=(X&255)>>>(e[q>>1]&255)&(Z&65535)&65535;fa=b[v>>1]|0;if(!(fa<<16>>16))ga=-1;else ga=(X&255)>>>(e[r>>1]&255)&(fa&65535)&65535;ha=c[k>>2]|0;ia=c[J>>2]|0;do if((ha|0)==0&(ia|0)==0){do if(R<<16>>16!=0&(b[A>>1]|0)!=0){ja=c[I>>2]|0;ka=c[L>>2]|0;if(ja>>>0<ka>>>0){if((ka&65535)<<16>>16==0|(ja&65535)<<16>>16==0)la=0;else la=(ba&65535)>>>((ka&65535)-(ja&65535)|0)&65535;b[E>>1]=la;break}if(ja>>>0<=ka>>>0){b[E>>1]=ba;break}ma=ka&65535;na=ja&65535;oa=ka&65535;if(!(ma<<16>>16==0|na<<16>>16==0)){ka=ja&65535;if((na&65535)<(ma&65535)){pa=na;qa=ka;ra=0}else{na=ba&65535;ja=ka;ka=0;while(1){sa=(ka&65535)<<oa|na;ta=ja-oa|0;ua=ta&65535;va=ta&65535;if((ua&65535)<(ma&65535)){wa=sa;xa=ua;ya=va;break}else{ja=va;ka=sa}}pa=xa;qa=ya;ra=wa&65535}if(!(pa<<16>>16))za=ra;else za=((ra&65535)<<qa|(ba&65535)>>>(oa-qa|0))&65535}else za=0;b[E>>1]=za}while(0);do if(Y<<16>>16!=0&(b[B>>1]|0)!=0){ka=c[K>>2]|0;ja=c[S>>2]|0;if(ka>>>0<ja>>>0){if((ja&65535)<<16>>16==0|(ka&65535)<<16>>16==0)Aa=0;else Aa=(da&65535)>>>((ja&65535)-(ka&65535)|0)&65535;b[F>>1]=Aa;break}if(ka>>>0<=ja>>>0){b[F>>1]=da;break}ma=ja&65535;na=ka&65535;sa=ja&65535;if(!(ma<<16>>16==0|na<<16>>16==0)){ja=ka&65535;if((na&65535)<(ma&65535)){Ba=na;Ca=ja;Da=0}else{na=da&65535;ka=ja;ja=0;while(1){va=(ja&65535)<<sa|na;ua=ka-sa|0;ta=ua&65535;Ea=ua&65535;if((ta&65535)<(ma&65535)){Fa=Ea;Ga=va;Ha=ta;break}else{ka=Ea;ja=va}}Ba=Ha;Ca=Fa;Da=Ga&65535}if(!(Ba<<16>>16))Ia=Da;else Ia=((Da&65535)<<Ca|(da&65535)>>>(sa-Ca|0))&65535}else Ia=0;b[F>>1]=Ia}while(0);do if(Z<<16>>16!=0&(b[C>>1]|0)!=0){ja=c[T>>2]|0;ka=c[U>>2]|0;if(ja>>>0<ka>>>0){if((ka&65535)<<16>>16==0|(ja&65535)<<16>>16==0)Ja=0;else Ja=(ea&65535)>>>((ka&65535)-(ja&65535)|0)&65535;b[G>>1]=Ja;break}if(ja>>>0<=ka>>>0){b[G>>1]=ea;break}ma=ka&65535;na=ja&65535;oa=ka&65535;if(!(ma<<16>>16==0|na<<16>>16==0)){ka=ja&65535;if((na&65535)<(ma&65535)){Ka=na;La=ka;Ma=0}else{na=ea&65535;ja=ka;ka=0;while(1){va=(ka&65535)<<oa|na;Ea=ja-oa|0;ta=Ea&65535;ua=Ea&65535;if((ta&65535)<(ma&65535)){Na=va;Oa=ta;Pa=ua;break}else{ja=ua;ka=va}}Ka=Oa;La=Pa;Ma=Na&65535}if(!(Ka<<16>>16))Qa=Ma;else Qa=((Ma&65535)<<La|(ea&65535)>>>(oa-La|0))&65535}else Qa=0;b[G>>1]=Qa}while(0);if(fa<<16>>16!=0&(b[D>>1]|0)!=0){ka=c[V>>2]|0;ja=c[W>>2]|0;if(ka>>>0<ja>>>0){if((ja&65535)<<16>>16==0|(ka&65535)<<16>>16==0)Ra=0;else Ra=(ga&65535)>>>((ja&65535)-(ka&65535)|0)&65535;b[H>>1]=Ra;break}if(ka>>>0<=ja>>>0){b[H>>1]=ga;break}ma=ja&65535;na=ka&65535;sa=ja&65535;if(!(ma<<16>>16==0|na<<16>>16==0)){ja=ka&65535;if((na&65535)<(ma&65535)){Sa=na;Ta=ja;Ua=0}else{na=ga&65535;ka=ja;ja=0;while(1){va=(ja&65535)<<sa|na;ua=ka-sa|0;ta=ua&65535;Ea=ua&65535;if((ta&65535)<(ma&65535)){Va=va;Wa=ta;Xa=Ea;break}else{ka=Ea;ja=va}}Sa=Wa;Ta=Xa;Ua=Va&65535}if(!(Sa<<16>>16))Ya=Ua;else Ya=((Ua&65535)<<Ta|(ga&65535)>>>(sa-Ta|0))&65535}else Ya=0;b[H>>1]=Ya}}else $d(ha,ia,ba,da,ea,ga,c[L>>2]&65535,c[S>>2]&65535,c[U>>2]&65535,c[W>>2]&65535,E,F,G,H,c[I>>2]&65535,c[K>>2]&65535,c[T>>2]&65535,c[V>>2]&65535);while(0);if(!(c[l>>2]|0))Za=0;else{ia=((b[B>>1]&b[F>>1]&255)<<(e[x>>1]&255)|(b[A>>1]&b[E>>1]&255)<<(e[w>>1]&255)|(b[C>>1]&b[G>>1]&255)<<(e[y>>1]&255)|(b[D>>1]&b[H>>1]&255)<<(e[z>>1]&255))&255;ha=0;do{a[f+ha>>0]=ia>>>(ha<<3&2040);ha=ha+1|0;fa=c[l>>2]|0}while(ha>>>0<fa>>>0);Za=fa}h=c[j>>2]|0;m=m+h|0;if(m>>>0>=Q>>>0)break;else f=f+Za|0}i=n;return 1}function Kd(f,h,j,k,l,m){f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,ba=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0;n=i;i=i+48|0;o=n+38|0;p=n+36|0;q=n+34|0;r=n+32|0;s=n+30|0;t=n+28|0;u=n+26|0;v=n+24|0;w=n+22|0;x=n+20|0;y=n+18|0;z=n+16|0;A=n+14|0;B=n+12|0;C=n+10|0;D=n+8|0;E=n+6|0;F=n+4|0;G=n+2|0;H=n;b[o>>1]=0;b[p>>1]=0;b[q>>1]=0;b[r>>1]=0;b[s>>1]=0;b[t>>1]=0;b[u>>1]=0;b[v>>1]=0;b[w>>1]=0;b[x>>1]=0;b[y>>1]=0;b[z>>1]=0;b[A>>1]=0;b[B>>1]=0;b[C>>1]=0;b[D>>1]=0;_d(l,o,p,q,r,s,t,u,v);_d(m,w,x,y,z,A,B,C,D);if((c[l+52>>2]|0)==24){g[2432]=0.0;I=ca(k,j)|0;J=c[l+4>>2]|0;K=ca(J,I)|0;L=f+K|0;if((K|0)>0){M=0.0;K=f;while(1){N=+aa(+(+(e[K>>1]|0)*.29899999499320984+ +(e[K+2>>1]|0)*.5870000123977661+ +(e[K+4>>1]|0)*.11400000005960464+1.000000013351432e-10))+M;K=K+J|0;if(K>>>0>=L>>>0){O=N;break}else M=N}g[2432]=O;P=O}else P=0.0;g[2432]=+$(+(P/+(I>>>0)));Q=I;R=J}else{Q=ca(k,j)|0;R=c[l+4>>2]|0}j=l+4|0;k=ca(Q,R)|0;Q=f+k|0;if((k|0)<=0){i=n;return 1}k=l+48|0;J=m+44|0;I=m+8|0;L=l+8|0;K=m+12|0;S=l+12|0;T=m+16|0;U=l+16|0;V=m+20|0;W=l+20|0;l=m+4|0;m=f;f=h;h=R;while(1){if(!h)X=0;else{R=0;Y=0;while(1){Z=d[m+Y>>0]<<(Y<<3&2040)|R&255;Y=Y+1|0;if(Y>>>0>=h>>>0){_=Z;break}else R=Z}X=_&255}b[E>>1]=0;b[F>>1]=0;b[G>>1]=0;b[H>>1]=-1;R=b[s>>1]|0;if(!(R<<16>>16))ba=0;else ba=(X&255)>>>(e[o>>1]&255)&(R&65535)&65535;Y=b[t>>1]|0;if(!(Y<<16>>16))da=0;else da=(X&255)>>>(e[p>>1]&255)&(Y&65535)&65535;Z=b[u>>1]|0;if(!(Z<<16>>16))ea=0;else ea=(X&255)>>>(e[q>>1]&255)&(Z&65535)&65535;fa=b[v>>1]|0;if(!(fa<<16>>16))ga=-1;else ga=(X&255)>>>(e[r>>1]&255)&(fa&65535)&65535;ha=c[k>>2]|0;ia=c[J>>2]|0;do if((ha|0)==0&(ia|0)==0){do if(R<<16>>16!=0&(b[A>>1]|0)!=0){ja=c[I>>2]|0;ka=c[L>>2]|0;if(ja>>>0<ka>>>0){if((ka&65535)<<16>>16==0|(ja&65535)<<16>>16==0)la=0;else la=(ba&65535)>>>((ka&65535)-(ja&65535)|0)&65535;b[E>>1]=la;break}if(ja>>>0<=ka>>>0){b[E>>1]=ba;break}ma=ka&65535;na=ja&65535;oa=ka&65535;if(!(ma<<16>>16==0|na<<16>>16==0)){ka=ja&65535;if((na&65535)<(ma&65535)){pa=na;qa=ka;ra=0}else{na=ba&65535;ja=ka;ka=0;while(1){sa=(ka&65535)<<oa|na;ta=ja-oa|0;ua=ta&65535;va=ta&65535;if((ua&65535)<(ma&65535)){wa=sa;xa=ua;ya=va;break}else{ja=va;ka=sa}}pa=xa;qa=ya;ra=wa&65535}if(!(pa<<16>>16))za=ra;else za=((ra&65535)<<qa|(ba&65535)>>>(oa-qa|0))&65535}else za=0;b[E>>1]=za}while(0);do if(Y<<16>>16!=0&(b[B>>1]|0)!=0){ka=c[K>>2]|0;ja=c[S>>2]|0;if(ka>>>0<ja>>>0){if((ja&65535)<<16>>16==0|(ka&65535)<<16>>16==0)Aa=0;else Aa=(da&65535)>>>((ja&65535)-(ka&65535)|0)&65535;b[F>>1]=Aa;break}if(ka>>>0<=ja>>>0){b[F>>1]=da;break}ma=ja&65535;na=ka&65535;sa=ja&65535;if(!(ma<<16>>16==0|na<<16>>16==0)){ja=ka&65535;if((na&65535)<(ma&65535)){Ba=na;Ca=ja;Da=0}else{na=da&65535;ka=ja;ja=0;while(1){va=(ja&65535)<<sa|na;ua=ka-sa|0;ta=ua&65535;Ea=ua&65535;if((ta&65535)<(ma&65535)){Fa=Ea;Ga=va;Ha=ta;break}else{ka=Ea;ja=va}}Ba=Ha;Ca=Fa;Da=Ga&65535}if(!(Ba<<16>>16))Ia=Da;else Ia=((Da&65535)<<Ca|(da&65535)>>>(sa-Ca|0))&65535}else Ia=0;b[F>>1]=Ia}while(0);do if(Z<<16>>16!=0&(b[C>>1]|0)!=0){ja=c[T>>2]|0;ka=c[U>>2]|0;if(ja>>>0<ka>>>0){if((ka&65535)<<16>>16==0|(ja&65535)<<16>>16==0)Ja=0;else Ja=(ea&65535)>>>((ka&65535)-(ja&65535)|0)&65535;b[G>>1]=Ja;break}if(ja>>>0<=ka>>>0){b[G>>1]=ea;break}ma=ka&65535;na=ja&65535;oa=ka&65535;if(!(ma<<16>>16==0|na<<16>>16==0)){ka=ja&65535;if((na&65535)<(ma&65535)){Ka=na;La=ka;Ma=0}else{na=ea&65535;ja=ka;ka=0;while(1){va=(ka&65535)<<oa|na;Ea=ja-oa|0;ta=Ea&65535;ua=Ea&65535;if((ta&65535)<(ma&65535)){Na=va;Oa=ta;Pa=ua;break}else{ja=ua;ka=va}}Ka=Oa;La=Pa;Ma=Na&65535}if(!(Ka<<16>>16))Qa=Ma;else Qa=((Ma&65535)<<La|(ea&65535)>>>(oa-La|0))&65535}else Qa=0;b[G>>1]=Qa}while(0);if(fa<<16>>16!=0&(b[D>>1]|0)!=0){ka=c[V>>2]|0;ja=c[W>>2]|0;if(ka>>>0<ja>>>0){if((ja&65535)<<16>>16==0|(ka&65535)<<16>>16==0)Ra=0;else Ra=(ga&65535)>>>((ja&65535)-(ka&65535)|0)&65535;b[H>>1]=Ra;break}if(ka>>>0<=ja>>>0){b[H>>1]=ga;break}ma=ja&65535;na=ka&65535;sa=ja&65535;if(!(ma<<16>>16==0|na<<16>>16==0)){ja=ka&65535;if((na&65535)<(ma&65535)){Sa=na;Ta=ja;Ua=0}else{na=ga&65535;ka=ja;ja=0;while(1){va=(ja&65535)<<sa|na;ua=ka-sa|0;ta=ua&65535;Ea=ua&65535;if((ta&65535)<(ma&65535)){Va=va;Wa=ta;Xa=Ea;break}else{ka=Ea;ja=va}}Sa=Wa;Ta=Xa;Ua=Va&65535}if(!(Sa<<16>>16))Ya=Ua;else Ya=((Ua&65535)<<Ta|(ga&65535)>>>(sa-Ta|0))&65535}else Ya=0;b[H>>1]=Ya}}else $d(ha,ia,ba,da,ea,ga,c[L>>2]&65535,c[S>>2]&65535,c[U>>2]&65535,c[W>>2]&65535,E,F,G,H,c[I>>2]&65535,c[K>>2]&65535,c[T>>2]&65535,c[V>>2]&65535);while(0);if(!(c[l>>2]|0))Za=0;else{ia=((b[B>>1]&b[F>>1]&65535)<<e[x>>1]|(b[A>>1]&b[E>>1]&65535)<<e[w>>1]|(b[C>>1]&b[G>>1]&65535)<<e[y>>1]|(b[D>>1]&b[H>>1]&65535)<<e[z>>1])&65535;ha=0;do{a[f+ha>>0]=ia>>>(ha<<3&2040);ha=ha+1|0;fa=c[l>>2]|0}while(ha>>>0<fa>>>0);Za=fa}h=c[j>>2]|0;m=m+h|0;if(m>>>0>=Q>>>0)break;else f=f+Za|0}i=n;return 1}function Ld(f,h,j,k,l,m){f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,ba=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0;n=i;i=i+48|0;o=n+38|0;p=n+36|0;q=n+34|0;r=n+32|0;s=n+30|0;t=n+28|0;u=n+26|0;v=n+24|0;w=n+22|0;x=n+20|0;y=n+18|0;z=n+16|0;A=n+14|0;B=n+12|0;C=n+10|0;D=n+8|0;E=n+6|0;F=n+4|0;G=n+2|0;H=n;b[o>>1]=0;b[p>>1]=0;b[q>>1]=0;b[r>>1]=0;b[s>>1]=0;b[t>>1]=0;b[u>>1]=0;b[v>>1]=0;b[w>>1]=0;b[x>>1]=0;b[y>>1]=0;b[z>>1]=0;b[A>>1]=0;b[B>>1]=0;b[C>>1]=0;b[D>>1]=0;_d(l,o,p,q,r,s,t,u,v);_d(m,w,x,y,z,A,B,C,D);if((c[l+52>>2]|0)==24){g[2432]=0.0;I=ca(k,j)|0;J=c[l+4>>2]|0;K=ca(J,I)|0;L=f+K|0;if((K|0)>0){M=0.0;K=f;while(1){N=+aa(+(+(e[K>>1]|0)*.29899999499320984+ +(e[K+2>>1]|0)*.5870000123977661+ +(e[K+4>>1]|0)*.11400000005960464+1.000000013351432e-10))+M;K=K+J|0;if(K>>>0>=L>>>0){O=N;break}else M=N}g[2432]=O;P=O}else P=0.0;g[2432]=+$(+(P/+(I>>>0)));Q=I;R=J}else{Q=ca(k,j)|0;R=c[l+4>>2]|0}j=l+4|0;k=ca(Q,R)|0;Q=f+k|0;if((k|0)<=0){i=n;return 1}k=l+48|0;J=m+44|0;I=m+8|0;L=l+8|0;K=m+12|0;S=l+12|0;T=m+16|0;U=l+16|0;V=m+20|0;W=l+20|0;l=m+4|0;m=f;f=h;h=R;while(1){if(!h)X=0;else{R=0;Y=0;while(1){Z=(d[m+Y>>0]|0)<<(Y<<3&2040)|R&255;Y=Y+1|0;if(Y>>>0>=h>>>0){_=Z;break}else R=Z}X=_&255}b[E>>1]=0;b[F>>1]=0;b[G>>1]=0;b[H>>1]=-1;R=b[s>>1]|0;if(!(R<<16>>16))ba=0;else ba=(X&255)>>>((e[o>>1]|0)&255)&(R&65535)&65535;Y=b[t>>1]|0;if(!(Y<<16>>16))da=0;else da=(X&255)>>>((e[p>>1]|0)&255)&(Y&65535)&65535;Z=b[u>>1]|0;if(!(Z<<16>>16))ea=0;else ea=(X&255)>>>((e[q>>1]|0)&255)&(Z&65535)&65535;fa=b[v>>1]|0;if(!(fa<<16>>16))ga=-1;else ga=(X&255)>>>((e[r>>1]|0)&255)&(fa&65535)&65535;ha=c[k>>2]|0;ia=c[J>>2]|0;do if((ha|0)==0&(ia|0)==0){ja=b[A>>1]|0;do if(R<<16>>16!=0&ja<<16>>16!=0){ka=c[I>>2]|0;la=c[L>>2]|0;if(ka>>>0<la>>>0){if((la&65535)<<16>>16==0|(ka&65535)<<16>>16==0)ma=0;else ma=(ba&65535)>>>((la&65535)-(ka&65535)|0)&65535;b[E>>1]=ma;na=ma;break}if(ka>>>0<=la>>>0){b[E>>1]=ba;na=ba;break}oa=la&65535;pa=ka&65535;qa=la&65535;if(!(oa<<16>>16==0|pa<<16>>16==0)){la=ka&65535;if((pa&65535)<(oa&65535)){ra=pa;sa=la;ta=0}else{pa=ba&65535;ka=la;la=0;while(1){ua=(la&65535)<<qa|pa;va=ka-qa|0;wa=va&65535;xa=va&65535;if((wa&65535)<(oa&65535)){ya=ua;za=wa;Aa=xa;break}else{ka=xa;la=ua}}ra=za;sa=Aa;ta=ya&65535}if(!(ra<<16>>16))Ba=ta;else Ba=((ta&65535)<<sa|(ba&65535)>>>(qa-sa|0))&65535}else Ba=0;b[E>>1]=Ba;na=Ba}else na=0;while(0);la=b[B>>1]|0;do if(Y<<16>>16!=0&la<<16>>16!=0){ka=c[K>>2]|0;oa=c[S>>2]|0;if(ka>>>0<oa>>>0){if((oa&65535)<<16>>16==0|(ka&65535)<<16>>16==0)Ca=0;else Ca=(da&65535)>>>((oa&65535)-(ka&65535)|0)&65535;b[F>>1]=Ca;Da=Ca;break}if(ka>>>0<=oa>>>0){b[F>>1]=da;Da=da;break}pa=oa&65535;ua=ka&65535;xa=oa&65535;if(!(pa<<16>>16==0|ua<<16>>16==0)){oa=ka&65535;if((ua&65535)<(pa&65535)){Ea=ua;Fa=oa;Ga=0}else{ua=da&65535;ka=oa;oa=0;while(1){wa=(oa&65535)<<xa|ua;va=ka-xa|0;Ha=va&65535;Ia=va&65535;if((Ha&65535)<(pa&65535)){Ja=wa;Ka=Ha;La=Ia;break}else{ka=Ia;oa=wa}}Ea=Ka;Fa=La;Ga=Ja&65535}if(!(Ea<<16>>16))Ma=Ga;else Ma=((Ga&65535)<<Fa|(da&65535)>>>(xa-Fa|0))&65535}else Ma=0;b[F>>1]=Ma;Da=Ma}else Da=0;while(0);oa=b[C>>1]|0;do if(Z<<16>>16!=0&oa<<16>>16!=0){ka=c[T>>2]|0;pa=c[U>>2]|0;if(ka>>>0<pa>>>0){if((pa&65535)<<16>>16==0|(ka&65535)<<16>>16==0)Na=0;else Na=(ea&65535)>>>((pa&65535)-(ka&65535)|0)&65535;b[G>>1]=Na;Oa=Na;break}if(ka>>>0<=pa>>>0){b[G>>1]=ea;Oa=ea;break}ua=pa&65535;qa=ka&65535;wa=pa&65535;if(!(ua<<16>>16==0|qa<<16>>16==0)){pa=ka&65535;if((qa&65535)<(ua&65535)){Pa=qa;Qa=pa;Ra=0}else{qa=ea&65535;ka=pa;pa=0;while(1){Ia=(pa&65535)<<wa|qa;Ha=ka-wa|0;va=Ha&65535;Sa=Ha&65535;if((va&65535)<(ua&65535)){Ta=Ia;Ua=va;Va=Sa;break}else{ka=Sa;pa=Ia}}Pa=Ua;Qa=Va;Ra=Ta&65535}if(!(Pa<<16>>16))Wa=Ra;else Wa=((Ra&65535)<<Qa|(ea&65535)>>>(wa-Qa|0))&65535}else Wa=0;b[G>>1]=Wa;Oa=Wa}else Oa=0;while(0);pa=b[D>>1]|0;if(fa<<16>>16!=0&pa<<16>>16!=0){ka=c[V>>2]|0;ua=c[W>>2]|0;if(ka>>>0<ua>>>0){if((ua&65535)<<16>>16==0|(ka&65535)<<16>>16==0)Xa=0;else Xa=(ga&65535)>>>((ua&65535)-(ka&65535)|0)&65535;b[H>>1]=Xa;Ya=na;Za=ja;_a=Da;$a=la;ab=Oa;bb=oa;cb=Xa;db=pa;break}if(ka>>>0<=ua>>>0){b[H>>1]=ga;Ya=na;Za=ja;_a=Da;$a=la;ab=Oa;bb=oa;cb=ga;db=pa;break}qa=ua&65535;xa=ka&65535;Ia=ua&65535;if(!(qa<<16>>16==0|xa<<16>>16==0)){ua=ka&65535;if((xa&65535)<(qa&65535)){eb=xa;fb=ua;gb=0}else{xa=ga&65535;ka=ua;ua=0;while(1){Sa=(ua&65535)<<Ia|xa;va=ka-Ia|0;Ha=va&65535;hb=va&65535;if((Ha&65535)<(qa&65535)){ib=Sa;jb=Ha;kb=hb;break}else{ka=hb;ua=Sa}}eb=jb;fb=kb;gb=ib&65535}if(!(eb<<16>>16))lb=gb;else lb=((gb&65535)<<fb|(ga&65535)>>>(Ia-fb|0))&65535}else lb=0;b[H>>1]=lb;Ya=na;Za=ja;_a=Da;$a=la;ab=Oa;bb=oa;cb=lb;db=pa}else{Ya=na;Za=ja;_a=Da;$a=la;ab=Oa;bb=oa;cb=-1;db=pa}}else{$d(ha,ia,ba,da,ea,ga,c[L>>2]&65535,c[S>>2]&65535,c[U>>2]&65535,c[W>>2]&65535,E,F,G,H,c[I>>2]&65535,c[K>>2]&65535,c[T>>2]&65535,c[V>>2]&65535);Ya=b[E>>1]|0;Za=b[A>>1]|0;_a=b[F>>1]|0;$a=b[B>>1]|0;ab=b[G>>1]|0;bb=b[C>>1]|0;cb=b[H>>1]|0;db=b[D>>1]|0}while(0);ia=($a&_a&65535)<<(e[x>>1]|0)|(Za&Ya&65535)<<(e[w>>1]|0)|(bb&ab&65535)<<(e[y>>1]|0)|(db&cb&65535)<<(e[z>>1]|0);if(!(c[l>>2]|0))mb=0;else{ha=0;do{a[f+ha>>0]=ia>>>(ha<<3&2040);ha=ha+1|0;fa=c[l>>2]|0}while(ha>>>0<fa>>>0);mb=fa}h=c[j>>2]|0;m=m+h|0;if(m>>>0>=Q>>>0)break;else f=f+mb|0}i=n;return 1}function Md(f,h,j,k,l,m){f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,ba=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0;n=i;i=i+48|0;o=n+38|0;p=n+36|0;q=n+34|0;r=n+32|0;s=n+30|0;t=n+28|0;u=n+26|0;v=n+24|0;w=n+22|0;x=n+20|0;y=n+18|0;z=n+16|0;A=n+14|0;B=n+12|0;C=n+10|0;D=n+8|0;E=n+6|0;F=n+4|0;H=n+2|0;I=n;b[o>>1]=0;b[p>>1]=0;b[q>>1]=0;b[r>>1]=0;b[s>>1]=0;b[t>>1]=0;b[u>>1]=0;b[v>>1]=0;b[w>>1]=0;b[x>>1]=0;b[y>>1]=0;b[z>>1]=0;b[A>>1]=0;b[B>>1]=0;b[C>>1]=0;b[D>>1]=0;_d(l,o,p,q,r,s,t,u,v);_d(m,w,x,y,z,A,B,C,D);if((c[l+52>>2]|0)==24){g[2432]=0.0;J=ca(k,j)|0;K=c[l+4>>2]|0;L=ca(K,J)|0;M=f+L|0;if((L|0)>0){N=0.0;L=f;while(1){O=+aa(+(+(e[L>>1]|0)*.29899999499320984+ +(e[L+2>>1]|0)*.5870000123977661+ +(e[L+4>>1]|0)*.11400000005960464+1.000000013351432e-10))+N;L=L+K|0;if(L>>>0>=M>>>0){P=O;break}else N=O}g[2432]=P;Q=P}else Q=0.0;g[2432]=+$(+(Q/+(J>>>0)));R=J;S=K}else{R=ca(k,j)|0;S=c[l+4>>2]|0}j=l+4|0;k=ca(R,S)|0;R=f+k|0;if((k|0)<=0){i=n;return 1}k=l+48|0;K=m+44|0;J=m+8|0;M=l+8|0;L=m+12|0;T=l+12|0;U=m+16|0;V=l+16|0;W=m+20|0;X=l+20|0;l=m+4|0;m=f;f=h;h=S;while(1){if(!h)Y=0;else{S=0;Z=0;while(1){_=(d[m+Z>>0]|0)<<(Z<<3&2040)|S&255;Z=Z+1|0;if(Z>>>0>=h>>>0){ba=_;break}else S=_}Y=ba&255}b[E>>1]=0;b[F>>1]=0;b[H>>1]=0;b[I>>1]=-1;S=b[s>>1]|0;if(!(S<<16>>16))da=0;else da=(Y&255)>>>((e[o>>1]|0)&255)&(S&65535)&65535;Z=b[t>>1]|0;if(!(Z<<16>>16))ea=0;else ea=(Y&255)>>>((e[p>>1]|0)&255)&(Z&65535)&65535;_=b[u>>1]|0;if(!(_<<16>>16))fa=0;else fa=(Y&255)>>>((e[q>>1]|0)&255)&(_&65535)&65535;ga=b[v>>1]|0;if(!(ga<<16>>16))ha=-1;else ha=(Y&255)>>>((e[r>>1]|0)&255)&(ga&65535)&65535;ia=c[k>>2]|0;ja=c[K>>2]|0;do if((ia|0)==0&(ja|0)==0){ka=b[A>>1]|0;do if(S<<16>>16!=0&ka<<16>>16!=0){la=c[J>>2]|0;ma=c[M>>2]|0;if(la>>>0<ma>>>0){if((ma&65535)<<16>>16==0|(la&65535)<<16>>16==0)na=0;else na=(da&65535)>>>((ma&65535)-(la&65535)|0)&65535;b[E>>1]=na;oa=na;break}if(la>>>0<=ma>>>0){b[E>>1]=da;oa=da;break}pa=ma&65535;qa=la&65535;ra=ma&65535;if(!(pa<<16>>16==0|qa<<16>>16==0)){ma=la&65535;if((qa&65535)<(pa&65535)){sa=qa;ta=ma;ua=0}else{qa=da&65535;la=ma;ma=0;while(1){va=(ma&65535)<<ra|qa;wa=la-ra|0;xa=wa&65535;ya=wa&65535;if((xa&65535)<(pa&65535)){za=va;Aa=xa;Ba=ya;break}else{la=ya;ma=va}}sa=Aa;ta=Ba;ua=za&65535}if(!(sa<<16>>16))Ca=ua;else Ca=((ua&65535)<<ta|(da&65535)>>>(ra-ta|0))&65535}else Ca=0;b[E>>1]=Ca;oa=Ca}else oa=0;while(0);ma=b[B>>1]|0;do if(Z<<16>>16!=0&ma<<16>>16!=0){la=c[L>>2]|0;pa=c[T>>2]|0;if(la>>>0<pa>>>0){if((pa&65535)<<16>>16==0|(la&65535)<<16>>16==0)Da=0;else Da=(ea&65535)>>>((pa&65535)-(la&65535)|0)&65535;b[F>>1]=Da;Ea=Da;break}if(la>>>0<=pa>>>0){b[F>>1]=ea;Ea=ea;break}qa=pa&65535;va=la&65535;ya=pa&65535;if(!(qa<<16>>16==0|va<<16>>16==0)){pa=la&65535;if((va&65535)<(qa&65535)){Fa=va;Ga=pa;Ha=0}else{va=ea&65535;la=pa;pa=0;while(1){xa=(pa&65535)<<ya|va;wa=la-ya|0;Ia=wa&65535;Ja=wa&65535;if((Ia&65535)<(qa&65535)){Ka=xa;La=Ia;Ma=Ja;break}else{la=Ja;pa=xa}}Fa=La;Ga=Ma;Ha=Ka&65535}if(!(Fa<<16>>16))Na=Ha;else Na=((Ha&65535)<<Ga|(ea&65535)>>>(ya-Ga|0))&65535}else Na=0;b[F>>1]=Na;Ea=Na}else Ea=0;while(0);pa=b[C>>1]|0;do if(_<<16>>16!=0&pa<<16>>16!=0){la=c[U>>2]|0;qa=c[V>>2]|0;if(la>>>0<qa>>>0){if((qa&65535)<<16>>16==0|(la&65535)<<16>>16==0)Oa=0;else Oa=(fa&65535)>>>((qa&65535)-(la&65535)|0)&65535;b[H>>1]=Oa;Pa=Oa;break}if(la>>>0<=qa>>>0){b[H>>1]=fa;Pa=fa;break}va=qa&65535;ra=la&65535;xa=qa&65535;if(!(va<<16>>16==0|ra<<16>>16==0)){qa=la&65535;if((ra&65535)<(va&65535)){Qa=ra;Ra=qa;Sa=0}else{ra=fa&65535;la=qa;qa=0;while(1){Ja=(qa&65535)<<xa|ra;Ia=la-xa|0;wa=Ia&65535;Ta=Ia&65535;if((wa&65535)<(va&65535)){Ua=Ja;Va=wa;Wa=Ta;break}else{la=Ta;qa=Ja}}Qa=Va;Ra=Wa;Sa=Ua&65535}if(!(Qa<<16>>16))Xa=Sa;else Xa=((Sa&65535)<<Ra|(fa&65535)>>>(xa-Ra|0))&65535}else Xa=0;b[H>>1]=Xa;Pa=Xa}else Pa=0;while(0);qa=b[D>>1]|0;if(ga<<16>>16!=0&qa<<16>>16!=0){la=c[W>>2]|0;va=c[X>>2]|0;if(la>>>0<va>>>0){if((va&65535)<<16>>16==0|(la&65535)<<16>>16==0)Ya=0;else Ya=(ha&65535)>>>((va&65535)-(la&65535)|0)&65535;b[I>>1]=Ya;Za=oa;_a=ka;$a=Ea;ab=ma;bb=Pa;cb=pa;db=Ya;eb=qa;break}if(la>>>0<=va>>>0){b[I>>1]=ha;Za=oa;_a=ka;$a=Ea;ab=ma;bb=Pa;cb=pa;db=ha;eb=qa;break}ra=va&65535;ya=la&65535;Ja=va&65535;if(!(ra<<16>>16==0|ya<<16>>16==0)){va=la&65535;if((ya&65535)<(ra&65535)){fb=ya;gb=va;hb=0}else{ya=ha&65535;la=va;va=0;while(1){Ta=(va&65535)<<Ja|ya;wa=la-Ja|0;Ia=wa&65535;ib=wa&65535;if((Ia&65535)<(ra&65535)){jb=Ta;kb=Ia;lb=ib;break}else{la=ib;va=Ta}}fb=kb;gb=lb;hb=jb&65535}if(!(fb<<16>>16))mb=hb;else mb=((hb&65535)<<gb|(ha&65535)>>>(Ja-gb|0))&65535}else mb=0;b[I>>1]=mb;Za=oa;_a=ka;$a=Ea;ab=ma;bb=Pa;cb=pa;db=mb;eb=qa}else{Za=oa;_a=ka;$a=Ea;ab=ma;bb=Pa;cb=pa;db=-1;eb=qa}}else{$d(ia,ja,da,ea,fa,ha,c[M>>2]&65535,c[T>>2]&65535,c[V>>2]&65535,c[X>>2]&65535,E,F,H,I,c[J>>2]&65535,c[L>>2]&65535,c[U>>2]&65535,c[W>>2]&65535);Za=b[E>>1]|0;_a=b[A>>1]|0;$a=b[F>>1]|0;ab=b[B>>1]|0;bb=b[H>>1]|0;cb=b[C>>1]|0;db=b[I>>1]|0;eb=b[D>>1]|0}while(0);ja=ar(_a&Za&65535|0,0,e[w>>1]|0|0)|0;ia=G;ga=ar(ab&$a&65535|0,0,e[x>>1]|0|0)|0;_=G|ia;ia=ar(cb&bb&65535|0,0,e[y>>1]|0|0)|0;Z=_|G;_=ar(eb&db&65535|0,0,e[z>>1]|0|0)|0;S=ga|ja|ia|_;_=Z|G;if(!(c[l>>2]|0))nb=0;else{Z=0;do{ia=Zq(S|0,_|0,Z<<3&2040|0)|0;a[f+Z>>0]=ia;Z=Z+1|0;ia=c[l>>2]|0}while(Z>>>0<ia>>>0);nb=ia}h=c[j>>2]|0;m=m+h|0;if(m>>>0>=R>>>0)break;else f=f+nb|0}i=n;return 1}function Nd(f,h,j,k,l,m){f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,ba=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0;n=i;i=i+48|0;o=n+38|0;p=n+36|0;q=n+34|0;r=n+32|0;s=n+30|0;t=n+28|0;u=n+26|0;v=n+24|0;w=n+22|0;x=n+20|0;y=n+18|0;z=n+16|0;A=n+14|0;B=n+12|0;C=n+10|0;D=n+8|0;E=n+6|0;F=n+4|0;G=n+2|0;H=n;b[o>>1]=0;b[p>>1]=0;b[q>>1]=0;b[r>>1]=0;b[s>>1]=0;b[t>>1]=0;b[u>>1]=0;b[v>>1]=0;b[w>>1]=0;b[x>>1]=0;b[y>>1]=0;b[z>>1]=0;b[A>>1]=0;b[B>>1]=0;b[C>>1]=0;b[D>>1]=0;_d(l,o,p,q,r,s,t,u,v);_d(m,w,x,y,z,A,B,C,D);if((c[l+52>>2]|0)==24){g[2432]=0.0;I=ca(k,j)|0;J=c[l+4>>2]|0;K=ca(J,I)|0;L=f+K|0;if((K|0)>0){M=0.0;K=f;while(1){N=+aa(+(+(e[K>>1]|0)*.29899999499320984+ +(e[K+2>>1]|0)*.5870000123977661+ +(e[K+4>>1]|0)*.11400000005960464+1.000000013351432e-10))+M;K=K+J|0;if(K>>>0>=L>>>0){O=N;break}else M=N}g[2432]=O;P=O}else P=0.0;g[2432]=+$(+(P/+(I>>>0)));Q=I;R=J}else{Q=ca(k,j)|0;R=c[l+4>>2]|0}j=l+4|0;k=ca(Q,R)|0;Q=f+k|0;if((k|0)<=0){i=n;return 1}k=l+48|0;J=m+44|0;I=m+8|0;L=l+8|0;K=m+12|0;S=l+12|0;T=m+16|0;U=l+16|0;V=m+20|0;W=l+20|0;l=m+4|0;m=f;f=h;h=R;while(1){if(!h)X=0;else{R=0;Y=0;while(1){Z=d[m+Y>>0]<<(Y<<3&524280)|R&65535;Y=Y+1|0;if(Y>>>0>=h>>>0){_=Z;break}else R=Z}X=_&65535}b[E>>1]=0;b[F>>1]=0;b[G>>1]=0;b[H>>1]=-1;R=b[s>>1]|0;if(!(R<<16>>16))ba=0;else ba=(X&65535)>>>(e[o>>1]|0)&(R&65535)&65535;Y=b[t>>1]|0;if(!(Y<<16>>16))da=0;else da=(X&65535)>>>(e[p>>1]|0)&(Y&65535)&65535;Z=b[u>>1]|0;if(!(Z<<16>>16))ea=0;else ea=(X&65535)>>>(e[q>>1]|0)&(Z&65535)&65535;fa=b[v>>1]|0;if(!(fa<<16>>16))ga=-1;else ga=(X&65535)>>>(e[r>>1]|0)&(fa&65535)&65535;ha=c[k>>2]|0;ia=c[J>>2]|0;do if((ha|0)==0&(ia|0)==0){do if(R<<16>>16!=0&(b[A>>1]|0)!=0){ja=c[I>>2]|0;ka=c[L>>2]|0;if(ja>>>0<ka>>>0){if((ka&65535)<<16>>16==0|(ja&65535)<<16>>16==0)la=0;else la=(ba&65535)>>>((ka&65535)-(ja&65535)|0)&65535;b[E>>1]=la;break}if(ja>>>0<=ka>>>0){b[E>>1]=ba;break}ma=ka&65535;na=ja&65535;oa=ka&65535;if(!(ma<<16>>16==0|na<<16>>16==0)){ka=ja&65535;if((na&65535)<(ma&65535)){pa=na;qa=ka;ra=0}else{na=ba&65535;ja=ka;ka=0;while(1){sa=(ka&65535)<<oa|na;ta=ja-oa|0;ua=ta&65535;va=ta&65535;if((ua&65535)<(ma&65535)){wa=sa;xa=ua;ya=va;break}else{ja=va;ka=sa}}pa=xa;qa=ya;ra=wa&65535}if(!(pa<<16>>16))za=ra;else za=((ra&65535)<<qa|(ba&65535)>>>(oa-qa|0))&65535}else za=0;b[E>>1]=za}while(0);do if(Y<<16>>16!=0&(b[B>>1]|0)!=0){ka=c[K>>2]|0;ja=c[S>>2]|0;if(ka>>>0<ja>>>0){if((ja&65535)<<16>>16==0|(ka&65535)<<16>>16==0)Aa=0;else Aa=(da&65535)>>>((ja&65535)-(ka&65535)|0)&65535;b[F>>1]=Aa;break}if(ka>>>0<=ja>>>0){b[F>>1]=da;break}ma=ja&65535;na=ka&65535;sa=ja&65535;if(!(ma<<16>>16==0|na<<16>>16==0)){ja=ka&65535;if((na&65535)<(ma&65535)){Ba=na;Ca=ja;Da=0}else{na=da&65535;ka=ja;ja=0;while(1){va=(ja&65535)<<sa|na;ua=ka-sa|0;ta=ua&65535;Ea=ua&65535;if((ta&65535)<(ma&65535)){Fa=Ea;Ga=va;Ha=ta;break}else{ka=Ea;ja=va}}Ba=Ha;Ca=Fa;Da=Ga&65535}if(!(Ba<<16>>16))Ia=Da;else Ia=((Da&65535)<<Ca|(da&65535)>>>(sa-Ca|0))&65535}else Ia=0;b[F>>1]=Ia}while(0);do if(Z<<16>>16!=0&(b[C>>1]|0)!=0){ja=c[T>>2]|0;ka=c[U>>2]|0;if(ja>>>0<ka>>>0){if((ka&65535)<<16>>16==0|(ja&65535)<<16>>16==0)Ja=0;else Ja=(ea&65535)>>>((ka&65535)-(ja&65535)|0)&65535;b[G>>1]=Ja;break}if(ja>>>0<=ka>>>0){b[G>>1]=ea;break}ma=ka&65535;na=ja&65535;oa=ka&65535;if(!(ma<<16>>16==0|na<<16>>16==0)){ka=ja&65535;if((na&65535)<(ma&65535)){Ka=na;La=ka;Ma=0}else{na=ea&65535;ja=ka;ka=0;while(1){va=(ka&65535)<<oa|na;Ea=ja-oa|0;ta=Ea&65535;ua=Ea&65535;if((ta&65535)<(ma&65535)){Na=va;Oa=ta;Pa=ua;break}else{ja=ua;ka=va}}Ka=Oa;La=Pa;Ma=Na&65535}if(!(Ka<<16>>16))Qa=Ma;else Qa=((Ma&65535)<<La|(ea&65535)>>>(oa-La|0))&65535}else Qa=0;b[G>>1]=Qa}while(0);if(fa<<16>>16!=0&(b[D>>1]|0)!=0){ka=c[V>>2]|0;ja=c[W>>2]|0;if(ka>>>0<ja>>>0){if((ja&65535)<<16>>16==0|(ka&65535)<<16>>16==0)Ra=0;else Ra=(ga&65535)>>>((ja&65535)-(ka&65535)|0)&65535;b[H>>1]=Ra;break}if(ka>>>0<=ja>>>0){b[H>>1]=ga;break}ma=ja&65535;na=ka&65535;sa=ja&65535;if(!(ma<<16>>16==0|na<<16>>16==0)){ja=ka&65535;if((na&65535)<(ma&65535)){Sa=na;Ta=ja;Ua=0}else{na=ga&65535;ka=ja;ja=0;while(1){va=(ja&65535)<<sa|na;ua=ka-sa|0;ta=ua&65535;Ea=ua&65535;if((ta&65535)<(ma&65535)){Va=va;Wa=ta;Xa=Ea;break}else{ka=Ea;ja=va}}Sa=Wa;Ta=Xa;Ua=Va&65535}if(!(Sa<<16>>16))Ya=Ua;else Ya=((Ua&65535)<<Ta|(ga&65535)>>>(sa-Ta|0))&65535}else Ya=0;b[H>>1]=Ya}}else $d(ha,ia,ba,da,ea,ga,c[L>>2]&65535,c[S>>2]&65535,c[U>>2]&65535,c[W>>2]&65535,E,F,G,H,c[I>>2]&65535,c[K>>2]&65535,c[T>>2]&65535,c[V>>2]&65535);while(0);if(!(c[l>>2]|0))Za=0;else{ia=((b[B>>1]&b[F>>1]&255)<<(e[x>>1]&255)|(b[A>>1]&b[E>>1]&255)<<(e[w>>1]&255)|(b[C>>1]&b[G>>1]&255)<<(e[y>>1]&255)|(b[D>>1]&b[H>>1]&255)<<(e[z>>1]&255))&255;ha=0;do{a[f+ha>>0]=ia>>>(ha<<3&524280);ha=ha+1|0;fa=c[l>>2]|0}while(ha>>>0<fa>>>0);Za=fa}h=c[j>>2]|0;m=m+h|0;if(m>>>0>=Q>>>0)break;else f=f+Za|0}i=n;return 1}function Od(f,h,j,k,l,m){f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,ba=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0;n=i;i=i+48|0;o=n+38|0;p=n+36|0;q=n+34|0;r=n+32|0;s=n+30|0;t=n+28|0;u=n+26|0;v=n+24|0;w=n+22|0;x=n+20|0;y=n+18|0;z=n+16|0;A=n+14|0;B=n+12|0;C=n+10|0;D=n+8|0;E=n+6|0;F=n+4|0;G=n+2|0;H=n;b[o>>1]=0;b[p>>1]=0;b[q>>1]=0;b[r>>1]=0;b[s>>1]=0;b[t>>1]=0;b[u>>1]=0;b[v>>1]=0;b[w>>1]=0;b[x>>1]=0;b[y>>1]=0;b[z>>1]=0;b[A>>1]=0;b[B>>1]=0;b[C>>1]=0;b[D>>1]=0;_d(l,o,p,q,r,s,t,u,v);_d(m,w,x,y,z,A,B,C,D);if((c[l+52>>2]|0)==24){g[2432]=0.0;I=ca(k,j)|0;J=c[l+4>>2]|0;K=ca(J,I)|0;L=f+K|0;if((K|0)>0){M=0.0;K=f;while(1){N=+aa(+(+(e[K>>1]|0)*.29899999499320984+ +(e[K+2>>1]|0)*.5870000123977661+ +(e[K+4>>1]|0)*.11400000005960464+1.000000013351432e-10))+M;K=K+J|0;if(K>>>0>=L>>>0){O=N;break}else M=N}g[2432]=O;P=O}else P=0.0;g[2432]=+$(+(P/+(I>>>0)));Q=I;R=J}else{Q=ca(k,j)|0;R=c[l+4>>2]|0}j=l+4|0;k=ca(Q,R)|0;Q=f+k|0;if((k|0)<=0){i=n;return 1}k=l+48|0;J=m+44|0;I=m+8|0;L=l+8|0;K=m+12|0;S=l+12|0;T=m+16|0;U=l+16|0;V=m+20|0;W=l+20|0;l=m+4|0;m=f;f=h;h=R;while(1){if(!h)X=0;else{R=0;Y=0;while(1){Z=d[m+Y>>0]<<(Y<<3&524280)|R&65535;Y=Y+1|0;if(Y>>>0>=h>>>0){_=Z;break}else R=Z}X=_&65535}b[E>>1]=0;b[F>>1]=0;b[G>>1]=0;b[H>>1]=-1;R=b[s>>1]|0;if(!(R<<16>>16))ba=0;else ba=(X&65535)>>>(e[o>>1]|0)&(R&65535)&65535;Y=b[t>>1]|0;if(!(Y<<16>>16))da=0;else da=(X&65535)>>>(e[p>>1]|0)&(Y&65535)&65535;Z=b[u>>1]|0;if(!(Z<<16>>16))ea=0;else ea=(X&65535)>>>(e[q>>1]|0)&(Z&65535)&65535;fa=b[v>>1]|0;if(!(fa<<16>>16))ga=-1;else ga=(X&65535)>>>(e[r>>1]|0)&(fa&65535)&65535;ha=c[k>>2]|0;ia=c[J>>2]|0;do if((ha|0)==0&(ia|0)==0){do if(R<<16>>16!=0&(b[A>>1]|0)!=0){ja=c[I>>2]|0;ka=c[L>>2]|0;if(ja>>>0<ka>>>0){if((ka&65535)<<16>>16==0|(ja&65535)<<16>>16==0)la=0;else la=(ba&65535)>>>((ka&65535)-(ja&65535)|0)&65535;b[E>>1]=la;break}if(ja>>>0<=ka>>>0){b[E>>1]=ba;break}ma=ka&65535;na=ja&65535;oa=ka&65535;if(!(ma<<16>>16==0|na<<16>>16==0)){ka=ja&65535;if((na&65535)<(ma&65535)){pa=na;qa=ka;ra=0}else{na=ba&65535;ja=ka;ka=0;while(1){sa=(ka&65535)<<oa|na;ta=ja-oa|0;ua=ta&65535;va=ta&65535;if((ua&65535)<(ma&65535)){wa=sa;xa=ua;ya=va;break}else{ja=va;ka=sa}}pa=xa;qa=ya;ra=wa&65535}if(!(pa<<16>>16))za=ra;else za=((ra&65535)<<qa|(ba&65535)>>>(oa-qa|0))&65535}else za=0;b[E>>1]=za}while(0);do if(Y<<16>>16!=0&(b[B>>1]|0)!=0){ka=c[K>>2]|0;ja=c[S>>2]|0;if(ka>>>0<ja>>>0){if((ja&65535)<<16>>16==0|(ka&65535)<<16>>16==0)Aa=0;else Aa=(da&65535)>>>((ja&65535)-(ka&65535)|0)&65535;b[F>>1]=Aa;break}if(ka>>>0<=ja>>>0){b[F>>1]=da;break}ma=ja&65535;na=ka&65535;sa=ja&65535;if(!(ma<<16>>16==0|na<<16>>16==0)){ja=ka&65535;if((na&65535)<(ma&65535)){Ba=na;Ca=ja;Da=0}else{na=da&65535;ka=ja;ja=0;while(1){va=(ja&65535)<<sa|na;ua=ka-sa|0;ta=ua&65535;Ea=ua&65535;if((ta&65535)<(ma&65535)){Fa=Ea;Ga=va;Ha=ta;break}else{ka=Ea;ja=va}}Ba=Ha;Ca=Fa;Da=Ga&65535}if(!(Ba<<16>>16))Ia=Da;else Ia=((Da&65535)<<Ca|(da&65535)>>>(sa-Ca|0))&65535}else Ia=0;b[F>>1]=Ia}while(0);do if(Z<<16>>16!=0&(b[C>>1]|0)!=0){ja=c[T>>2]|0;ka=c[U>>2]|0;if(ja>>>0<ka>>>0){if((ka&65535)<<16>>16==0|(ja&65535)<<16>>16==0)Ja=0;else Ja=(ea&65535)>>>((ka&65535)-(ja&65535)|0)&65535;b[G>>1]=Ja;break}if(ja>>>0<=ka>>>0){b[G>>1]=ea;break}ma=ka&65535;na=ja&65535;oa=ka&65535;if(!(ma<<16>>16==0|na<<16>>16==0)){ka=ja&65535;if((na&65535)<(ma&65535)){Ka=na;La=ka;Ma=0}else{na=ea&65535;ja=ka;ka=0;while(1){va=(ka&65535)<<oa|na;Ea=ja-oa|0;ta=Ea&65535;ua=Ea&65535;if((ta&65535)<(ma&65535)){Na=va;Oa=ta;Pa=ua;break}else{ja=ua;ka=va}}Ka=Oa;La=Pa;Ma=Na&65535}if(!(Ka<<16>>16))Qa=Ma;else Qa=((Ma&65535)<<La|(ea&65535)>>>(oa-La|0))&65535}else Qa=0;b[G>>1]=Qa}while(0);if(fa<<16>>16!=0&(b[D>>1]|0)!=0){ka=c[V>>2]|0;ja=c[W>>2]|0;if(ka>>>0<ja>>>0){if((ja&65535)<<16>>16==0|(ka&65535)<<16>>16==0)Ra=0;else Ra=(ga&65535)>>>((ja&65535)-(ka&65535)|0)&65535;b[H>>1]=Ra;break}if(ka>>>0<=ja>>>0){b[H>>1]=ga;break}ma=ja&65535;na=ka&65535;sa=ja&65535;if(!(ma<<16>>16==0|na<<16>>16==0)){ja=ka&65535;if((na&65535)<(ma&65535)){Sa=na;Ta=ja;Ua=0}else{na=ga&65535;ka=ja;ja=0;while(1){va=(ja&65535)<<sa|na;ua=ka-sa|0;ta=ua&65535;Ea=ua&65535;if((ta&65535)<(ma&65535)){Va=va;Wa=ta;Xa=Ea;break}else{ka=Ea;ja=va}}Sa=Wa;Ta=Xa;Ua=Va&65535}if(!(Sa<<16>>16))Ya=Ua;else Ya=((Ua&65535)<<Ta|(ga&65535)>>>(sa-Ta|0))&65535}else Ya=0;b[H>>1]=Ya}}else $d(ha,ia,ba,da,ea,ga,c[L>>2]&65535,c[S>>2]&65535,c[U>>2]&65535,c[W>>2]&65535,E,F,G,H,c[I>>2]&65535,c[K>>2]&65535,c[T>>2]&65535,c[V>>2]&65535);while(0);if(!(c[l>>2]|0))Za=0;else{ia=((b[B>>1]&b[F>>1]&65535)<<e[x>>1]|(b[A>>1]&b[E>>1]&65535)<<e[w>>1]|(b[C>>1]&b[G>>1]&65535)<<e[y>>1]|(b[D>>1]&b[H>>1]&65535)<<e[z>>1])&65535;ha=0;do{a[f+ha>>0]=ia>>>(ha<<3&524280);ha=ha+1|0;fa=c[l>>2]|0}while(ha>>>0<fa>>>0);Za=fa}h=c[j>>2]|0;m=m+h|0;if(m>>>0>=Q>>>0)break;else f=f+Za|0}i=n;return 1}function Pd(f,h,j,k,l,m){f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,ba=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0;n=i;i=i+48|0;o=n+38|0;p=n+36|0;q=n+34|0;r=n+32|0;s=n+30|0;t=n+28|0;u=n+26|0;v=n+24|0;w=n+22|0;x=n+20|0;y=n+18|0;z=n+16|0;A=n+14|0;B=n+12|0;C=n+10|0;D=n+8|0;E=n+6|0;F=n+4|0;G=n+2|0;H=n;b[o>>1]=0;b[p>>1]=0;b[q>>1]=0;b[r>>1]=0;b[s>>1]=0;b[t>>1]=0;b[u>>1]=0;b[v>>1]=0;b[w>>1]=0;b[x>>1]=0;b[y>>1]=0;b[z>>1]=0;b[A>>1]=0;b[B>>1]=0;b[C>>1]=0;b[D>>1]=0;_d(l,o,p,q,r,s,t,u,v);_d(m,w,x,y,z,A,B,C,D);if((c[l+52>>2]|0)==24){g[2432]=0.0;I=ca(k,j)|0;J=c[l+4>>2]|0;K=ca(J,I)|0;L=f+K|0;if((K|0)>0){M=0.0;K=f;while(1){N=+aa(+(+(e[K>>1]|0)*.29899999499320984+ +(e[K+2>>1]|0)*.5870000123977661+ +(e[K+4>>1]|0)*.11400000005960464+1.000000013351432e-10))+M;K=K+J|0;if(K>>>0>=L>>>0){O=N;break}else M=N}g[2432]=O;P=O}else P=0.0;g[2432]=+$(+(P/+(I>>>0)));Q=I;R=J}else{Q=ca(k,j)|0;R=c[l+4>>2]|0}j=l+4|0;k=ca(Q,R)|0;Q=f+k|0;if((k|0)<=0){i=n;return 1}k=l+48|0;J=m+44|0;I=m+8|0;L=l+8|0;K=m+12|0;S=l+12|0;T=m+16|0;U=l+16|0;V=m+20|0;W=l+20|0;l=m+4|0;m=f;f=h;h=R;while(1){if(!h)X=0;else{R=0;Y=0;while(1){Z=(d[m+Y>>0]|0)<<(Y<<3&524280)|R&65535;Y=Y+1|0;if(Y>>>0>=h>>>0){_=Z;break}else R=Z}X=_&65535}b[E>>1]=0;b[F>>1]=0;b[G>>1]=0;b[H>>1]=-1;R=b[s>>1]|0;if(!(R<<16>>16))ba=0;else ba=(X&65535)>>>(e[o>>1]|0)&(R&65535)&65535;Y=b[t>>1]|0;if(!(Y<<16>>16))da=0;else da=(X&65535)>>>(e[p>>1]|0)&(Y&65535)&65535;Z=b[u>>1]|0;if(!(Z<<16>>16))ea=0;else ea=(X&65535)>>>(e[q>>1]|0)&(Z&65535)&65535;fa=b[v>>1]|0;if(!(fa<<16>>16))ga=-1;else ga=(X&65535)>>>(e[r>>1]|0)&(fa&65535)&65535;ha=c[k>>2]|0;ia=c[J>>2]|0;do if((ha|0)==0&(ia|0)==0){ja=b[A>>1]|0;do if(R<<16>>16!=0&ja<<16>>16!=0){ka=c[I>>2]|0;la=c[L>>2]|0;if(ka>>>0<la>>>0){if((la&65535)<<16>>16==0|(ka&65535)<<16>>16==0)ma=0;else ma=(ba&65535)>>>((la&65535)-(ka&65535)|0)&65535;b[E>>1]=ma;na=ma;break}if(ka>>>0<=la>>>0){b[E>>1]=ba;na=ba;break}oa=la&65535;pa=ka&65535;qa=la&65535;if(!(oa<<16>>16==0|pa<<16>>16==0)){la=ka&65535;if((pa&65535)<(oa&65535)){ra=pa;sa=la;ta=0}else{pa=ba&65535;ka=la;la=0;while(1){ua=(la&65535)<<qa|pa;va=ka-qa|0;wa=va&65535;xa=va&65535;if((wa&65535)<(oa&65535)){ya=ua;za=wa;Aa=xa;break}else{ka=xa;la=ua}}ra=za;sa=Aa;ta=ya&65535}if(!(ra<<16>>16))Ba=ta;else Ba=((ta&65535)<<sa|(ba&65535)>>>(qa-sa|0))&65535}else Ba=0;b[E>>1]=Ba;na=Ba}else na=0;while(0);la=b[B>>1]|0;do if(Y<<16>>16!=0&la<<16>>16!=0){ka=c[K>>2]|0;oa=c[S>>2]|0;if(ka>>>0<oa>>>0){if((oa&65535)<<16>>16==0|(ka&65535)<<16>>16==0)Ca=0;else Ca=(da&65535)>>>((oa&65535)-(ka&65535)|0)&65535;b[F>>1]=Ca;Da=Ca;break}if(ka>>>0<=oa>>>0){b[F>>1]=da;Da=da;break}pa=oa&65535;ua=ka&65535;xa=oa&65535;if(!(pa<<16>>16==0|ua<<16>>16==0)){oa=ka&65535;if((ua&65535)<(pa&65535)){Ea=ua;Fa=oa;Ga=0}else{ua=da&65535;ka=oa;oa=0;while(1){wa=(oa&65535)<<xa|ua;va=ka-xa|0;Ha=va&65535;Ia=va&65535;if((Ha&65535)<(pa&65535)){Ja=wa;Ka=Ha;La=Ia;break}else{ka=Ia;oa=wa}}Ea=Ka;Fa=La;Ga=Ja&65535}if(!(Ea<<16>>16))Ma=Ga;else Ma=((Ga&65535)<<Fa|(da&65535)>>>(xa-Fa|0))&65535}else Ma=0;b[F>>1]=Ma;Da=Ma}else Da=0;while(0);oa=b[C>>1]|0;do if(Z<<16>>16!=0&oa<<16>>16!=0){ka=c[T>>2]|0;pa=c[U>>2]|0;if(ka>>>0<pa>>>0){if((pa&65535)<<16>>16==0|(ka&65535)<<16>>16==0)Na=0;else Na=(ea&65535)>>>((pa&65535)-(ka&65535)|0)&65535;b[G>>1]=Na;Oa=Na;break}if(ka>>>0<=pa>>>0){b[G>>1]=ea;Oa=ea;break}ua=pa&65535;qa=ka&65535;wa=pa&65535;if(!(ua<<16>>16==0|qa<<16>>16==0)){pa=ka&65535;if((qa&65535)<(ua&65535)){Pa=qa;Qa=pa;Ra=0}else{qa=ea&65535;ka=pa;pa=0;while(1){Ia=(pa&65535)<<wa|qa;Ha=ka-wa|0;va=Ha&65535;Sa=Ha&65535;if((va&65535)<(ua&65535)){Ta=Ia;Ua=va;Va=Sa;break}else{ka=Sa;pa=Ia}}Pa=Ua;Qa=Va;Ra=Ta&65535}if(!(Pa<<16>>16))Wa=Ra;else Wa=((Ra&65535)<<Qa|(ea&65535)>>>(wa-Qa|0))&65535}else Wa=0;b[G>>1]=Wa;Oa=Wa}else Oa=0;while(0);pa=b[D>>1]|0;if(fa<<16>>16!=0&pa<<16>>16!=0){ka=c[V>>2]|0;ua=c[W>>2]|0;if(ka>>>0<ua>>>0){if((ua&65535)<<16>>16==0|(ka&65535)<<16>>16==0)Xa=0;else Xa=(ga&65535)>>>((ua&65535)-(ka&65535)|0)&65535;b[H>>1]=Xa;Ya=na;Za=ja;_a=Da;$a=la;ab=Oa;bb=oa;cb=Xa;db=pa;break}if(ka>>>0<=ua>>>0){b[H>>1]=ga;Ya=na;Za=ja;_a=Da;$a=la;ab=Oa;bb=oa;cb=ga;db=pa;break}qa=ua&65535;xa=ka&65535;Ia=ua&65535;if(!(qa<<16>>16==0|xa<<16>>16==0)){ua=ka&65535;if((xa&65535)<(qa&65535)){eb=xa;fb=ua;gb=0}else{xa=ga&65535;ka=ua;ua=0;while(1){Sa=(ua&65535)<<Ia|xa;va=ka-Ia|0;Ha=va&65535;hb=va&65535;if((Ha&65535)<(qa&65535)){ib=Sa;jb=Ha;kb=hb;break}else{ka=hb;ua=Sa}}eb=jb;fb=kb;gb=ib&65535}if(!(eb<<16>>16))lb=gb;else lb=((gb&65535)<<fb|(ga&65535)>>>(Ia-fb|0))&65535}else lb=0;b[H>>1]=lb;Ya=na;Za=ja;_a=Da;$a=la;ab=Oa;bb=oa;cb=lb;db=pa}else{Ya=na;Za=ja;_a=Da;$a=la;ab=Oa;bb=oa;cb=-1;db=pa}}else{$d(ha,ia,ba,da,ea,ga,c[L>>2]&65535,c[S>>2]&65535,c[U>>2]&65535,c[W>>2]&65535,E,F,G,H,c[I>>2]&65535,c[K>>2]&65535,c[T>>2]&65535,c[V>>2]&65535);Ya=b[E>>1]|0;Za=b[A>>1]|0;_a=b[F>>1]|0;$a=b[B>>1]|0;ab=b[G>>1]|0;bb=b[C>>1]|0;cb=b[H>>1]|0;db=b[D>>1]|0}while(0);ia=($a&_a&65535)<<(e[x>>1]|0)|(Za&Ya&65535)<<(e[w>>1]|0)|(bb&ab&65535)<<(e[y>>1]|0)|(db&cb&65535)<<(e[z>>1]|0);if(!(c[l>>2]|0))mb=0;else{ha=0;do{a[f+ha>>0]=ia>>>(ha<<3&524280);ha=ha+1|0;fa=c[l>>2]|0}while(ha>>>0<fa>>>0);mb=fa}h=c[j>>2]|0;m=m+h|0;if(m>>>0>=Q>>>0)break;else f=f+mb|0}i=n;return 1}function Qd(f,h,j,k,l,m){f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,ba=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0;n=i;i=i+48|0;o=n+38|0;p=n+36|0;q=n+34|0;r=n+32|0;s=n+30|0;t=n+28|0;u=n+26|0;v=n+24|0;w=n+22|0;x=n+20|0;y=n+18|0;z=n+16|0;A=n+14|0;B=n+12|0;C=n+10|0;D=n+8|0;E=n+6|0;F=n+4|0;H=n+2|0;I=n;b[o>>1]=0;b[p>>1]=0;b[q>>1]=0;b[r>>1]=0;b[s>>1]=0;b[t>>1]=0;b[u>>1]=0;b[v>>1]=0;b[w>>1]=0;b[x>>1]=0;b[y>>1]=0;b[z>>1]=0;b[A>>1]=0;b[B>>1]=0;b[C>>1]=0;b[D>>1]=0;_d(l,o,p,q,r,s,t,u,v);_d(m,w,x,y,z,A,B,C,D);if((c[l+52>>2]|0)==24){g[2432]=0.0;J=ca(k,j)|0;K=c[l+4>>2]|0;L=ca(K,J)|0;M=f+L|0;if((L|0)>0){N=0.0;L=f;while(1){O=+aa(+(+(e[L>>1]|0)*.29899999499320984+ +(e[L+2>>1]|0)*.5870000123977661+ +(e[L+4>>1]|0)*.11400000005960464+1.000000013351432e-10))+N;L=L+K|0;if(L>>>0>=M>>>0){P=O;break}else N=O}g[2432]=P;Q=P}else Q=0.0;g[2432]=+$(+(Q/+(J>>>0)));R=J;S=K}else{R=ca(k,j)|0;S=c[l+4>>2]|0}j=l+4|0;k=ca(R,S)|0;R=f+k|0;if((k|0)<=0){i=n;return 1}k=l+48|0;K=m+44|0;J=m+8|0;M=l+8|0;L=m+12|0;T=l+12|0;U=m+16|0;V=l+16|0;W=m+20|0;X=l+20|0;l=m+4|0;m=f;f=h;h=S;while(1){if(!h)Y=0;else{S=0;Z=0;while(1){_=(d[m+Z>>0]|0)<<(Z<<3&524280)|S&65535;Z=Z+1|0;if(Z>>>0>=h>>>0){ba=_;break}else S=_}Y=ba&65535}b[E>>1]=0;b[F>>1]=0;b[H>>1]=0;b[I>>1]=-1;S=b[s>>1]|0;if(!(S<<16>>16))da=0;else da=(Y&65535)>>>(e[o>>1]|0)&(S&65535)&65535;Z=b[t>>1]|0;if(!(Z<<16>>16))ea=0;else ea=(Y&65535)>>>(e[p>>1]|0)&(Z&65535)&65535;_=b[u>>1]|0;if(!(_<<16>>16))fa=0;else fa=(Y&65535)>>>(e[q>>1]|0)&(_&65535)&65535;ga=b[v>>1]|0;if(!(ga<<16>>16))ha=-1;else ha=(Y&65535)>>>(e[r>>1]|0)&(ga&65535)&65535;ia=c[k>>2]|0;ja=c[K>>2]|0;do if((ia|0)==0&(ja|0)==0){ka=b[A>>1]|0;do if(S<<16>>16!=0&ka<<16>>16!=0){la=c[J>>2]|0;ma=c[M>>2]|0;if(la>>>0<ma>>>0){if((ma&65535)<<16>>16==0|(la&65535)<<16>>16==0)na=0;else na=(da&65535)>>>((ma&65535)-(la&65535)|0)&65535;b[E>>1]=na;oa=na;break}if(la>>>0<=ma>>>0){b[E>>1]=da;oa=da;break}pa=ma&65535;qa=la&65535;ra=ma&65535;if(!(pa<<16>>16==0|qa<<16>>16==0)){ma=la&65535;if((qa&65535)<(pa&65535)){sa=qa;ta=ma;ua=0}else{qa=da&65535;la=ma;ma=0;while(1){va=(ma&65535)<<ra|qa;wa=la-ra|0;xa=wa&65535;ya=wa&65535;if((xa&65535)<(pa&65535)){za=va;Aa=xa;Ba=ya;break}else{la=ya;ma=va}}sa=Aa;ta=Ba;ua=za&65535}if(!(sa<<16>>16))Ca=ua;else Ca=((ua&65535)<<ta|(da&65535)>>>(ra-ta|0))&65535}else Ca=0;b[E>>1]=Ca;oa=Ca}else oa=0;while(0);ma=b[B>>1]|0;do if(Z<<16>>16!=0&ma<<16>>16!=0){la=c[L>>2]|0;pa=c[T>>2]|0;if(la>>>0<pa>>>0){if((pa&65535)<<16>>16==0|(la&65535)<<16>>16==0)Da=0;else Da=(ea&65535)>>>((pa&65535)-(la&65535)|0)&65535;b[F>>1]=Da;Ea=Da;break}if(la>>>0<=pa>>>0){b[F>>1]=ea;Ea=ea;break}qa=pa&65535;va=la&65535;ya=pa&65535;if(!(qa<<16>>16==0|va<<16>>16==0)){pa=la&65535;if((va&65535)<(qa&65535)){Fa=va;Ga=pa;Ha=0}else{va=ea&65535;la=pa;pa=0;while(1){xa=(pa&65535)<<ya|va;wa=la-ya|0;Ia=wa&65535;Ja=wa&65535;if((Ia&65535)<(qa&65535)){Ka=xa;La=Ia;Ma=Ja;break}else{la=Ja;pa=xa}}Fa=La;Ga=Ma;Ha=Ka&65535}if(!(Fa<<16>>16))Na=Ha;else Na=((Ha&65535)<<Ga|(ea&65535)>>>(ya-Ga|0))&65535}else Na=0;b[F>>1]=Na;Ea=Na}else Ea=0;while(0);pa=b[C>>1]|0;do if(_<<16>>16!=0&pa<<16>>16!=0){la=c[U>>2]|0;qa=c[V>>2]|0;if(la>>>0<qa>>>0){if((qa&65535)<<16>>16==0|(la&65535)<<16>>16==0)Oa=0;else Oa=(fa&65535)>>>((qa&65535)-(la&65535)|0)&65535;b[H>>1]=Oa;Pa=Oa;break}if(la>>>0<=qa>>>0){b[H>>1]=fa;Pa=fa;break}va=qa&65535;ra=la&65535;xa=qa&65535;if(!(va<<16>>16==0|ra<<16>>16==0)){qa=la&65535;if((ra&65535)<(va&65535)){Qa=ra;Ra=qa;Sa=0}else{ra=fa&65535;la=qa;qa=0;while(1){Ja=(qa&65535)<<xa|ra;Ia=la-xa|0;wa=Ia&65535;Ta=Ia&65535;if((wa&65535)<(va&65535)){Ua=Ja;Va=wa;Wa=Ta;break}else{la=Ta;qa=Ja}}Qa=Va;Ra=Wa;Sa=Ua&65535}if(!(Qa<<16>>16))Xa=Sa;else Xa=((Sa&65535)<<Ra|(fa&65535)>>>(xa-Ra|0))&65535}else Xa=0;b[H>>1]=Xa;Pa=Xa}else Pa=0;while(0);qa=b[D>>1]|0;if(ga<<16>>16!=0&qa<<16>>16!=0){la=c[W>>2]|0;va=c[X>>2]|0;if(la>>>0<va>>>0){if((va&65535)<<16>>16==0|(la&65535)<<16>>16==0)Ya=0;else Ya=(ha&65535)>>>((va&65535)-(la&65535)|0)&65535;b[I>>1]=Ya;Za=oa;_a=ka;$a=Ea;ab=ma;bb=Pa;cb=pa;db=Ya;eb=qa;break}if(la>>>0<=va>>>0){b[I>>1]=ha;Za=oa;_a=ka;$a=Ea;ab=ma;bb=Pa;cb=pa;db=ha;eb=qa;break}ra=va&65535;ya=la&65535;Ja=va&65535;if(!(ra<<16>>16==0|ya<<16>>16==0)){va=la&65535;if((ya&65535)<(ra&65535)){fb=ya;gb=va;hb=0}else{ya=ha&65535;la=va;va=0;while(1){Ta=(va&65535)<<Ja|ya;wa=la-Ja|0;Ia=wa&65535;ib=wa&65535;if((Ia&65535)<(ra&65535)){jb=Ta;kb=Ia;lb=ib;break}else{la=ib;va=Ta}}fb=kb;gb=lb;hb=jb&65535}if(!(fb<<16>>16))mb=hb;else mb=((hb&65535)<<gb|(ha&65535)>>>(Ja-gb|0))&65535}else mb=0;b[I>>1]=mb;Za=oa;_a=ka;$a=Ea;ab=ma;bb=Pa;cb=pa;db=mb;eb=qa}else{Za=oa;_a=ka;$a=Ea;ab=ma;bb=Pa;cb=pa;db=-1;eb=qa}}else{$d(ia,ja,da,ea,fa,ha,c[M>>2]&65535,c[T>>2]&65535,c[V>>2]&65535,c[X>>2]&65535,E,F,H,I,c[J>>2]&65535,c[L>>2]&65535,c[U>>2]&65535,c[W>>2]&65535);Za=b[E>>1]|0;_a=b[A>>1]|0;$a=b[F>>1]|0;ab=b[B>>1]|0;bb=b[H>>1]|0;cb=b[C>>1]|0;db=b[I>>1]|0;eb=b[D>>1]|0}while(0);ja=ar(_a&Za&65535|0,0,e[w>>1]|0|0)|0;ia=G;ga=ar(ab&$a&65535|0,0,e[x>>1]|0|0)|0;_=G|ia;ia=ar(cb&bb&65535|0,0,e[y>>1]|0|0)|0;Z=_|G;_=ar(eb&db&65535|0,0,e[z>>1]|0|0)|0;S=ga|ja|ia|_;_=Z|G;if(!(c[l>>2]|0))nb=0;else{Z=0;do{ia=Zq(S|0,_|0,Z<<3&524280|0)|0;a[f+Z>>0]=ia;Z=Z+1|0;ia=c[l>>2]|0}while(Z>>>0<ia>>>0);nb=ia}h=c[j>>2]|0;m=m+h|0;if(m>>>0>=R>>>0)break;else f=f+nb|0}i=n;return 1}
function Sm(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;d=i;i=i+304|0;k=d+200|0;l=d+196|0;m=d+184|0;n=d+172|0;o=d+168|0;p=d+8|0;q=d+4|0;r=d;s=fm(g)|0;mh(m,g,k,l);c[n+0>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;Re(n,10,0);if(!(a[n>>0]&1)){g=n+1|0;t=g;u=n+8|0;v=g}else{g=n+8|0;t=n+1|0;u=g;v=c[g>>2]|0}c[o>>2]=v;c[q>>2]=p;c[r>>2]=0;g=n+4|0;w=c[l>>2]|0;l=c[e>>2]|0;x=v;a:while(1){if(l){v=c[l+12>>2]|0;if((v|0)==(c[l+16>>2]|0))y=fc[c[(c[l>>2]|0)+36>>2]&127](l)|0;else y=c[v>>2]|0;if((y|0)==-1){c[e>>2]=0;z=1;A=0}else{z=0;A=l}}else{z=1;A=0}v=c[f>>2]|0;do if(v){B=c[v+12>>2]|0;if((B|0)==(c[v+16>>2]|0))C=fc[c[(c[v>>2]|0)+36>>2]&127](v)|0;else C=c[B>>2]|0;if((C|0)!=-1)if(z){D=v;break}else{E=A;F=v;G=x;break a}else{c[f>>2]=0;H=17;break}}else H=17;while(0);if((H|0)==17){H=0;if(z){E=A;F=0;G=x;break}else D=0}v=a[n>>0]|0;B=(v&1)==0;if(B)I=(v&255)>>>1;else I=c[g>>2]|0;if((c[o>>2]|0)==(x+I|0)){if(B){J=(v&255)>>>1;K=(v&255)>>>1}else{v=c[g>>2]|0;J=v;K=v}Re(n,J<<1,0);if(!(a[n>>0]&1))L=10;else L=(c[n>>2]&-2)+-1|0;Re(n,L,0);if(!(a[n>>0]&1))M=t;else M=c[u>>2]|0;c[o>>2]=M+K;N=M}else N=x;v=A+12|0;B=c[v>>2]|0;O=A+16|0;if((B|0)==(c[O>>2]|0))P=fc[c[(c[A>>2]|0)+36>>2]&127](A)|0;else P=c[B>>2]|0;if(ih(P,s,N,o,r,w,m,p,q,k)|0){E=A;F=D;G=N;break}B=c[v>>2]|0;if((B|0)==(c[O>>2]|0)){fc[c[(c[A>>2]|0)+40>>2]&127](A)|0;l=A;x=N;continue}else{c[v>>2]=B+4;l=A;x=N;continue}}N=a[m>>0]|0;if(!(N&1))Q=(N&255)>>>1;else Q=c[m+4>>2]|0;if((Q|0)!=0?(Q=c[q>>2]|0,(Q-p|0)<160):0){N=c[r>>2]|0;c[q>>2]=Q+4;c[Q>>2]=N}c[j>>2]=yo(G,c[o>>2]|0,h,s)|0;Tj(m,p,c[q>>2]|0,h);if(E){q=c[E+12>>2]|0;if((q|0)==(c[E+16>>2]|0))R=fc[c[(c[E>>2]|0)+36>>2]&127](E)|0;else R=c[q>>2]|0;if((R|0)==-1){c[e>>2]=0;S=0;T=1}else{S=E;T=0}}else{S=0;T=1}do if(F){E=c[F+12>>2]|0;if((E|0)==(c[F+16>>2]|0))U=fc[c[(c[F>>2]|0)+36>>2]&127](F)|0;else U=c[E>>2]|0;if((U|0)!=-1)if(T)break;else{H=58;break}else{c[f>>2]=0;H=56;break}}else H=56;while(0);if((H|0)==56?T:0)H=58;if((H|0)==58)c[h>>2]=c[h>>2]|2;c[b>>2]=S;Oe(n);Oe(m);i=d;return}function Tm(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;d=i;i=i+304|0;k=d+200|0;l=d+196|0;m=d+184|0;n=d+172|0;o=d+168|0;p=d+8|0;q=d+4|0;r=d;s=fm(g)|0;mh(m,g,k,l);c[n+0>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;Re(n,10,0);if(!(a[n>>0]&1)){g=n+1|0;t=g;u=n+8|0;v=g}else{g=n+8|0;t=n+1|0;u=g;v=c[g>>2]|0}c[o>>2]=v;c[q>>2]=p;c[r>>2]=0;g=n+4|0;w=c[l>>2]|0;l=c[e>>2]|0;x=v;a:while(1){if(l){v=c[l+12>>2]|0;if((v|0)==(c[l+16>>2]|0))y=fc[c[(c[l>>2]|0)+36>>2]&127](l)|0;else y=c[v>>2]|0;if((y|0)==-1){c[e>>2]=0;z=1;A=0}else{z=0;A=l}}else{z=1;A=0}v=c[f>>2]|0;do if(v){B=c[v+12>>2]|0;if((B|0)==(c[v+16>>2]|0))C=fc[c[(c[v>>2]|0)+36>>2]&127](v)|0;else C=c[B>>2]|0;if((C|0)!=-1)if(z){D=v;break}else{E=A;F=v;G=x;break a}else{c[f>>2]=0;H=17;break}}else H=17;while(0);if((H|0)==17){H=0;if(z){E=A;F=0;G=x;break}else D=0}v=a[n>>0]|0;B=(v&1)==0;if(B)I=(v&255)>>>1;else I=c[g>>2]|0;if((c[o>>2]|0)==(x+I|0)){if(B){J=(v&255)>>>1;K=(v&255)>>>1}else{v=c[g>>2]|0;J=v;K=v}Re(n,J<<1,0);if(!(a[n>>0]&1))L=10;else L=(c[n>>2]&-2)+-1|0;Re(n,L,0);if(!(a[n>>0]&1))M=t;else M=c[u>>2]|0;c[o>>2]=M+K;N=M}else N=x;v=A+12|0;B=c[v>>2]|0;O=A+16|0;if((B|0)==(c[O>>2]|0))P=fc[c[(c[A>>2]|0)+36>>2]&127](A)|0;else P=c[B>>2]|0;if(ih(P,s,N,o,r,w,m,p,q,k)|0){E=A;F=D;G=N;break}B=c[v>>2]|0;if((B|0)==(c[O>>2]|0)){fc[c[(c[A>>2]|0)+40>>2]&127](A)|0;l=A;x=N;continue}else{c[v>>2]=B+4;l=A;x=N;continue}}N=a[m>>0]|0;if(!(N&1))Q=(N&255)>>>1;else Q=c[m+4>>2]|0;if((Q|0)!=0?(Q=c[q>>2]|0,(Q-p|0)<160):0){N=c[r>>2]|0;c[q>>2]=Q+4;c[Q>>2]=N}c[j>>2]=zo(G,c[o>>2]|0,h,s)|0;Tj(m,p,c[q>>2]|0,h);if(E){q=c[E+12>>2]|0;if((q|0)==(c[E+16>>2]|0))R=fc[c[(c[E>>2]|0)+36>>2]&127](E)|0;else R=c[q>>2]|0;if((R|0)==-1){c[e>>2]=0;S=0;T=1}else{S=E;T=0}}else{S=0;T=1}do if(F){E=c[F+12>>2]|0;if((E|0)==(c[F+16>>2]|0))U=fc[c[(c[F>>2]|0)+36>>2]&127](F)|0;else U=c[E>>2]|0;if((U|0)!=-1)if(T)break;else{H=58;break}else{c[f>>2]=0;H=56;break}}else H=56;while(0);if((H|0)==56?T:0)H=58;if((H|0)==58)c[h>>2]=c[h>>2]|2;c[b>>2]=S;Oe(n);Oe(m);i=d;return}function Um(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;d=i;i=i+304|0;k=d+200|0;l=d+196|0;m=d+184|0;n=d+172|0;o=d+168|0;p=d+8|0;q=d+4|0;r=d;s=fm(g)|0;mh(m,g,k,l);c[n+0>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;Re(n,10,0);if(!(a[n>>0]&1)){g=n+1|0;t=g;u=n+8|0;v=g}else{g=n+8|0;t=n+1|0;u=g;v=c[g>>2]|0}c[o>>2]=v;c[q>>2]=p;c[r>>2]=0;g=n+4|0;w=c[l>>2]|0;l=c[e>>2]|0;x=v;a:while(1){if(l){v=c[l+12>>2]|0;if((v|0)==(c[l+16>>2]|0))y=fc[c[(c[l>>2]|0)+36>>2]&127](l)|0;else y=c[v>>2]|0;if((y|0)==-1){c[e>>2]=0;z=1;A=0}else{z=0;A=l}}else{z=1;A=0}v=c[f>>2]|0;do if(v){B=c[v+12>>2]|0;if((B|0)==(c[v+16>>2]|0))C=fc[c[(c[v>>2]|0)+36>>2]&127](v)|0;else C=c[B>>2]|0;if((C|0)!=-1)if(z){D=v;break}else{E=A;F=v;H=x;break a}else{c[f>>2]=0;I=17;break}}else I=17;while(0);if((I|0)==17){I=0;if(z){E=A;F=0;H=x;break}else D=0}v=a[n>>0]|0;B=(v&1)==0;if(B)J=(v&255)>>>1;else J=c[g>>2]|0;if((c[o>>2]|0)==(x+J|0)){if(B){K=(v&255)>>>1;L=(v&255)>>>1}else{v=c[g>>2]|0;K=v;L=v}Re(n,K<<1,0);if(!(a[n>>0]&1))M=10;else M=(c[n>>2]&-2)+-1|0;Re(n,M,0);if(!(a[n>>0]&1))N=t;else N=c[u>>2]|0;c[o>>2]=N+L;O=N}else O=x;v=A+12|0;B=c[v>>2]|0;P=A+16|0;if((B|0)==(c[P>>2]|0))Q=fc[c[(c[A>>2]|0)+36>>2]&127](A)|0;else Q=c[B>>2]|0;if(ih(Q,s,O,o,r,w,m,p,q,k)|0){E=A;F=D;H=O;break}B=c[v>>2]|0;if((B|0)==(c[P>>2]|0)){fc[c[(c[A>>2]|0)+40>>2]&127](A)|0;l=A;x=O;continue}else{c[v>>2]=B+4;l=A;x=O;continue}}O=a[m>>0]|0;if(!(O&1))R=(O&255)>>>1;else R=c[m+4>>2]|0;if((R|0)!=0?(R=c[q>>2]|0,(R-p|0)<160):0){O=c[r>>2]|0;c[q>>2]=R+4;c[R>>2]=O}O=Ao(H,c[o>>2]|0,h,s)|0;s=j;c[s>>2]=O;c[s+4>>2]=G;Tj(m,p,c[q>>2]|0,h);if(E){q=c[E+12>>2]|0;if((q|0)==(c[E+16>>2]|0))S=fc[c[(c[E>>2]|0)+36>>2]&127](E)|0;else S=c[q>>2]|0;if((S|0)==-1){c[e>>2]=0;T=0;U=1}else{T=E;U=0}}else{T=0;U=1}do if(F){E=c[F+12>>2]|0;if((E|0)==(c[F+16>>2]|0))V=fc[c[(c[F>>2]|0)+36>>2]&127](F)|0;else V=c[E>>2]|0;if((V|0)!=-1)if(U)break;else{I=58;break}else{c[f>>2]=0;I=56;break}}else I=56;while(0);if((I|0)==56?U:0)I=58;if((I|0)==58)c[h>>2]=c[h>>2]|2;c[b>>2]=T;Oe(n);Oe(m);i=d;return}function Vm(b,d,e,f,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;d=i;i=i+352|0;l=d+208|0;m=d+200|0;n=d+196|0;o=d+184|0;p=d+172|0;q=d+168|0;r=d+8|0;s=d+4|0;t=d;u=d+337|0;v=d+336|0;nh(o,h,l,m,n);c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;Re(p,10,0);if(!(a[p>>0]&1)){h=p+1|0;w=h;x=p+8|0;y=h}else{h=p+8|0;w=p+1|0;x=h;y=c[h>>2]|0}c[q>>2]=y;c[s>>2]=r;c[t>>2]=0;a[u>>0]=1;a[v>>0]=69;h=p+4|0;z=c[m>>2]|0;m=c[n>>2]|0;n=c[e>>2]|0;A=y;a:while(1){if(n){y=c[n+12>>2]|0;if((y|0)==(c[n+16>>2]|0))B=fc[c[(c[n>>2]|0)+36>>2]&127](n)|0;else B=c[y>>2]|0;if((B|0)==-1){c[e>>2]=0;C=1;D=0}else{C=0;D=n}}else{C=1;D=0}y=c[f>>2]|0;do if(y){E=c[y+12>>2]|0;if((E|0)==(c[y+16>>2]|0))F=fc[c[(c[y>>2]|0)+36>>2]&127](y)|0;else F=c[E>>2]|0;if((F|0)!=-1)if(C){G=y;break}else{H=D;I=y;J=A;break a}else{c[f>>2]=0;K=17;break}}else K=17;while(0);if((K|0)==17){K=0;if(C){H=D;I=0;J=A;break}else G=0}y=a[p>>0]|0;E=(y&1)==0;if(E)L=(y&255)>>>1;else L=c[h>>2]|0;if((c[q>>2]|0)==(A+L|0)){if(E){M=(y&255)>>>1;N=(y&255)>>>1}else{y=c[h>>2]|0;M=y;N=y}Re(p,M<<1,0);if(!(a[p>>0]&1))O=10;else O=(c[p>>2]&-2)+-1|0;Re(p,O,0);if(!(a[p>>0]&1))P=w;else P=c[x>>2]|0;c[q>>2]=P+N;Q=P}else Q=A;y=D+12|0;E=c[y>>2]|0;R=D+16|0;if((E|0)==(c[R>>2]|0))S=fc[c[(c[D>>2]|0)+36>>2]&127](D)|0;else S=c[E>>2]|0;if(oh(S,u,v,Q,q,z,m,o,r,s,t,l)|0){H=D;I=G;J=Q;break}E=c[y>>2]|0;if((E|0)==(c[R>>2]|0)){fc[c[(c[D>>2]|0)+40>>2]&127](D)|0;n=D;A=Q;continue}else{c[y>>2]=E+4;n=D;A=Q;continue}}Q=a[o>>0]|0;if(!(Q&1))T=(Q&255)>>>1;else T=c[o+4>>2]|0;if(!((T|0)==0|(a[u>>0]|0)==0)?(u=c[s>>2]|0,(u-r|0)<160):0){T=c[t>>2]|0;c[s>>2]=u+4;c[u>>2]=T}g[k>>2]=+Bo(J,c[q>>2]|0,j);Tj(o,r,c[s>>2]|0,j);if(H){s=c[H+12>>2]|0;if((s|0)==(c[H+16>>2]|0))U=fc[c[(c[H>>2]|0)+36>>2]&127](H)|0;else U=c[s>>2]|0;if((U|0)==-1){c[e>>2]=0;V=0;W=1}else{V=H;W=0}}else{V=0;W=1}do if(I){H=c[I+12>>2]|0;if((H|0)==(c[I+16>>2]|0))X=fc[c[(c[I>>2]|0)+36>>2]&127](I)|0;else X=c[H>>2]|0;if((X|0)!=-1)if(W)break;else{K=58;break}else{c[f>>2]=0;K=56;break}}else K=56;while(0);if((K|0)==56?W:0)K=58;if((K|0)==58)c[j>>2]=c[j>>2]|2;c[b>>2]=V;Oe(p);Oe(o);i=d;return}function Wm(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;d=i;i=i+352|0;l=d+208|0;m=d+200|0;n=d+196|0;o=d+184|0;p=d+172|0;q=d+168|0;r=d+8|0;s=d+4|0;t=d;u=d+337|0;v=d+336|0;nh(o,g,l,m,n);c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;Re(p,10,0);if(!(a[p>>0]&1)){g=p+1|0;w=g;x=p+8|0;y=g}else{g=p+8|0;w=p+1|0;x=g;y=c[g>>2]|0}c[q>>2]=y;c[s>>2]=r;c[t>>2]=0;a[u>>0]=1;a[v>>0]=69;g=p+4|0;z=c[m>>2]|0;m=c[n>>2]|0;n=c[e>>2]|0;A=y;a:while(1){if(n){y=c[n+12>>2]|0;if((y|0)==(c[n+16>>2]|0))B=fc[c[(c[n>>2]|0)+36>>2]&127](n)|0;else B=c[y>>2]|0;if((B|0)==-1){c[e>>2]=0;C=1;D=0}else{C=0;D=n}}else{C=1;D=0}y=c[f>>2]|0;do if(y){E=c[y+12>>2]|0;if((E|0)==(c[y+16>>2]|0))F=fc[c[(c[y>>2]|0)+36>>2]&127](y)|0;else F=c[E>>2]|0;if((F|0)!=-1)if(C){G=y;break}else{H=D;I=y;J=A;break a}else{c[f>>2]=0;K=17;break}}else K=17;while(0);if((K|0)==17){K=0;if(C){H=D;I=0;J=A;break}else G=0}y=a[p>>0]|0;E=(y&1)==0;if(E)L=(y&255)>>>1;else L=c[g>>2]|0;if((c[q>>2]|0)==(A+L|0)){if(E){M=(y&255)>>>1;N=(y&255)>>>1}else{y=c[g>>2]|0;M=y;N=y}Re(p,M<<1,0);if(!(a[p>>0]&1))O=10;else O=(c[p>>2]&-2)+-1|0;Re(p,O,0);if(!(a[p>>0]&1))P=w;else P=c[x>>2]|0;c[q>>2]=P+N;Q=P}else Q=A;y=D+12|0;E=c[y>>2]|0;R=D+16|0;if((E|0)==(c[R>>2]|0))S=fc[c[(c[D>>2]|0)+36>>2]&127](D)|0;else S=c[E>>2]|0;if(oh(S,u,v,Q,q,z,m,o,r,s,t,l)|0){H=D;I=G;J=Q;break}E=c[y>>2]|0;if((E|0)==(c[R>>2]|0)){fc[c[(c[D>>2]|0)+40>>2]&127](D)|0;n=D;A=Q;continue}else{c[y>>2]=E+4;n=D;A=Q;continue}}Q=a[o>>0]|0;if(!(Q&1))T=(Q&255)>>>1;else T=c[o+4>>2]|0;if(!((T|0)==0|(a[u>>0]|0)==0)?(u=c[s>>2]|0,(u-r|0)<160):0){T=c[t>>2]|0;c[s>>2]=u+4;c[u>>2]=T}h[k>>3]=+Co(J,c[q>>2]|0,j);Tj(o,r,c[s>>2]|0,j);if(H){s=c[H+12>>2]|0;if((s|0)==(c[H+16>>2]|0))U=fc[c[(c[H>>2]|0)+36>>2]&127](H)|0;else U=c[s>>2]|0;if((U|0)==-1){c[e>>2]=0;V=0;W=1}else{V=H;W=0}}else{V=0;W=1}do if(I){H=c[I+12>>2]|0;if((H|0)==(c[I+16>>2]|0))X=fc[c[(c[I>>2]|0)+36>>2]&127](I)|0;else X=c[H>>2]|0;if((X|0)!=-1)if(W)break;else{K=58;break}else{c[f>>2]=0;K=56;break}}else K=56;while(0);if((K|0)==56?W:0)K=58;if((K|0)==58)c[j>>2]=c[j>>2]|2;c[b>>2]=V;Oe(p);Oe(o);i=d;return}function Xm(b,d,e,f,g,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;d=i;i=i+352|0;l=d+208|0;m=d+200|0;n=d+196|0;o=d+184|0;p=d+172|0;q=d+168|0;r=d+8|0;s=d+4|0;t=d;u=d+337|0;v=d+336|0;nh(o,g,l,m,n);c[p+0>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;Re(p,10,0);if(!(a[p>>0]&1)){g=p+1|0;w=g;x=p+8|0;y=g}else{g=p+8|0;w=p+1|0;x=g;y=c[g>>2]|0}c[q>>2]=y;c[s>>2]=r;c[t>>2]=0;a[u>>0]=1;a[v>>0]=69;g=p+4|0;z=c[m>>2]|0;m=c[n>>2]|0;n=c[e>>2]|0;A=y;a:while(1){if(n){y=c[n+12>>2]|0;if((y|0)==(c[n+16>>2]|0))B=fc[c[(c[n>>2]|0)+36>>2]&127](n)|0;else B=c[y>>2]|0;if((B|0)==-1){c[e>>2]=0;C=1;D=0}else{C=0;D=n}}else{C=1;D=0}y=c[f>>2]|0;do if(y){E=c[y+12>>2]|0;if((E|0)==(c[y+16>>2]|0))F=fc[c[(c[y>>2]|0)+36>>2]&127](y)|0;else F=c[E>>2]|0;if((F|0)!=-1)if(C){G=y;break}else{H=D;I=y;J=A;break a}else{c[f>>2]=0;K=17;break}}else K=17;while(0);if((K|0)==17){K=0;if(C){H=D;I=0;J=A;break}else G=0}y=a[p>>0]|0;E=(y&1)==0;if(E)L=(y&255)>>>1;else L=c[g>>2]|0;if((c[q>>2]|0)==(A+L|0)){if(E){M=(y&255)>>>1;N=(y&255)>>>1}else{y=c[g>>2]|0;M=y;N=y}Re(p,M<<1,0);if(!(a[p>>0]&1))O=10;else O=(c[p>>2]&-2)+-1|0;Re(p,O,0);if(!(a[p>>0]&1))P=w;else P=c[x>>2]|0;c[q>>2]=P+N;Q=P}else Q=A;y=D+12|0;E=c[y>>2]|0;R=D+16|0;if((E|0)==(c[R>>2]|0))S=fc[c[(c[D>>2]|0)+36>>2]&127](D)|0;else S=c[E>>2]|0;if(oh(S,u,v,Q,q,z,m,o,r,s,t,l)|0){H=D;I=G;J=Q;break}E=c[y>>2]|0;if((E|0)==(c[R>>2]|0)){fc[c[(c[D>>2]|0)+40>>2]&127](D)|0;n=D;A=Q;continue}else{c[y>>2]=E+4;n=D;A=Q;continue}}Q=a[o>>0]|0;if(!(Q&1))T=(Q&255)>>>1;else T=c[o+4>>2]|0;if(!((T|0)==0|(a[u>>0]|0)==0)?(u=c[s>>2]|0,(u-r|0)<160):0){T=c[t>>2]|0;c[s>>2]=u+4;c[u>>2]=T}h[k>>3]=+Do(J,c[q>>2]|0,j);Tj(o,r,c[s>>2]|0,j);if(H){s=c[H+12>>2]|0;if((s|0)==(c[H+16>>2]|0))U=fc[c[(c[H>>2]|0)+36>>2]&127](H)|0;else U=c[s>>2]|0;if((U|0)==-1){c[e>>2]=0;V=0;W=1}else{V=H;W=0}}else{V=0;W=1}do if(I){H=c[I+12>>2]|0;if((H|0)==(c[I+16>>2]|0))X=fc[c[(c[I>>2]|0)+36>>2]&127](I)|0;else X=c[H>>2]|0;if((X|0)!=-1)if(W)break;else{K=58;break}else{c[f>>2]=0;K=56;break}}else K=56;while(0);if((K|0)==56?W:0)K=58;if((K|0)==58)c[j>>2]=c[j>>2]|2;c[b>>2]=V;Oe(p);Oe(o);i=d;return}function Ym(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;i=i+16|0;h=g;c[h>>2]=f;f=cb(d|0)|0;d=Lq(a,b,e,h)|0;if(f)cb(f|0)|0;i=g;return d|0}function Zm(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;k=i;i=i+16|0;l=k;m=c[d>>2]|0;a:do if(!m)c[b>>2]=0;else{n=g;o=e;p=n-o|0;q=h+12|0;r=c[q>>2]|0;s=(r|0)>(p|0)?r-p|0:0;p=f;r=p-o|0;if((r|0)>0?($b[c[(c[m>>2]|0)+48>>2]&31](m,e,r)|0)!=(r|0):0){c[d>>2]=0;c[b>>2]=0;break}do if((s|0)>0){Me(l,s,j);if(!(a[l>>0]&1))t=l+1|0;else t=c[l+8>>2]|0;if(($b[c[(c[m>>2]|0)+48>>2]&31](m,t,s)|0)==(s|0)){Oe(l);break}else{c[d>>2]=0;c[b>>2]=0;Oe(l);break a}}while(0);s=n-p|0;if((s|0)>0?($b[c[(c[m>>2]|0)+48>>2]&31](m,f,s)|0)!=(s|0):0){c[d>>2]=0;c[b>>2]=0;break}c[q>>2]=0;c[b>>2]=m}while(0);i=k;return}function _m(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;c[g>>2]=e;e=cb(b|0)|0;b=$o(a,d,g)|0;if(e)cb(e|0)|0;i=f;return b|0}function $m(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;k=i;i=i+16|0;l=k;m=c[d>>2]|0;a:do if(!m)c[b>>2]=0;else{n=g;o=e;p=n-o>>2;q=h+12|0;r=c[q>>2]|0;s=(r|0)>(p|0)?r-p|0:0;p=f;r=p-o|0;o=r>>2;if((r|0)>0?($b[c[(c[m>>2]|0)+48>>2]&31](m,e,o)|0)!=(o|0):0){c[d>>2]=0;c[b>>2]=0;break}do if((s|0)>0){_e(l,s,j);if(!(a[l>>0]&1))t=l+4|0;else t=c[l+8>>2]|0;if(($b[c[(c[m>>2]|0)+48>>2]&31](m,t,s)|0)==(s|0)){af(l);break}else{c[d>>2]=0;c[b>>2]=0;af(l);break a}}while(0);s=n-p|0;o=s>>2;if((s|0)>0?($b[c[(c[m>>2]|0)+48>>2]&31](m,f,o)|0)!=(o|0):0){c[d>>2]=0;c[b>>2]=0;break}c[q>>2]=0;c[b>>2]=m}while(0);i=k;return}function an(a,e,f,g,h){a=a|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;i=c[a>>2]|0;do if(i)if((c[i+12>>2]|0)==(c[i+16>>2]|0))if((fc[c[(c[i>>2]|0)+36>>2]&127](i)|0)==-1){c[a>>2]=0;j=0;break}else{j=c[a>>2]|0;break}else j=i;else j=0;while(0);i=(j|0)==0;j=c[e>>2]|0;do if(j){if((c[j+12>>2]|0)==(c[j+16>>2]|0)?(fc[c[(c[j>>2]|0)+36>>2]&127](j)|0)==-1:0){c[e>>2]=0;k=11;break}if(i){l=j;k=13}else k=12}else k=11;while(0);if((k|0)==11)if(i)k=12;else{l=0;k=13}a:do if((k|0)==12){c[f>>2]=c[f>>2]|6;m=0}else if((k|0)==13){i=c[a>>2]|0;j=c[i+12>>2]|0;if((j|0)==(c[i+16>>2]|0))n=fc[c[(c[i>>2]|0)+36>>2]&127](i)|0;else n=d[j>>0]|0;j=n&255;if(j<<24>>24>-1?(i=g+8|0,(b[(c[i>>2]|0)+(n<<24>>24<<1)>>1]&2048)!=0):0){o=($b[c[(c[g>>2]|0)+36>>2]&31](g,j,0)|0)<<24>>24;j=c[a>>2]|0;p=j+12|0;q=c[p>>2]|0;if((q|0)==(c[j+16>>2]|0)){fc[c[(c[j>>2]|0)+40>>2]&127](j)|0;r=h;s=l;t=l;u=o}else{c[p>>2]=q+1;r=h;s=l;t=l;u=o}while(1){o=u+-48|0;q=r+-1|0;p=c[a>>2]|0;do if(p)if((c[p+12>>2]|0)==(c[p+16>>2]|0))if((fc[c[(c[p>>2]|0)+36>>2]&127](p)|0)==-1){c[a>>2]=0;v=0;break}else{v=c[a>>2]|0;break}else v=p;else v=0;while(0);p=(v|0)==0;if(t)if((c[t+12>>2]|0)==(c[t+16>>2]|0))if((fc[c[(c[t>>2]|0)+36>>2]&127](t)|0)==-1){c[e>>2]=0;w=0;x=0}else{w=s;x=s}else{w=s;x=t}else{w=s;x=0}j=c[a>>2]|0;if(!((p^(x|0)==0)&(q|0)>0)){y=j;z=w;A=o;break}p=c[j+12>>2]|0;if((p|0)==(c[j+16>>2]|0))B=fc[c[(c[j>>2]|0)+36>>2]&127](j)|0;else B=d[p>>0]|0;p=B&255;if(p<<24>>24<=-1){m=o;break a}if(!(b[(c[i>>2]|0)+(B<<24>>24<<1)>>1]&2048)){m=o;break a}j=(($b[c[(c[g>>2]|0)+36>>2]&31](g,p,0)|0)<<24>>24)+(o*10|0)|0;p=c[a>>2]|0;C=p+12|0;D=c[C>>2]|0;if((D|0)==(c[p+16>>2]|0)){fc[c[(c[p>>2]|0)+40>>2]&127](p)|0;r=q;s=w;t=x;u=j;continue}else{c[C>>2]=D+1;r=q;s=w;t=x;u=j;continue}}do if(y)if((c[y+12>>2]|0)==(c[y+16>>2]|0))if((fc[c[(c[y>>2]|0)+36>>2]&127](y)|0)==-1){c[a>>2]=0;E=0;break}else{E=c[a>>2]|0;break}else E=y;else E=0;while(0);i=(E|0)==0;do if(z){if((c[z+12>>2]|0)==(c[z+16>>2]|0)?(fc[c[(c[z>>2]|0)+36>>2]&127](z)|0)==-1:0){c[e>>2]=0;k=50;break}if(i){m=A;break a}else F=A}else k=50;while(0);if((k|0)==50)if(i)F=A;else{m=A;break}c[f>>2]=c[f>>2]|2;m=F;break}c[f>>2]=c[f>>2]|4;m=0}while(0);return m|0}function bn(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;g=c[a>>2]|0;do if(g){h=c[g+12>>2]|0;if((h|0)==(c[g+16>>2]|0))i=fc[c[(c[g>>2]|0)+36>>2]&127](g)|0;else i=c[h>>2]|0;if((i|0)==-1){c[a>>2]=0;j=1;break}else{j=(c[a>>2]|0)==0;break}}else j=1;while(0);i=c[b>>2]|0;do if(i){g=c[i+12>>2]|0;if((g|0)==(c[i+16>>2]|0))k=fc[c[(c[i>>2]|0)+36>>2]&127](i)|0;else k=c[g>>2]|0;if((k|0)!=-1)if(j){l=i;m=17;break}else{m=16;break}else{c[b>>2]=0;m=14;break}}else m=14;while(0);if((m|0)==14)if(j)m=16;else{l=0;m=17}a:do if((m|0)==16){c[d>>2]=c[d>>2]|6;n=0}else if((m|0)==17){j=c[a>>2]|0;i=c[j+12>>2]|0;if((i|0)==(c[j+16>>2]|0))o=fc[c[(c[j>>2]|0)+36>>2]&127](j)|0;else o=c[i>>2]|0;if(!($b[c[(c[e>>2]|0)+12>>2]&31](e,2048,o)|0)){c[d>>2]=c[d>>2]|4;n=0;break}i=($b[c[(c[e>>2]|0)+52>>2]&31](e,o,0)|0)<<24>>24;j=c[a>>2]|0;k=j+12|0;g=c[k>>2]|0;if((g|0)==(c[j+16>>2]|0)){fc[c[(c[j>>2]|0)+40>>2]&127](j)|0;p=f;q=l;r=l;s=i}else{c[k>>2]=g+4;p=f;q=l;r=l;s=i}while(1){i=s+-48|0;g=p+-1|0;k=c[a>>2]|0;do if(k){j=c[k+12>>2]|0;if((j|0)==(c[k+16>>2]|0))t=fc[c[(c[k>>2]|0)+36>>2]&127](k)|0;else t=c[j>>2]|0;if((t|0)==-1){c[a>>2]=0;u=1;break}else{u=(c[a>>2]|0)==0;break}}else u=1;while(0);do if(r){k=c[r+12>>2]|0;if((k|0)==(c[r+16>>2]|0))v=fc[c[(c[r>>2]|0)+36>>2]&127](r)|0;else v=c[k>>2]|0;if((v|0)==-1){c[b>>2]=0;w=0;x=0;y=1;break}else{w=q;x=q;y=(q|0)==0;break}}else{w=q;x=0;y=1}while(0);k=c[a>>2]|0;if(!((u^y)&(g|0)>0)){z=k;A=w;B=i;break}j=c[k+12>>2]|0;if((j|0)==(c[k+16>>2]|0))C=fc[c[(c[k>>2]|0)+36>>2]&127](k)|0;else C=c[j>>2]|0;if(!($b[c[(c[e>>2]|0)+12>>2]&31](e,2048,C)|0)){n=i;break a}j=(($b[c[(c[e>>2]|0)+52>>2]&31](e,C,0)|0)<<24>>24)+(i*10|0)|0;k=c[a>>2]|0;h=k+12|0;D=c[h>>2]|0;if((D|0)==(c[k+16>>2]|0)){fc[c[(c[k>>2]|0)+40>>2]&127](k)|0;p=g;q=w;r=x;s=j;continue}else{c[h>>2]=D+4;p=g;q=w;r=x;s=j;continue}}do if(z){j=c[z+12>>2]|0;if((j|0)==(c[z+16>>2]|0))E=fc[c[(c[z>>2]|0)+36>>2]&127](z)|0;else E=c[j>>2]|0;if((E|0)==-1){c[a>>2]=0;F=1;break}else{F=(c[a>>2]|0)==0;break}}else F=1;while(0);do if(A){j=c[A+12>>2]|0;if((j|0)==(c[A+16>>2]|0))G=fc[c[(c[A>>2]|0)+36>>2]&127](A)|0;else G=c[j>>2]|0;if((G|0)!=-1)if(F){n=B;break a}else{H=B;break}else{c[b>>2]=0;m=60;break}}else m=60;while(0);if((m|0)==60)if(F)H=B;else{n=B;break}c[d>>2]=c[d>>2]|2;n=H}while(0);return n|0}function cn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=a+4|0;f=(c[e>>2]|0)!=112;g=c[a>>2]|0;h=g;i=(c[d>>2]|0)-h|0;j=i>>>0<2147483647?i<<1:-1;i=(c[b>>2]|0)-h|0;h=mq(f?g:0,j)|0;if(!h)fq();if(!f){f=c[a>>2]|0;c[a>>2]=h;if(!f)k=h;else{cc[c[e>>2]&127](f);k=c[a>>2]|0}}else{c[a>>2]=h;k=h}c[e>>2]=124;c[b>>2]=k+i;c[d>>2]=(c[a>>2]|0)+j;return}function dn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=a+4|0;f=(c[e>>2]|0)!=112;g=c[a>>2]|0;h=g;i=(c[d>>2]|0)-h|0;j=i>>>0<2147483647?i<<1:-1;i=(c[b>>2]|0)-h>>2;h=mq(f?g:0,j)|0;if(!h)fq();if(!f){f=c[a>>2]|0;c[a>>2]=h;if(!f)k=h;else{cc[c[e>>2]&127](f);k=c[a>>2]|0}}else{c[a>>2]=h;k=h}c[e>>2]=124;c[b>>2]=k+(i<<2);c[d>>2]=(c[a>>2]|0)+(j>>>2<<2);return}function en(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;f=d;g=a[b>>0]|0;if(!(g&1)){h=(g&255)>>>1;i=10;j=g}else{g=c[b>>2]|0;h=c[b+4>>2]|0;i=(g&-2)+-1|0;j=g&255}g=e-f|0;do if((e|0)!=(d|0)){if((i-h|0)>>>0<g>>>0){Ye(b,i,h+g-i|0,h,h,0,0);k=a[b>>0]|0}else k=j;if(!(k&1))l=b+1|0;else l=c[b+8>>2]|0;m=e+(h-f)|0;n=d;o=l+h|0;while(1){a[o>>0]=a[n>>0]|0;n=n+1|0;if((n|0)==(e|0))break;else o=o+1|0}a[l+m>>0]=0;o=h+g|0;if(!(a[b>>0]&1)){a[b>>0]=o<<1;break}else{c[b+4>>2]=o;break}}while(0);return b|0}function fn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=a+4|0;f=(c[e>>2]|0)!=112;g=c[a>>2]|0;h=g;i=(c[d>>2]|0)-h|0;j=i>>>0<2147483647?i<<1:-1;i=(c[b>>2]|0)-h>>2;h=mq(f?g:0,j)|0;if(!h)fq();if(!f){f=c[a>>2]|0;c[a>>2]=h;if(!f)k=h;else{cc[c[e>>2]&127](f);k=c[a>>2]|0}}else{c[a>>2]=h;k=h}c[e>>2]=124;c[b>>2]=k+(i<<2);c[d>>2]=(c[a>>2]|0)+(j>>>2<<2);return}function gn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=d;g=a[b>>0]|0;if(!(g&1)){h=(g&255)>>>1;i=1;j=g}else{g=c[b>>2]|0;h=c[b+4>>2]|0;i=(g&-2)+-1|0;j=g&255}g=e-f>>2;do if(g){if((i-h|0)>>>0<g>>>0){gf(b,i,h+g-i|0,h,h,0,0);k=a[b>>0]|0}else k=j;if(!(k&1))l=b+4|0;else l=c[b+8>>2]|0;m=l+(h<<2)|0;if((d|0)==(e|0))n=m;else{o=h+((e+-4-f|0)>>>2)+1|0;p=d;q=m;while(1){c[q>>2]=c[p>>2];p=p+4|0;if((p|0)==(e|0))break;else q=q+4|0}n=l+(o<<2)|0}c[n>>2]=0;q=h+g|0;if(!(a[b>>0]&1)){a[b>>0]=q<<1;break}else{c[b+4>>2]=q;break}}while(0);return b|0}function hn(b,d){b=b|0;d=d|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;a[b+128>>0]=0;if(d){Eo(b,d);Fo(b,d)}return}function jn(a,b){a=a|0;b=b|0;xk(a,b,Hk(16264)|0);return}function kn(a,b){a=a|0;b=b|0;xk(a,b,Hk(16304)|0);return}function ln(a,b){a=a|0;b=b|0;xk(a,b,Hk(17872)|0);return}function mn(a,b){a=a|0;b=b|0;xk(a,b,Hk(17864)|0);return}function nn(a,b){a=a|0;b=b|0;xk(a,b,Hk(17936)|0);return}function on(a,b){a=a|0;b=b|0;xk(a,b,Hk(17944)|0);return}function pn(a,b){a=a|0;b=b|0;xk(a,b,Hk(18e3)|0);return}function qn(a,b){a=a|0;b=b|0;xk(a,b,Hk(18008)|0);return}function rn(a,b){a=a|0;b=b|0;xk(a,b,Hk(18016)|0);return}function sn(a,b){a=a|0;b=b|0;xk(a,b,Hk(18024)|0);return}function tn(a,b){a=a|0;b=b|0;xk(a,b,Hk(16376)|0);return}function un(a,b){a=a|0;b=b|0;xk(a,b,Hk(16496)|0);return}function vn(a,b){a=a|0;b=b|0;xk(a,b,Hk(16560)|0);return}function wn(a,b){a=a|0;b=b|0;xk(a,b,Hk(16656)|0);return}function xn(a,b){a=a|0;b=b|0;xk(a,b,Hk(17248)|0);return}function yn(a,b){a=a|0;b=b|0;xk(a,b,Hk(17312)|0);return}function zn(a,b){a=a|0;b=b|0;xk(a,b,Hk(17376)|0);return}function An(a,b){a=a|0;b=b|0;xk(a,b,Hk(17440)|0);return}function Bn(a,b){a=a|0;b=b|0;xk(a,b,Hk(17480)|0);return}function Cn(a,b){a=a|0;b=b|0;xk(a,b,Hk(17560)|0);return}function Dn(a,b){a=a|0;b=b|0;xk(a,b,Hk(17616)|0);return}function En(a,b){a=a|0;b=b|0;xk(a,b,Hk(17664)|0);return}function Fn(a,b){a=a|0;b=b|0;xk(a,b,Hk(16768)|0);return}function Gn(a,b){a=a|0;b=b|0;xk(a,b,Hk(16920)|0);return}function Hn(a,b){a=a|0;b=b|0;xk(a,b,Hk(17152)|0);return}function In(a,b){a=a|0;b=b|0;xk(a,b,Hk(17184)|0);return}function Jn(a,b){a=a|0;b=b|0;xk(a,b,Hk(17704)|0);return}function Kn(a,b){a=a|0;b=b|0;xk(a,b,Hk(17744)|0);return}function Ln(b){b=b|0;var d=0,e=0,f=0;d=c[b>>2]|0;do if(d){e=b+4|0;f=c[e>>2]|0;if((f|0)!=(d|0))c[e>>2]=f+(~((f+-4-d|0)>>>2)<<2);if((b+16|0)==(d|0)){a[b+128>>0]=0;break}else{lp(d);break}}while(0);return}function Mn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=a+4|0;e=c[d>>2]|0;f=c[a>>2]|0;g=e-f>>2;if(g>>>0>=b>>>0){if(g>>>0>b>>>0?(h=f+(b<<2)|0,(e|0)!=(h|0)):0)c[d>>2]=e+(~((e+-4-h|0)>>>2)<<2)}else Go(a,b-g|0);return}function Nn(a,b){a=a|0;b=b|0;var d=0,e=0;d=c[a+8>>2]|0;if((c[a+12>>2]|0)-d>>2>>>0>b>>>0)e=(c[d+(b<<2)>>2]|0)!=0;else e=0;return e|0}function On(a){a=a|0;var b=0,e=0,f=0,g=0;b=a+4|0;e=d[b>>0]|d[b+1>>0]<<8|d[b+2>>0]<<16|d[b+3>>0]<<24;f=b+4|0;b=d[f>>0]|d[f+1>>0]<<8|d[f+2>>0]<<16|d[f+3>>0]<<24;f=(c[a>>2]|0)+(b>>1)|0;if(!(b&1))g=e;else g=c[(c[f>>2]|0)+e>>2]|0;cc[g&127](f);return}function Pn(d,f,g,h,i,j,k,l){d=d|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0;c[g>>2]=d;c[j>>2]=h;if(l&2)if((i-h|0)<3)m=1;else{c[j>>2]=h+1;a[h>>0]=-17;h=c[j>>2]|0;c[j>>2]=h+1;a[h>>0]=-69;h=c[j>>2]|0;c[j>>2]=h+1;a[h>>0]=-65;n=4}else n=4;a:do if((n|0)==4){h=f;l=c[g>>2]|0;if(l>>>0<f>>>0){d=i;o=l;while(1){l=b[o>>1]|0;p=l&65535;if(p>>>0>k>>>0){m=2;break a}do if((l&65535)<128){q=c[j>>2]|0;if((d-q|0)<1){m=1;break a}c[j>>2]=q+1;a[q>>0]=l}else{if((l&65535)<2048){q=c[j>>2]|0;if((d-q|0)<2){m=1;break a}c[j>>2]=q+1;a[q>>0]=p>>>6|192;q=c[j>>2]|0;c[j>>2]=q+1;a[q>>0]=p&63|128;break}if((l&65535)<55296){q=c[j>>2]|0;if((d-q|0)<3){m=1;break a}c[j>>2]=q+1;a[q>>0]=p>>>12|224;q=c[j>>2]|0;c[j>>2]=q+1;a[q>>0]=p>>>6&63|128;q=c[j>>2]|0;c[j>>2]=q+1;a[q>>0]=p&63|128;break}if((l&65535)>=56320){if((l&65535)<57344){m=2;break a}q=c[j>>2]|0;if((d-q|0)<3){m=1;break a}c[j>>2]=q+1;a[q>>0]=p>>>12|224;q=c[j>>2]|0;c[j>>2]=q+1;a[q>>0]=p>>>6&63|128;q=c[j>>2]|0;c[j>>2]=q+1;a[q>>0]=p&63|128;break}if((h-o|0)<4){m=1;break a}q=o+2|0;r=e[q>>1]|0;if((r&64512|0)!=56320){m=2;break a}if((d-(c[j>>2]|0)|0)<4){m=1;break a}s=p&960;if(((s<<10)+65536|p<<10&64512|r&1023)>>>0>k>>>0){m=2;break a}c[g>>2]=q;q=(s>>>6)+1|0;s=c[j>>2]|0;c[j>>2]=s+1;a[s>>0]=q>>>2|240;s=c[j>>2]|0;c[j>>2]=s+1;a[s>>0]=p>>>2&15|q<<4&48|128;q=c[j>>2]|0;c[j>>2]=q+1;a[q>>0]=p<<4&48|r>>>6&15|128;q=c[j>>2]|0;c[j>>2]=q+1;a[q>>0]=r&63|128}while(0);o=(c[g>>2]|0)+2|0;c[g>>2]=o;if(o>>>0>=f>>>0){m=0;break}}}else m=0}while(0);return m|0}function Qn(e,f,g,h,i,j,k,l){e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;c[g>>2]=e;c[j>>2]=h;h=c[g>>2]|0;if(((((l&4|0)!=0?(f-h|0)>2:0)?(a[h>>0]|0)==-17:0)?(a[h+1>>0]|0)==-69:0)?(a[h+2>>0]|0)==-65:0){l=h+3|0;c[g>>2]=l;m=l}else m=h;a:do if(m>>>0<f>>>0){h=f;l=i;e=c[j>>2]|0;n=m;while(1){if(e>>>0>=i>>>0){o=n;p=40;break a}q=a[n>>0]|0;r=q&255;if(r>>>0>k>>>0){s=2;break a}do if(q<<24>>24>-1){b[e>>1]=q&255;c[g>>2]=n+1}else{if((q&255)<194){s=2;break a}if((q&255)<224){if((h-n|0)<2){s=1;break a}t=d[n+1>>0]|0;if((t&192|0)!=128){s=2;break a}u=t&63|r<<6&1984;if(u>>>0>k>>>0){s=2;break a}b[e>>1]=u;c[g>>2]=n+2;break}if((q&255)<240){if((h-n|0)<3){s=1;break a}u=a[n+1>>0]|0;t=a[n+2>>0]|0;if((r|0)==237){if((u&-32)<<24>>24!=-128){s=2;break a}}else if((r|0)==224){if((u&-32)<<24>>24!=-96){s=2;break a}}else if((u&-64)<<24>>24!=-128){s=2;break a}v=t&255;if((v&192|0)!=128){s=2;break a}t=(u&255)<<6&4032|r<<12|v&63;if((t&65535)>>>0>k>>>0){s=2;break a}b[e>>1]=t;c[g>>2]=n+3;break}if((q&255)>=245){s=2;break a}if((h-n|0)<4){s=1;break a}t=a[n+1>>0]|0;v=a[n+2>>0]|0;u=a[n+3>>0]|0;if((r|0)==244){if((t&-16)<<24>>24!=-128){s=2;break a}}else if((r|0)==240){if((t+112&255)>=48){s=2;break a}}else if((t&-64)<<24>>24!=-128){s=2;break a}w=v&255;if((w&192|0)!=128){s=2;break a}v=u&255;if((v&192|0)!=128){s=2;break a}if((l-e|0)<4){s=1;break a}u=r&7;x=t&255;t=w<<6;y=v&63;if((x<<12&258048|u<<18|t&4032|y)>>>0>k>>>0){s=2;break a}b[e>>1]=x<<2&60|w>>>4&3|((x>>>4&3|u<<2)<<6)+16320|55296;u=e+2|0;c[j>>2]=u;b[u>>1]=y|t&960|56320;c[g>>2]=(c[g>>2]|0)+4}while(0);e=(c[j>>2]|0)+2|0;c[j>>2]=e;r=c[g>>2]|0;if(r>>>0>=f>>>0){o=r;p=40;break}else n=r}}else{o=m;p=40}while(0);if((p|0)==40)s=o>>>0<f>>>0&1;return s|0}function Rn(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;if((((g&4|0)!=0?(c-b|0)>2:0)?(a[b>>0]|0)==-17:0)?(a[b+1>>0]|0)==-69:0)h=(a[b+2>>0]|0)==-65?b+3|0:b;else h=b;a:do if(h>>>0<c>>>0&(e|0)!=0){g=c;i=h;j=0;b:while(1){k=a[i>>0]|0;l=k&255;if(l>>>0>f>>>0){m=i;n=43;break a}do if(k<<24>>24>-1){o=i+1|0;p=j}else{if((k&255)<194){m=i;n=43;break a}if((k&255)<224){if((g-i|0)<2){m=i;n=43;break a}q=d[i+1>>0]|0;if((q&192|0)!=128){m=i;n=43;break a}if((q&63|l<<6&1984)>>>0>f>>>0){m=i;n=43;break a}o=i+2|0;p=j;break}if((k&255)<240){q=i;if((g-q|0)<3){m=i;n=43;break a}r=a[i+1>>0]|0;s=a[i+2>>0]|0;if((l|0)==237){if((r&-32)<<24>>24!=-128){t=q;n=23;break b}}else if((l|0)==224){if((r&-32)<<24>>24!=-96){u=q;n=21;break b}}else if((r&-64)<<24>>24!=-128){v=q;n=25;break b}q=s&255;if((q&192|0)!=128){m=i;n=43;break a}if(((r&255)<<6&4032|l<<12&61440|q&63)>>>0>f>>>0){m=i;n=43;break a}o=i+3|0;p=j;break}if((k&255)>=245){m=i;n=43;break a}q=i;if((g-q|0)<4|(e-j|0)>>>0<2){m=i;n=43;break a}r=a[i+1>>0]|0;s=a[i+2>>0]|0;w=a[i+3>>0]|0;if((l|0)==244){if((r&-16)<<24>>24!=-128){x=q;n=35;break b}}else if((l|0)==240){if((r+112&255)>=48){y=q;n=33;break b}}else if((r&-64)<<24>>24!=-128){z=q;n=37;break b}q=s&255;if((q&192|0)!=128){m=i;n=43;break a}s=w&255;if((s&192|0)!=128){m=i;n=43;break a}if(((r&255)<<12&258048|l<<18&1835008|q<<6&4032|s&63)>>>0>f>>>0){m=i;n=43;break a}o=i+4|0;p=j+1|0}while(0);j=p+1|0;if(!(o>>>0<c>>>0&j>>>0<e>>>0)){m=o;n=43;break a}else i=o}if((n|0)==21){A=u-b|0;break}else if((n|0)==23){A=t-b|0;break}else if((n|0)==25){A=v-b|0;break}else if((n|0)==33){A=y-b|0;break}else if((n|0)==35){A=x-b|0;break}else if((n|0)==37){A=z-b|0;break}}else{m=h;n=43}while(0);if((n|0)==43)A=m-b|0;return A|0}function Sn(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0;c[e>>2]=b;c[h>>2]=f;if(j&2)if((g-f|0)<3)k=1;else{c[h>>2]=f+1;a[f>>0]=-17;f=c[h>>2]|0;c[h>>2]=f+1;a[f>>0]=-69;f=c[h>>2]|0;c[h>>2]=f+1;a[f>>0]=-65;l=4}else l=4;a:do if((l|0)==4){f=c[e>>2]|0;if(f>>>0<d>>>0){j=g;b=f;while(1){f=c[b>>2]|0;if((f&-2048|0)==55296|f>>>0>i>>>0){k=2;break a}do if(f>>>0>=128){if(f>>>0<2048){m=c[h>>2]|0;if((j-m|0)<2){k=1;break a}c[h>>2]=m+1;a[m>>0]=f>>>6|192;m=c[h>>2]|0;c[h>>2]=m+1;a[m>>0]=f&63|128;break}m=c[h>>2]|0;n=j-m|0;if(f>>>0<65536){if((n|0)<3){k=1;break a}c[h>>2]=m+1;a[m>>0]=f>>>12|224;o=c[h>>2]|0;c[h>>2]=o+1;a[o>>0]=f>>>6&63|128;o=c[h>>2]|0;c[h>>2]=o+1;a[o>>0]=f&63|128;break}else{if((n|0)<4){k=1;break a}c[h>>2]=m+1;a[m>>0]=f>>>18|240;m=c[h>>2]|0;c[h>>2]=m+1;a[m>>0]=f>>>12&63|128;m=c[h>>2]|0;c[h>>2]=m+1;a[m>>0]=f>>>6&63|128;m=c[h>>2]|0;c[h>>2]=m+1;a[m>>0]=f&63|128;break}}else{m=c[h>>2]|0;if((j-m|0)<1){k=1;break a}c[h>>2]=m+1;a[m>>0]=f}while(0);b=(c[e>>2]|0)+4|0;c[e>>2]=b;if(b>>>0>=d>>>0){k=0;break}}}else k=0}while(0);return k|0}function Tn(b,e,f,g,h,i,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;c[f>>2]=b;c[i>>2]=g;g=c[f>>2]|0;if(((((k&4|0)!=0?(e-g|0)>2:0)?(a[g>>0]|0)==-17:0)?(a[g+1>>0]|0)==-69:0)?(a[g+2>>0]|0)==-65:0){k=g+3|0;c[f>>2]=k;l=k}else l=g;a:do if(l>>>0<e>>>0){g=e;k=c[i>>2]|0;b=l;while(1){if(k>>>0>=h>>>0){m=b;n=39;break a}o=a[b>>0]|0;p=o&255;do if(o<<24>>24>-1){if(p>>>0>j>>>0){q=2;break a}c[k>>2]=p;c[f>>2]=b+1}else{if((o&255)<194){q=2;break a}if((o&255)<224){if((g-b|0)<2){q=1;break a}r=d[b+1>>0]|0;if((r&192|0)!=128){q=2;break a}s=r&63|p<<6&1984;if(s>>>0>j>>>0){q=2;break a}c[k>>2]=s;c[f>>2]=b+2;break}if((o&255)<240){if((g-b|0)<3){q=1;break a}s=a[b+1>>0]|0;r=a[b+2>>0]|0;if((p|0)==224){if((s&-32)<<24>>24!=-96){q=2;break a}}else if((p|0)==237){if((s&-32)<<24>>24!=-128){q=2;break a}}else if((s&-64)<<24>>24!=-128){q=2;break a}t=r&255;if((t&192|0)!=128){q=2;break a}r=(s&255)<<6&4032|p<<12&61440|t&63;if(r>>>0>j>>>0){q=2;break a}c[k>>2]=r;c[f>>2]=b+3;break}if((o&255)>=245){q=2;break a}if((g-b|0)<4){q=1;break a}r=a[b+1>>0]|0;t=a[b+2>>0]|0;s=a[b+3>>0]|0;if((p|0)==240){if((r+112&255)>=48){q=2;break a}}else if((p|0)==244){if((r&-16)<<24>>24!=-128){q=2;break a}}else if((r&-64)<<24>>24!=-128){q=2;break a}u=t&255;if((u&192|0)!=128){q=2;break a}t=s&255;if((t&192|0)!=128){q=2;break a}s=(r&255)<<12&258048|p<<18&1835008|u<<6&4032|t&63;if(s>>>0>j>>>0){q=2;break a}c[k>>2]=s;c[f>>2]=b+4}while(0);k=(c[i>>2]|0)+4|0;c[i>>2]=k;p=c[f>>2]|0;if(p>>>0>=e>>>0){m=p;n=39;break}else b=p}}else{m=l;n=39}while(0);if((n|0)==39)q=m>>>0<e>>>0&1;return q|0}function Un(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;if((((g&4|0)!=0?(c-b|0)>2:0)?(a[b>>0]|0)==-17:0)?(a[b+1>>0]|0)==-69:0)h=(a[b+2>>0]|0)==-65?b+3|0:b;else h=b;a:do if(h>>>0<c>>>0&(e|0)!=0){g=c;i=h;j=0;b:while(1){k=a[i>>0]|0;l=k&255;do if(k<<24>>24>-1){if(l>>>0>f>>>0){m=i;n=43;break a}o=i+1|0}else{if((k&255)<194){m=i;n=43;break a}if((k&255)<224){if((g-i|0)<2){m=i;n=43;break a}p=d[i+1>>0]|0;if((p&192|0)!=128){m=i;n=43;break a}if((p&63|l<<6&1984)>>>0>f>>>0){m=i;n=43;break a}o=i+2|0;break}if((k&255)<240){p=i;if((g-p|0)<3){m=i;n=43;break a}q=a[i+1>>0]|0;r=a[i+2>>0]|0;if((l|0)==224){if((q&-32)<<24>>24!=-96){s=p;n=21;break b}}else if((l|0)==237){if((q&-32)<<24>>24!=-128){t=p;n=23;break b}}else if((q&-64)<<24>>24!=-128){u=p;n=25;break b}p=r&255;if((p&192|0)!=128){m=i;n=43;break a}if(((q&255)<<6&4032|l<<12&61440|p&63)>>>0>f>>>0){m=i;n=43;break a}o=i+3|0;break}if((k&255)>=245){m=i;n=43;break a}p=i;if((g-p|0)<4){m=i;n=43;break a}q=a[i+1>>0]|0;r=a[i+2>>0]|0;v=a[i+3>>0]|0;if((l|0)==240){if((q+112&255)>=48){w=p;n=33;break b}}else if((l|0)==244){if((q&-16)<<24>>24!=-128){x=p;n=35;break b}}else if((q&-64)<<24>>24!=-128){y=p;n=37;break b}p=r&255;if((p&192|0)!=128){m=i;n=43;break a}r=v&255;if((r&192|0)!=128){m=i;n=43;break a}if(((q&255)<<12&258048|l<<18&1835008|p<<6&4032|r&63)>>>0>f>>>0){m=i;n=43;break a}o=i+4|0}while(0);j=j+1|0;if(!(o>>>0<c>>>0&j>>>0<e>>>0)){m=o;n=43;break a}else i=o}if((n|0)==21){z=s-b|0;break}else if((n|0)==23){z=t-b|0;break}else if((n|0)==25){z=u-b|0;break}else if((n|0)==33){z=w-b|0;break}else if((n|0)==35){z=x-b|0;break}else if((n|0)==37){z=y-b|0;break}}else{m=h;n=43}while(0);if((n|0)==43)z=m-b|0;return z|0}function Vn(a){a=a|0;Oe(25372|0);Oe(25360|0);Oe(25348|0);Oe(25336|0);Oe(25324|0);Oe(25312|0);Oe(25300|0);Oe(25288|0);Oe(25276|0);Oe(25264|0);Oe(25252|0);Oe(25240|0);Oe(25228|0);Oe(25216);return}function Wn(a){a=a|0;af(24836|0);af(24824|0);af(24812|0);af(24800|0);af(24788|0);af(24776|0);af(24764|0);af(24752|0);af(24740|0);af(24728|0);af(24716|0);af(24704|0);af(24692|0);af(24680);return}function Xn(a){a=a|0;Oe(24444|0);Oe(24432|0);Oe(24420|0);Oe(24408|0);Oe(24396|0);Oe(24384|0);Oe(24372|0);Oe(24360|0);Oe(24348|0);Oe(24336|0);Oe(24324|0);Oe(24312|0);Oe(24300|0);Oe(24288|0);Oe(24276|0);Oe(24264|0);Oe(24252|0);Oe(24240|0);Oe(24228|0);Oe(24216|0);Oe(24204|0);Oe(24192|0);Oe(24180|0);Oe(24168);return}function Yn(a){a=a|0;af(23604|0);af(23592|0);af(23580|0);af(23568|0);af(23556|0);af(23544|0);af(23532|0);af(23520|0);af(23508|0);af(23496|0);af(23484|0);af(23472|0);af(23460|0);af(23448|0);af(23436|0);af(23424|0);af(23412|0);af(23400|0);af(23388|0);af(23376|0);af(23364|0);af(23352|0);af(23340|0);af(23328);return}function Zn(a){a=a|0;Oe(23292|0);Oe(23280|0);Oe(23268|0);Oe(23256|0);Oe(23244|0);Oe(23232|0);Oe(23220|0);Oe(23208|0);Oe(23196|0);Oe(23184|0);Oe(23172|0);Oe(23160|0);Oe(23148|0);Oe(23136|0);Oe(23124|0);Oe(23112|0);Oe(23100|0);Oe(23088|0);Oe(23076|0);Oe(23064|0);Oe(23052|0);Oe(23040|0);Oe(23028|0);Oe(23016);return}function _n(a){a=a|0;af(22964|0);af(22952|0);af(22940|0);af(22928|0);af(22916|0);af(22904|0);af(22892|0);af(22880|0);af(22868|0);af(22856|0);af(22844|0);af(22832|0);af(22820|0);af(22808|0);af(22796|0);af(22784|0);af(22772|0);af(22760|0);af(22748|0);af(22736|0);af(22724|0);af(22712|0);af(22700|0);af(22688);return}function $n(a){a=a|0;Ff(a);lp(a);return}function ao(b,d){b=b|0;d=d|0;var e=0;fc[c[(c[b>>2]|0)+24>>2]&127](b)|0;e=Ik(d,17944)|0;c[b+36>>2]=e;a[b+44>>0]=(fc[c[(c[e>>2]|0)+28>>2]&127](e)|0)&1;return}function bo(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;b=i;i=i+16|0;d=b+8|0;e=b;f=a+36|0;g=a+40|0;h=d+8|0;j=d;k=a+32|0;while(1){a=c[f>>2]|0;l=pc[c[(c[a>>2]|0)+20>>2]&15](a,c[g>>2]|0,d,h,e)|0;a=(c[e>>2]|0)-j|0;if((Pb(d|0,1,a|0,c[k>>2]|0)|0)!=(a|0)){m=-1;break}if((l|0)==2){m=-1;break}else if((l|0)!=1){n=4;break}}if((n|0)==4)m=((Ua(c[k>>2]|0)|0)!=0)<<31>>31;i=b;return m|0}function co(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;a:do if(!(a[b+44>>0]|0))if((e|0)>0){f=d;g=0;while(1){if((oc[c[(c[b>>2]|0)+52>>2]&15](b,c[f>>2]|0)|0)==-1){h=g;break a}i=g+1|0;if((i|0)<(e|0)){f=f+4|0;g=i}else{h=i;break}}}else h=0;else h=Pb(d|0,4,e|0,c[b+32>>2]|0)|0;while(0);return h|0}function eo(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+32|0;f=e+16|0;g=e+8|0;h=e+4|0;j=e;k=(d|0)==-1;a:do if(!k){c[g>>2]=d;if(a[b+44>>0]|0)if((Pb(g|0,4,1,c[b+32>>2]|0)|0)==1){l=11;break}else{m=-1;break}c[h>>2]=f;n=g+4|0;o=b+36|0;p=b+40|0;q=f+8|0;r=f;s=b+32|0;t=g;while(1){u=c[o>>2]|0;v=kc[c[(c[u>>2]|0)+12>>2]&15](u,c[p>>2]|0,t,n,j,f,q,h)|0;if((c[j>>2]|0)==(t|0)){m=-1;break a}if((v|0)==3){w=t;break}u=(v|0)==1;if(v>>>0>=2){m=-1;break a}v=(c[h>>2]|0)-r|0;if((Pb(f|0,1,v|0,c[s>>2]|0)|0)!=(v|0)){m=-1;break a}if(u)t=u?c[j>>2]|0:t;else{l=11;break a}}if((Pb(w|0,1,1,c[s>>2]|0)|0)!=1)m=-1;else l=11}else l=11;while(0);if((l|0)==11)m=k?0:d;i=e;return m|0}function fo(a){a=a|0;Ff(a);lp(a);return}function go(b,d){b=b|0;d=d|0;var e=0,f=0;e=Ik(d,17944)|0;d=b+36|0;c[d>>2]=e;f=b+44|0;c[f>>2]=fc[c[(c[e>>2]|0)+24>>2]&127](e)|0;e=c[d>>2]|0;a[b+53>>0]=(fc[c[(c[e>>2]|0)+28>>2]&127](e)|0)&1;if((c[f>>2]|0)>8)Qj(14568);else return}function ho(a){a=a|0;return Ho(a,0)|0}function io(a){a=a|0;return Ho(a,1)|0}function jo(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+32|0;f=e+16|0;g=e+8|0;h=e+4|0;j=e;k=b+52|0;l=(a[k>>0]|0)!=0;a:do if((d|0)==-1)if(l)m=-1;else{n=c[b+48>>2]|0;a[k>>0]=(n|0)!=-1&1;m=n}else{n=b+48|0;b:do if(l){c[h>>2]=c[n>>2];o=c[b+36>>2]|0;p=kc[c[(c[o>>2]|0)+12>>2]&15](o,c[b+40>>2]|0,h,h+4|0,j,f,f+8|0,g)|0;if((p|0)==1|(p|0)==2){m=-1;break a}else if((p|0)==3){a[f>>0]=c[n>>2];c[g>>2]=f+1}p=b+32|0;while(1){o=c[g>>2]|0;if(o>>>0<=f>>>0)break b;q=o+-1|0;c[g>>2]=q;if((Na(a[q>>0]|0,c[p>>2]|0)|0)==-1){m=-1;break a}}}while(0);c[n>>2]=d;a[k>>0]=1;m=d}while(0);i=e;return m|0}function ko(a){a=a|0;pf(a);lp(a);return}function lo(b,d){b=b|0;d=d|0;var e=0;fc[c[(c[b>>2]|0)+24>>2]&127](b)|0;e=Ik(d,17936)|0;c[b+36>>2]=e;a[b+44>>0]=(fc[c[(c[e>>2]|0)+28>>2]&127](e)|0)&1;return}function mo(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;b=i;i=i+16|0;d=b+8|0;e=b;f=a+36|0;g=a+40|0;h=d+8|0;j=d;k=a+32|0;while(1){a=c[f>>2]|0;l=pc[c[(c[a>>2]|0)+20>>2]&15](a,c[g>>2]|0,d,h,e)|0;a=(c[e>>2]|0)-j|0;if((Pb(d|0,1,a|0,c[k>>2]|0)|0)!=(a|0)){m=-1;break}if((l|0)==2){m=-1;break}else if((l|0)!=1){n=4;break}}if((n|0)==4)m=((Ua(c[k>>2]|0)|0)!=0)<<31>>31;i=b;return m|0}function no(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;a:do if(!(a[b+44>>0]|0))if((f|0)>0){g=e;h=0;while(1){if((oc[c[(c[b>>2]|0)+52>>2]&15](b,d[g>>0]|0)|0)==-1){i=h;break a}j=h+1|0;if((j|0)<(f|0)){g=g+1|0;h=j}else{i=j;break}}}else i=0;else i=Pb(e|0,1,f|0,c[b+32>>2]|0)|0;while(0);return i|0}function oo(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+32|0;f=e+16|0;g=e+8|0;h=e+4|0;j=e;k=(d|0)==-1;a:do if(!k){a[g>>0]=d;if(a[b+44>>0]|0)if((Pb(g|0,1,1,c[b+32>>2]|0)|0)==1){l=11;break}else{m=-1;break}c[h>>2]=f;n=g+1|0;o=b+36|0;p=b+40|0;q=f+8|0;r=f;s=b+32|0;t=g;while(1){u=c[o>>2]|0;v=kc[c[(c[u>>2]|0)+12>>2]&15](u,c[p>>2]|0,t,n,j,f,q,h)|0;if((c[j>>2]|0)==(t|0)){m=-1;break a}if((v|0)==3){w=t;break}u=(v|0)==1;if(v>>>0>=2){m=-1;break a}v=(c[h>>2]|0)-r|0;if((Pb(f|0,1,v|0,c[s>>2]|0)|0)!=(v|0)){m=-1;break a}if(u)t=u?c[j>>2]|0:t;else{l=11;break a}}if((Pb(w|0,1,1,c[s>>2]|0)|0)!=1)m=-1;else l=11}else l=11;while(0);if((l|0)==11)m=k?0:d;i=e;return m|0}function po(a){a=a|0;pf(a);lp(a);return}function qo(b,d){b=b|0;d=d|0;var e=0,f=0;e=Ik(d,17936)|0;d=b+36|0;c[d>>2]=e;f=b+44|0;c[f>>2]=fc[c[(c[e>>2]|0)+24>>2]&127](e)|0;e=c[d>>2]|0;a[b+53>>0]=(fc[c[(c[e>>2]|0)+28>>2]&127](e)|0)&1;if((c[f>>2]|0)>8)Qj(14568);else return}function ro(a){a=a|0;return Io(a,0)|0}function so(a){a=a|0;return Io(a,1)|0}function to(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+32|0;f=e+16|0;g=e+4|0;h=e+8|0;j=e;k=b+52|0;l=(a[k>>0]|0)!=0;a:do if((d|0)==-1)if(l)m=-1;else{n=c[b+48>>2]|0;a[k>>0]=(n|0)!=-1&1;m=n}else{n=b+48|0;b:do if(l){a[h>>0]=c[n>>2];o=c[b+36>>2]|0;p=kc[c[(c[o>>2]|0)+12>>2]&15](o,c[b+40>>2]|0,h,h+1|0,j,f,f+8|0,g)|0;if((p|0)==1|(p|0)==2){m=-1;break a}else if((p|0)==3){a[f>>0]=c[n>>2];c[g>>2]=f+1}p=b+32|0;while(1){o=c[g>>2]|0;if(o>>>0<=f>>>0)break b;q=o+-1|0;c[g>>2]=q;if((Na(a[q>>0]|0,c[p>>2]|0)|0)==-1){m=-1;break a}}}while(0);c[n>>2]=d;a[k>>0]=1;m=d}while(0);i=e;return m|0}function uo(a){a=a|0;lp(a);return}function vo(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+16|0;g=f;a:do if((a|0)==(b|0)){c[d>>2]=4;h=0}else{j=Db()|0;k=c[j>>2]|0;c[j>>2]=0;l=Oo(a,g,e,Wg()|0)|0;m=G;n=c[j>>2]|0;if(!n)c[j>>2]=k;if((c[g>>2]|0)!=(b|0)){c[d>>2]=4;h=0;break}do if((n|0)==34){c[d>>2]=4;if((m|0)>0|(m|0)==0&l>>>0>0){h=2147483647;break a}}else{if((m|0)<-1|(m|0)==-1&l>>>0<2147483648){c[d>>2]=4;break}if((m|0)>0|(m|0)==0&l>>>0>2147483647){c[d>>2]=4;h=2147483647;break a}else{h=l;break a}}while(0);h=-2147483648}while(0);i=f;return h|0}function wo(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+16|0;g=f;do if((a|0)!=(b|0)){h=Db()|0;j=c[h>>2]|0;c[h>>2]=0;k=Oo(a,g,e,Wg()|0)|0;l=G;m=c[h>>2]|0;if(!m)c[h>>2]=j;if((c[g>>2]|0)!=(b|0)){c[d>>2]=4;n=0;o=0;break}if((m|0)==34){c[d>>2]=4;m=(l|0)>0|(l|0)==0&k>>>0>0;G=m?2147483647:-2147483648;i=f;return (m?-1:0)|0}else{n=l;o=k}}else{c[d>>2]=4;n=0;o=0}while(0);G=n;i=f;return o|0}function xo(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;i=i+16|0;h=g;do if((b|0)!=(d|0)){if((a[b>>0]|0)==45){c[e>>2]=4;j=0;break}k=Db()|0;l=c[k>>2]|0;c[k>>2]=0;m=No(b,h,f,Wg()|0)|0;n=G;o=c[k>>2]|0;if(!o)c[k>>2]=l;if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;break}if((o|0)==34|(n>>>0>0|(n|0)==0&m>>>0>65535)){c[e>>2]=4;j=-1;break}else{j=m&65535;break}}else{c[e>>2]=4;j=0}while(0);i=g;return j|0}function yo(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;i=i+16|0;h=g;do if((b|0)!=(d|0)){if((a[b>>0]|0)==45){c[e>>2]=4;j=0;break}k=Db()|0;l=c[k>>2]|0;c[k>>2]=0;m=No(b,h,f,Wg()|0)|0;n=G;o=c[k>>2]|0;if(!o)c[k>>2]=l;if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;break}if((o|0)==34|(n>>>0>0|(n|0)==0&m>>>0>4294967295)){c[e>>2]=4;j=-1;break}else{j=m;break}}else{c[e>>2]=4;j=0}while(0);i=g;return j|0}function zo(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;i=i+16|0;h=g;do if((b|0)!=(d|0)){if((a[b>>0]|0)==45){c[e>>2]=4;j=0;break}k=Db()|0;l=c[k>>2]|0;c[k>>2]=0;m=No(b,h,f,Wg()|0)|0;n=G;o=c[k>>2]|0;if(!o)c[k>>2]=l;if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;break}if((o|0)==34|(n>>>0>0|(n|0)==0&m>>>0>4294967295)){c[e>>2]=4;j=-1;break}else{j=m;break}}else{c[e>>2]=4;j=0}while(0);i=g;return j|0}function Ao(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;i=i+16|0;h=g;do if((b|0)!=(d|0)){if((a[b>>0]|0)==45){c[e>>2]=4;j=0;k=0;break}l=Db()|0;m=c[l>>2]|0;c[l>>2]=0;n=No(b,h,f,Wg()|0)|0;o=c[l>>2]|0;if(!o)c[l>>2]=m;if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;k=0;break}if((o|0)==34){c[e>>2]=4;j=-1;k=-1}else{j=G;k=n}}else{c[e>>2]=4;j=0;k=0}while(0);G=j;i=g;return k|0}function Bo(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0.0,h=0,j=0,k=0.0,l=0;e=i;i=i+16|0;f=e;do if((a|0)==(b|0)){c[d>>2]=4;g=0.0}else{h=Db()|0;j=c[h>>2]|0;c[h>>2]=0;k=+Nq(a,f,Wg()|0);l=c[h>>2]|0;if(!l)c[h>>2]=j;if((c[f>>2]|0)!=(b|0)){c[d>>2]=4;g=0.0;break}if((l|0)==34)c[d>>2]=4;g=k}while(0);i=e;return +g}function Co(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0.0,k=0,l=0.0;e=i;i=i+16|0;f=e;do if((a|0)!=(b|0)){g=Db()|0;h=c[g>>2]|0;c[g>>2]=0;j=+Nq(a,f,Wg()|0);k=c[g>>2]|0;if(!k)c[g>>2]=h;if((c[f>>2]|0)!=(b|0)){c[d>>2]=4;l=0.0;break}if((k|0)==34){c[d>>2]=4;l=j}else l=j}else{c[d>>2]=4;l=0.0}while(0);i=e;return +l}function Do(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0.0,k=0,l=0.0;e=i;i=i+16|0;f=e;do if((a|0)!=(b|0)){g=Db()|0;h=c[g>>2]|0;c[g>>2]=0;j=+Nq(a,f,Wg()|0);k=c[g>>2]|0;if(!k)c[g>>2]=h;if((c[f>>2]|0)!=(b|0)){c[d>>2]=4;l=0.0;break}if((k|0)==34){c[d>>2]=4;l=j}else l=j}else{c[d>>2]=4;l=0.0}while(0);i=e;return +l}function Eo(b,d){b=b|0;d=d|0;var e=0,f=0;if(d>>>0>1073741823)uk(b);e=b+128|0;if((a[e>>0]|0)==0&d>>>0<29){a[e>>0]=1;f=b+16|0}else f=jp(d<<2)|0;c[b+4>>2]=f;c[b>>2]=f;c[b+8>>2]=f+(d<<2);return}function Fo(a,b){a=a|0;b=b|0;var d=0,e=0;d=a+4|0;a=b;b=c[d>>2]|0;do{if(!b)e=0;else{c[b>>2]=0;e=c[d>>2]|0}b=e+4|0;c[d>>2]=b;a=a+-1|0}while((a|0)!=0);return}function Go(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+32|0;e=d;f=c[a+8>>2]|0;g=c[a+4>>2]|0;if(f-g>>2>>>0<b>>>0){h=c[a>>2]|0;j=g-h>>2;g=j+b|0;if(g>>>0>1073741823)uk(a);k=f-h|0;if(k>>2>>>0<536870911){h=k>>1;l=h>>>0<g>>>0?g:h}else l=1073741823;Jo(e,l,j,a+16|0);Ko(e,b);Lo(a,e);Mo(e)}else Fo(a,b);i=d;return}function Ho(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;e=i;i=i+32|0;f=e+16|0;g=e+8|0;h=e+4|0;j=e;k=b+52|0;a:do if(a[k>>0]|0){l=b+48|0;m=c[l>>2]|0;if(d){c[l>>2]=-1;a[k>>0]=0;n=m}else n=m}else{m=c[b+44>>2]|0;l=(m|0)>1?m:1;if((l|0)>0){m=b+32|0;o=0;do{p=zb(c[m>>2]|0)|0;if((p|0)==-1){n=-1;break a}a[f+o>>0]=p;o=o+1|0}while((o|0)<(l|0))}b:do if(!(a[b+53>>0]|0)){o=b+40|0;m=b+36|0;p=g+4|0;q=b+32|0;r=l;while(1){s=c[o>>2]|0;t=s;u=c[t>>2]|0;v=c[t+4>>2]|0;t=c[m>>2]|0;w=f+r|0;x=kc[c[(c[t>>2]|0)+16>>2]&15](t,s,f,w,h,g,p,j)|0;if((x|0)==3){y=r;break}else if((x|0)==2){n=-1;break a}else if((x|0)!=1){z=r;break b}x=c[o>>2]|0;c[x>>2]=u;c[x+4>>2]=v;if((r|0)==8){n=-1;break a}v=zb(c[q>>2]|0)|0;if((v|0)==-1){n=-1;break a}a[w>>0]=v;r=r+1|0}c[g>>2]=a[f>>0];z=y}else{c[g>>2]=a[f>>0];z=l}while(0);if(d){l=c[g>>2]|0;c[b+48>>2]=l;n=l;break}l=b+32|0;r=z;while(1){if((r|0)<=0)break;r=r+-1|0;if((Na(a[f+r>>0]|0,c[l>>2]|0)|0)==-1){n=-1;break a}}n=c[g>>2]|0}while(0);i=e;return n|0}function Io(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;f=i;i=i+32|0;g=f+16|0;h=f+8|0;j=f+4|0;k=f;l=b+52|0;a:do if(a[l>>0]|0){m=b+48|0;n=c[m>>2]|0;if(e){c[m>>2]=-1;a[l>>0]=0;o=n}else o=n}else{n=c[b+44>>2]|0;m=(n|0)>1?n:1;if((m|0)>0){n=b+32|0;p=0;do{q=zb(c[n>>2]|0)|0;if((q|0)==-1){o=-1;break a}a[g+p>>0]=q;p=p+1|0}while((p|0)<(m|0))}b:do if(!(a[b+53>>0]|0)){p=b+40|0;n=b+36|0;q=h+1|0;r=b+32|0;s=m;while(1){t=c[p>>2]|0;u=t;v=c[u>>2]|0;w=c[u+4>>2]|0;u=c[n>>2]|0;x=g+s|0;y=kc[c[(c[u>>2]|0)+16>>2]&15](u,t,g,x,j,h,q,k)|0;if((y|0)==2){o=-1;break a}else if((y|0)==3){z=s;break}else if((y|0)!=1){A=s;break b}y=c[p>>2]|0;c[y>>2]=v;c[y+4>>2]=w;if((s|0)==8){o=-1;break a}w=zb(c[r>>2]|0)|0;if((w|0)==-1){o=-1;break a}a[x>>0]=w;s=s+1|0}a[h>>0]=a[g>>0]|0;A=z}else{a[h>>0]=a[g>>0]|0;A=m}while(0);if(e){m=a[h>>0]|0;c[b+48>>2]=m&255;B=m}else{m=b+32|0;s=A;while(1){if((s|0)<=0)break;s=s+-1|0;if((Na(d[g+s>>0]|0,c[m>>2]|0)|0)==-1){o=-1;break a}}B=a[h>>0]|0}o=B&255}while(0);i=f;return o|0}function Jo(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;g=b+12|0;c[g>>2]=0;c[b+16>>2]=f;do if(d){h=f+112|0;if((a[h>>0]|0)==0&d>>>0<29){a[h>>0]=1;i=f;break}else{i=jp(d<<2)|0;break}}else i=0;while(0);c[b>>2]=i;f=i+(e<<2)|0;c[b+8>>2]=f;c[b+4>>2]=f;c[g>>2]=i+(d<<2);return}function Ko(a,b){a=a|0;b=b|0;var d=0,e=0;d=a+8|0;a=b;b=c[d>>2]|0;do{if(!b)e=0;else{c[b>>2]=0;e=c[d>>2]|0}b=e+4|0;c[d>>2]=b;a=a+-1|0}while((a|0)!=0);return}function Lo(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[a>>2]|0;e=a+4|0;f=b+4|0;g=(c[e>>2]|0)-d|0;h=(c[f>>2]|0)+(0-(g>>2)<<2)|0;c[f>>2]=h;$q(h|0,d|0,g|0)|0;g=c[a>>2]|0;c[a>>2]=c[f>>2];c[f>>2]=g;g=b+8|0;d=c[e>>2]|0;c[e>>2]=c[g>>2];c[g>>2]=d;d=a+8|0;a=b+12|0;g=c[d>>2]|0;c[d>>2]=c[a>>2];c[a>>2]=g;c[b>>2]=c[f>>2];return}function Mo(b){b=b|0;var d=0,e=0,f=0;d=c[b+4>>2]|0;e=b+8|0;f=c[e>>2]|0;if((f|0)!=(d|0))c[e>>2]=f+(~((f+-4-d|0)>>>2)<<2);d=c[b>>2]|0;do if(d){f=c[b+16>>2]|0;if((f|0)==(d|0)){a[f+112>>0]=0;break}else{lp(d);break}}while(0);return}function No(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;d=Oq(a,b,c)|0;return d|0}function Oo(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;d=Pq(a,b,c)|0;return d|0}function Po(a,b){a=a|0;b=b|0;return (a+-48|0)>>>0<10|0}function Qo(a,b){a=a|0;b=b|0;return oq(a)|0}function Ro(a,b,c){a=a|0;b=b|0;c=c|0;return So(0,a,b,(c|0)!=0?c:25736)|0}function So(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;g=i;i=i+16|0;h=g;c[h>>2]=b;j=(f|0)==0?25744:f;f=c[j>>2]|0;a:do if(!d){if(!f){k=0;i=g;return k|0}}else{if(!b){c[h>>2]=h;l=h}else l=b;if(!e){k=-2;i=g;return k|0}do if(!f){m=a[d>>0]|0;n=m&255;if(m<<24>>24>-1){c[l>>2]=n;k=m<<24>>24!=0&1;i=g;return k|0}else{m=n+-194|0;if(m>>>0>50)break a;o=e+-1|0;p=c[25528+(m<<2)>>2]|0;q=d+1|0;break}}else{o=e;p=f;q=d}while(0);b:do if(!o)r=p;else{m=a[q>>0]|0;n=(m&255)>>>3;if((n+-16|n+(p>>26))>>>0>7)break a;else{s=o;t=m;u=p;v=q}while(1){v=v+1|0;u=(t&255)+-128|u<<6;s=s+-1|0;if((u|0)>=0){w=u;x=s;break}if(!s){r=u;break b}t=a[v>>0]|0;if((t&-64)<<24>>24!=-128)break a}c[j>>2]=0;c[l>>2]=w;k=e-x|0;i=g;return k|0}while(0);c[j>>2]=r;k=-2;i=g;return k|0}while(0);c[j>>2]=0;c[(Db()|0)>>2]=84;k=-1;i=g;return k|0}function To(a){a=a|0;var b=0;if(!a)b=1;else b=(c[a>>2]|0)==0;return b&1|0}function Uo(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;g=i;i=i+1040|0;h=g+8|0;j=g;k=c[b>>2]|0;c[j>>2]=k;l=(a|0)!=0;m=l?e:256;e=l?a:h;a:do if((k|0)!=0&(m|0)!=0){a=m;n=d;o=k;p=0;q=e;while(1){r=n>>>2;s=r>>>0>=a>>>0;if(!(s|n>>>0>131)){t=n;u=a;v=o;w=p;x=q;y=7;break a}z=s?a:r;r=n-z|0;s=Vo(q,j,z,f)|0;if((s|0)==-1){A=-1;break a}if((q|0)==(h|0)){B=a;C=h}else{B=a-s|0;C=q+(s<<2)|0}z=s+p|0;s=c[j>>2]|0;if((s|0)!=0&(B|0)!=0){a=B;n=r;o=s;p=z;q=C}else{t=r;u=B;v=s;w=z;x=C;y=7;break}}}else{t=d;u=m;v=k;w=0;x=e;y=7}while(0);b:do if((y|0)==7)if((v|0)!=0&(u|0)!=0&(t|0)!=0){e=t;k=u;m=v;d=w;C=x;while(1){B=So(C,m,e,f)|0;if((B+2|0)>>>0<3){D=B;E=d;break}m=(c[j>>2]|0)+B|0;c[j>>2]=m;k=k+-1|0;h=d+1|0;if(!((k|0)!=0&(e|0)!=(B|0))){A=h;break b}else{e=e-B|0;d=h;C=C+4|0}}if(!D){c[j>>2]=0;A=E;break}else if((D|0)==-1){A=-1;break}else{c[f>>2]=0;A=E;break}}else A=w;while(0);if(!l){i=g;return A|0}c[b>>2]=c[j>>2];i=g;return A|0}function Vo(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0;h=c[e>>2]|0;if((g|0)!=0?(i=c[g>>2]|0,(i|0)!=0):0)if(!b){j=f;k=i;l=h;m=16}else{c[g>>2]=0;n=b;o=f;p=i;q=h;m=36}else if(!b){r=f;s=h;m=7}else{t=b;u=f;v=h;m=6}a:while(1)if((m|0)==6){m=0;if(!u){w=v;m=26;break}else{x=t;y=u;z=v}while(1){h=a[z>>0]|0;b:do if(((h&255)+-1|0)>>>0<127?(z&3|0)==0&y>>>0>4:0){i=x;g=y;A=z;while(1){B=c[A>>2]|0;if((B+-16843009|B)&-2139062144){C=i;D=g;E=B&255;F=A;break b}c[i>>2]=B&255;c[i+4>>2]=d[A+1>>0];c[i+8>>2]=d[A+2>>0];B=A+4|0;G=i+16|0;c[i+12>>2]=d[A+3>>0];H=g+-4|0;if(H>>>0>4){i=G;g=H;A=B}else{I=B;J=G;K=H;break}}C=J;D=K;E=a[I>>0]|0;F=I}else{C=x;D=y;E=h;F=z}while(0);h=E&255;if((h+-1|0)>>>0>=127){L=C;M=D;N=h;O=F;break}A=F+1|0;c[C>>2]=h;y=D+-1|0;if(!y){w=A;m=26;break a}else{x=C+4|0;z=A}}A=N+-194|0;if(A>>>0>50){P=L;Q=M;R=O;m=47;break}n=L;o=M;p=c[25528+(A<<2)>>2]|0;q=O+1|0;m=36;continue}else if((m|0)==7){m=0;A=a[s>>0]|0;if(((A&255)+-1|0)>>>0<127?(s&3|0)==0:0){h=c[s>>2]|0;if(!((h+-16843009|h)&-2139062144)){g=r;i=s;while(1){H=i+4|0;G=g+-4|0;B=c[H>>2]|0;if(!((B+-16843009|B)&-2139062144)){g=G;i=H}else{S=G;T=B;U=H;break}}}else{S=r;T=h;U=s}V=S;W=T&255;X=U}else{V=r;W=A;X=s}i=W&255;if((i+-1|0)>>>0<127){r=V+-1|0;s=X+1|0;m=7;continue}else{Y=V;Z=i;_=X}i=Z+-194|0;if(i>>>0>50){P=b;Q=Y;R=_;m=47;break}j=Y;k=c[25528+(i<<2)>>2]|0;l=_+1|0;m=16;continue}else if((m|0)==16){m=0;i=(d[l>>0]|0)>>>3;if((i+-16|i+(k>>26))>>>0>7){m=17;break}i=l+1|0;if(k&33554432){if((a[i>>0]&-64)<<24>>24!=-128){m=20;break}g=l+2|0;if(!(k&524288))$=g;else{if((a[g>>0]&-64)<<24>>24!=-128){m=23;break}$=l+3|0}}else $=i;r=j+-1|0;s=$;m=7;continue}else if((m|0)==36){m=0;i=d[q>>0]|0;g=i>>>3;if((g+-16|g+(p>>26))>>>0>7){m=37;break}g=q+1|0;aa=i+-128|p<<6;if((aa|0)<0){i=d[g>>0]|0;if((i&192|0)!=128){m=40;break}H=q+2|0;ba=i+-128|aa<<6;if((ba|0)<0){i=d[H>>0]|0;if((i&192|0)!=128){m=43;break}ca=i+-128|ba<<6;da=q+3|0}else{ca=ba;da=H}}else{ca=aa;da=g}c[n>>2]=ca;t=n+4|0;u=o+-1|0;v=da;m=6;continue}if((m|0)==17){ea=b;fa=j;ga=k;ha=l+-1|0;m=46}else if((m|0)==20){ea=b;fa=j;ga=k;ha=l+-1|0;m=46}else if((m|0)==23){ea=b;fa=j;ga=k;ha=l+-1|0;m=46}else if((m|0)==26){c[e>>2]=w;ia=f;return ia|0}else if((m|0)==37){ea=n;fa=o;ga=p;ha=q+-1|0;m=46}else if((m|0)==40){ea=n;fa=o;ga=aa;ha=q+-1|0;m=46}else if((m|0)==43){ea=n;fa=o;ga=ba;ha=q+-1|0;m=46}if((m|0)==46)if(!ga){P=ea;Q=fa;R=ha;m=47}else{ja=ea;ka=ha}if((m|0)==47)if(!(a[R>>0]|0)){if(P){c[P>>2]=0;c[e>>2]=0}ia=f-Q|0;return ia|0}else{ja=P;ka=R}c[(Db()|0)>>2]=84;if(!ja){ia=-1;return ia|0}c[e>>2]=ka;ia=-1;return ia|0}function Wo(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+16|0;h=g;c[h>>2]=b;if(!e){j=0;i=g;return j|0}do if(f){if(!b){c[h>>2]=h;k=h}else k=b;l=a[e>>0]|0;m=l&255;if(l<<24>>24>-1){c[k>>2]=m;j=l<<24>>24!=0&1;i=g;return j|0}l=m+-194|0;if(l>>>0<=50){m=e+1|0;n=c[25528+(l<<2)>>2]|0;if(f>>>0<4?(n&-2147483648>>>((f*6|0)+-6|0)|0)!=0:0)break;l=d[m>>0]|0;m=l>>>3;if((m+-16|m+(n>>26))>>>0<=7){m=l+-128|n<<6;if((m|0)>=0){c[k>>2]=m;j=2;i=g;return j|0}n=d[e+2>>0]|0;if((n&192|0)==128){l=n+-128|m<<6;if((l|0)>=0){c[k>>2]=l;j=3;i=g;return j|0}m=d[e+3>>0]|0;if((m&192|0)==128){c[k>>2]=m+-128|l<<6;j=4;i=g;return j|0}}}}}while(0);c[(Db()|0)>>2]=84;j=-1;i=g;return j|0}function Xo(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;f=i;i=i+272|0;g=f+8|0;h=f;j=c[b>>2]|0;c[h>>2]=j;k=(a|0)!=0;l=k?e:256;e=k?a:g;a:do if((j|0)!=0&(l|0)!=0){a=l;m=d;n=j;o=0;p=e;while(1){q=m>>>0>=a>>>0;if(!(q|m>>>0>32)){r=m;s=a;t=n;u=o;v=p;w=7;break a}x=q?a:m;q=m-x|0;y=Yo(p,h,x,0)|0;if((y|0)==-1){z=-1;break a}if((p|0)==(g|0)){A=a;B=g}else{A=a-y|0;B=p+y|0}x=y+o|0;y=c[h>>2]|0;if((y|0)!=0&(A|0)!=0){a=A;m=q;n=y;o=x;p=B}else{r=q;s=A;t=y;u=x;v=B;w=7;break}}}else{r=d;s=l;t=j;u=0;v=e;w=7}while(0);b:do if((w|0)==7)if((t|0)!=0&(s|0)!=0&(r|0)!=0){e=r;j=s;l=t;d=u;B=v;while(1){A=Cq(B,c[l>>2]|0,0)|0;if((A+1|0)>>>0<2){C=A;D=d;break}l=(c[h>>2]|0)+4|0;c[h>>2]=l;e=e+-1|0;g=d+1|0;if(!((j|0)!=(A|0)&(e|0)!=0)){z=g;break b}else{j=j-A|0;d=g;B=B+A|0}}if(!C){c[h>>2]=0;z=D}else z=-1}else z=u;while(0);if(!k){i=f;return z|0}c[b>>2]=c[h>>2];i=f;return z|0}function Yo(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;f=i;i=i+16|0;g=f;if(!b){h=c[d>>2]|0;j=c[h>>2]|0;if(!j){k=0;i=f;return k|0}else{l=0;m=j;n=h}while(1){if(m>>>0>127){h=Cq(g,m,0)|0;if((h|0)==-1){k=-1;o=26;break}else p=h}else p=1;h=p+l|0;n=n+4|0;m=c[n>>2]|0;if(!m){k=h;o=26;break}else l=h}if((o|0)==26){i=f;return k|0}}a:do if(e>>>0>3){l=b;m=e;n=c[d>>2]|0;while(1){p=c[n>>2]|0;if((p+-1|0)>>>0>126){if(!p){q=l;r=m;break}h=Cq(l,p,0)|0;if((h|0)==-1){k=-1;o=26;break}s=l+h|0;t=m-h|0;u=n}else{a[l>>0]=p;s=l+1|0;t=m+-1|0;u=c[d>>2]|0}n=u+4|0;c[d>>2]=n;if(t>>>0<=3){v=s;w=t;break a}else{l=s;m=t}}if((o|0)==26){i=f;return k|0}a[q>>0]=0;c[d>>2]=0;k=e-r|0;i=f;return k|0}else{v=b;w=e}while(0);if(!w){k=e;i=f;return k|0}b=v;v=w;w=c[d>>2]|0;while(1){r=c[w>>2]|0;if((r+-1|0)>>>0>126){if(!r){x=b;y=v;o=19;break}q=Cq(g,r,0)|0;if((q|0)==-1){k=-1;o=26;break}if(v>>>0<q>>>0){z=v;o=22;break}Cq(b,c[w>>2]|0,0)|0;A=b+q|0;B=v-q|0;C=w}else{a[b>>0]=r;A=b+1|0;B=v+-1|0;C=c[d>>2]|0}w=C+4|0;c[d>>2]=w;if(!B){k=e;o=26;break}else{b=A;v=B}}if((o|0)==19){a[x>>0]=0;c[d>>2]=0;k=e-y|0;i=f;return k|0}else if((o|0)==22){k=e-z|0;i=f;return k|0}else if((o|0)==26){i=f;return k|0}return 0}function Zo(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=a+84|0;f=c[e>>2]|0;g=d+256|0;h=Qq(f,0,g)|0;if(!h)i=g;else i=h-f|0;h=i>>>0<d>>>0?i:d;$q(b|0,f|0,h|0)|0;c[a+4>>2]=f+h;b=f+i|0;c[a+8>>2]=b;c[e>>2]=b;return h|0}function _o(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;f=e;c[f>>2]=d;d=bp(a,b,f)|0;i=e;return d|0}function $o(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+16|0;f=e;g=kq(240)|0;do if(g){c[f>>2]=c[d>>2];h=Lq(g,240,b,f)|0;if(h>>>0<240){j=mq(g,h+1|0)|0;c[a>>2]=(j|0)!=0?j:g;k=h;break}lq(g);if((h|0)>=0?(j=h+1|0,h=kq(j)|0,c[a>>2]=h,(h|0)!=0):0)k=Lq(h,j,b,d)|0;else k=-1}else k=-1;while(0);i=e;return k|0}function ap(e,f,j){e=e|0;f=f|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0.0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0;k=i;i=i+304|0;l=k+16|0;m=k+8|0;n=k+33|0;o=k;p=k+32|0;q=a[f>>0]|0;if(!(q<<24>>24)){r=0;i=k;return r|0}s=e+4|0;t=e+100|0;u=e+108|0;v=e+8|0;w=n+10|0;x=n+33|0;y=m+4|0;z=n+46|0;A=n+94|0;B=q;q=0;C=f;f=0;D=0;E=0;a:while(1){b:do if(!(nq(B&255)|0)){F=(a[C>>0]|0)==37;c:do if(F){H=C+1|0;I=a[H>>0]|0;do if(I<<24>>24==42){J=0;K=C+2|0}else if(I<<24>>24==37)break c;else{L=(I&255)+-48|0;if(L>>>0<10?(a[C+2>>0]|0)==36:0){c[l>>2]=c[j>>2];M=L;while(1){L=c[l>>2]|0;N=c[L>>2]|0;c[l>>2]=L+4;if(M>>>0>1)M=M+-1|0;else{O=N;break}}J=O;K=C+3|0;break}M=c[j>>2]|0;N=c[M>>2]|0;c[j>>2]=M+4;J=N;K=H}while(0);H=a[K>>0]|0;I=H&255;if((I+-48|0)>>>0<10){N=I;I=K;M=0;while(1){L=(M*10|0)+-48+N|0;P=I+1|0;Q=a[P>>0]|0;N=Q&255;if((N+-48|0)>>>0>=10){R=Q;S=P;T=L;break}else{I=P;M=L}}}else{R=H;S=K;T=0}if(R<<24>>24==109){M=S+1|0;U=a[M>>0]|0;V=(J|0)!=0&1;W=M;X=0;Y=0}else{U=R;V=0;W=S;X=D;Y=E}M=W+1|0;switch(U&255|0){case 108:{I=(a[M>>0]|0)==108;Z=I?W+2|0:M;_=I?3:1;break}case 116:case 122:{Z=M;_=1;break}case 76:{Z=M;_=2;break}case 104:{I=(a[M>>0]|0)==104;Z=I?W+2|0:M;_=I?-2:-1;break}case 106:{Z=M;_=3;break}case 110:case 112:case 67:case 83:case 91:case 99:case 115:case 88:case 71:case 70:case 69:case 65:case 103:case 102:case 101:case 97:case 120:case 117:case 111:case 105:case 100:{Z=W;_=0;break}default:{$=V;aa=q;ba=X;ca=Y;da=163;break a}}M=d[Z>>0]|0;I=(M&47|0)==3;N=I?M|32:M;M=I?1:_;if((N|0)==99){ea=f;fa=(T|0)<1?1:T}else if((N|0)==91){ea=f;fa=T}else if((N|0)==110){if(!J){ga=q;ha=Z;ia=f;ja=X;ka=Y;break b}switch(M|0){case 3:{I=J;c[I>>2]=f;c[I+4>>2]=((f|0)<0)<<31>>31;ga=q;ha=Z;ia=f;ja=X;ka=Y;break b;break}case 0:{c[J>>2]=f;ga=q;ha=Z;ia=f;ja=X;ka=Y;break b;break}case 1:{c[J>>2]=f;ga=q;ha=Z;ia=f;ja=X;ka=Y;break b;break}case -2:{a[J>>0]=f;ga=q;ha=Z;ia=f;ja=X;ka=Y;break b;break}case -1:{b[J>>1]=f;ga=q;ha=Z;ia=f;ja=X;ka=Y;break b;break}default:{ga=q;ha=Z;ia=f;ja=X;ka=Y;break b}}}else{rq(e,0);do{I=c[s>>2]|0;if(I>>>0<(c[t>>2]|0)>>>0){c[s>>2]=I+1;la=d[I>>0]|0}else la=sq(e)|0}while((nq(la)|0)!=0);H=c[s>>2]|0;if(!(c[t>>2]|0))ma=H;else{I=H+-1|0;c[s>>2]=I;ma=I}ea=(c[u>>2]|0)+f+ma-(c[v>>2]|0)|0;fa=T}rq(e,fa);I=c[s>>2]|0;H=c[t>>2]|0;if(I>>>0<H>>>0){c[s>>2]=I+1;na=H}else{if((sq(e)|0)<0){$=V;aa=q;ba=X;ca=Y;da=163;break a}na=c[t>>2]|0}if(na)c[s>>2]=(c[s>>2]|0)+-1;d:do switch(N|0){case 91:case 99:case 115:{H=(N|0)==99;e:do if((N&239|0)==99){cr(n|0,-1,257)|0;a[n>>0]=0;if((N|0)==115){a[x>>0]=0;a[w+0>>0]=0;a[w+1>>0]=0;a[w+2>>0]=0;a[w+3>>0]=0;a[w+4>>0]=0;oa=Z}else oa=Z}else{I=Z+1|0;L=(a[I>>0]|0)==94;P=L&1;Q=L?I:Z;pa=L?Z+2|0:I;cr(n|0,L&1|0,257)|0;a[n>>0]=0;L=a[pa>>0]|0;if(L<<24>>24==45){I=(P^1)&255;a[z>>0]=I;qa=I;ra=Q+2|0}else if(L<<24>>24==93){L=(P^1)&255;a[A>>0]=L;qa=L;ra=Q+2|0}else{qa=(P^1)&255;ra=pa}pa=ra;while(1){P=a[pa>>0]|0;if(P<<24>>24==45){Q=pa+1|0;L=a[Q>>0]|0;if(!(L<<24>>24==93|L<<24>>24==0)){I=a[pa+-1>>0]|0;if((I&255)<(L&255)){sa=I&255;do{sa=sa+1|0;a[n+sa>>0]=qa;I=a[Q>>0]|0}while((sa|0)<(I&255|0));ta=I;ua=Q}else{ta=L;ua=Q}}else{ta=45;ua=pa}}else if(P<<24>>24==93){oa=pa;break e}else if(!(P<<24>>24)){$=V;aa=q;ba=X;ca=Y;da=163;break a}else{ta=P;ua=pa}a[n+((ta&255)+1)>>0]=qa;pa=ua+1|0}}while(0);pa=H?fa+1|0:31;sa=(M|0)==1;I=(V|0)!=0;f:do if(sa){if(I){va=kq(pa<<2)|0;if(!va){$=V;aa=q;ba=0;ca=va;da=163;break a}else wa=va}else wa=J;c[m>>2]=0;c[y>>2]=0;va=0;xa=pa;ya=wa;g:while(1){if(!ya)while(1){za=c[s>>2]|0;if(za>>>0<(c[t>>2]|0)>>>0){c[s>>2]=za+1;Aa=d[za>>0]|0}else Aa=sq(e)|0;if(!(a[n+(Aa+1)>>0]|0)){Ba=va;Ca=0;break g}a[p>>0]=Aa;za=So(o,p,1,m)|0;if((za|0)==-2)continue;else if((za|0)==-1){$=V;aa=q;ba=0;ca=0;da=163;break a}if(I&(va|0)==(xa|0)){Da=va;break}}else{if(I)Ea=va;else{Fa=va;Ga=ya;da=85;break}while(1){while(1){P=c[s>>2]|0;if(P>>>0<(c[t>>2]|0)>>>0){c[s>>2]=P+1;Ha=d[P>>0]|0}else Ha=sq(e)|0;if(!(a[n+(Ha+1)>>0]|0)){Ba=Ea;Ca=ya;break g}a[p>>0]=Ha;P=So(o,p,1,m)|0;if((P|0)==-1){$=V;aa=q;ba=0;ca=ya;da=163;break a}else if((P|0)!=-2)break}c[ya+(Ea<<2)>>2]=c[o>>2];Ea=Ea+1|0;if((Ea|0)==(xa|0)){Da=xa;break}}}P=xa<<1|1;Q=mq(ya,P<<2)|0;if(!Q){$=V;aa=q;ba=0;ca=ya;da=163;break a}va=Da;xa=P;ya=Q}h:do if((da|0)==85){da=0;ya=Fa;while(1){while(1){xa=c[s>>2]|0;if(xa>>>0<(c[t>>2]|0)>>>0){c[s>>2]=xa+1;Ia=d[xa>>0]|0}else Ia=sq(e)|0;if(!(a[n+(Ia+1)>>0]|0)){Ba=ya;Ca=Ga;break h}a[p>>0]=Ia;xa=So(o,p,1,m)|0;if((xa|0)==-1){$=0;aa=q;ba=0;ca=Ga;da=163;break a}else if((xa|0)!=-2)break}c[Ga+(ya<<2)>>2]=c[o>>2];ya=ya+1|0}}while(0);if(!(To(m)|0)){$=V;aa=q;ba=0;ca=Ca;da=163;break a}else{Ja=Ba;Ka=0;La=Ca}}else{if(I){ya=kq(pa)|0;if(!ya){$=V;aa=q;ba=0;ca=0;da=163;break a}else{Ma=0;Na=pa;Oa=ya}while(1){ya=Ma;do{xa=c[s>>2]|0;if(xa>>>0<(c[t>>2]|0)>>>0){c[s>>2]=xa+1;Pa=d[xa>>0]|0}else Pa=sq(e)|0;if(!(a[n+(Pa+1)>>0]|0)){Ja=ya;Ka=Oa;La=0;break f}a[Oa+ya>>0]=Pa;ya=ya+1|0}while((ya|0)!=(Na|0));ya=Na<<1|1;xa=mq(Oa,ya)|0;if(!xa){$=V;aa=q;ba=Oa;ca=0;da=163;break a}else{va=Na;Na=ya;Oa=xa;Ma=va}}}if(!J){va=na;while(1){xa=c[s>>2]|0;if(xa>>>0<va>>>0){c[s>>2]=xa+1;Qa=d[xa>>0]|0}else Qa=sq(e)|0;if(!(a[n+(Qa+1)>>0]|0)){Ja=0;Ka=0;La=0;break f}va=c[t>>2]|0}}else{va=na;xa=0;while(1){ya=c[s>>2]|0;if(ya>>>0<va>>>0){c[s>>2]=ya+1;Ra=d[ya>>0]|0}else Ra=sq(e)|0;if(!(a[n+(Ra+1)>>0]|0)){Ja=xa;Ka=J;La=0;break f}a[J+xa>>0]=Ra;va=c[t>>2]|0;xa=xa+1|0}}}while(0);pa=c[s>>2]|0;if(!(c[t>>2]|0))Sa=pa;else{xa=pa+-1|0;c[s>>2]=xa;Sa=xa}xa=Sa-(c[v>>2]|0)+(c[u>>2]|0)|0;if(!xa){Ta=V;Ua=q;Va=Ka;Wa=La;break a}if(!((xa|0)==(fa|0)|H^1)){Ta=V;Ua=q;Va=Ka;Wa=La;break a}do if(I)if(sa){c[J>>2]=La;break}else{c[J>>2]=Ka;break}while(0);if(!H){if(La)c[La+(Ja<<2)>>2]=0;if(!Ka){Xa=oa;Ya=0;Za=La}else{a[Ka+Ja>>0]=0;Xa=oa;Ya=Ka;Za=La}}else{Xa=oa;Ya=Ka;Za=La}break}case 111:{_a=8;da=145;break}case 117:case 100:{_a=10;da=145;break}case 105:{_a=0;da=145;break}case 120:case 88:case 112:{_a=16;da=145;break}case 71:case 103:case 70:case 102:case 69:case 101:case 65:case 97:{$a=+qq(e,M,0);if((c[u>>2]|0)==((c[v>>2]|0)-(c[s>>2]|0)|0)){Ta=V;Ua=q;Va=X;Wa=Y;break a}if(J)if(!M){g[J>>2]=$a;Xa=Z;Ya=X;Za=Y;break d}else if((M|0)==1){h[J>>3]=$a;Xa=Z;Ya=X;Za=Y;break d}else if((M|0)==2){h[J>>3]=$a;Xa=Z;Ya=X;Za=Y;break d}else{Xa=Z;Ya=X;Za=Y;break d}else{Xa=Z;Ya=X;Za=Y}break}default:{Xa=Z;Ya=X;Za=Y}}while(0);i:do if((da|0)==145){da=0;sa=pq(e,_a,0,-1,-1)|0;if((c[u>>2]|0)==((c[v>>2]|0)-(c[s>>2]|0)|0)){Ta=V;Ua=q;Va=X;Wa=Y;break a}if((N|0)==112&(J|0)!=0){c[J>>2]=sa;Xa=Z;Ya=X;Za=Y;break}if(!J){Xa=Z;Ya=X;Za=Y}else switch(M|0){case -2:{a[J>>0]=sa;Xa=Z;Ya=X;Za=Y;break i;break}case -1:{b[J>>1]=sa;Xa=Z;Ya=X;Za=Y;break i;break}case 0:{c[J>>2]=sa;Xa=Z;Ya=X;Za=Y;break i;break}case 1:{c[J>>2]=sa;Xa=Z;Ya=X;Za=Y;break i;break}case 3:{I=J;c[I>>2]=sa;c[I+4>>2]=G;Xa=Z;Ya=X;Za=Y;break i;break}default:{Xa=Z;Ya=X;Za=Y;break i}}}while(0);ga=((J|0)!=0&1)+q|0;ha=Xa;ia=(c[u>>2]|0)+ea+(c[s>>2]|0)-(c[v>>2]|0)|0;ja=Ya;ka=Za;break b}while(0);M=C+(F&1)|0;rq(e,0);N=c[s>>2]|0;if(N>>>0<(c[t>>2]|0)>>>0){c[s>>2]=N+1;ab=d[N>>0]|0}else ab=sq(e)|0;if((ab|0)!=(d[M>>0]|0)){bb=ab;cb=q;db=D;eb=E;da=19;break a}ga=q;ha=M;ia=f+1|0;ja=D;ka=E}else{M=C;while(1){N=M+1|0;if(!(nq(d[N>>0]|0)|0)){fb=M;break}else M=N}rq(e,0);do{M=c[s>>2]|0;if(M>>>0<(c[t>>2]|0)>>>0){c[s>>2]=M+1;gb=d[M>>0]|0}else gb=sq(e)|0}while((nq(gb)|0)!=0);M=c[s>>2]|0;if(!(c[t>>2]|0))hb=M;else{F=M+-1|0;c[s>>2]=F;hb=F}ga=q;ha=fb;ia=(c[u>>2]|0)+f+hb-(c[v>>2]|0)|0;ja=D;ka=E}while(0);C=ha+1|0;B=a[C>>0]|0;if(!(B<<24>>24)){r=ga;da=167;break}else{q=ga;f=ia;D=ja;E=ka}}if((da|0)==19){if(c[t>>2]|0)c[s>>2]=(c[s>>2]|0)+-1;if((bb|0)>-1|(cb|0)!=0){r=cb;i=k;return r|0}else{ib=0;jb=db;kb=eb;da=164}}else if((da|0)==163)if(!aa){ib=$;jb=ba;kb=ca;da=164}else{Ta=$;Ua=aa;Va=ba;Wa=ca}else if((da|0)==167){i=k;return r|0}if((da|0)==164){Ta=ib;Ua=-1;Va=jb;Wa=kb}if(!Ta){r=Ua;i=k;return r|0}lq(Va);lq(Wa);r=Ua;i=k;return r|0}function bp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+112|0;f=e;g=f+0|0;h=g+112|0;do{c[g>>2]=0;g=g+4|0}while((g|0)<(h|0));c[f+32>>2]=27;c[f+44>>2]=a;c[f+76>>2]=-1;c[f+84>>2]=a;a=ap(f,b,d)|0;i=e;return a|0}function cp(a){a=a|0;var b=0,d=0;b=a;while(1)if(!(c[b>>2]|0)){d=b;break}else b=b+4|0;return d-a>>2|0}function dp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if(!d)return a|0;else{e=d;f=b;g=a}while(1){e=e+-1|0;c[g>>2]=c[f>>2];if(!e)break;else{f=f+4|0;g=g+4|0}}return a|0}function ep(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=(d|0)==0;if(a-b>>2>>>0<d>>>0){if(e)return a|0;else f=d;do{f=f+-1|0;c[a+(f<<2)>>2]=c[b+(f<<2)>>2]}while((f|0)!=0);return a|0}else{if(e)return a|0;else{g=b;h=a;i=d}while(1){i=i+-1|0;c[h>>2]=c[g>>2];if(!i)break;else{g=g+4|0;h=h+4|0}}return a|0}return 0}function fp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;if(!d)return a|0;else{e=d;f=a}while(1){e=e+-1|0;c[f>>2]=b;if(!e)break;else f=f+4|0}return a|0}function gp(a,b,c){a=a|0;b=b|0;c=c|0;return Zo(a,b,c)|0}function hp(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;e=d;c[e>>2]=b;b=c[o>>2]|0;Ma(b|0,a|0,e|0)|0;Ib(10,b|0)|0;Nb()}function ip(){var a=0,b=0;a=i;i=i+16|0;if(!(ub(25944,3)|0)){b=nb(c[6484]|0)|0;i=a;return b|0}else hp(25952,a);return 0}function jp(a){a=a|0;var b=0,d=0,e=0;b=(a|0)==0?1:a;a=kq(b)|0;a:do if(!a){while(1){d=tp()|0;if(!d)break;jc[d&3]();d=kq(b)|0;if(d){e=d;break a}}d=Ia(4)|0;c[d>>2]=26128;Xb(d|0,26176,95)}else e=a;while(0);return e|0}function kp(a){a=a|0;return jp(a)|0}function lp(a){a=a|0;lq(a);return}function mp(a){a=a|0;lp(a);return}function np(a){a=a|0;c[a>>2]=26128;return}function op(a){a=a|0;return}function pp(a){a=a|0;lp(a);return}function qp(a){a=a|0;return 26144}function rp(a){a=a|0;var b=0;b=i;i=i+16|0;jc[a&3]();hp(26192,b)}function sp(){var a=0,b=0;a=ip()|0;if(((a|0)!=0?(b=c[a>>2]|0,(b|0)!=0):0)?(a=b+48|0,(c[a>>2]&-256|0)==1126902528?(c[a+4>>2]|0)==1129074247:0):0)rp(c[b+12>>2]|0);b=c[6438]|0;c[6438]=b+0;rp(b)}function tp(){var a=0;a=c[6558]|0;c[6558]=a+0;return a|0}function up(a){a=a|0;return}function vp(a){a=a|0;c[a>>2]=26272;iq(a+4|0);return}function wp(a){a=a|0;vp(a);lp(a);return}function xp(a){a=a|0;return c[a+4>>2]|0}function yp(a){a=a|0;c[a>>2]=26296;iq(a+4|0);return}function zp(a){a=a|0;yp(a);lp(a);return}function Ap(a){a=a|0;return c[a+4>>2]|0}function Bp(a){a=a|0;vp(a);lp(a);return}function Cp(a){a=a|0;return}function Dp(a){a=a|0;c[a>>2]=26456;return}function Ep(a){a=a|0;return}function Fp(a){a=a|0;lp(a);return}function Gp(a){a=a|0;return 26472}function Hp(a){a=a|0;return}function Ip(a){a=a|0;return}function Jp(a){a=a|0;return}function Kp(a){a=a|0;lp(a);return}function Lp(a){a=a|0;lp(a);return}function Mp(a){a=a|0;lp(a);return}function Np(a){a=a|0;lp(a);return}function Op(a,b,c){a=a|0;b=b|0;c=c|0;return (a|0)==(b|0)|0}function Pp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+64|0;f=e;if((a|0)!=(b|0))if((b|0)!=0?(g=Vp(b,26584,26640,0)|0,(g|0)!=0):0){b=f+0|0;h=b+56|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(h|0));c[f>>2]=g;c[f+8>>2]=a;c[f+12>>2]=-1;c[f+48>>2]=1;qc[c[(c[g>>2]|0)+28>>2]&15](g,f,c[d>>2]|0,1);if((c[f+24>>2]|0)==1){c[d>>2]=c[f+16>>2];j=1}else j=0}else j=0;else j=1;i=e;return j|0}function Qp(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;b=d+16|0;g=c[b>>2]|0;do if(g){if((g|0)!=(e|0)){h=d+36|0;c[h>>2]=(c[h>>2]|0)+1;c[d+24>>2]=2;a[d+54>>0]=1;break}h=d+24|0;if((c[h>>2]|0)==2)c[h>>2]=f}else{c[b>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1}while(0);return}function Rp(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;if((c[b+8>>2]|0)==(a|0))Qp(0,b,d,e);return}function Sp(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;if((a|0)==(c[b+8>>2]|0))Qp(0,b,d,e);else{f=c[a+8>>2]|0;qc[c[(c[f>>2]|0)+28>>2]&15](f,b,d,e)}return}function Tp(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=c[a+4>>2]|0;g=f>>8;if(!(f&1))h=g;else h=c[(c[d>>2]|0)+g>>2]|0;g=c[a>>2]|0;qc[c[(c[g>>2]|0)+28>>2]&15](g,b,d+h|0,(f&2|0)!=0?e:2);return}function Up(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;a:do if((b|0)!=(c[d+8>>2]|0)){g=c[b+12>>2]|0;h=b+(g<<3)+16|0;Tp(b+16|0,d,e,f);if((g|0)>1){g=d+54|0;i=b+24|0;do{Tp(i,d,e,f);if(a[g>>0]|0)break a;i=i+8|0}while(i>>>0<h>>>0)}}else Qp(0,d,e,f);while(0);return}function Vp(d,e,f,g){d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;h=i;i=i+64|0;j=h;k=c[d>>2]|0;l=d+(c[k+-8>>2]|0)|0;m=c[k+-4>>2]|0;c[j>>2]=f;c[j+4>>2]=d;c[j+8>>2]=e;c[j+12>>2]=g;g=j+16|0;e=j+20|0;d=j+24|0;k=j+28|0;n=j+32|0;o=j+40|0;p=(m|0)==(f|0);f=g+0|0;q=f+36|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(q|0));b[g+36>>1]=0;a[g+38>>0]=0;do if(p){c[j+48>>2]=1;nc[c[(c[m>>2]|0)+20>>2]&15](m,j,l,l,1,0);r=(c[d>>2]|0)==1?l:0}else{bc[c[(c[m>>2]|0)+24>>2]&3](m,j,l,1,0);f=c[j+36>>2]|0;if(!f){r=(c[o>>2]|0)==1&(c[k>>2]|0)==1&(c[n>>2]|0)==1?c[e>>2]|0:0;break}else if((f|0)!=1){r=0;break}if((c[d>>2]|0)!=1?!((c[o>>2]|0)==0&(c[k>>2]|0)==1&(c[n>>2]|0)==1):0){r=0;break}r=c[g>>2]|0}while(0);i=h;return r|0}function Wp(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;a[d+53>>0]=1;do if((c[d+4>>2]|0)==(f|0)){a[d+52>>0]=1;b=d+16|0;h=c[b>>2]|0;if(!h){c[b>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((g|0)==1?(c[d+48>>2]|0)==1:0))break;a[d+54>>0]=1;break}if((h|0)!=(e|0)){h=d+36|0;c[h>>2]=(c[h>>2]|0)+1;a[d+54>>0]=1;break}h=d+24|0;b=c[h>>2]|0;if((b|0)==2){c[h>>2]=g;i=g}else i=b;if((i|0)==1?(c[d+48>>2]|0)==1:0)a[d+54>>0]=1}while(0);return}function Xp(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;a:do if((b|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)==(e|0)?(h=d+28|0,(c[h>>2]|0)!=1):0)c[h>>2]=f}else{if((b|0)!=(c[d>>2]|0)){h=c[b+12>>2]|0;i=b+(h<<3)+16|0;Zp(b+16|0,d,e,f,g);j=b+24|0;if((h|0)<=1)break;h=c[b+8>>2]|0;if((h&2|0)==0?(k=d+36|0,(c[k>>2]|0)!=1):0){if(!(h&1)){h=d+54|0;l=j;while(1){if(a[h>>0]|0)break a;if((c[k>>2]|0)==1)break a;Zp(l,d,e,f,g);l=l+8|0;if(l>>>0>=i>>>0)break a}}l=d+24|0;h=d+54|0;m=j;while(1){if(a[h>>0]|0)break a;if((c[k>>2]|0)==1?(c[l>>2]|0)==1:0)break a;Zp(m,d,e,f,g);m=m+8|0;if(m>>>0>=i>>>0)break a}}m=d+54|0;l=j;while(1){if(a[m>>0]|0)break a;Zp(l,d,e,f,g);l=l+8|0;if(l>>>0>=i>>>0)break a}}if((c[d+16>>2]|0)!=(e|0)?(i=d+20|0,(c[i>>2]|0)!=(e|0)):0){c[d+32>>2]=f;l=d+44|0;if((c[l>>2]|0)==4)break;m=c[b+12>>2]|0;j=b+(m<<3)+16|0;b:do if((m|0)>0){k=d+52|0;h=d+53|0;n=d+54|0;o=b+8|0;p=d+24|0;q=0;r=0;s=b+16|0;c:while(1){a[k>>0]=0;a[h>>0]=0;Yp(s,d,e,e,1,g);if(a[n>>0]|0){t=q;u=r;break}do if(a[h>>0]|0){if(!(a[k>>0]|0))if(!(c[o>>2]&1)){t=q;u=1;break c}else{v=q;w=1;break}if((c[p>>2]|0)==1){x=25;break b}if(!(c[o>>2]&2)){x=25;break b}else{v=1;w=1}}else{v=q;w=r}while(0);s=s+8|0;if(s>>>0>=j>>>0){t=v;u=w;break}else{q=v;r=w}}if(t){y=u;x=24}else{z=u;x=21}}else{z=0;x=21}while(0);if((x|0)==21){c[i>>2]=e;j=d+40|0;c[j>>2]=(c[j>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0){a[d+54>>0]=1;if(z)x=25;else x=26}else{y=z;x=24}}if((x|0)==24)if(y)x=25;else x=26;if((x|0)==25){c[l>>2]=3;break}else if((x|0)==26){c[l>>2]=4;break}}if((f|0)==1)c[d+32>>2]=1}while(0);return}function Yp(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;h=c[a+4>>2]|0;i=h>>8;if(!(h&1))j=i;else j=c[(c[e>>2]|0)+i>>2]|0;i=c[a>>2]|0;nc[c[(c[i>>2]|0)+20>>2]&15](i,b,d,e+j|0,(h&2|0)!=0?f:2,g);return}function Zp(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;g=c[a+4>>2]|0;h=g>>8;if(!(g&1))i=h;else i=c[(c[d>>2]|0)+h>>2]|0;h=c[a>>2]|0;bc[c[(c[h>>2]|0)+24>>2]&3](h,b,d+i|0,(g&2|0)!=0?e:2,f);return}function _p(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0;a:do if((b|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)==(e|0)?(h=d+28|0,(c[h>>2]|0)!=1):0)c[h>>2]=f}else{if((b|0)!=(c[d>>2]|0)){h=c[b+8>>2]|0;bc[c[(c[h>>2]|0)+24>>2]&3](h,d,e,f,g);break}if((c[d+16>>2]|0)!=(e|0)?(h=d+20|0,(c[h>>2]|0)!=(e|0)):0){c[d+32>>2]=f;i=d+44|0;if((c[i>>2]|0)==4)break;j=d+52|0;a[j>>0]=0;k=d+53|0;a[k>>0]=0;l=c[b+8>>2]|0;nc[c[(c[l>>2]|0)+20>>2]&15](l,d,e,e,1,g);if(a[k>>0]|0){if(!(a[j>>0]|0)){m=1;n=13}}else{m=0;n=13}do if((n|0)==13){c[h>>2]=e;j=d+40|0;c[j>>2]=(c[j>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0){a[d+54>>0]=1;if(m)break}else n=16;if((n|0)==16?m:0)break;c[i>>2]=4;break a}while(0);c[i>>2]=3;break}if((f|0)==1)c[d+32>>2]=1}while(0);return}function $p(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;do if((c[d+8>>2]|0)==(b|0)){if((c[d+4>>2]|0)==(e|0)?(g=d+28|0,(c[g>>2]|0)!=1):0)c[g>>2]=f}else if((c[d>>2]|0)==(b|0)){if((c[d+16>>2]|0)!=(e|0)?(g=d+20|0,(c[g>>2]|0)!=(e|0)):0){c[d+32>>2]=f;c[g>>2]=e;g=d+40|0;c[g>>2]=(c[g>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0)a[d+54>>0]=1;c[d+44>>2]=4;break}if((f|0)==1)c[d+32>>2]=1}while(0);return}function aq(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;if((b|0)==(c[d+8>>2]|0))Wp(0,d,e,f,g);else{i=d+52|0;j=a[i>>0]|0;k=d+53|0;l=a[k>>0]|0;m=c[b+12>>2]|0;n=b+(m<<3)+16|0;a[i>>0]=0;a[k>>0]=0;Yp(b+16|0,d,e,f,g,h);a:do if((m|0)>1){o=d+24|0;p=b+8|0;q=d+54|0;r=b+24|0;do{if(a[q>>0]|0)break a;if(!(a[i>>0]|0)){if((a[k>>0]|0)!=0?(c[p>>2]&1|0)==0:0)break a}else{if((c[o>>2]|0)==1)break a;if(!(c[p>>2]&2))break a}a[i>>0]=0;a[k>>0]=0;Yp(r,d,e,f,g,h);r=r+8|0}while(r>>>0<n>>>0)}while(0);a[i>>0]=j;a[k>>0]=l}return}function bq(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;if((a|0)==(c[b+8>>2]|0))Wp(0,b,d,e,f);else{h=c[a+8>>2]|0;nc[c[(c[h>>2]|0)+20>>2]&15](h,b,d,e,f,g)}return}function cq(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;if((c[b+8>>2]|0)==(a|0))Wp(0,b,d,e,f);return}function dq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+16|0;f=e;c[f>>2]=c[d>>2];g=$b[c[(c[a>>2]|0)+16>>2]&31](a,b,f)|0;if(g)c[d>>2]=c[f>>2];i=e;return g&1|0}function eq(a){a=a|0;var b=0;if(!a)b=0;else b=(Vp(a,26584,26752,0)|0)!=0;return b&1|0}function fq(){var a=0;a=Ia(4)|0;np(a);Xb(a|0,26176,95)}function gq(){var a=0,b=0,d=0,e=0,f=0,g=0,h=0;a=i;i=i+16|0;b=a;d=a+12|0;a=ip()|0;if((a|0)!=0?(e=c[a>>2]|0,(e|0)!=0):0){a=e+48|0;f=c[a>>2]|0;g=c[a+4>>2]|0;if(!((f&-256|0)==1126902528&(g|0)==1129074247)){c[b>>2]=c[6440];hp(25880,b)}if((f|0)==1126902529&(g|0)==1129074247)h=c[e+44>>2]|0;else h=e+80|0;c[d>>2]=h;h=c[e>>2]|0;e=c[h+4>>2]|0;if($b[c[(c[26256>>2]|0)+16>>2]&31](26256,h,d)|0){h=c[d>>2]|0;d=c[6440]|0;g=fc[c[(c[h>>2]|0)+8>>2]&127](h)|0;c[b>>2]=d;c[b+4>>2]=e;c[b+8>>2]=g;hp(25784,b)}else{c[b>>2]=c[6440];c[b+4>>2]=e;hp(25832,b)}}hp(25920,b)}function hq(){var a=0;a=i;i=i+16|0;if(!(Tb(25936,125)|0)){i=a;return}else hp(26008,a)}function iq(a){a=a|0;var b=0,d=0;b=(c[a>>2]|0)+-4|0;d=c[b>>2]|0;c[b>>2]=d+-1;if((d+-1|0)<0)lp((c[a>>2]|0)+-12|0);return}function jq(a){a=a|0;var b=0;b=i;i=i+16|0;lq(a);if(!(Fb(c[6484]|0,0)|0)){i=b;return}else hp(26064,b)}function kq(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0;do if(a>>>0<245){if(a>>>0<11)b=16;else b=a+11&-8;d=b>>>3;e=c[6776]|0;f=e>>>d;if(f&3){g=(f&1^1)+d|0;h=g<<1;i=27144+(h<<2)|0;j=27144+(h+2<<2)|0;h=c[j>>2]|0;k=h+8|0;l=c[k>>2]|0;do if((i|0)!=(l|0)){if(l>>>0<(c[6780]|0)>>>0)Nb();m=l+12|0;if((c[m>>2]|0)==(h|0)){c[m>>2]=i;c[j>>2]=l;break}else Nb()}else c[6776]=e&~(1<<g);while(0);l=g<<3;c[h+4>>2]=l|3;j=h+(l|4)|0;c[j>>2]=c[j>>2]|1;n=k;return n|0}j=c[6778]|0;if(b>>>0>j>>>0){if(f){l=2<<d;i=f<<d&(l|0-l);l=(i&0-i)+-1|0;i=l>>>12&16;m=l>>>i;l=m>>>5&8;o=m>>>l;m=o>>>2&4;p=o>>>m;o=p>>>1&2;q=p>>>o;p=q>>>1&1;r=(l|i|m|o|p)+(q>>>p)|0;p=r<<1;q=27144+(p<<2)|0;o=27144+(p+2<<2)|0;p=c[o>>2]|0;m=p+8|0;i=c[m>>2]|0;do if((q|0)!=(i|0)){if(i>>>0<(c[6780]|0)>>>0)Nb();l=i+12|0;if((c[l>>2]|0)==(p|0)){c[l>>2]=q;c[o>>2]=i;s=c[6778]|0;break}else Nb()}else{c[6776]=e&~(1<<r);s=j}while(0);j=r<<3;e=j-b|0;c[p+4>>2]=b|3;i=p+b|0;c[p+(b|4)>>2]=e|1;c[p+j>>2]=e;if(s){j=c[6781]|0;o=s>>>3;q=o<<1;d=27144+(q<<2)|0;f=c[6776]|0;k=1<<o;if(f&k){o=27144+(q+2<<2)|0;h=c[o>>2]|0;if(h>>>0<(c[6780]|0)>>>0)Nb();else{t=o;u=h}}else{c[6776]=f|k;t=27144+(q+2<<2)|0;u=d}c[t>>2]=j;c[u+12>>2]=j;c[j+8>>2]=u;c[j+12>>2]=d}c[6778]=e;c[6781]=i;n=m;return n|0}i=c[6777]|0;if(i){e=(i&0-i)+-1|0;i=e>>>12&16;d=e>>>i;e=d>>>5&8;j=d>>>e;d=j>>>2&4;q=j>>>d;j=q>>>1&2;k=q>>>j;q=k>>>1&1;f=c[27408+((e|i|d|j|q)+(k>>>q)<<2)>>2]|0;q=(c[f+4>>2]&-8)-b|0;k=f;j=f;while(1){f=c[k+16>>2]|0;if(!f){d=c[k+20>>2]|0;if(!d){v=q;w=j;break}else x=d}else x=f;f=(c[x+4>>2]&-8)-b|0;d=f>>>0<q>>>0;q=d?f:q;k=x;j=d?x:j}j=c[6780]|0;if(w>>>0<j>>>0)Nb();k=w+b|0;if(w>>>0>=k>>>0)Nb();q=c[w+24>>2]|0;m=c[w+12>>2]|0;do if((m|0)==(w|0)){p=w+20|0;r=c[p>>2]|0;if(!r){d=w+16|0;f=c[d>>2]|0;if(!f){y=0;break}else{z=f;A=d}}else{z=r;A=p}while(1){p=z+20|0;r=c[p>>2]|0;if(r){z=r;A=p;continue}p=z+16|0;r=c[p>>2]|0;if(!r){B=z;C=A;break}else{z=r;A=p}}if(C>>>0<j>>>0)Nb();else{c[C>>2]=0;y=B;break}}else{p=c[w+8>>2]|0;if(p>>>0<j>>>0)Nb();r=p+12|0;if((c[r>>2]|0)!=(w|0))Nb();d=m+8|0;if((c[d>>2]|0)==(w|0)){c[r>>2]=m;c[d>>2]=p;y=m;break}else Nb()}while(0);do if(q){m=c[w+28>>2]|0;j=27408+(m<<2)|0;if((w|0)==(c[j>>2]|0)){c[j>>2]=y;if(!y){c[6777]=c[6777]&~(1<<m);break}}else{if(q>>>0<(c[6780]|0)>>>0)Nb();m=q+16|0;if((c[m>>2]|0)==(w|0))c[m>>2]=y;else c[q+20>>2]=y;if(!y)break}m=c[6780]|0;if(y>>>0<m>>>0)Nb();c[y+24>>2]=q;j=c[w+16>>2]|0;do if(j)if(j>>>0<m>>>0)Nb();else{c[y+16>>2]=j;c[j+24>>2]=y;break}while(0);j=c[w+20>>2]|0;if(j)if(j>>>0<(c[6780]|0)>>>0)Nb();else{c[y+20>>2]=j;c[j+24>>2]=y;break}}while(0);if(v>>>0<16){q=v+b|0;c[w+4>>2]=q|3;j=w+(q+4)|0;c[j>>2]=c[j>>2]|1}else{c[w+4>>2]=b|3;c[w+(b|4)>>2]=v|1;c[w+(v+b)>>2]=v;j=c[6778]|0;if(j){q=c[6781]|0;m=j>>>3;j=m<<1;p=27144+(j<<2)|0;d=c[6776]|0;r=1<<m;if(d&r){m=27144+(j+2<<2)|0;f=c[m>>2]|0;if(f>>>0<(c[6780]|0)>>>0)Nb();else{D=m;E=f}}else{c[6776]=d|r;D=27144+(j+2<<2)|0;E=p}c[D>>2]=q;c[E+12>>2]=q;c[q+8>>2]=E;c[q+12>>2]=p}c[6778]=v;c[6781]=k}n=w+8|0;return n|0}else F=b}else F=b}else if(a>>>0<=4294967231){p=a+11|0;q=p&-8;j=c[6777]|0;if(j){r=0-q|0;d=p>>>8;if(d)if(q>>>0>16777215)G=31;else{p=(d+1048320|0)>>>16&8;f=d<<p;d=(f+520192|0)>>>16&4;m=f<<d;f=(m+245760|0)>>>16&2;i=14-(d|p|f)+(m<<f>>>15)|0;G=q>>>(i+7|0)&1|i<<1}else G=0;i=c[27408+(G<<2)>>2]|0;a:do if(!i){H=r;I=0;J=0}else{if((G|0)==31)K=0;else K=25-(G>>>1)|0;f=r;m=0;p=q<<K;d=i;e=0;while(1){h=c[d+4>>2]&-8;o=h-q|0;if(o>>>0<f>>>0)if((h|0)==(q|0)){H=o;I=d;J=d;break a}else{L=o;M=d}else{L=f;M=e}o=c[d+20>>2]|0;d=c[d+(p>>>31<<2)+16>>2]|0;h=(o|0)==0|(o|0)==(d|0)?m:o;if(!d){H=L;I=h;J=M;break}else{f=L;m=h;p=p<<1;e=M}}}while(0);if((I|0)==0&(J|0)==0){i=2<<G;r=j&(i|0-i);if(!r){F=q;break}i=(r&0-r)+-1|0;r=i>>>12&16;k=i>>>r;i=k>>>5&8;e=k>>>i;k=e>>>2&4;p=e>>>k;e=p>>>1&2;m=p>>>e;p=m>>>1&1;N=c[27408+((i|r|k|e|p)+(m>>>p)<<2)>>2]|0}else N=I;if(!N){O=H;P=J}else{p=H;m=N;e=J;while(1){k=(c[m+4>>2]&-8)-q|0;r=k>>>0<p>>>0;i=r?k:p;k=r?m:e;r=c[m+16>>2]|0;if(r){p=i;m=r;e=k;continue}m=c[m+20>>2]|0;if(!m){O=i;P=k;break}else{p=i;e=k}}}if((P|0)!=0?O>>>0<((c[6778]|0)-q|0)>>>0:0){e=c[6780]|0;if(P>>>0<e>>>0)Nb();p=P+q|0;if(P>>>0>=p>>>0)Nb();m=c[P+24>>2]|0;j=c[P+12>>2]|0;do if((j|0)==(P|0)){k=P+20|0;i=c[k>>2]|0;if(!i){r=P+16|0;f=c[r>>2]|0;if(!f){Q=0;break}else{R=f;S=r}}else{R=i;S=k}while(1){k=R+20|0;i=c[k>>2]|0;if(i){R=i;S=k;continue}k=R+16|0;i=c[k>>2]|0;if(!i){T=R;U=S;break}else{R=i;S=k}}if(U>>>0<e>>>0)Nb();else{c[U>>2]=0;Q=T;break}}else{k=c[P+8>>2]|0;if(k>>>0<e>>>0)Nb();i=k+12|0;if((c[i>>2]|0)!=(P|0))Nb();r=j+8|0;if((c[r>>2]|0)==(P|0)){c[i>>2]=j;c[r>>2]=k;Q=j;break}else Nb()}while(0);do if(m){j=c[P+28>>2]|0;e=27408+(j<<2)|0;if((P|0)==(c[e>>2]|0)){c[e>>2]=Q;if(!Q){c[6777]=c[6777]&~(1<<j);break}}else{if(m>>>0<(c[6780]|0)>>>0)Nb();j=m+16|0;if((c[j>>2]|0)==(P|0))c[j>>2]=Q;else c[m+20>>2]=Q;if(!Q)break}j=c[6780]|0;if(Q>>>0<j>>>0)Nb();c[Q+24>>2]=m;e=c[P+16>>2]|0;do if(e)if(e>>>0<j>>>0)Nb();else{c[Q+16>>2]=e;c[e+24>>2]=Q;break}while(0);e=c[P+20>>2]|0;if(e)if(e>>>0<(c[6780]|0)>>>0)Nb();else{c[Q+20>>2]=e;c[e+24>>2]=Q;break}}while(0);b:do if(O>>>0>=16){c[P+4>>2]=q|3;c[P+(q|4)>>2]=O|1;c[P+(O+q)>>2]=O;m=O>>>3;if(O>>>0<256){e=m<<1;j=27144+(e<<2)|0;k=c[6776]|0;r=1<<m;do if(!(k&r)){c[6776]=k|r;V=27144+(e+2<<2)|0;W=j}else{m=27144+(e+2<<2)|0;i=c[m>>2]|0;if(i>>>0>=(c[6780]|0)>>>0){V=m;W=i;break}Nb()}while(0);c[V>>2]=p;c[W+12>>2]=p;c[P+(q+8)>>2]=W;c[P+(q+12)>>2]=j;break}e=O>>>8;if(e)if(O>>>0>16777215)X=31;else{r=(e+1048320|0)>>>16&8;k=e<<r;e=(k+520192|0)>>>16&4;i=k<<e;k=(i+245760|0)>>>16&2;m=14-(e|r|k)+(i<<k>>>15)|0;X=O>>>(m+7|0)&1|m<<1}else X=0;m=27408+(X<<2)|0;c[P+(q+28)>>2]=X;c[P+(q+20)>>2]=0;c[P+(q+16)>>2]=0;k=c[6777]|0;i=1<<X;if(!(k&i)){c[6777]=k|i;c[m>>2]=p;c[P+(q+24)>>2]=m;c[P+(q+12)>>2]=p;c[P+(q+8)>>2]=p;break}i=c[m>>2]|0;if((X|0)==31)Y=0;else Y=25-(X>>>1)|0;c:do if((c[i+4>>2]&-8|0)!=(O|0)){m=O<<Y;k=i;while(1){r=k+(m>>>31<<2)+16|0;e=c[r>>2]|0;if(!e){Z=r;_=k;break}if((c[e+4>>2]&-8|0)==(O|0)){$=e;break c}else{m=m<<1;k=e}}if(Z>>>0<(c[6780]|0)>>>0)Nb();else{c[Z>>2]=p;c[P+(q+24)>>2]=_;c[P+(q+12)>>2]=p;c[P+(q+8)>>2]=p;break b}}else $=i;while(0);i=$+8|0;j=c[i>>2]|0;k=c[6780]|0;if($>>>0>=k>>>0&j>>>0>=k>>>0){c[j+12>>2]=p;c[i>>2]=p;c[P+(q+8)>>2]=j;c[P+(q+12)>>2]=$;c[P+(q+24)>>2]=0;break}else Nb()}else{j=O+q|0;c[P+4>>2]=j|3;i=P+(j+4)|0;c[i>>2]=c[i>>2]|1}while(0);n=P+8|0;return n|0}else F=q}else F=q}else F=-1;while(0);P=c[6778]|0;if(P>>>0>=F>>>0){O=P-F|0;$=c[6781]|0;if(O>>>0>15){c[6781]=$+F;c[6778]=O;c[$+(F+4)>>2]=O|1;c[$+P>>2]=O;c[$+4>>2]=F|3}else{c[6778]=0;c[6781]=0;c[$+4>>2]=P|3;O=$+(P+4)|0;c[O>>2]=c[O>>2]|1}n=$+8|0;return n|0}$=c[6779]|0;if($>>>0>F>>>0){O=$-F|0;c[6779]=O;$=c[6782]|0;c[6782]=$+F;c[$+(F+4)>>2]=O|1;c[$+4>>2]=F|3;n=$+8|0;return n|0}do if(!(c[6894]|0)){$=lb(30)|0;if(!($+-1&$)){c[6896]=$;c[6895]=$;c[6897]=-1;c[6898]=-1;c[6899]=0;c[6887]=0;c[6894]=(Qb(0)|0)&-16^1431655768;break}else Nb()}while(0);$=F+48|0;O=c[6896]|0;P=F+47|0;_=O+P|0;Z=0-O|0;O=_&Z;if(O>>>0<=F>>>0){n=0;return n|0}Y=c[6886]|0;if((Y|0)!=0?(X=c[6884]|0,W=X+O|0,W>>>0<=X>>>0|W>>>0>Y>>>0):0){n=0;return n|0}d:do if(!(c[6887]&4)){Y=c[6782]|0;e:do if(Y){W=27552|0;while(1){X=c[W>>2]|0;if(X>>>0<=Y>>>0?(V=W+4|0,(X+(c[V>>2]|0)|0)>>>0>Y>>>0):0){aa=W;ba=V;ca=W;break}W=c[W+8>>2]|0;if(!W){da=181;break e}}if(ca){W=_-(c[6779]|0)&Z;if(W>>>0<2147483647){V=Sa(W|0)|0;if((V|0)==((c[aa>>2]|0)+(c[ba>>2]|0)|0)){ea=V;fa=W;da=190}else{ga=V;ha=W;da=191}}else ia=0}else da=181}else da=181;while(0);do if((da|0)==181){Y=Sa(0)|0;if((Y|0)!=(-1|0)){q=Y;W=c[6895]|0;V=W+-1|0;if(!(V&q))ja=O;else ja=O-q+(V+q&0-W)|0;W=c[6884]|0;q=W+ja|0;if(ja>>>0>F>>>0&ja>>>0<2147483647){V=c[6886]|0;if((V|0)!=0?q>>>0<=W>>>0|q>>>0>V>>>0:0){ia=0;break}V=Sa(ja|0)|0;if((V|0)==(Y|0)){ea=Y;fa=ja;da=190}else{ga=V;ha=ja;da=191}}else ia=0}else ia=0}while(0);f:do if((da|0)==190)if((ea|0)==(-1|0))ia=fa;else{ka=ea;la=fa;da=201;break d}else if((da|0)==191){V=0-ha|0;do if((ga|0)!=(-1|0)&ha>>>0<2147483647&$>>>0>ha>>>0?(Y=c[6896]|0,q=P-ha+Y&0-Y,q>>>0<2147483647):0)if((Sa(q|0)|0)==(-1|0)){Sa(V|0)|0;ia=0;break f}else{ma=q+ha|0;break}else ma=ha;while(0);if((ga|0)==(-1|0))ia=0;else{ka=ga;la=ma;da=201;break d}}while(0);c[6887]=c[6887]|4;na=ia;da=198}else{na=0;da=198}while(0);if((((da|0)==198?O>>>0<2147483647:0)?(ia=Sa(O|0)|0,O=Sa(0)|0,(ia|0)!=(-1|0)&(O|0)!=(-1|0)&ia>>>0<O>>>0):0)?(ma=O-ia|0,O=ma>>>0>(F+40|0)>>>0,O):0){ka=ia;la=O?ma:na;da=201}if((da|0)==201){na=(c[6884]|0)+la|0;c[6884]=na;if(na>>>0>(c[6885]|0)>>>0)c[6885]=na;na=c[6782]|0;g:do if(na){ma=27552|0;do{O=c[ma>>2]|0;ia=ma+4|0;ga=c[ia>>2]|0;if((ka|0)==(O+ga|0)){oa=O;pa=ia;qa=ga;ra=ma;da=213;break}ma=c[ma+8>>2]|0}while((ma|0)!=0);if(((da|0)==213?(c[ra+12>>2]&8|0)==0:0)?na>>>0>=oa>>>0&na>>>0<ka>>>0:0){c[pa>>2]=qa+la;ma=(c[6779]|0)+la|0;ga=na+8|0;if(!(ga&7))sa=0;else sa=0-ga&7;ga=ma-sa|0;c[6782]=na+sa;c[6779]=ga;c[na+(sa+4)>>2]=ga|1;c[na+(ma+4)>>2]=40;c[6783]=c[6898];break}ma=c[6780]|0;if(ka>>>0<ma>>>0){c[6780]=ka;ta=ka}else ta=ma;ma=ka+la|0;ga=27552|0;do{if((c[ga>>2]|0)==(ma|0)){ua=ga;va=ga;da=223;break}ga=c[ga+8>>2]|0}while((ga|0)!=0);if((da|0)==223?(c[va+12>>2]&8|0)==0:0){c[ua>>2]=ka;ga=va+4|0;c[ga>>2]=(c[ga>>2]|0)+la;ga=ka+8|0;if(!(ga&7))wa=0;else wa=0-ga&7;ga=ka+(la+8)|0;if(!(ga&7))xa=0;else xa=0-ga&7;ga=ka+(xa+la)|0;ma=wa+F|0;ia=ka+ma|0;O=ga-(ka+wa)-F|0;c[ka+(wa+4)>>2]=F|3;h:do if((ga|0)!=(na|0)){if((ga|0)==(c[6781]|0)){ha=(c[6778]|0)+O|0;c[6778]=ha;c[6781]=ia;c[ka+(ma+4)>>2]=ha|1;c[ka+(ha+ma)>>2]=ha;break}ha=la+4|0;P=c[ka+(ha+xa)>>2]|0;if((P&3|0)==1){$=P&-8;fa=P>>>3;i:do if(P>>>0>=256){ea=c[ka+((xa|24)+la)>>2]|0;ja=c[ka+(la+12+xa)>>2]|0;do if((ja|0)==(ga|0)){ba=xa|16;aa=ka+(ha+ba)|0;Z=c[aa>>2]|0;if(!Z){_=ka+(ba+la)|0;ba=c[_>>2]|0;if(!ba){ya=0;break}else{za=ba;Aa=_}}else{za=Z;Aa=aa}while(1){aa=za+20|0;Z=c[aa>>2]|0;if(Z){za=Z;Aa=aa;continue}aa=za+16|0;Z=c[aa>>2]|0;if(!Z){Ba=za;Ca=Aa;break}else{za=Z;Aa=aa}}if(Ca>>>0<ta>>>0)Nb();else{c[Ca>>2]=0;ya=Ba;break}}else{aa=c[ka+((xa|8)+la)>>2]|0;if(aa>>>0<ta>>>0)Nb();Z=aa+12|0;if((c[Z>>2]|0)!=(ga|0))Nb();_=ja+8|0;if((c[_>>2]|0)==(ga|0)){c[Z>>2]=ja;c[_>>2]=aa;ya=ja;break}else Nb()}while(0);if(!ea)break;ja=c[ka+(la+28+xa)>>2]|0;aa=27408+(ja<<2)|0;do if((ga|0)!=(c[aa>>2]|0)){if(ea>>>0<(c[6780]|0)>>>0)Nb();_=ea+16|0;if((c[_>>2]|0)==(ga|0))c[_>>2]=ya;else c[ea+20>>2]=ya;if(!ya)break i}else{c[aa>>2]=ya;if(ya)break;c[6777]=c[6777]&~(1<<ja);break i}while(0);ja=c[6780]|0;if(ya>>>0<ja>>>0)Nb();c[ya+24>>2]=ea;aa=xa|16;_=c[ka+(aa+la)>>2]|0;do if(_)if(_>>>0<ja>>>0)Nb();else{c[ya+16>>2]=_;c[_+24>>2]=ya;break}while(0);_=c[ka+(ha+aa)>>2]|0;if(!_)break;if(_>>>0<(c[6780]|0)>>>0)Nb();else{c[ya+20>>2]=_;c[_+24>>2]=ya;break}}else{_=c[ka+((xa|8)+la)>>2]|0;ja=c[ka+(la+12+xa)>>2]|0;ea=27144+(fa<<1<<2)|0;do if((_|0)!=(ea|0)){if(_>>>0<ta>>>0)Nb();if((c[_+12>>2]|0)==(ga|0))break;Nb()}while(0);if((ja|0)==(_|0)){c[6776]=c[6776]&~(1<<fa);break}do if((ja|0)==(ea|0))Da=ja+8|0;else{if(ja>>>0<ta>>>0)Nb();aa=ja+8|0;if((c[aa>>2]|0)==(ga|0)){Da=aa;break}Nb()}while(0);c[_+12>>2]=ja;c[Da>>2]=_}while(0);Ea=ka+(($|xa)+la)|0;Fa=$+O|0}else{Ea=ga;Fa=O}fa=Ea+4|0;c[fa>>2]=c[fa>>2]&-2;c[ka+(ma+4)>>2]=Fa|1;c[ka+(Fa+ma)>>2]=Fa;fa=Fa>>>3;if(Fa>>>0<256){ha=fa<<1;P=27144+(ha<<2)|0;ea=c[6776]|0;aa=1<<fa;do if(!(ea&aa)){c[6776]=ea|aa;Ga=27144+(ha+2<<2)|0;Ha=P}else{fa=27144+(ha+2<<2)|0;Z=c[fa>>2]|0;if(Z>>>0>=(c[6780]|0)>>>0){Ga=fa;Ha=Z;break}Nb()}while(0);c[Ga>>2]=ia;c[Ha+12>>2]=ia;c[ka+(ma+8)>>2]=Ha;c[ka+(ma+12)>>2]=P;break}ha=Fa>>>8;do if(!ha)Ia=0;else{if(Fa>>>0>16777215){Ia=31;break}aa=(ha+1048320|0)>>>16&8;ea=ha<<aa;$=(ea+520192|0)>>>16&4;Z=ea<<$;ea=(Z+245760|0)>>>16&2;fa=14-($|aa|ea)+(Z<<ea>>>15)|0;Ia=Fa>>>(fa+7|0)&1|fa<<1}while(0);ha=27408+(Ia<<2)|0;c[ka+(ma+28)>>2]=Ia;c[ka+(ma+20)>>2]=0;c[ka+(ma+16)>>2]=0;P=c[6777]|0;fa=1<<Ia;if(!(P&fa)){c[6777]=P|fa;c[ha>>2]=ia;c[ka+(ma+24)>>2]=ha;c[ka+(ma+12)>>2]=ia;c[ka+(ma+8)>>2]=ia;break}fa=c[ha>>2]|0;if((Ia|0)==31)Ja=0;else Ja=25-(Ia>>>1)|0;j:do if((c[fa+4>>2]&-8|0)!=(Fa|0)){ha=Fa<<Ja;P=fa;while(1){ea=P+(ha>>>31<<2)+16|0;Z=c[ea>>2]|0;if(!Z){Ka=ea;La=P;break}if((c[Z+4>>2]&-8|0)==(Fa|0)){Ma=Z;break j}else{ha=ha<<1;P=Z}}if(Ka>>>0<(c[6780]|0)>>>0)Nb();else{c[Ka>>2]=ia;c[ka+(ma+24)>>2]=La;c[ka+(ma+12)>>2]=ia;c[ka+(ma+8)>>2]=ia;break h}}else Ma=fa;while(0);fa=Ma+8|0;P=c[fa>>2]|0;ha=c[6780]|0;if(Ma>>>0>=ha>>>0&P>>>0>=ha>>>0){c[P+12>>2]=ia;c[fa>>2]=ia;c[ka+(ma+8)>>2]=P;c[ka+(ma+12)>>2]=Ma;c[ka+(ma+24)>>2]=0;break}else Nb()}else{P=(c[6779]|0)+O|0;c[6779]=P;c[6782]=ia;c[ka+(ma+4)>>2]=P|1}while(0);n=ka+(wa|8)|0;return n|0}ma=27552|0;while(1){ia=c[ma>>2]|0;if(ia>>>0<=na>>>0?(O=c[ma+4>>2]|0,ga=ia+O|0,ga>>>0>na>>>0):0){Na=ia;Oa=O;Pa=ga;break}ma=c[ma+8>>2]|0}ma=Na+(Oa+-39)|0;if(!(ma&7))Qa=0;else Qa=0-ma&7;ma=Na+(Oa+-47+Qa)|0;ga=ma>>>0<(na+16|0)>>>0?na:ma;ma=ga+8|0;O=ka+8|0;if(!(O&7))Ra=0;else Ra=0-O&7;O=la+-40-Ra|0;c[6782]=ka+Ra;c[6779]=O;c[ka+(Ra+4)>>2]=O|1;c[ka+(la+-36)>>2]=40;c[6783]=c[6898];c[ga+4>>2]=27;c[ma+0>>2]=c[6888];c[ma+4>>2]=c[6889];c[ma+8>>2]=c[6890];c[ma+12>>2]=c[6891];c[6888]=ka;c[6889]=la;c[6891]=0;c[6890]=ma;ma=ga+28|0;c[ma>>2]=7;if((ga+32|0)>>>0<Pa>>>0){O=ma;do{ma=O;O=O+4|0;c[O>>2]=7}while((ma+8|0)>>>0<Pa>>>0)}if((ga|0)!=(na|0)){O=ga-na|0;ma=na+(O+4)|0;c[ma>>2]=c[ma>>2]&-2;c[na+4>>2]=O|1;c[na+O>>2]=O;ma=O>>>3;if(O>>>0<256){ia=ma<<1;P=27144+(ia<<2)|0;fa=c[6776]|0;ha=1<<ma;do if(!(fa&ha)){c[6776]=fa|ha;Ta=27144+(ia+2<<2)|0;Ua=P}else{ma=27144+(ia+2<<2)|0;_=c[ma>>2]|0;if(_>>>0>=(c[6780]|0)>>>0){Ta=ma;Ua=_;break}Nb()}while(0);c[Ta>>2]=na;c[Ua+12>>2]=na;c[na+8>>2]=Ua;c[na+12>>2]=P;break}ia=O>>>8;if(ia)if(O>>>0>16777215)Va=31;else{ha=(ia+1048320|0)>>>16&8;fa=ia<<ha;ia=(fa+520192|0)>>>16&4;ga=fa<<ia;fa=(ga+245760|0)>>>16&2;_=14-(ia|ha|fa)+(ga<<fa>>>15)|0;Va=O>>>(_+7|0)&1|_<<1}else Va=0;_=27408+(Va<<2)|0;c[na+28>>2]=Va;c[na+20>>2]=0;c[na+16>>2]=0;fa=c[6777]|0;ga=1<<Va;if(!(fa&ga)){c[6777]=fa|ga;c[_>>2]=na;c[na+24>>2]=_;c[na+12>>2]=na;c[na+8>>2]=na;break}ga=c[_>>2]|0;if((Va|0)==31)Wa=0;else Wa=25-(Va>>>1)|0;k:do if((c[ga+4>>2]&-8|0)!=(O|0)){_=O<<Wa;fa=ga;while(1){ha=fa+(_>>>31<<2)+16|0;ia=c[ha>>2]|0;if(!ia){Xa=ha;Ya=fa;break}if((c[ia+4>>2]&-8|0)==(O|0)){Za=ia;break k}else{_=_<<1;fa=ia}}if(Xa>>>0<(c[6780]|0)>>>0)Nb();else{c[Xa>>2]=na;c[na+24>>2]=Ya;c[na+12>>2]=na;c[na+8>>2]=na;break g}}else Za=ga;while(0);ga=Za+8|0;O=c[ga>>2]|0;P=c[6780]|0;if(Za>>>0>=P>>>0&O>>>0>=P>>>0){c[O+12>>2]=na;c[ga>>2]=na;c[na+8>>2]=O;c[na+12>>2]=Za;c[na+24>>2]=0;break}else Nb()}}else{O=c[6780]|0;if((O|0)==0|ka>>>0<O>>>0)c[6780]=ka;c[6888]=ka;c[6889]=la;c[6891]=0;c[6785]=c[6894];c[6784]=-1;O=0;do{ga=O<<1;P=27144+(ga<<2)|0;c[27144+(ga+3<<2)>>2]=P;c[27144+(ga+2<<2)>>2]=P;O=O+1|0}while((O|0)!=32);O=ka+8|0;if(!(O&7))_a=0;else _a=0-O&7;O=la+-40-_a|0;c[6782]=ka+_a;c[6779]=O;c[ka+(_a+4)>>2]=O|1;c[ka+(la+-36)>>2]=40;c[6783]=c[6898]}while(0);la=c[6779]|0;if(la>>>0>F>>>0){ka=la-F|0;c[6779]=ka;la=c[6782]|0;c[6782]=la+F;c[la+(F+4)>>2]=ka|1;c[la+4>>2]=F|3;n=la+8|0;return n|0}}c[(Db()|0)>>2]=12;n=0;return n|0}function lq(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;if(!a)return;b=a+-8|0;d=c[6780]|0;if(b>>>0<d>>>0)Nb();e=c[a+-4>>2]|0;f=e&3;if((f|0)==1)Nb();g=e&-8;h=a+(g+-8)|0;do if(!(e&1)){i=c[b>>2]|0;if(!f)return;j=-8-i|0;k=a+j|0;l=i+g|0;if(k>>>0<d>>>0)Nb();if((k|0)==(c[6781]|0)){m=a+(g+-4)|0;n=c[m>>2]|0;if((n&3|0)!=3){o=k;p=l;break}c[6778]=l;c[m>>2]=n&-2;c[a+(j+4)>>2]=l|1;c[h>>2]=l;return}n=i>>>3;if(i>>>0<256){i=c[a+(j+8)>>2]|0;m=c[a+(j+12)>>2]|0;q=27144+(n<<1<<2)|0;if((i|0)!=(q|0)){if(i>>>0<d>>>0)Nb();if((c[i+12>>2]|0)!=(k|0))Nb()}if((m|0)==(i|0)){c[6776]=c[6776]&~(1<<n);o=k;p=l;break}if((m|0)!=(q|0)){if(m>>>0<d>>>0)Nb();q=m+8|0;if((c[q>>2]|0)==(k|0))r=q;else Nb()}else r=m+8|0;c[i+12>>2]=m;c[r>>2]=i;o=k;p=l;break}i=c[a+(j+24)>>2]|0;m=c[a+(j+12)>>2]|0;do if((m|0)==(k|0)){q=a+(j+20)|0;n=c[q>>2]|0;if(!n){s=a+(j+16)|0;t=c[s>>2]|0;if(!t){u=0;break}else{v=t;w=s}}else{v=n;w=q}while(1){q=v+20|0;n=c[q>>2]|0;if(n){v=n;w=q;continue}q=v+16|0;n=c[q>>2]|0;if(!n){x=v;y=w;break}else{v=n;w=q}}if(y>>>0<d>>>0)Nb();else{c[y>>2]=0;u=x;break}}else{q=c[a+(j+8)>>2]|0;if(q>>>0<d>>>0)Nb();n=q+12|0;if((c[n>>2]|0)!=(k|0))Nb();s=m+8|0;if((c[s>>2]|0)==(k|0)){c[n>>2]=m;c[s>>2]=q;u=m;break}else Nb()}while(0);if(i){m=c[a+(j+28)>>2]|0;q=27408+(m<<2)|0;if((k|0)==(c[q>>2]|0)){c[q>>2]=u;if(!u){c[6777]=c[6777]&~(1<<m);o=k;p=l;break}}else{if(i>>>0<(c[6780]|0)>>>0)Nb();m=i+16|0;if((c[m>>2]|0)==(k|0))c[m>>2]=u;else c[i+20>>2]=u;if(!u){o=k;p=l;break}}m=c[6780]|0;if(u>>>0<m>>>0)Nb();c[u+24>>2]=i;q=c[a+(j+16)>>2]|0;do if(q)if(q>>>0<m>>>0)Nb();else{c[u+16>>2]=q;c[q+24>>2]=u;break}while(0);q=c[a+(j+20)>>2]|0;if(q)if(q>>>0<(c[6780]|0)>>>0)Nb();else{c[u+20>>2]=q;c[q+24>>2]=u;o=k;p=l;break}else{o=k;p=l}}else{o=k;p=l}}else{o=b;p=g}while(0);if(o>>>0>=h>>>0)Nb();b=a+(g+-4)|0;u=c[b>>2]|0;if(!(u&1))Nb();if(!(u&2)){if((h|0)==(c[6782]|0)){d=(c[6779]|0)+p|0;c[6779]=d;c[6782]=o;c[o+4>>2]=d|1;if((o|0)!=(c[6781]|0))return;c[6781]=0;c[6778]=0;return}if((h|0)==(c[6781]|0)){d=(c[6778]|0)+p|0;c[6778]=d;c[6781]=o;c[o+4>>2]=d|1;c[o+d>>2]=d;return}d=(u&-8)+p|0;x=u>>>3;do if(u>>>0>=256){y=c[a+(g+16)>>2]|0;w=c[a+(g|4)>>2]|0;do if((w|0)==(h|0)){v=a+(g+12)|0;r=c[v>>2]|0;if(!r){f=a+(g+8)|0;e=c[f>>2]|0;if(!e){z=0;break}else{A=e;B=f}}else{A=r;B=v}while(1){v=A+20|0;r=c[v>>2]|0;if(r){A=r;B=v;continue}v=A+16|0;r=c[v>>2]|0;if(!r){C=A;D=B;break}else{A=r;B=v}}if(D>>>0<(c[6780]|0)>>>0)Nb();else{c[D>>2]=0;z=C;break}}else{v=c[a+g>>2]|0;if(v>>>0<(c[6780]|0)>>>0)Nb();r=v+12|0;if((c[r>>2]|0)!=(h|0))Nb();f=w+8|0;if((c[f>>2]|0)==(h|0)){c[r>>2]=w;c[f>>2]=v;z=w;break}else Nb()}while(0);if(y){w=c[a+(g+20)>>2]|0;l=27408+(w<<2)|0;if((h|0)==(c[l>>2]|0)){c[l>>2]=z;if(!z){c[6777]=c[6777]&~(1<<w);break}}else{if(y>>>0<(c[6780]|0)>>>0)Nb();w=y+16|0;if((c[w>>2]|0)==(h|0))c[w>>2]=z;else c[y+20>>2]=z;if(!z)break}w=c[6780]|0;if(z>>>0<w>>>0)Nb();c[z+24>>2]=y;l=c[a+(g+8)>>2]|0;do if(l)if(l>>>0<w>>>0)Nb();else{c[z+16>>2]=l;c[l+24>>2]=z;break}while(0);l=c[a+(g+12)>>2]|0;if(l)if(l>>>0<(c[6780]|0)>>>0)Nb();else{c[z+20>>2]=l;c[l+24>>2]=z;break}}}else{l=c[a+g>>2]|0;w=c[a+(g|4)>>2]|0;y=27144+(x<<1<<2)|0;if((l|0)!=(y|0)){if(l>>>0<(c[6780]|0)>>>0)Nb();if((c[l+12>>2]|0)!=(h|0))Nb()}if((w|0)==(l|0)){c[6776]=c[6776]&~(1<<x);break}if((w|0)!=(y|0)){if(w>>>0<(c[6780]|0)>>>0)Nb();y=w+8|0;if((c[y>>2]|0)==(h|0))E=y;else Nb()}else E=w+8|0;c[l+12>>2]=w;c[E>>2]=l}while(0);c[o+4>>2]=d|1;c[o+d>>2]=d;if((o|0)==(c[6781]|0)){c[6778]=d;return}else F=d}else{c[b>>2]=u&-2;c[o+4>>2]=p|1;c[o+p>>2]=p;F=p}p=F>>>3;if(F>>>0<256){u=p<<1;b=27144+(u<<2)|0;d=c[6776]|0;E=1<<p;if(d&E){p=27144+(u+2<<2)|0;h=c[p>>2]|0;if(h>>>0<(c[6780]|0)>>>0)Nb();else{G=p;H=h}}else{c[6776]=d|E;G=27144+(u+2<<2)|0;H=b}c[G>>2]=o;c[H+12>>2]=o;c[o+8>>2]=H;c[o+12>>2]=b;return}b=F>>>8;if(b)if(F>>>0>16777215)I=31;else{H=(b+1048320|0)>>>16&8;G=b<<H;b=(G+520192|0)>>>16&4;u=G<<b;G=(u+245760|0)>>>16&2;E=14-(b|H|G)+(u<<G>>>15)|0;I=F>>>(E+7|0)&1|E<<1}else I=0;E=27408+(I<<2)|0;c[o+28>>2]=I;c[o+20>>2]=0;c[o+16>>2]=0;G=c[6777]|0;u=1<<I;a:do if(G&u){H=c[E>>2]|0;if((I|0)==31)J=0;else J=25-(I>>>1)|0;b:do if((c[H+4>>2]&-8|0)!=(F|0)){b=F<<J;d=H;while(1){h=d+(b>>>31<<2)+16|0;p=c[h>>2]|0;if(!p){K=h;L=d;break}if((c[p+4>>2]&-8|0)==(F|0)){M=p;break b}else{b=b<<1;d=p}}if(K>>>0<(c[6780]|0)>>>0)Nb();else{c[K>>2]=o;c[o+24>>2]=L;c[o+12>>2]=o;c[o+8>>2]=o;break a}}else M=H;while(0);H=M+8|0;d=c[H>>2]|0;b=c[6780]|0;if(M>>>0>=b>>>0&d>>>0>=b>>>0){c[d+12>>2]=o;c[H>>2]=o;c[o+8>>2]=d;c[o+12>>2]=M;c[o+24>>2]=0;break}else Nb()}else{c[6777]=G|u;c[E>>2]=o;c[o+24>>2]=E;c[o+12>>2]=o;c[o+8>>2]=o}while(0);o=(c[6784]|0)+-1|0;c[6784]=o;if(!o)N=27560|0;else return;while(1){o=c[N>>2]|0;if(!o)break;else N=o+8|0}c[6784]=-1;return}function mq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;if(!a){d=kq(b)|0;return d|0}if(b>>>0>4294967231){c[(Db()|0)>>2]=12;d=0;return d|0}if(b>>>0<11)e=16;else e=b+11&-8;f=Rq(a+-8|0,e)|0;if(f){d=f+8|0;return d|0}f=kq(b)|0;if(!f){d=0;return d|0}e=c[a+-4>>2]|0;g=(e&-8)-((e&3|0)==0?8:4)|0;$q(f|0,a|0,(g>>>0<b>>>0?g:b)|0)|0;lq(a);d=f;return d|0}function nq(a){a=a|0;var b=0;if((a|0)==32)b=1;else b=(a+-9|0)>>>0<5;return b&1|0}function oq(a){a=a|0;var b=0,c=0;if((a+-48|0)>>>0<10){b=1;c=b&1;return c|0}b=((a|32)+-97|0)>>>0<6;c=b&1;return c|0}function pq(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0;if(e>>>0>36){c[(Db()|0)>>2]=22;i=0;j=0;G=i;return j|0}k=b+4|0;l=b+100|0;do{m=c[k>>2]|0;if(m>>>0<(c[l>>2]|0)>>>0){c[k>>2]=m+1;n=d[m>>0]|0}else n=sq(b)|0}while((nq(n)|0)!=0);o=n;do if((o|0)==43|(o|0)==45){n=((o|0)==45)<<31>>31;m=c[k>>2]|0;if(m>>>0<(c[l>>2]|0)>>>0){c[k>>2]=m+1;p=d[m>>0]|0;q=n;break}else{p=sq(b)|0;q=n;break}}else{p=o;q=0}while(0);o=(e|0)==0;do if((e&-17|0)==0&(p|0)==48){n=c[k>>2]|0;if(n>>>0<(c[l>>2]|0)>>>0){c[k>>2]=n+1;r=d[n>>0]|0}else r=sq(b)|0;if((r|32|0)!=120)if(o){s=8;t=r;u=46;break}else{v=e;w=r;u=32;break}n=c[k>>2]|0;if(n>>>0<(c[l>>2]|0)>>>0){c[k>>2]=n+1;x=d[n>>0]|0}else x=sq(b)|0;if((d[x+27601>>0]|0)>15){n=(c[l>>2]|0)==0;if(!n)c[k>>2]=(c[k>>2]|0)+-1;if(!f){rq(b,0);i=0;j=0;G=i;return j|0}if(n){i=0;j=0;G=i;return j|0}c[k>>2]=(c[k>>2]|0)+-1;i=0;j=0;G=i;return j|0}else{s=16;t=x;u=46}}else{n=o?10:e;if((d[p+27601>>0]|0)>>>0<n>>>0){v=n;w=p;u=32}else{if(c[l>>2]|0)c[k>>2]=(c[k>>2]|0)+-1;rq(b,0);c[(Db()|0)>>2]=22;i=0;j=0;G=i;return j|0}}while(0);if((u|0)==32)if((v|0)==10){p=w+-48|0;if(p>>>0<10){e=p;p=0;while(1){o=(p*10|0)+e|0;x=c[k>>2]|0;if(x>>>0<(c[l>>2]|0)>>>0){c[k>>2]=x+1;y=d[x>>0]|0}else y=sq(b)|0;e=y+-48|0;if(!(e>>>0<10&o>>>0<429496729)){z=o;A=y;break}else p=o}B=z;C=0;D=A}else{B=0;C=0;D=w}A=D+-48|0;if(A>>>0<10){z=B;p=C;y=A;A=D;while(1){D=jr(z|0,p|0,10,0)|0;e=G;o=((y|0)<0)<<31>>31;x=~o;if(e>>>0>x>>>0|(e|0)==(x|0)&D>>>0>~y>>>0){E=y;F=z;H=p;I=A;break}x=Xq(D|0,e|0,y|0,o|0)|0;o=G;e=c[k>>2]|0;if(e>>>0<(c[l>>2]|0)>>>0){c[k>>2]=e+1;J=d[e>>0]|0}else J=sq(b)|0;e=J+-48|0;if(e>>>0<10&(o>>>0<429496729|(o|0)==429496729&x>>>0<2576980378)){z=x;p=o;y=e;A=J}else{E=e;F=x;H=o;I=J;break}}if(E>>>0>9){K=H;L=F}else{M=10;N=F;O=H;P=I;u=72}}else{K=C;L=B}}else{s=v;t=w;u=46}a:do if((u|0)==46){if(!(s+-1&s)){w=a[27864+((s*23|0)>>>5&7)>>0]|0;v=a[t+27601>>0]|0;B=v&255;if(B>>>0<s>>>0){C=B;B=0;while(1){I=C|B<<w;H=c[k>>2]|0;if(H>>>0<(c[l>>2]|0)>>>0){c[k>>2]=H+1;Q=d[H>>0]|0}else Q=sq(b)|0;H=a[Q+27601>>0]|0;C=H&255;if(!(C>>>0<s>>>0&I>>>0<134217728)){R=I;S=H;T=Q;break}else B=I}U=S;V=0;W=R;X=T}else{U=v;V=0;W=0;X=t}B=Zq(-1,-1,w|0)|0;C=G;if((U&255)>>>0>=s>>>0|(V>>>0>C>>>0|(V|0)==(C|0)&W>>>0>B>>>0)){M=s;N=W;O=V;P=X;u=72;break}else{Y=W;Z=V;_=U}while(1){I=ar(Y|0,Z|0,w|0)|0;H=G;F=_&255|I;I=c[k>>2]|0;if(I>>>0<(c[l>>2]|0)>>>0){c[k>>2]=I+1;$=d[I>>0]|0}else $=sq(b)|0;_=a[$+27601>>0]|0;if((_&255)>>>0>=s>>>0|(H>>>0>C>>>0|(H|0)==(C|0)&F>>>0>B>>>0)){M=s;N=F;O=H;P=$;u=72;break a}else{Y=F;Z=H}}}B=a[t+27601>>0]|0;C=B&255;if(C>>>0<s>>>0){w=C;C=0;while(1){v=w+(ca(C,s)|0)|0;H=c[k>>2]|0;if(H>>>0<(c[l>>2]|0)>>>0){c[k>>2]=H+1;aa=d[H>>0]|0}else aa=sq(b)|0;H=a[aa+27601>>0]|0;w=H&255;if(!(w>>>0<s>>>0&v>>>0<119304647)){ba=v;da=H;ea=aa;break}else C=v}fa=da;ga=ba;ha=0;ia=ea}else{fa=B;ga=0;ha=0;ia=t}if((fa&255)>>>0<s>>>0){C=kr(-1,-1,s|0,0)|0;w=G;v=ha;H=ga;F=fa;I=ia;while(1){if(v>>>0>w>>>0|(v|0)==(w|0)&H>>>0>C>>>0){M=s;N=H;O=v;P=I;u=72;break a}E=jr(H|0,v|0,s|0,0)|0;J=G;A=F&255;if(J>>>0>4294967295|(J|0)==-1&E>>>0>~A>>>0){M=s;N=H;O=v;P=I;u=72;break a}y=Xq(A|0,0,E|0,J|0)|0;J=G;E=c[k>>2]|0;if(E>>>0<(c[l>>2]|0)>>>0){c[k>>2]=E+1;ja=d[E>>0]|0}else ja=sq(b)|0;F=a[ja+27601>>0]|0;if((F&255)>>>0>=s>>>0){M=s;N=y;O=J;P=ja;u=72;break}else{v=J;H=y;I=ja}}}else{M=s;N=ga;O=ha;P=ia;u=72}}while(0);if((u|0)==72)if((d[P+27601>>0]|0)>>>0<M>>>0){do{P=c[k>>2]|0;if(P>>>0<(c[l>>2]|0)>>>0){c[k>>2]=P+1;ka=d[P>>0]|0}else ka=sq(b)|0}while((d[ka+27601>>0]|0)>>>0<M>>>0);c[(Db()|0)>>2]=34;K=h;L=g}else{K=O;L=N}if(c[l>>2]|0)c[k>>2]=(c[k>>2]|0)+-1;if(!(K>>>0<h>>>0|(K|0)==(h|0)&L>>>0<g>>>0)){if(!((g&1|0)!=0|0!=0|(q|0)!=0)){c[(Db()|0)>>2]=34;k=Xq(g|0,h|0,-1,-1)|0;i=G;j=k;G=i;return j|0}if(K>>>0>h>>>0|(K|0)==(h|0)&L>>>0>g>>>0){c[(Db()|0)>>2]=34;i=h;j=g;G=i;return j|0}}g=((q|0)<0)<<31>>31;h=Yq(L^q|0,K^g|0,q|0,g|0)|0;i=G;j=h;G=i;return j|0}function qq(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0.0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,S=0,T=0,U=0,V=0,W=0.0,X=0,Y=0.0,Z=0,_=0,$=0,aa=0,ba=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0.0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0.0,ra=0,sa=0.0,ta=0,ua=0.0,va=0,wa=0.0,xa=0,ya=0.0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0.0,Ga=0,Ha=0.0,Ia=0,Ja=0,Ka=0,La=0,Ma=0.0,Na=0,Oa=0,Pa=0,Qa=0.0,Ra=0.0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0,Tc=0,Uc=0,Vc=0,Wc=0,Xc=0,Yc=0,Zc=0,_c=0,$c=0,ad=0,bd=0,cd=0,dd=0,ed=0,fd=0,gd=0,hd=0,id=0,jd=0,kd=0.0,ld=0,md=0,nd=0,od=0,pd=0,qd=0.0,rd=0,sd=0.0,td=0.0,ud=0.0,vd=0.0,wd=0.0,xd=0,yd=0,zd=0.0,Ad=0,Bd=0.0;g=i;i=i+512|0;h=g;if((e|0)==2){j=53;k=-1074}else if((e|0)==1){j=53;k=-1074}else if(!e){j=24;k=-149}else{l=0.0;i=g;return +l}e=b+4|0;m=b+100|0;do{n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;o=d[n>>0]|0}else o=sq(b)|0}while((nq(o)|0)!=0);p=o;do if((p|0)==43|(p|0)==45){o=1-(((p|0)==45&1)<<1)|0;n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;q=d[n>>0]|0;r=o;break}else{q=sq(b)|0;r=o;break}}else{q=p;r=1}while(0);p=q;q=0;while(1){if((p|32|0)!=(a[27880+q>>0]|0)){s=p;t=q;break}do if(q>>>0<7){o=c[e>>2]|0;if(o>>>0<(c[m>>2]|0)>>>0){c[e>>2]=o+1;u=d[o>>0]|0;break}else{u=sq(b)|0;break}}else u=p;while(0);o=q+1|0;if(o>>>0<8){p=u;q=o}else{s=u;t=o;break}}do if((t|0)==3)x=23;else if((t|0)!=8){u=(f|0)!=0;if(t>>>0>3&u)if((t|0)==8)break;else{x=23;break}a:do if(!t){q=s;p=0;while(1){if((q|32|0)!=(a[28472+p>>0]|0)){y=q;z=p;break a}do if(p>>>0<2){o=c[e>>2]|0;if(o>>>0<(c[m>>2]|0)>>>0){c[e>>2]=o+1;A=d[o>>0]|0;break}else{A=sq(b)|0;break}}else A=q;while(0);o=p+1|0;if(o>>>0<3){q=A;p=o}else{y=A;z=o;break}}}else{y=s;z=t}while(0);if((z|0)==3){p=c[e>>2]|0;if(p>>>0<(c[m>>2]|0)>>>0){c[e>>2]=p+1;B=d[p>>0]|0}else B=sq(b)|0;if((B|0)==40)C=1;else{if(!(c[m>>2]|0)){l=v;i=g;return +l}c[e>>2]=(c[e>>2]|0)+-1;l=v;i=g;return +l}while(1){p=c[e>>2]|0;if(p>>>0<(c[m>>2]|0)>>>0){c[e>>2]=p+1;D=d[p>>0]|0}else D=sq(b)|0;if(!((D+-48|0)>>>0<10|(D+-65|0)>>>0<26)?!((D+-97|0)>>>0<26|(D|0)==95):0){E=D;F=C;break}C=C+1|0}if((E|0)==41){l=v;i=g;return +l}p=(c[m>>2]|0)==0;if(!p)c[e>>2]=(c[e>>2]|0)+-1;if(!u){c[(Db()|0)>>2]=22;rq(b,0);l=0.0;i=g;return +l}if((F|0)==0|p){l=v;i=g;return +l}else H=F;do{H=H+-1|0;c[e>>2]=(c[e>>2]|0)+-1}while((H|0)!=0);l=v;i=g;return +l}else if(!z){do if((y|0)==48){u=c[e>>2]|0;if(u>>>0<(c[m>>2]|0)>>>0){c[e>>2]=u+1;I=d[u>>0]|0}else I=sq(b)|0;if((I|32|0)!=120){if(!(c[m>>2]|0)){J=48;break}c[e>>2]=(c[e>>2]|0)+-1;J=48;break}u=c[e>>2]|0;if(u>>>0<(c[m>>2]|0)>>>0){c[e>>2]=u+1;K=d[u>>0]|0;L=0}else{K=sq(b)|0;L=0}while(1){if((K|0)==46){M=L;x=70;break}else if((K|0)!=48){N=0;O=0;P=0;Q=0;S=K;T=L;U=0;V=0;W=1.0;X=0;Y=0.0;break}u=c[e>>2]|0;if(u>>>0<(c[m>>2]|0)>>>0){c[e>>2]=u+1;K=d[u>>0]|0;L=1;continue}else{K=sq(b)|0;L=1;continue}}if((x|0)==70){u=c[e>>2]|0;if(u>>>0<(c[m>>2]|0)>>>0){c[e>>2]=u+1;Z=d[u>>0]|0}else Z=sq(b)|0;if((Z|0)==48){u=0;p=0;while(1){q=c[e>>2]|0;if(q>>>0<(c[m>>2]|0)>>>0){c[e>>2]=q+1;_=d[q>>0]|0}else _=sq(b)|0;q=Xq(u|0,p|0,-1,-1)|0;o=G;if((_|0)==48){u=q;p=o}else{N=0;O=0;P=q;Q=o;S=_;T=1;U=1;V=0;W=1.0;X=0;Y=0.0;break}}}else{N=0;O=0;P=0;Q=0;S=Z;T=M;U=1;V=0;W=1.0;X=0;Y=0.0}}b:while(1){p=S+-48|0;do if(p>>>0>=10){u=S|32;o=(S|0)==46;if(!((u+-97|0)>>>0<6|o)){$=P;aa=O;ba=Q;da=N;ea=S;fa=T;ga=U;ha=X;ia=Y;break b}if(o)if(!U){ja=O;ka=N;la=O;ma=N;na=T;oa=1;pa=V;qa=W;ra=X;sa=Y;break}else{$=P;aa=O;ba=Q;da=N;ea=46;fa=T;ga=U;ha=X;ia=Y;break b}else{ta=(S|0)>57?u+-87|0:p;x=83;break}}else{ta=p;x=83}while(0);if((x|0)==83){x=0;do if(!((N|0)<0|(N|0)==0&O>>>0<8)){if((N|0)<0|(N|0)==0&O>>>0<14){ua=W*.0625;va=V;wa=ua;xa=X;ya=Y+ua*+(ta|0);break}if((ta|0)==0|(V|0)!=0){va=V;wa=W;xa=X;ya=Y}else{va=1;wa=W;xa=X;ya=Y+W*.5}}else{va=V;wa=W;xa=ta+(X<<4)|0;ya=Y}while(0);p=Xq(O|0,N|0,1,0)|0;ja=P;ka=Q;la=p;ma=G;na=1;oa=U;pa=va;qa=wa;ra=xa;sa=ya}p=c[e>>2]|0;if(p>>>0<(c[m>>2]|0)>>>0){c[e>>2]=p+1;N=ma;O=la;P=ja;Q=ka;S=d[p>>0]|0;T=na;U=oa;V=pa;W=qa;X=ra;Y=sa;continue}else{N=ma;O=la;P=ja;Q=ka;S=sq(b)|0;T=na;U=oa;V=pa;W=qa;X=ra;Y=sa;continue}}if(!fa){p=(c[m>>2]|0)==0;if(!p)c[e>>2]=(c[e>>2]|0)+-1;if(f){if(!p?(p=c[e>>2]|0,c[e>>2]=p+-1,(ga|0)!=0):0)c[e>>2]=p+-2}else rq(b,0);l=+(r|0)*0.0;i=g;return +l}p=(ga|0)==0;u=p?aa:$;o=p?da:ba;if((da|0)<0|(da|0)==0&aa>>>0<8){p=aa;q=da;n=ha;while(1){za=n<<4;p=Xq(p|0,q|0,1,0)|0;q=G;if(!((q|0)<0|(q|0)==0&p>>>0<8)){Aa=za;break}else n=za}}else Aa=ha;do if((ea|32|0)==112){n=Tq(b,f)|0;p=G;if((n|0)==0&(p|0)==-2147483648)if(!f){rq(b,0);l=0.0;i=g;return +l}else{if(!(c[m>>2]|0)){Ba=0;Ca=0;break}c[e>>2]=(c[e>>2]|0)+-1;Ba=0;Ca=0;break}else{Ba=n;Ca=p}}else if(!(c[m>>2]|0)){Ba=0;Ca=0}else{c[e>>2]=(c[e>>2]|0)+-1;Ba=0;Ca=0}while(0);p=ar(u|0,o|0,2)|0;n=Xq(p|0,G|0,-32,-1)|0;p=Xq(n|0,G|0,Ba|0,Ca|0)|0;n=G;if(!Aa){l=+(r|0)*0.0;i=g;return +l}if((n|0)>0|(n|0)==0&p>>>0>(0-k|0)>>>0){c[(Db()|0)>>2]=34;l=+(r|0)*1797693134862315708145274.0e284*1797693134862315708145274.0e284;i=g;return +l}q=k+-106|0;za=((q|0)<0)<<31>>31;if((n|0)<(za|0)|(n|0)==(za|0)&p>>>0<q>>>0){c[(Db()|0)>>2]=34;l=+(r|0)*2.2250738585072014e-308*2.2250738585072014e-308;i=g;return +l}if((Aa|0)>-1){q=p;za=n;Da=Aa;ua=ia;while(1){Ea=Da<<1;if(!(ua>=.5)){Fa=ua;Ga=Ea}else{Fa=ua+-1.0;Ga=Ea|1}Ha=ua+Fa;Ea=Xq(q|0,za|0,-1,-1)|0;Ia=G;if((Ga|0)>-1){q=Ea;za=Ia;Da=Ga;ua=Ha}else{Ja=Ea;Ka=Ia;La=Ga;Ma=Ha;break}}}else{Ja=p;Ka=n;La=Aa;Ma=ia}Da=Yq(32,0,k|0,((k|0)<0)<<31>>31|0)|0;za=Xq(Ja|0,Ka|0,Da|0,G|0)|0;Da=G;if(0>(Da|0)|0==(Da|0)&j>>>0>za>>>0)if((za|0)<0){Na=0;x=126}else{Oa=za;x=124}else{Oa=j;x=124}if((x|0)==124)if((Oa|0)<53){Na=Oa;x=126}else{Pa=Oa;Qa=+(r|0);Ra=0.0}if((x|0)==126){ua=+(r|0);Pa=Na;Qa=ua;Ra=+uq(+zq(1.0,84-Na|0),ua)}za=(Pa|0)<32&Ma!=0.0&(La&1|0)==0;ua=Qa*(za?0.0:Ma)+(Ra+Qa*+(((za&1)+La|0)>>>0))-Ra;if(!(ua!=0.0))c[(Db()|0)>>2]=34;l=+Aq(ua,Ja);i=g;return +l}else J=y;while(0);za=k+j|0;Da=0-za|0;q=J;o=0;while(1){if((q|0)==46){Sa=o;x=137;break}else if((q|0)!=48){Ta=q;Ua=0;Va=0;Wa=o;Xa=0;break}u=c[e>>2]|0;if(u>>>0<(c[m>>2]|0)>>>0){c[e>>2]=u+1;q=d[u>>0]|0;o=1;continue}else{q=sq(b)|0;o=1;continue}}if((x|0)==137){o=c[e>>2]|0;if(o>>>0<(c[m>>2]|0)>>>0){c[e>>2]=o+1;Ya=d[o>>0]|0}else Ya=sq(b)|0;if((Ya|0)==48){o=0;q=0;while(1){u=Xq(o|0,q|0,-1,-1)|0;Ia=G;Ea=c[e>>2]|0;if(Ea>>>0<(c[m>>2]|0)>>>0){c[e>>2]=Ea+1;Za=d[Ea>>0]|0}else Za=sq(b)|0;if((Za|0)==48){o=u;q=Ia}else{Ta=Za;Ua=u;Va=Ia;Wa=1;Xa=1;break}}}else{Ta=Ya;Ua=0;Va=0;Wa=Sa;Xa=1}}c[h>>2]=0;q=Ta+-48|0;o=(Ta|0)==46;c:do if(q>>>0<10|o){Ia=h+496|0;u=Ta;Ea=0;_a=0;$a=o;ab=q;bb=Ua;cb=Va;db=Wa;eb=Xa;fb=0;gb=0;hb=0;d:while(1){do if($a)if(!eb){ib=Ea;jb=_a;kb=Ea;lb=_a;mb=db;nb=1;ob=fb;pb=gb;qb=hb}else{rb=bb;sb=cb;tb=Ea;ub=_a;vb=db;wb=fb;xb=gb;yb=hb;break d}else{zb=Xq(Ea|0,_a|0,1,0)|0;Ab=G;Bb=(u|0)!=48;if((gb|0)>=125){if(!Bb){ib=bb;jb=cb;kb=zb;lb=Ab;mb=db;nb=eb;ob=fb;pb=gb;qb=hb;break}c[Ia>>2]=c[Ia>>2]|1;ib=bb;jb=cb;kb=zb;lb=Ab;mb=db;nb=eb;ob=fb;pb=gb;qb=hb;break}Cb=h+(gb<<2)|0;if(!fb)Eb=ab;else Eb=u+-48+((c[Cb>>2]|0)*10|0)|0;c[Cb>>2]=Eb;Cb=fb+1|0;Fb=(Cb|0)==9;ib=bb;jb=cb;kb=zb;lb=Ab;mb=1;nb=eb;ob=Fb?0:Cb;pb=(Fb&1)+gb|0;qb=Bb?zb:hb}while(0);zb=c[e>>2]|0;if(zb>>>0<(c[m>>2]|0)>>>0){c[e>>2]=zb+1;Gb=d[zb>>0]|0}else Gb=sq(b)|0;ab=Gb+-48|0;$a=(Gb|0)==46;if(!(ab>>>0<10|$a)){Hb=Gb;Ib=ib;Jb=kb;Kb=jb;Lb=lb;Mb=mb;Nb=nb;Ob=ob;Pb=pb;Qb=qb;x=160;break c}else{u=Gb;Ea=kb;_a=lb;bb=ib;cb=jb;db=mb;eb=nb;fb=ob;gb=pb;hb=qb}}Rb=tb;Sb=ub;Tb=rb;Ub=sb;Vb=(vb|0)!=0;Wb=wb;Xb=xb;Yb=yb;x=168}else{Hb=Ta;Ib=Ua;Jb=0;Kb=Va;Lb=0;Mb=Wa;Nb=Xa;Ob=0;Pb=0;Qb=0;x=160}while(0);do if((x|0)==160){q=(Nb|0)==0;o=q?Jb:Ib;hb=q?Lb:Kb;q=(Mb|0)!=0;if(!(q&(Hb|32|0)==101))if((Hb|0)>-1){Rb=Jb;Sb=Lb;Tb=o;Ub=hb;Vb=q;Wb=Ob;Xb=Pb;Yb=Qb;x=168;break}else{Zb=Jb;_b=Lb;$b=q;ac=o;bc=hb;cc=Ob;dc=Pb;ec=Qb;x=170;break}q=Tq(b,f)|0;gb=G;do if((q|0)==0&(gb|0)==-2147483648)if(!f){rq(b,0);l=0.0;i=g;return +l}else{if(!(c[m>>2]|0)){fc=0;gc=0;break}c[e>>2]=(c[e>>2]|0)+-1;fc=0;gc=0;break}else{fc=q;gc=gb}while(0);gb=Xq(fc|0,gc|0,o|0,hb|0)|0;hc=gb;ic=Jb;jc=G;kc=Lb;lc=Ob;mc=Pb;nc=Qb}while(0);if((x|0)==168)if(c[m>>2]|0){c[e>>2]=(c[e>>2]|0)+-1;if(Vb){hc=Tb;ic=Rb;jc=Ub;kc=Sb;lc=Wb;mc=Xb;nc=Yb}else x=171}else{Zb=Rb;_b=Sb;$b=Vb;ac=Tb;bc=Ub;cc=Wb;dc=Xb;ec=Yb;x=170}if((x|0)==170)if($b){hc=ac;ic=Zb;jc=bc;kc=_b;lc=cc;mc=dc;nc=ec}else x=171;if((x|0)==171){c[(Db()|0)>>2]=22;rq(b,0);l=0.0;i=g;return +l}gb=c[h>>2]|0;if(!gb){l=+(r|0)*0.0;i=g;return +l}if((hc|0)==(ic|0)&(jc|0)==(kc|0)&((kc|0)<0|(kc|0)==0&ic>>>0<10)?j>>>0>30|(gb>>>j|0)==0:0){l=+(r|0)*+(gb>>>0);i=g;return +l}gb=(k|0)/-2|0;q=((gb|0)<0)<<31>>31;if((jc|0)>(q|0)|(jc|0)==(q|0)&hc>>>0>gb>>>0){c[(Db()|0)>>2]=34;l=+(r|0)*1797693134862315708145274.0e284*1797693134862315708145274.0e284;i=g;return +l}gb=k+-106|0;q=((gb|0)<0)<<31>>31;if((jc|0)<(q|0)|(jc|0)==(q|0)&hc>>>0<gb>>>0){c[(Db()|0)>>2]=34;l=+(r|0)*2.2250738585072014e-308*2.2250738585072014e-308;i=g;return +l}if(!lc)oc=mc;else{if((lc|0)<9){gb=h+(mc<<2)|0;q=c[gb>>2]|0;fb=lc;while(1){eb=q*10|0;fb=fb+1|0;if((fb|0)==9){pc=eb;break}else q=eb}c[gb>>2]=pc}oc=mc+1|0}if((nc|0)<9?(nc|0)<=(hc|0)&(hc|0)<18:0){if((hc|0)==9){l=+(r|0)*+((c[h>>2]|0)>>>0);i=g;return +l}if((hc|0)<9){l=+(r|0)*+((c[h>>2]|0)>>>0)/+(c[27904+(8-hc<<2)>>2]|0);i=g;return +l}q=j+27+(ca(hc,-3)|0)|0;fb=c[h>>2]|0;if((q|0)>30|(fb>>>q|0)==0){l=+(r|0)*+(fb>>>0)*+(c[27904+(hc+-10<<2)>>2]|0);i=g;return +l}}fb=(hc|0)%9|0;if(!fb){qc=0;rc=0;sc=hc;tc=oc}else{q=(hc|0)>-1?fb:fb+9|0;fb=c[27904+(8-q<<2)>>2]|0;if(oc){eb=1e9/(fb|0)|0;db=0;cb=0;bb=0;_a=hc;while(1){Ea=h+(bb<<2)|0;u=c[Ea>>2]|0;$a=((u>>>0)/(fb>>>0)|0)+cb|0;c[Ea>>2]=$a;Ea=ca((u>>>0)%(fb>>>0)|0,eb)|0;u=bb;bb=bb+1|0;if((u|0)==(db|0)&($a|0)==0){uc=bb&127;vc=_a+-9|0}else{uc=db;vc=_a}if((bb|0)==(oc|0)){wc=Ea;xc=uc;yc=vc;break}else{db=uc;cb=Ea;_a=vc}}if(!wc){zc=xc;Ac=yc;Bc=oc}else{c[h+(oc<<2)>>2]=wc;zc=xc;Ac=yc;Bc=oc+1|0}}else{zc=0;Ac=hc;Bc=0}qc=zc;rc=0;sc=9-q+Ac|0;tc=Bc}e:while(1){_a=h+(qc<<2)|0;if((sc|0)<18){cb=rc;db=tc;while(1){bb=0;eb=db+127|0;fb=db;while(1){gb=eb&127;Ea=h+(gb<<2)|0;$a=ar(c[Ea>>2]|0,0,29)|0;u=Xq($a|0,G|0,bb|0,0)|0;$a=G;if($a>>>0>0|($a|0)==0&u>>>0>1e9){ab=kr(u|0,$a|0,1e9,0)|0;Ia=lr(u|0,$a|0,1e9,0)|0;Cc=Ia;Dc=ab}else{Cc=u;Dc=0}c[Ea>>2]=Cc;Ea=(gb|0)==(qc|0);if((gb|0)!=(fb+127&127|0)|Ea)Ec=fb;else Ec=(Cc|0)==0?gb:fb;if(Ea){Fc=Dc;Gc=Ec;break}else{bb=Dc;eb=gb+-1|0;fb=Ec}}fb=cb+-29|0;if(!Fc){cb=fb;db=Gc}else{Hc=fb;Ic=Fc;Jc=Gc;break}}}else{if((sc|0)==18){Kc=rc;Lc=tc}else{Mc=qc;Nc=rc;Oc=sc;Pc=tc;break}while(1){if((c[_a>>2]|0)>>>0>=9007199){Mc=qc;Nc=Kc;Oc=18;Pc=Lc;break e}db=0;cb=Lc+127|0;hb=Lc;while(1){o=cb&127;fb=h+(o<<2)|0;eb=ar(c[fb>>2]|0,0,29)|0;bb=Xq(eb|0,G|0,db|0,0)|0;eb=G;if(eb>>>0>0|(eb|0)==0&bb>>>0>1e9){gb=kr(bb|0,eb|0,1e9,0)|0;Ea=lr(bb|0,eb|0,1e9,0)|0;Qc=Ea;Rc=gb}else{Qc=bb;Rc=0}c[fb>>2]=Qc;fb=(o|0)==(qc|0);if((o|0)!=(hb+127&127|0)|fb)Sc=hb;else Sc=(Qc|0)==0?o:hb;if(fb){Tc=Rc;Uc=Sc;break}else{db=Rc;cb=o+-1|0;hb=Sc}}hb=Kc+-29|0;if(!Tc){Kc=hb;Lc=Uc}else{Hc=hb;Ic=Tc;Jc=Uc;break}}}_a=qc+127&127;if((_a|0)==(Jc|0)){hb=Jc+127&127;cb=h+((Jc+126&127)<<2)|0;c[cb>>2]=c[cb>>2]|c[h+(hb<<2)>>2];Vc=hb}else Vc=Jc;c[h+(_a<<2)>>2]=Ic;qc=_a;rc=Hc;sc=sc+9|0;tc=Vc}f:while(1){q=Pc+1&127;_a=h+((Pc+127&127)<<2)|0;hb=Mc;cb=Nc;db=Oc;while(1){o=(db|0)==18;fb=(db|0)>27?9:1;bb=hb;gb=cb;while(1){Ea=0;while(1){eb=Ea+bb&127;if((eb|0)==(Pc|0)){Wc=2;break}u=c[h+(eb<<2)>>2]|0;eb=c[27896+(Ea<<2)>>2]|0;if(u>>>0<eb>>>0){Wc=2;break}ab=Ea+1|0;if(u>>>0>eb>>>0){Wc=Ea;break}if((ab|0)<2)Ea=ab;else{Wc=ab;break}}if((Wc|0)==2&o){Xc=q;Yc=bb;Zc=gb;_c=Pc;break f}Ea=fb+gb|0;if((bb|0)==(Pc|0)){bb=Pc;gb=Ea}else{$c=Ea;ad=bb;break}}bb=(1<<fb)+-1|0;gb=1e9>>>fb;o=ad;Ea=0;ab=ad;eb=db;while(1){u=h+(ab<<2)|0;Ia=c[u>>2]|0;$a=(Ia>>>fb)+Ea|0;c[u>>2]=$a;u=ca(Ia&bb,gb)|0;Ia=(ab|0)==(o|0)&($a|0)==0;ab=ab+1&127;$a=Ia?eb+-9|0:eb;n=Ia?ab:o;if((ab|0)==(Pc|0)){bd=u;cd=n;dd=$a;break}else{o=n;Ea=u;eb=$a}}if(!bd){hb=cd;cb=$c;db=dd;continue}if((q|0)!=(cd|0)){ed=$c;fd=bd;gd=cd;hd=dd;break}c[_a>>2]=c[_a>>2]|1;hb=cd;cb=$c;db=dd}c[h+(Pc<<2)>>2]=fd;Mc=gd;Nc=ed;Oc=hd;Pc=q}db=Yc&127;if((db|0)==(_c|0)){c[h+(Xc+-1<<2)>>2]=0;id=Xc}else id=_c;ua=+((c[h+(db<<2)>>2]|0)>>>0);db=Yc+1&127;if((db|0)==(id|0)){cb=id+1&127;c[h+(cb+-1<<2)>>2]=0;jd=cb}else jd=id;Ha=+(r|0);kd=Ha*(ua*1.0e9+ +((c[h+(db<<2)>>2]|0)>>>0));db=Zc+53|0;cb=db-k|0;if((cb|0)<(j|0))if((cb|0)<0){ld=0;md=1;x=244}else{nd=cb;od=1;x=243}else{nd=j;od=0;x=243}if((x|0)==243)if((nd|0)<53){ld=nd;md=od;x=244}else{pd=nd;qd=0.0;rd=od;sd=0.0;td=kd}if((x|0)==244){ua=+uq(+zq(1.0,105-ld|0),kd);ud=+wq(kd,+zq(1.0,53-ld|0));pd=ld;qd=ua;rd=md;sd=ud;td=ua+(kd-ud)}hb=Yc+2&127;do if((hb|0)==(jd|0))vd=sd;else{_a=c[h+(hb<<2)>>2]|0;do if(_a>>>0>=5e8){if(_a>>>0>5e8){wd=Ha*.75+sd;break}if((Yc+3&127|0)==(jd|0)){wd=Ha*.5+sd;break}else{wd=Ha*.75+sd;break}}else{if((_a|0)==0?(Yc+3&127|0)==(jd|0):0){wd=sd;break}wd=Ha*.25+sd}while(0);if((53-pd|0)<=1){vd=wd;break}if(+wq(wd,1.0)!=0.0){vd=wd;break}vd=wd+1.0}while(0);Ha=td+vd-qd;do if((db&2147483647|0)>(-2-za|0)){if(!(+R(+Ha)>=9007199254740992.0)){xd=rd;yd=Zc;zd=Ha}else{xd=(rd|0)!=0&(pd|0)==(cb|0)?0:rd;yd=Zc+1|0;zd=Ha*.5}if((yd+50|0)<=(Da|0)?!((xd|0)!=0&vd!=0.0):0){Ad=yd;Bd=zd;break}c[(Db()|0)>>2]=34;Ad=yd;Bd=zd}else{Ad=Zc;Bd=Ha}while(0);l=+Aq(Bd,Ad);i=g;return +l}else{if(c[m>>2]|0)c[e>>2]=(c[e>>2]|0)+-1;c[(Db()|0)>>2]=22;rq(b,0);l=0.0;i=g;return +l}}while(0);if((x|0)==23){x=(c[m>>2]|0)==0;if(!x)c[e>>2]=(c[e>>2]|0)+-1;if(!(t>>>0<4|(f|0)==0|x)){x=t;do{c[e>>2]=(c[e>>2]|0)+-1;x=x+-1|0}while(x>>>0>3)}}l=+(r|0)*w;i=g;return +l}function rq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;c[a+104>>2]=b;d=c[a+8>>2]|0;e=c[a+4>>2]|0;f=d-e|0;c[a+108>>2]=f;if(!((b|0)!=0&(f|0)>(b|0))){g=d;h=a+100|0;c[h>>2]=g;return}g=e+b|0;h=a+100|0;c[h>>2]=g;return}function sq(b){b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=b+104|0;f=c[e>>2]|0;if(!((f|0)!=0?(c[b+108>>2]|0)>=(f|0):0))g=3;if((g|0)==3?(g=Gq(b)|0,(g|0)>=0):0){f=c[e>>2]|0;e=c[b+8>>2]|0;if((f|0)!=0?(h=c[b+4>>2]|0,i=f-(c[b+108>>2]|0)+-1|0,(e-h|0)>(i|0)):0)c[b+100>>2]=h+i;else c[b+100>>2]=e;i=c[b+4>>2]|0;if(e){h=b+108|0;c[h>>2]=e+1-i+(c[h>>2]|0)}h=i+-1|0;if((d[h>>0]|0|0)==(g|0)){j=g;return j|0}a[h>>0]=g;j=g;return j|0}c[b+100>>2]=0;j=-1;return j|0}function tq(a,b){a=+a;b=+b;var d=0,e=0,f=0;h[k>>3]=a;d=c[k>>2]|0;e=c[k+4>>2]|0;h[k>>3]=b;f=c[k+4>>2]&-2147483648|e&2147483647;c[k>>2]=d;c[k+4>>2]=f;return +(+h[k>>3])}function uq(a,b){a=+a;b=+b;return +(+tq(a,b))}function vq(a,b){a=+a;b=+b;var d=0,e=0,f=0,g=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0.0;h[k>>3]=a;d=c[k>>2]|0;e=c[k+4>>2]|0;h[k>>3]=b;f=c[k>>2]|0;g=c[k+4>>2]|0;i=Zq(d|0,e|0,52)|0;j=i&2047;i=Zq(f|0,g|0,52)|0;l=i&2047;i=e&-2147483648;m=ar(f|0,g|0,1)|0;n=G;if(!((m|0)==0&(n|0)==0)?(o=g&2147483647,!(o>>>0>2146435072|(o|0)==2146435072&f>>>0>0|(j|0)==2047)):0){o=ar(d|0,e|0,1)|0;p=G;if(!(p>>>0>n>>>0|(p|0)==(n|0)&o>>>0>m>>>0)){if(!((o|0)==(m|0)&(p|0)==(n|0))){q=a;return +q}q=a*0.0;return +q}if(!j){n=ar(d|0,e|0,12)|0;p=G;if((p|0)>-1|(p|0)==-1&n>>>0>4294967295){m=n;n=p;p=0;while(1){o=p+-1|0;m=ar(m|0,n|0,1)|0;n=G;if(!((n|0)>-1|(n|0)==-1&m>>>0>4294967295)){r=o;break}else p=o}}else r=0;p=ar(d|0,e|0,1-r|0)|0;s=p;t=G;u=r}else{s=d;t=e&1048575|1048576;u=j}if(!l){j=ar(f|0,g|0,12)|0;e=G;if((e|0)>-1|(e|0)==-1&j>>>0>4294967295){d=j;j=e;e=0;while(1){r=e+-1|0;d=ar(d|0,j|0,1)|0;j=G;if(!((j|0)>-1|(j|0)==-1&d>>>0>4294967295)){v=r;break}else e=r}}else v=0;e=ar(f|0,g|0,1-v|0)|0;w=e;x=G;y=v}else{w=f;x=g&1048575|1048576;y=l}l=Yq(s|0,t|0,w|0,x|0)|0;g=G;f=(g|0)>-1|(g|0)==-1&l>>>0>4294967295;a:do if((u|0)>(y|0)){v=f;e=l;d=g;j=s;r=t;p=u;while(1){if(v)if((j|0)==(w|0)&(r|0)==(x|0))break;else{z=e;A=d}else{z=j;A=r}m=ar(z|0,A|0,1)|0;n=G;o=p+-1|0;B=Yq(m|0,n|0,w|0,x|0)|0;C=G;D=(C|0)>-1|(C|0)==-1&B>>>0>4294967295;if((o|0)>(y|0)){v=D;e=B;d=C;j=m;r=n;p=o}else{E=D;F=m;H=n;I=B;J=C;K=o;break a}}q=a*0.0;return +q}else{E=f;F=s;H=t;I=l;J=g;K=u}while(0);if(E)if((F|0)==(w|0)&(H|0)==(x|0)){q=a*0.0;return +q}else{L=J;M=I}else{L=H;M=F}if(L>>>0<1048576|(L|0)==1048576&M>>>0<0){F=M;H=L;I=K;while(1){J=ar(F|0,H|0,1)|0;x=G;w=I+-1|0;if(x>>>0<1048576|(x|0)==1048576&J>>>0<0){F=J;H=x;I=w}else{N=J;O=x;P=w;break}}}else{N=M;O=L;P=K}if((P|0)>0){K=Xq(N|0,O|0,0,-1048576)|0;L=G;M=ar(P|0,0,52)|0;Q=L|G;R=K|M}else{M=Zq(N|0,O|0,1-P|0)|0;Q=G;R=M}c[k>>2]=R;c[k+4>>2]=Q|i;q=+h[k>>3];return +q}S=a*b;q=S/S;return +q}function wq(a,b){a=+a;b=+b;return +(+vq(a,b))}function xq(a,b){a=+a;b=b|0;var d=0,e=0,f=0,g=0,i=0.0,j=0.0,l=0.0,m=0;h[k>>3]=a;d=c[k>>2]|0;e=c[k+4>>2]|0;f=Zq(d|0,e|0,52)|0;g=f&2047;if((g|0)==2047){i=a;return +i}else if(!g){if(a!=0.0){j=+xq(a*18446744073709551616.0,b);l=j;m=(c[b>>2]|0)+-64|0}else{l=a;m=0}c[b>>2]=m;i=l;return +i}else{c[b>>2]=g+-1022;c[k>>2]=d;c[k+4>>2]=e&-2146435073|1071644672;i=+h[k>>3];return +i}return +(0.0)}function yq(a,b){a=+a;b=b|0;return +(+xq(a,b))}function zq(a,b){a=+a;b=b|0;var d=0.0,e=0,f=0,g=0,i=0.0;if((b|0)>1023){d=a*8988465674311579538646525.0e283;e=b+-1023|0;if((e|0)>1023){f=b+-2046|0;g=(f|0)>1023?1023:f;i=d*8988465674311579538646525.0e283}else{g=e;i=d}}else if((b|0)<-1022){d=a*2.2250738585072014e-308;e=b+1022|0;if((e|0)<-1022){f=b+2044|0;g=(f|0)<-1022?-1022:f;i=d*2.2250738585072014e-308}else{g=e;i=d}}else{g=b;i=a}b=ar(g+1023|0,0,52)|0;g=G;c[k>>2]=b;c[k+4>>2]=g;return +(i*+h[k>>3])}function Aq(a,b){a=+a;b=b|0;return +(+zq(a,b))}function Bq(a,b){a=a|0;b=b|0;var c=0;if(!a)c=0;else c=Cq(a,b,0)|0;return c|0}
function Cq(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if(!b){f=1;return f|0}if(d>>>0<128){a[b>>0]=d;f=1;return f|0}if(d>>>0<2048){a[b>>0]=d>>>6|192;a[b+1>>0]=d&63|128;f=2;return f|0}if(d>>>0<55296|(d&-8192|0)==57344){a[b>>0]=d>>>12|224;a[b+1>>0]=d>>>6&63|128;a[b+2>>0]=d&63|128;f=3;return f|0}if((d+-65536|0)>>>0<1048576){a[b>>0]=d>>>18|240;a[b+1>>0]=d>>>12&63|128;a[b+2>>0]=d>>>6&63|128;a[b+3>>0]=d&63|128;f=4;return f|0}else{c[(Db()|0)>>2]=84;f=-1;return f|0}return 0}function Dq(){var a=0,b=0,d=0;a=27936;b=jr(c[a>>2]|0,c[a+4>>2]|0,1284865837,1481765933)|0;a=Xq(b|0,G|0,1,0)|0;b=G;d=27936;c[d>>2]=a;c[d+4>>2]=b;d=Zq(a|0,b|0,33)|0;return d|0}function Eq(b){b=b|0;var d=0,e=0,f=0,g=0;d=b+74|0;e=a[d>>0]|0;a[d>>0]=e+255|e;e=b+20|0;d=b+44|0;if((c[e>>2]|0)>>>0>(c[d>>2]|0)>>>0)$b[c[b+36>>2]&31](b,0,0)|0;c[b+16>>2]=0;c[b+28>>2]=0;c[e>>2]=0;e=c[b>>2]|0;if(!(e&20)){f=c[d>>2]|0;c[b+8>>2]=f;c[b+4>>2]=f;g=0;return g|0}if(!(e&4)){g=-1;return g|0}c[b>>2]=e|32;g=-1;return g|0}function Fq(b){b=b|0;var d=0,e=0,f=0;d=b+74|0;e=a[d>>0]|0;a[d>>0]=e+255|e;e=c[b>>2]|0;if(!(e&8)){c[b+8>>2]=0;c[b+4>>2]=0;d=c[b+44>>2]|0;c[b+28>>2]=d;c[b+20>>2]=d;c[b+16>>2]=d+(c[b+48>>2]|0);f=0;return f|0}else{c[b>>2]=e|32;f=-1;return f|0}return 0}function Gq(a){a=a|0;var b=0,e=0,f=0;b=i;i=i+16|0;e=b;if((c[a+8>>2]|0)==0?(Eq(a)|0)!=0:0)f=-1;else if(($b[c[a+32>>2]&31](a,e,1)|0)==1)f=d[e>>0]|0;else f=-1;i=b;return f|0}function Hq(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;f=e+16|0;g=c[f>>2]|0;do if(!g)if(!(Fq(e)|0)){h=c[f>>2]|0;break}else{i=0;return i|0}else h=g;while(0);g=e+20|0;f=c[g>>2]|0;if((h-f|0)>>>0<d>>>0){i=$b[c[e+36>>2]&31](e,b,d)|0;return i|0}a:do if((a[e+75>>0]|0)>-1){h=d;while(1){if(!h){j=d;k=b;l=f;m=0;break a}n=h+-1|0;if((a[b+n>>0]|0)==10){o=h;break}else h=n}if(($b[c[e+36>>2]&31](e,b,o)|0)>>>0<o>>>0){i=o;return i|0}else{j=d-o|0;k=b+o|0;l=c[g>>2]|0;m=o;break}}else{j=d;k=b;l=f;m=0}while(0);$q(l|0,k|0,j|0)|0;c[g>>2]=(c[g>>2]|0)+j;i=m+j|0;return i|0}function Iq(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;c[g>>2]=e;e=Lq(a,b,d,g)|0;i=f;return e|0}function Jq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;f=e;c[f>>2]=d;d=Mq(a,b,f)|0;i=e;return d|0}function Kq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+224|0;f=e+120|0;g=e+80|0;h=e;j=e+136|0;k=g+0|0;l=k+40|0;do{c[k>>2]=0;k=k+4|0}while((k|0)<(l|0));c[f>>2]=c[d>>2];if((Uq(0,b,f,h,g)|0)<0){m=-1;i=e;return m|0}d=a+48|0;if(!(c[d>>2]|0)){k=a+44|0;l=c[k>>2]|0;c[k>>2]=j;n=a+28|0;c[n>>2]=j;o=a+20|0;c[o>>2]=j;c[d>>2]=80;p=a+16|0;c[p>>2]=j+80;j=Uq(a,b,f,h,g)|0;if(!l)q=j;else{$b[c[a+36>>2]&31](a,0,0)|0;r=(c[o>>2]|0)==0?-1:j;c[k>>2]=l;c[d>>2]=0;c[p>>2]=0;c[n>>2]=0;c[o>>2]=0;q=r}}else q=Uq(a,b,f,h,g)|0;m=q;i=e;return m|0}function Lq(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;g=i;i=i+128|0;h=g+112|0;j=g;k=j+0|0;l=28512|0;m=k+112|0;do{c[k>>2]=c[l>>2];k=k+4|0;l=l+4|0}while((k|0)<(m|0));if((d+-1|0)>>>0>2147483646)if(!d){n=h;o=1}else{c[(Db()|0)>>2]=75;p=-1;i=g;return p|0}else{n=b;o=d}d=-2-n|0;b=o>>>0>d>>>0?d:o;c[j+48>>2]=b;o=j+20|0;c[o>>2]=n;c[j+44>>2]=n;d=n+b|0;n=j+16|0;c[n>>2]=d;c[j+28>>2]=d;d=Kq(j,e,f)|0;if(!b){p=d;i=g;return p|0}b=c[o>>2]|0;a[b+(((b|0)==(c[n>>2]|0))<<31>>31)>>0]=0;p=d;i=g;return p|0}function Mq(a,b,c){a=a|0;b=b|0;c=c|0;return Lq(a,2147483647,b,c)|0}function Nq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0.0,j=0,k=0;d=i;i=i+112|0;e=d;f=e+0|0;g=f+112|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(g|0));f=e+4|0;c[f>>2]=a;g=e+8|0;c[g>>2]=-1;c[e+44>>2]=a;c[e+76>>2]=-1;rq(e,0);h=+qq(e,2,1);j=(c[f>>2]|0)-(c[g>>2]|0)+(c[e+108>>2]|0)|0;if(!b){i=d;return +h}if(!j)k=a;else k=a+j|0;c[b>>2]=k;i=d;return +h}function Oq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+112|0;f=e;c[f>>2]=0;g=f+4|0;c[g>>2]=a;c[f+44>>2]=a;h=f+8|0;c[h>>2]=(a|0)<0?-1:a+2147483647|0;c[f+76>>2]=-1;rq(f,0);j=pq(f,d,1,-1,-1)|0;d=G;if(!b){G=d;i=e;return j|0}c[b>>2]=a+((c[g>>2]|0)+(c[f+108>>2]|0)-(c[h>>2]|0));G=d;i=e;return j|0}function Pq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+112|0;f=e;c[f>>2]=0;g=f+4|0;c[g>>2]=a;c[f+44>>2]=a;h=f+8|0;c[h>>2]=(a|0)<0?-1:a+2147483647|0;c[f+76>>2]=-1;rq(f,0);j=pq(f,d,1,0,-2147483648)|0;d=G;if(!b){G=d;i=e;return j|0}c[b>>2]=a+((c[g>>2]|0)+(c[f+108>>2]|0)-(c[h>>2]|0));G=d;i=e;return j|0}function Qq(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;f=d&255;g=(e|0)!=0;a:do if((b&3|0)!=0&g){h=d&255;i=e;j=b;while(1){if((a[j>>0]|0)==h<<24>>24){k=i;l=j;m=6;break a}n=j+1|0;o=i+-1|0;p=(o|0)!=0;if((n&3|0)!=0&p){i=o;j=n}else{q=o;r=p;s=n;m=5;break}}}else{q=e;r=g;s=b;m=5}while(0);if((m|0)==5)if(r){k=q;l=s;m=6}else{t=0;u=s}b:do if((m|0)==6){s=d&255;if((a[l>>0]|0)!=s<<24>>24){q=ca(f,16843009)|0;c:do if(k>>>0>3){r=k;b=l;while(1){g=c[b>>2]^q;if((g&-2139062144^-2139062144)&g+-16843009){v=r;w=b;break c}g=b+4|0;e=r+-4|0;if(e>>>0>3){r=e;b=g}else{v=e;w=g;break}}}else{v=k;w=l}while(0);if(!v){t=0;u=w}else{q=v;b=w;while(1){if((a[b>>0]|0)==s<<24>>24){t=q;u=b;break b}r=b+1|0;q=q+-1|0;if(!q){t=0;u=r;break}else b=r}}}else{t=k;u=l}}while(0);return ((t|0)!=0?u:0)|0}function Rq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;d=a+4|0;e=c[d>>2]|0;f=e&-8;g=a+f|0;h=c[6780]|0;i=e&3;if(!((i|0)!=1&a>>>0>=h>>>0&a>>>0<g>>>0))Nb();j=a+(f|4)|0;k=c[j>>2]|0;if(!(k&1))Nb();if(!i){if(b>>>0<256){l=0;return l|0}if(f>>>0>=(b+4|0)>>>0?(f-b|0)>>>0<=c[6896]<<1>>>0:0){l=a;return l|0}l=0;return l|0}if(f>>>0>=b>>>0){i=f-b|0;if(i>>>0<=15){l=a;return l|0}c[d>>2]=e&1|b|2;c[a+(b+4)>>2]=i|3;c[j>>2]=c[j>>2]|1;Sq(a+b|0,i);l=a;return l|0}if((g|0)==(c[6782]|0)){i=(c[6779]|0)+f|0;if(i>>>0<=b>>>0){l=0;return l|0}j=i-b|0;c[d>>2]=e&1|b|2;c[a+(b+4)>>2]=j|1;c[6782]=a+b;c[6779]=j;l=a;return l|0}if((g|0)==(c[6781]|0)){j=(c[6778]|0)+f|0;if(j>>>0<b>>>0){l=0;return l|0}i=j-b|0;if(i>>>0>15){c[d>>2]=e&1|b|2;c[a+(b+4)>>2]=i|1;c[a+j>>2]=i;m=a+(j+4)|0;c[m>>2]=c[m>>2]&-2;n=a+b|0;o=i}else{c[d>>2]=e&1|j|2;i=a+(j+4)|0;c[i>>2]=c[i>>2]|1;n=0;o=0}c[6778]=o;c[6781]=n;l=a;return l|0}if(k&2){l=0;return l|0}n=(k&-8)+f|0;if(n>>>0<b>>>0){l=0;return l|0}o=n-b|0;i=k>>>3;do if(k>>>0>=256){j=c[a+(f+24)>>2]|0;m=c[a+(f+12)>>2]|0;do if((m|0)==(g|0)){p=a+(f+20)|0;q=c[p>>2]|0;if(!q){r=a+(f+16)|0;s=c[r>>2]|0;if(!s){t=0;break}else{u=s;v=r}}else{u=q;v=p}while(1){p=u+20|0;q=c[p>>2]|0;if(q){u=q;v=p;continue}p=u+16|0;q=c[p>>2]|0;if(!q){w=u;x=v;break}else{u=q;v=p}}if(x>>>0<h>>>0)Nb();else{c[x>>2]=0;t=w;break}}else{p=c[a+(f+8)>>2]|0;if(p>>>0<h>>>0)Nb();q=p+12|0;if((c[q>>2]|0)!=(g|0))Nb();r=m+8|0;if((c[r>>2]|0)==(g|0)){c[q>>2]=m;c[r>>2]=p;t=m;break}else Nb()}while(0);if(j){m=c[a+(f+28)>>2]|0;p=27408+(m<<2)|0;if((g|0)==(c[p>>2]|0)){c[p>>2]=t;if(!t){c[6777]=c[6777]&~(1<<m);break}}else{if(j>>>0<(c[6780]|0)>>>0)Nb();m=j+16|0;if((c[m>>2]|0)==(g|0))c[m>>2]=t;else c[j+20>>2]=t;if(!t)break}m=c[6780]|0;if(t>>>0<m>>>0)Nb();c[t+24>>2]=j;p=c[a+(f+16)>>2]|0;do if(p)if(p>>>0<m>>>0)Nb();else{c[t+16>>2]=p;c[p+24>>2]=t;break}while(0);p=c[a+(f+20)>>2]|0;if(p)if(p>>>0<(c[6780]|0)>>>0)Nb();else{c[t+20>>2]=p;c[p+24>>2]=t;break}}}else{p=c[a+(f+8)>>2]|0;m=c[a+(f+12)>>2]|0;j=27144+(i<<1<<2)|0;if((p|0)!=(j|0)){if(p>>>0<h>>>0)Nb();if((c[p+12>>2]|0)!=(g|0))Nb()}if((m|0)==(p|0)){c[6776]=c[6776]&~(1<<i);break}if((m|0)!=(j|0)){if(m>>>0<h>>>0)Nb();j=m+8|0;if((c[j>>2]|0)==(g|0))y=j;else Nb()}else y=m+8|0;c[p+12>>2]=m;c[y>>2]=p}while(0);if(o>>>0<16){c[d>>2]=n|e&1|2;y=a+(n|4)|0;c[y>>2]=c[y>>2]|1;l=a;return l|0}else{c[d>>2]=e&1|b|2;c[a+(b+4)>>2]=o|3;e=a+(n|4)|0;c[e>>2]=c[e>>2]|1;Sq(a+b|0,o);l=a;return l|0}return 0}function Sq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;d=a+b|0;e=c[a+4>>2]|0;do if(!(e&1)){f=c[a>>2]|0;if(!(e&3))return;g=a+(0-f)|0;h=f+b|0;i=c[6780]|0;if(g>>>0<i>>>0)Nb();if((g|0)==(c[6781]|0)){j=a+(b+4)|0;k=c[j>>2]|0;if((k&3|0)!=3){l=g;m=h;break}c[6778]=h;c[j>>2]=k&-2;c[a+(4-f)>>2]=h|1;c[d>>2]=h;return}k=f>>>3;if(f>>>0<256){j=c[a+(8-f)>>2]|0;n=c[a+(12-f)>>2]|0;o=27144+(k<<1<<2)|0;if((j|0)!=(o|0)){if(j>>>0<i>>>0)Nb();if((c[j+12>>2]|0)!=(g|0))Nb()}if((n|0)==(j|0)){c[6776]=c[6776]&~(1<<k);l=g;m=h;break}if((n|0)!=(o|0)){if(n>>>0<i>>>0)Nb();o=n+8|0;if((c[o>>2]|0)==(g|0))p=o;else Nb()}else p=n+8|0;c[j+12>>2]=n;c[p>>2]=j;l=g;m=h;break}j=c[a+(24-f)>>2]|0;n=c[a+(12-f)>>2]|0;do if((n|0)==(g|0)){o=16-f|0;k=a+(o+4)|0;q=c[k>>2]|0;if(!q){r=a+o|0;o=c[r>>2]|0;if(!o){s=0;break}else{t=o;u=r}}else{t=q;u=k}while(1){k=t+20|0;q=c[k>>2]|0;if(q){t=q;u=k;continue}k=t+16|0;q=c[k>>2]|0;if(!q){v=t;w=u;break}else{t=q;u=k}}if(w>>>0<i>>>0)Nb();else{c[w>>2]=0;s=v;break}}else{k=c[a+(8-f)>>2]|0;if(k>>>0<i>>>0)Nb();q=k+12|0;if((c[q>>2]|0)!=(g|0))Nb();r=n+8|0;if((c[r>>2]|0)==(g|0)){c[q>>2]=n;c[r>>2]=k;s=n;break}else Nb()}while(0);if(j){n=c[a+(28-f)>>2]|0;i=27408+(n<<2)|0;if((g|0)==(c[i>>2]|0)){c[i>>2]=s;if(!s){c[6777]=c[6777]&~(1<<n);l=g;m=h;break}}else{if(j>>>0<(c[6780]|0)>>>0)Nb();n=j+16|0;if((c[n>>2]|0)==(g|0))c[n>>2]=s;else c[j+20>>2]=s;if(!s){l=g;m=h;break}}n=c[6780]|0;if(s>>>0<n>>>0)Nb();c[s+24>>2]=j;i=16-f|0;k=c[a+i>>2]|0;do if(k)if(k>>>0<n>>>0)Nb();else{c[s+16>>2]=k;c[k+24>>2]=s;break}while(0);k=c[a+(i+4)>>2]|0;if(k)if(k>>>0<(c[6780]|0)>>>0)Nb();else{c[s+20>>2]=k;c[k+24>>2]=s;l=g;m=h;break}else{l=g;m=h}}else{l=g;m=h}}else{l=a;m=b}while(0);s=c[6780]|0;if(d>>>0<s>>>0)Nb();v=a+(b+4)|0;w=c[v>>2]|0;if(!(w&2)){if((d|0)==(c[6782]|0)){u=(c[6779]|0)+m|0;c[6779]=u;c[6782]=l;c[l+4>>2]=u|1;if((l|0)!=(c[6781]|0))return;c[6781]=0;c[6778]=0;return}if((d|0)==(c[6781]|0)){u=(c[6778]|0)+m|0;c[6778]=u;c[6781]=l;c[l+4>>2]=u|1;c[l+u>>2]=u;return}u=(w&-8)+m|0;t=w>>>3;do if(w>>>0>=256){p=c[a+(b+24)>>2]|0;e=c[a+(b+12)>>2]|0;do if((e|0)==(d|0)){k=a+(b+20)|0;n=c[k>>2]|0;if(!n){f=a+(b+16)|0;j=c[f>>2]|0;if(!j){x=0;break}else{y=j;z=f}}else{y=n;z=k}while(1){k=y+20|0;n=c[k>>2]|0;if(n){y=n;z=k;continue}k=y+16|0;n=c[k>>2]|0;if(!n){A=y;B=z;break}else{y=n;z=k}}if(B>>>0<s>>>0)Nb();else{c[B>>2]=0;x=A;break}}else{k=c[a+(b+8)>>2]|0;if(k>>>0<s>>>0)Nb();n=k+12|0;if((c[n>>2]|0)!=(d|0))Nb();f=e+8|0;if((c[f>>2]|0)==(d|0)){c[n>>2]=e;c[f>>2]=k;x=e;break}else Nb()}while(0);if(p){e=c[a+(b+28)>>2]|0;h=27408+(e<<2)|0;if((d|0)==(c[h>>2]|0)){c[h>>2]=x;if(!x){c[6777]=c[6777]&~(1<<e);break}}else{if(p>>>0<(c[6780]|0)>>>0)Nb();e=p+16|0;if((c[e>>2]|0)==(d|0))c[e>>2]=x;else c[p+20>>2]=x;if(!x)break}e=c[6780]|0;if(x>>>0<e>>>0)Nb();c[x+24>>2]=p;h=c[a+(b+16)>>2]|0;do if(h)if(h>>>0<e>>>0)Nb();else{c[x+16>>2]=h;c[h+24>>2]=x;break}while(0);h=c[a+(b+20)>>2]|0;if(h)if(h>>>0<(c[6780]|0)>>>0)Nb();else{c[x+20>>2]=h;c[h+24>>2]=x;break}}}else{h=c[a+(b+8)>>2]|0;e=c[a+(b+12)>>2]|0;p=27144+(t<<1<<2)|0;if((h|0)!=(p|0)){if(h>>>0<s>>>0)Nb();if((c[h+12>>2]|0)!=(d|0))Nb()}if((e|0)==(h|0)){c[6776]=c[6776]&~(1<<t);break}if((e|0)!=(p|0)){if(e>>>0<s>>>0)Nb();p=e+8|0;if((c[p>>2]|0)==(d|0))C=p;else Nb()}else C=e+8|0;c[h+12>>2]=e;c[C>>2]=h}while(0);c[l+4>>2]=u|1;c[l+u>>2]=u;if((l|0)==(c[6781]|0)){c[6778]=u;return}else D=u}else{c[v>>2]=w&-2;c[l+4>>2]=m|1;c[l+m>>2]=m;D=m}m=D>>>3;if(D>>>0<256){w=m<<1;v=27144+(w<<2)|0;u=c[6776]|0;C=1<<m;if(u&C){m=27144+(w+2<<2)|0;d=c[m>>2]|0;if(d>>>0<(c[6780]|0)>>>0)Nb();else{E=m;F=d}}else{c[6776]=u|C;E=27144+(w+2<<2)|0;F=v}c[E>>2]=l;c[F+12>>2]=l;c[l+8>>2]=F;c[l+12>>2]=v;return}v=D>>>8;if(v)if(D>>>0>16777215)G=31;else{F=(v+1048320|0)>>>16&8;E=v<<F;v=(E+520192|0)>>>16&4;w=E<<v;E=(w+245760|0)>>>16&2;C=14-(v|F|E)+(w<<E>>>15)|0;G=D>>>(C+7|0)&1|C<<1}else G=0;C=27408+(G<<2)|0;c[l+28>>2]=G;c[l+20>>2]=0;c[l+16>>2]=0;E=c[6777]|0;w=1<<G;if(!(E&w)){c[6777]=E|w;c[C>>2]=l;c[l+24>>2]=C;c[l+12>>2]=l;c[l+8>>2]=l;return}w=c[C>>2]|0;if((G|0)==31)H=0;else H=25-(G>>>1)|0;a:do if((c[w+4>>2]&-8|0)==(D|0))I=w;else{G=D<<H;C=w;while(1){E=C+(G>>>31<<2)+16|0;F=c[E>>2]|0;if(!F){J=E;K=C;break}if((c[F+4>>2]&-8|0)==(D|0)){I=F;break a}else{G=G<<1;C=F}}if(J>>>0<(c[6780]|0)>>>0)Nb();c[J>>2]=l;c[l+24>>2]=K;c[l+12>>2]=l;c[l+8>>2]=l;return}while(0);K=I+8|0;J=c[K>>2]|0;D=c[6780]|0;if(!(I>>>0>=D>>>0&J>>>0>=D>>>0))Nb();c[J+12>>2]=l;c[K>>2]=l;c[l+8>>2]=J;c[l+12>>2]=I;c[l+24>>2]=0;return}function Tq(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;e=a+4|0;f=c[e>>2]|0;g=a+100|0;if(f>>>0<(c[g>>2]|0)>>>0){c[e>>2]=f+1;h=d[f>>0]|0}else h=sq(a)|0;if((h|0)==43|(h|0)==45){f=(h|0)==45&1;i=c[e>>2]|0;if(i>>>0<(c[g>>2]|0)>>>0){c[e>>2]=i+1;j=d[i>>0]|0}else j=sq(a)|0;if((j+-48|0)>>>0>9&(b|0)!=0?(c[g>>2]|0)!=0:0){c[e>>2]=(c[e>>2]|0)+-1;k=j;l=f}else{k=j;l=f}}else{k=h;l=0}if((k+-48|0)>>>0>9){if(!(c[g>>2]|0)){m=-2147483648;n=0;G=m;return n|0}c[e>>2]=(c[e>>2]|0)+-1;m=-2147483648;n=0;G=m;return n|0}else{o=k;p=0}while(1){k=o+-48+(p*10|0)|0;h=c[e>>2]|0;if(h>>>0<(c[g>>2]|0)>>>0){c[e>>2]=h+1;q=d[h>>0]|0}else q=sq(a)|0;if((q+-48|0)>>>0<10&(k|0)<214748364){o=q;p=k}else{r=k;s=q;break}}q=((r|0)<0)<<31>>31;if((s+-48|0)>>>0<10){p=r;o=q;k=s;while(1){h=jr(p|0,o|0,10,0)|0;f=G;j=Xq(k|0,((k|0)<0)<<31>>31|0,-48,-1)|0;b=Xq(j|0,G|0,h|0,f|0)|0;f=G;h=c[e>>2]|0;if(h>>>0<(c[g>>2]|0)>>>0){c[e>>2]=h+1;t=d[h>>0]|0}else t=sq(a)|0;if((t+-48|0)>>>0<10&((f|0)<21474836|(f|0)==21474836&b>>>0<2061584302)){p=b;o=f;k=t}else{u=b;v=f;w=t;break}}}else{u=r;v=q;w=s}if((w+-48|0)>>>0<10)do{w=c[e>>2]|0;if(w>>>0<(c[g>>2]|0)>>>0){c[e>>2]=w+1;x=d[w>>0]|0}else x=sq(a)|0}while((x+-48|0)>>>0<10);if(c[g>>2]|0)c[e>>2]=(c[e>>2]|0)+-1;e=(l|0)!=0;l=Yq(0,0,u|0,v|0)|0;m=e?G:v;n=e?l:u;G=m;return n|0}function Uq(e,f,g,j,l){e=e|0;f=f|0;g=g|0;j=j|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0.0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0.0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0.0,sb=0.0,tb=0.0,ub=0.0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0.0,Ob=0,Pb=0,Qb=0,Rb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0.0,vc=0.0,wc=0.0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0,Tc=0,Uc=0,Vc=0,Wc=0,Xc=0,Yc=0,Zc=0,_c=0,$c=0,ad=0,bd=0,cd=0,dd=0,ed=0,fd=0,gd=0,hd=0,id=0,jd=0,kd=0,ld=0,md=0,nd=0,od=0,pd=0,qd=0,rd=0,sd=0,td=0,ud=0,vd=0,wd=0,xd=0,yd=0,zd=0,Ad=0,Bd=0,Cd=0,Dd=0,Ed=0,Fd=0,Gd=0,Hd=0,Id=0,Jd=0,Kd=0,Ld=0,Md=0,Nd=0,Od=0,Pd=0,Qd=0,Rd=0,Sd=0,Td=0;m=i;i=i+864|0;n=m+16|0;o=m+8|0;p=m+836|0;q=p;r=m+824|0;s=m+568|0;t=m+528|0;u=m;v=m+520|0;w=(e|0)!=0;x=t+40|0;y=x;z=t+39|0;t=u+4|0;A=u;B=r+12|0;C=r+11|0;r=B;D=r-q|0;E=-2-q|0;F=r+2|0;H=n+288|0;I=p+9|0;J=I;K=p+8|0;L=0;M=0;N=f;f=0;O=0;P=0;a:while(1){do if((f|0)>-1)if((O|0)>(2147483647-f|0)){c[(Db()|0)>>2]=75;Q=-1;break}else{Q=O+f|0;break}else Q=f;while(0);R=a[N>>0]|0;if(!(R<<24>>24)){S=Q;T=P;U=351;break}else{V=R;W=N}while(1){if(V<<24>>24==37){X=W;Y=W;U=9;break}else if(!(V<<24>>24)){Z=W;_=W;break}R=W+1|0;V=a[R>>0]|0;W=R}b:do if((U|0)==9)while(1){U=0;if((a[X+1>>0]|0)!=37){Z=X;_=Y;break b}R=Y+1|0;$=X+2|0;if((a[$>>0]|0)==37){X=$;Y=R;U=9}else{Z=$;_=R;break}}while(0);R=_-N|0;if(w)Hq(N,R,e)|0;if((_|0)!=(N|0)){N=Z;f=Q;O=R;continue}$=Z+1|0;aa=a[$>>0]|0;ba=(aa<<24>>24)+-48|0;if(ba>>>0<10){da=(a[Z+2>>0]|0)==36;ea=da?Z+3|0:$;fa=a[ea>>0]|0;ga=da?ba:-1;ha=da?1:P;ia=ea}else{fa=aa;ga=-1;ha=P;ia=$}$=fa<<24>>24;c:do if(($&-32|0)==32){aa=$;ea=fa;da=0;ba=ia;while(1){if(!(1<<aa+-32&75913)){ja=ea;ka=da;la=ba;break c}ma=1<<(ea<<24>>24)+-32|da;na=ba+1|0;oa=a[na>>0]|0;aa=oa<<24>>24;if((aa&-32|0)!=32){ja=oa;ka=ma;la=na;break}else{ea=oa;da=ma;ba=na}}}else{ja=fa;ka=0;la=ia}while(0);do if(ja<<24>>24==42){$=la+1|0;ba=(a[$>>0]|0)+-48|0;if(ba>>>0<10?(a[la+2>>0]|0)==36:0){c[l+(ba<<2)>>2]=10;pa=1;qa=la+3|0;ra=c[j+((a[$>>0]|0)+-48<<3)>>2]|0}else{if(ha){sa=-1;U=369;break a}if(!w){ta=$;ua=ka;va=0;wa=0;break}ba=c[g>>2]|0;da=c[ba>>2]|0;c[g>>2]=ba+4;pa=0;qa=$;ra=da}if((ra|0)<0){ta=qa;ua=ka|8192;va=pa;wa=0-ra|0}else{ta=qa;ua=ka;va=pa;wa=ra}}else{da=(ja<<24>>24)+-48|0;if(da>>>0<10){$=la;ba=0;ea=da;while(1){da=(ba*10|0)+ea|0;aa=$+1|0;ea=(a[aa>>0]|0)+-48|0;if(ea>>>0>=10){xa=da;ya=aa;break}else{$=aa;ba=da}}if((xa|0)<0){sa=-1;U=369;break a}else{ta=ya;ua=ka;va=ha;wa=xa}}else{ta=la;ua=ka;va=ha;wa=0}}while(0);d:do if((a[ta>>0]|0)==46){ba=ta+1|0;$=a[ba>>0]|0;if($<<24>>24!=42){ea=($<<24>>24)+-48|0;if(ea>>>0<10){za=ba;Aa=ta;Ba=0;Ca=ea}else{Da=ba;Ea=0;break}while(1){ba=(Ba*10|0)+Ca|0;ea=Aa+2|0;Ca=(a[ea>>0]|0)+-48|0;if(Ca>>>0>=10){Da=ea;Ea=ba;break d}else{$=za;za=ea;Ba=ba;Aa=$}}}$=ta+2|0;ba=(a[$>>0]|0)+-48|0;if(ba>>>0<10?(a[ta+3>>0]|0)==36:0){c[l+(ba<<2)>>2]=10;Da=ta+4|0;Ea=c[j+((a[$>>0]|0)+-48<<3)>>2]|0;break}if(va){sa=-1;U=369;break a}if(w){ba=c[g>>2]|0;ea=c[ba>>2]|0;c[g>>2]=ba+4;Da=$;Ea=ea}else{Da=$;Ea=0}}else{Da=ta;Ea=-1}while(0);$=Da;ea=0;while(1){ba=a[$>>0]|0;da=(ba<<24>>24)+-65|0;if(da>>>0>57){sa=-1;U=369;break a}aa=$+1|0;na=a[27944+(ea*58|0)+da>>0]|0;da=na&255;if((da+-1|0)>>>0<8){$=aa;ea=da}else{Fa=$;Ga=ba;Ha=aa;Ia=na;Ja=da;Ka=ea;break}}if(!(Ia<<24>>24)){sa=-1;U=369;break}ea=(ga|0)>-1;e:do if(Ia<<24>>24==19)if(ea){sa=-1;U=369;break a}else{La=L;Ma=M;U=62}else{if(ea){c[l+(ga<<2)>>2]=Ja;$=j+(ga<<3)|0;La=c[$>>2]|0;Ma=c[$+4>>2]|0;U=62;break}if(!w){sa=0;U=369;break a}if((Ia&255)>20){Na=Ga;Oa=L;Pa=M}else do switch(Ja|0){case 17:{$=c[g>>2]|0;c[k>>2]=c[$>>2];c[k+4>>2]=c[$+4>>2];Qa=+h[k>>3];c[g>>2]=$+8;h[k>>3]=Qa;Ra=c[k+4>>2]|0;Sa=c[k>>2]|0;U=63;break e;break}case 10:{$=c[g>>2]|0;da=c[$>>2]|0;c[g>>2]=$+4;Ra=((da|0)<0)<<31>>31;Sa=da;U=63;break e;break}case 16:{da=c[g>>2]|0;$=c[da>>2]|0;c[g>>2]=da+4;Ra=0;Sa=$&255;U=63;break e;break}case 12:{$=c[g>>2]|0;da=$;na=c[da>>2]|0;aa=c[da+4>>2]|0;c[g>>2]=$+8;Ra=aa;Sa=na;U=63;break e;break}case 11:{na=c[g>>2]|0;aa=c[na>>2]|0;c[g>>2]=na+4;Ra=0;Sa=aa;U=63;break e;break}case 9:{aa=c[g>>2]|0;na=c[aa>>2]|0;c[g>>2]=aa+4;Ra=M;Sa=na;U=63;break e;break}case 15:{na=c[g>>2]|0;aa=c[na>>2]|0;c[g>>2]=na+4;Ra=(((aa&255)<<24>>24|0)<0)<<31>>31;Sa=aa<<24>>24;U=63;break e;break}case 13:{aa=c[g>>2]|0;na=c[aa>>2]|0;c[g>>2]=aa+4;Ra=(((na&65535)<<16>>16|0)<0)<<31>>31;Sa=na<<16>>16;U=63;break e;break}case 14:{na=c[g>>2]|0;aa=c[na>>2]|0;c[g>>2]=na+4;Ra=0;Sa=aa&65535;U=63;break e;break}case 18:{aa=c[g>>2]|0;c[k>>2]=c[aa>>2];c[k+4>>2]=c[aa+4>>2];Qa=+h[k>>3];c[g>>2]=aa+8;h[k>>3]=Qa;La=c[k>>2]|0;Ma=c[k+4>>2]|0;U=62;break e;break}default:{Ra=M;Sa=L;U=63;break e}}while(0)}while(0);if((U|0)==62){U=0;if(w){Ra=Ma;Sa=La;U=63}else{L=La;M=Ma;N=Ha;f=Q;O=R;P=va;continue}}if((U|0)==63){U=0;Na=a[Fa>>0]|0;Oa=Sa;Pa=Ra}ea=Na<<24>>24;aa=(Ka|0)!=0&(ea&15|0)==3?ea&-33:ea;ea=ua&-65537;na=(ua&8192|0)==0?ua:ea;f:do switch(aa|0){case 67:{c[u>>2]=Oa;c[t>>2]=0;Ta=u;Ua=A;Va=-1;U=100;break}case 83:{$=Oa;if(!Ea){Wa=Oa;Xa=$;Ya=0;U=105}else{Ta=$;Ua=Oa;Va=Ea;U=100}break}case 111:{$=(Oa|0)==0&(Pa|0)==0;if($)Za=x;else{da=x;ba=Oa;ma=Pa;while(1){oa=da+-1|0;a[oa>>0]=ba&7|48;ba=Zq(ba|0,ma|0,3)|0;ma=G;if((ba|0)==0&(ma|0)==0){Za=oa;break}else da=oa}}da=(na&8|0)==0|$;_a=Oa;$a=Pa;ab=Za;bb=na;cb=Ea;db=da&1^1;eb=da?28408:28413;U=90;break}case 65:case 71:case 70:case 69:case 97:case 103:case 102:case 101:{c[k>>2]=Oa;c[k+4>>2]=Pa;Qa=+h[k>>3];c[o>>2]=0;if((Pa|0)>=0)if(!(na&2048)){da=na&1;fb=Qa;gb=da;hb=(da|0)==0?28433:28438}else{fb=Qa;gb=1;hb=28435}else{fb=-Qa;gb=1;hb=28432}h[k>>3]=fb;da=c[k+4>>2]&2146435072;if(!(da>>>0<2146435072|(da|0)==2146435072&0<0)){da=(aa&32|0)!=0;if(fb!=fb|0.0!=0.0){ib=0;jb=da?28472:28480}else{ib=gb;jb=da?28456:28464}da=ib+3|0;ma=(wa|0)>(da|0);if((na&8192|0)==0&ma){ba=wa-da|0;cr(s|0,32,(ba>>>0>256?256:ba)|0)|0;if(ba>>>0>255){oa=ba;do{Hq(s,256,e)|0;oa=oa+-256|0}while(oa>>>0>255);kb=ba&255}else kb=ba;Hq(s,kb,e)|0}Hq(hb,ib,e)|0;Hq(jb,3,e)|0;if((na&73728|0)==8192&ma){oa=wa-da|0;cr(s|0,32,(oa>>>0>256?256:oa)|0)|0;if(oa>>>0>255){$=oa;do{Hq(s,256,e)|0;$=$+-256|0}while($>>>0>255);lb=oa&255}else lb=oa;Hq(s,lb,e)|0}L=Oa;M=Pa;N=Ha;f=Q;O=ma?wa:da;P=va;continue a}Qa=+yq(fb,o)*2.0;$=Qa!=0.0;if($)c[o>>2]=(c[o>>2]|0)+-1;ba=aa|32;if((ba|0)==97){mb=aa&32;nb=(mb|0)==0?hb:hb+9|0;ob=gb|2;pb=Ea>>>0>11?0:12-Ea|0;do if(pb){qb=pb;rb=8.0;while(1){qb=qb+-1|0;sb=rb*16.0;if(!qb){tb=sb;break}else rb=sb}if((a[nb>>0]|0)==45){ub=-(tb+(-Qa-tb));break}else{ub=Qa+tb-tb;break}}else ub=Qa;while(0);pb=c[o>>2]|0;da=(pb|0)<0?0-pb|0:pb;if((da|0)<0){pb=B;ma=da;oa=((da|0)<0)<<31>>31;while(1){qb=lr(ma|0,oa|0,10,0)|0;vb=pb+-1|0;a[vb>>0]=qb|48;qb=kr(ma|0,oa|0,10,0)|0;if(oa>>>0>9|(oa|0)==9&ma>>>0>4294967295){pb=vb;ma=qb;oa=G}else{wb=vb;xb=qb;break}}yb=wb;zb=xb}else{yb=B;zb=da}if(!zb)Ab=yb;else{oa=yb;ma=zb;while(1){pb=oa+-1|0;a[pb>>0]=(ma>>>0)%10|0|48;if(ma>>>0<10){Ab=pb;break}else{oa=pb;ma=(ma>>>0)/10|0}}}if((Ab|0)==(B|0)){a[C>>0]=48;Bb=C}else Bb=Ab;a[Bb+-1>>0]=(c[o>>2]>>31&2)+43;ma=Bb+-2|0;a[ma>>0]=aa+15;if((Ea|0)<1)if(!(na&8)){rb=ub;oa=p;while(1){da=~~rb;pb=oa+1|0;a[oa>>0]=d[28488+da>>0]|mb;rb=(rb-+(da|0))*16.0;if((pb-q|0)!=1|rb==0.0)Cb=pb;else{a[pb>>0]=46;Cb=oa+2|0}if(!(rb!=0.0)){Eb=Cb;break}else oa=Cb}}else{rb=ub;oa=p;while(1){pb=~~rb;da=oa+1|0;a[oa>>0]=d[28488+pb>>0]|mb;rb=(rb-+(pb|0))*16.0;if((da-q|0)==1){a[da>>0]=46;Fb=oa+2|0}else Fb=da;if(!(rb!=0.0)){Eb=Fb;break}else oa=Fb}}else{rb=ub;oa=p;while(1){da=~~rb;pb=oa+1|0;a[oa>>0]=d[28488+da>>0]|mb;rb=(rb-+(da|0))*16.0;if((pb-q|0)==1){a[pb>>0]=46;Gb=oa+2|0}else Gb=pb;if(!(rb!=0.0)){Eb=Gb;break}else oa=Gb}}oa=Eb;mb=ma;if((Ea|0)!=0&(E+oa|0)<(Ea|0))Hb=F+Ea-mb|0;else Hb=D-mb+oa|0;mb=Hb+ob|0;pb=na&73728;da=(wa|0)>(mb|0);if((pb|0)==0&da){qb=wa-mb|0;cr(s|0,32,(qb>>>0>256?256:qb)|0)|0;if(qb>>>0>255){vb=qb;do{Hq(s,256,e)|0;vb=vb+-256|0}while(vb>>>0>255);Ib=qb&255}else Ib=qb;Hq(s,Ib,e)|0}Hq(nb,ob,e)|0;if((pb|0)==65536&da){vb=wa-mb|0;cr(s|0,48,(vb>>>0>256?256:vb)|0)|0;if(vb>>>0>255){Jb=vb;do{Hq(s,256,e)|0;Jb=Jb+-256|0}while(Jb>>>0>255);Kb=vb&255}else Kb=vb;Hq(s,Kb,e)|0}Jb=oa-q|0;Hq(p,Jb,e)|0;ob=r-ma|0;nb=Hb-ob-Jb|0;if((nb|0)>0){cr(s|0,48,(nb>>>0>256?256:nb)|0)|0;if(nb>>>0>255){Jb=nb;do{Hq(s,256,e)|0;Jb=Jb+-256|0}while(Jb>>>0>255);Lb=nb&255}else Lb=nb;Hq(s,Lb,e)|0}Hq(ma,ob,e)|0;if((pb|0)==8192&da){Jb=wa-mb|0;cr(s|0,32,(Jb>>>0>256?256:Jb)|0)|0;if(Jb>>>0>255){oa=Jb;do{Hq(s,256,e)|0;oa=oa+-256|0}while(oa>>>0>255);Mb=Jb&255}else Mb=Jb;Hq(s,Mb,e)|0}L=Oa;M=Pa;N=Ha;f=Q;O=da?wa:mb;P=va;continue a}oa=(Ea|0)<0?6:Ea;if($){pb=(c[o>>2]|0)+-28|0;c[o>>2]=pb;Nb=Qa*268435456.0;Ob=pb}else{Nb=Qa;Ob=c[o>>2]|0}pb=(Ob|0)<0?n:H;ob=pb;rb=Nb;ma=pb;while(1){nb=~~rb>>>0;c[ma>>2]=nb;vb=ma+4|0;rb=(rb-+(nb>>>0))*1.0e9;if(!(rb!=0.0)){Pb=vb;break}else ma=vb}ma=c[o>>2]|0;if((ma|0)>0){$=ma;mb=pb;da=Pb;while(1){Jb=($|0)>29?29:$;vb=da+-4|0;do if(vb>>>0<mb>>>0)Qb=mb;else{nb=da;qb=0;Rb=vb;while(1){Tb=ar(c[Rb>>2]|0,0,Jb|0)|0;Ub=Xq(Tb|0,G|0,qb|0,0)|0;Tb=G;Vb=lr(Ub|0,Tb|0,1e9,0)|0;c[Rb>>2]=Vb;Vb=kr(Ub|0,Tb|0,1e9,0)|0;Tb=nb+-8|0;if(Tb>>>0<mb>>>0){Wb=Vb;break}else{Ub=Rb;qb=Vb;Rb=Tb;nb=Ub}}if(!Wb){Qb=mb;break}nb=mb+-4|0;c[nb>>2]=Wb;Qb=nb}while(0);vb=da;while(1){if(vb>>>0<=Qb>>>0){Xb=vb;break}nb=vb+-4|0;if(!(c[nb>>2]|0))vb=nb;else{Xb=vb;break}}vb=(c[o>>2]|0)-Jb|0;c[o>>2]=vb;if((vb|0)>0){$=vb;mb=Qb;da=Xb}else{Yb=vb;Zb=Qb;_b=Xb;break}}}else{Yb=ma;Zb=pb;_b=Pb}g:do if((Yb|0)<0){da=((oa+25|0)/9|0)+1|0;if((ba|0)==102){mb=pb+(da<<2)|0;$=Yb;vb=Zb;nb=_b;while(1){Rb=($|0)<-9?9:0-$|0;do if(vb>>>0<nb>>>0){qb=(1<<Rb)+-1|0;Ub=1e9>>>Rb;Tb=0;Vb=vb;while(1){$b=c[Vb>>2]|0;c[Vb>>2]=($b>>>Rb)+Tb;ac=ca($b&qb,Ub)|0;Vb=Vb+4|0;if(Vb>>>0>=nb>>>0){bc=ac;break}else Tb=ac}Tb=(c[vb>>2]|0)==0?vb+4|0:vb;if(!bc){cc=Tb;dc=nb;break}c[nb>>2]=bc;cc=Tb;dc=nb+4|0}else{cc=(c[vb>>2]|0)==0?vb+4|0:vb;dc=nb}while(0);Tb=(dc-ob>>2|0)>(da|0)?mb:dc;$=(c[o>>2]|0)+Rb|0;c[o>>2]=$;if(($|0)>=0){ec=cc;fc=Tb;break g}else{vb=cc;nb=Tb}}}else{gc=Yb;hc=Zb;ic=_b}while(1){nb=(gc|0)<-9?9:0-gc|0;do if(hc>>>0<ic>>>0){vb=(1<<nb)+-1|0;$=1e9>>>nb;mb=0;Jb=hc;while(1){Tb=c[Jb>>2]|0;c[Jb>>2]=(Tb>>>nb)+mb;Vb=ca(Tb&vb,$)|0;Jb=Jb+4|0;if(Jb>>>0>=ic>>>0){jc=Vb;break}else mb=Vb}mb=(c[hc>>2]|0)==0?hc+4|0:hc;if(!jc){kc=mb;lc=ic;break}c[ic>>2]=jc;kc=mb;lc=ic+4|0}else{kc=(c[hc>>2]|0)==0?hc+4|0:hc;lc=ic}while(0);if((lc-kc>>2|0)>(da|0))mc=kc+(da<<2)|0;else mc=lc;gc=(c[o>>2]|0)+nb|0;c[o>>2]=gc;if((gc|0)>=0){ec=kc;fc=mc;break}else{hc=kc;ic=mc}}}else{ec=Zb;fc=_b}while(0);do if(ec>>>0<fc>>>0){ma=(ob-ec>>2)*9|0;da=c[ec>>2]|0;if(da>>>0<10){nc=ma;break}else{oc=ma;pc=10}while(1){pc=pc*10|0;ma=oc+1|0;if(da>>>0<pc>>>0){nc=ma;break}else oc=ma}}else nc=0;while(0);da=(ba|0)==103;ma=oa-((ba|0)!=102?nc:0)+((da&(oa|0)!=0)<<31>>31)|0;if((ma|0)<(((fc-ob>>2)*9|0)+-9|0)){Rb=ma+9216|0;ma=(Rb|0)/9|0;mb=pb+(ma+-1023<<2)|0;Jb=((Rb|0)%9|0)+1|0;if((Jb|0)<9){Rb=10;$=Jb;while(1){Jb=Rb*10|0;$=$+1|0;if(($|0)==9){qc=Jb;break}else Rb=Jb}}else qc=10;Rb=c[mb>>2]|0;$=(Rb>>>0)%(qc>>>0)|0;if(($|0)==0?(pb+(ma+-1022<<2)|0)==(fc|0):0){rc=ec;sc=mb;tc=nc}else U=231;do if((U|0)==231){U=0;rb=(((Rb>>>0)/(qc>>>0)|0)&1|0)==0?9007199254740992.0:9007199254740994.0;ba=(qc|0)/2|0;do if($>>>0<ba>>>0)uc=.5;else{if(($|0)==(ba|0)?(pb+(ma+-1022<<2)|0)==(fc|0):0){uc=1.0;break}uc=1.5}while(0);do if(!gb){vc=rb;wc=uc}else{if((a[hb>>0]|0)!=45){vc=rb;wc=uc;break}vc=-rb;wc=-uc}while(0);ba=Rb-$|0;c[mb>>2]=ba;if(!(vc+wc!=vc)){rc=ec;sc=mb;tc=nc;break}Jb=ba+qc|0;c[mb>>2]=Jb;if(Jb>>>0>999999999){Jb=ec;ba=mb;while(1){vb=ba+-4|0;c[ba>>2]=0;if(vb>>>0<Jb>>>0){Vb=Jb+-4|0;c[Vb>>2]=0;xc=Vb}else xc=Jb;Vb=(c[vb>>2]|0)+1|0;c[vb>>2]=Vb;if(Vb>>>0>999999999){Jb=xc;ba=vb}else{yc=xc;zc=vb;break}}}else{yc=ec;zc=mb}ba=(ob-yc>>2)*9|0;Jb=c[yc>>2]|0;if(Jb>>>0<10){rc=yc;sc=zc;tc=ba;break}else{Ac=ba;Bc=10}while(1){Bc=Bc*10|0;ba=Ac+1|0;if(Jb>>>0<Bc>>>0){rc=yc;sc=zc;tc=ba;break}else Ac=ba}}while(0);mb=sc+4|0;Cc=rc;Dc=tc;Ec=fc>>>0>mb>>>0?mb:fc}else{Cc=ec;Dc=nc;Ec=fc}mb=Cc;$=0-Dc|0;Rb=Ec;while(1){if(Rb>>>0<=Cc>>>0){Fc=0;Gc=Rb;break}ma=Rb+-4|0;if(!(c[ma>>2]|0))Rb=ma;else{Fc=1;Gc=Rb;break}}do if(da){Rb=((oa|0)==0&1)+oa|0;if((Rb|0)>(Dc|0)&(Dc|0)>-5){Hc=aa+-1|0;Ic=Rb+-1-Dc|0}else{Hc=aa+-2|0;Ic=Rb+-1|0}if(na&8){Jc=Hc;Kc=Ic;break}do if(Fc){Rb=c[Gc+-4>>2]|0;if(!Rb){Lc=9;break}if(!((Rb>>>0)%10|0)){Mc=10;Nc=0}else{Lc=0;break}while(1){Mc=Mc*10|0;ma=Nc+1|0;if((Rb>>>0)%(Mc>>>0)|0){Lc=ma;break}else Nc=ma}}else Lc=9;while(0);Rb=((Gc-ob>>2)*9|0)+-9|0;if((Hc|32|0)==102){nb=Rb-Lc|0;ma=(nb|0)<0?0:nb;Jc=Hc;Kc=(Ic|0)<(ma|0)?Ic:ma;break}else{ma=Rb+Dc-Lc|0;Rb=(ma|0)<0?0:ma;Jc=Hc;Kc=(Ic|0)<(Rb|0)?Ic:Rb;break}}else{Jc=aa;Kc=oa}while(0);oa=(Kc|0)!=0;if(oa)Oc=1;else Oc=(na&8|0)!=0;da=Oc&1;Rb=(Jc|32|0)==102;if(Rb){Pc=(Dc|0)>0?Dc:0;Qc=0}else{ma=(Dc|0)<0?$:Dc;if((ma|0)<0){nb=B;Jb=ma;ba=((ma|0)<0)<<31>>31;while(1){vb=lr(Jb|0,ba|0,10,0)|0;Vb=nb+-1|0;a[Vb>>0]=vb|48;vb=kr(Jb|0,ba|0,10,0)|0;if(ba>>>0>9|(ba|0)==9&Jb>>>0>4294967295){nb=Vb;Jb=vb;ba=G}else{Rc=Vb;Sc=vb;break}}Tc=Rc;Uc=Sc}else{Tc=B;Uc=ma}if(!Uc)Vc=Tc;else{ba=Tc;Jb=Uc;while(1){nb=ba+-1|0;a[nb>>0]=(Jb>>>0)%10|0|48;if(Jb>>>0<10){Vc=nb;break}else{ba=nb;Jb=(Jb>>>0)/10|0}}}if((r-Vc|0)<2){Jb=Vc;while(1){ba=Jb+-1|0;a[ba>>0]=48;if((r-ba|0)<2)Jb=ba;else{Wc=ba;break}}}else Wc=Vc;a[Wc+-1>>0]=(Dc>>31&2)+43;Jb=Wc+-2|0;a[Jb>>0]=Jc;Pc=r-Jb|0;Qc=Jb}Jb=gb+1+Kc+da+Pc|0;ba=na&73728;ma=(wa|0)>(Jb|0);if((ba|0)==0&ma){nb=wa-Jb|0;cr(s|0,32,(nb>>>0>256?256:nb)|0)|0;if(nb>>>0>255){$=nb;do{Hq(s,256,e)|0;$=$+-256|0}while($>>>0>255);Xc=nb&255}else Xc=nb;Hq(s,Xc,e)|0}Hq(hb,gb,e)|0;if((ba|0)==65536&ma){$=wa-Jb|0;cr(s|0,48,($>>>0>256?256:$)|0)|0;if($>>>0>255){da=$;do{Hq(s,256,e)|0;da=da+-256|0}while(da>>>0>255);Yc=$&255}else Yc=$;Hq(s,Yc,e)|0}do if(Rb){da=Cc>>>0>pb>>>0?pb:Cc;nb=~ob;vb=~mb;Vb=nb>>>0>vb>>>0?nb:vb;vb=3-Vb|0;nb=pb+1|0;Tb=(vb>>>0>nb>>>0?vb:nb)+Vb|0;nb=~Vb;Vb=da;while(1){vb=c[Vb>>2]|0;if(!vb)Zc=I;else{Ub=I;qb=vb;while(1){vb=Ub+-1|0;a[vb>>0]=(qb>>>0)%10|0|48;if(qb>>>0<10){Zc=vb;break}else{Ub=vb;qb=(qb>>>0)/10|0}}}do if((Vb|0)==(da|0)){if((Zc|0)!=(I|0)){_c=Zc;break}a[K>>0]=48;_c=K}else{if(Zc>>>0>p>>>0)$c=Zc;else{_c=Zc;break}while(1){qb=$c+-1|0;a[qb>>0]=48;if(qb>>>0>p>>>0)$c=qb;else{_c=qb;break}}}while(0);Hq(_c,J-_c|0,e)|0;qb=Vb+4|0;if(qb>>>0>pb>>>0){ad=qb;break}else Vb=qb}if(!((na&8|0)==0&(oa^1)))Hq(28504,1,e)|0;if(ad>>>0<Gc>>>0&(Kc|0)>0){Vb=Kc;da=(Tb&-4)+nb|0;qb=ad;while(1){Ub=c[qb>>2]|0;if(Ub){vb=I;ac=Ub;while(1){Ub=vb+-1|0;a[Ub>>0]=(ac>>>0)%10|0|48;if(ac>>>0<10){bd=Ub;break}else{vb=Ub;ac=(ac>>>0)/10|0}}if(bd>>>0>p>>>0){cd=bd;U=300}else dd=bd}else{cd=I;U=300}if((U|0)==300)while(1){U=0;ac=cd+-1|0;a[ac>>0]=48;if(ac>>>0>p>>>0){cd=ac;U=300}else{dd=ac;break}}Hq(dd,(Vb|0)>9?9:Vb,e)|0;ac=da+8|0;vb=Vb+-9|0;if(ac>>>0<Gc>>>0&(vb|0)>0){Ub=qb;Vb=vb;qb=ac;da=Ub}else{ed=vb;break}}}else ed=Kc;if((ed|0)<=0)break;cr(s|0,48,(ed>>>0>256?256:ed)|0)|0;if(ed>>>0>255){da=ed;do{Hq(s,256,e)|0;da=da+-256|0}while(da>>>0>255);fd=ed&255}else fd=ed;Hq(s,fd,e)|0}else{da=Fc?Gc:Cc+4|0;do if((Kc|0)>-1){qb=(na&8|0)==0;Vb=Kc;nb=Cc;while(1){Tb=c[nb>>2]|0;if(Tb){vb=I;Ub=Tb;while(1){Tb=vb+-1|0;a[Tb>>0]=(Ub>>>0)%10|0|48;if(Ub>>>0<10){gd=vb;hd=Tb;break}else{vb=Tb;Ub=(Ub>>>0)/10|0}}if((hd|0)!=(I|0)){id=gd;jd=hd}else U=312}else U=312;if((U|0)==312){U=0;a[K>>0]=48;id=I;jd=K}do if((nb|0)==(Cc|0)){Hq(jd,1,e)|0;if((Vb|0)<1&qb){kd=id;break}Hq(28504,1,e)|0;kd=id}else{if(jd>>>0>p>>>0)ld=jd;else{kd=jd;break}while(1){Ub=ld+-1|0;a[Ub>>0]=48;if(Ub>>>0>p>>>0)ld=Ub;else{kd=Ub;break}}}while(0);Ub=J-kd|0;Hq(kd,(Vb|0)>(Ub|0)?Ub:Vb,e)|0;vb=Vb-Ub|0;nb=nb+4|0;if(!(nb>>>0<da>>>0&(vb|0)>-1)){md=vb;break}else Vb=vb}if((md|0)<=0)break;cr(s|0,48,(md>>>0>256?256:md)|0)|0;if(md>>>0>255){Vb=md;do{Hq(s,256,e)|0;Vb=Vb+-256|0}while(Vb>>>0>255);nd=md&255}else nd=md;Hq(s,nd,e)|0}while(0);Hq(Qc,r-Qc|0,e)|0}while(0);if((ba|0)==8192&ma){oa=wa-Jb|0;cr(s|0,32,(oa>>>0>256?256:oa)|0)|0;if(oa>>>0>255){pb=oa;do{Hq(s,256,e)|0;pb=pb+-256|0}while(pb>>>0>255);od=oa&255}else od=oa;Hq(s,od,e)|0}L=Oa;M=Pa;N=Ha;f=Q;O=ma?wa:Jb;P=va;continue a;break}case 109:{pd=Sb(c[(Db()|0)>>2]|0)|0;U=95;break}case 115:{pd=(Oa|0)==0?28424:Oa;U=95;break}case 110:{switch(Ka|0){case 0:{c[Oa>>2]=Q;L=Oa;M=Pa;N=Ha;f=Q;O=R;P=va;continue a;break}case 1:{c[Oa>>2]=Q;L=Oa;M=Pa;N=Ha;f=Q;O=R;P=va;continue a;break}case 3:{b[Oa>>1]=Q;L=Oa;M=Pa;N=Ha;f=Q;O=R;P=va;continue a;break}case 7:{pb=Oa;c[pb>>2]=Q;c[pb+4>>2]=((Q|0)<0)<<31>>31;L=Oa;M=Pa;N=Ha;f=Q;O=R;P=va;continue a;break}case 4:{a[Oa>>0]=Q;L=Oa;M=Pa;N=Ha;f=Q;O=R;P=va;continue a;break}case 6:{c[Oa>>2]=Q;L=Oa;M=Pa;N=Ha;f=Q;O=R;P=va;continue a;break}case 2:{pb=Oa;c[pb>>2]=Q;c[pb+4>>2]=((Q|0)<0)<<31>>31;L=Oa;M=Pa;N=Ha;f=Q;O=R;P=va;continue a;break}default:{L=Oa;M=Pa;N=Ha;f=Q;O=R;P=va;continue a}}break}case 105:case 100:{if((Pa|0)<0){pb=Yq(0,0,Oa|0,Pa|0)|0;qd=G;rd=pb;sd=1;td=28408;U=85;break f}if(!(na&2048)){pb=na&1;qd=Pa;rd=Oa;sd=pb;td=(pb|0)==0?28408:28410;U=85}else{qd=Pa;rd=Oa;sd=1;td=28409;U=85}break}case 99:{a[z>>0]=Oa;ud=Oa;vd=Pa;wd=z;xd=ea;yd=1;zd=0;Ad=28408;Bd=x;break}case 112:{Cd=na|8;Dd=Ea>>>0>8?Ea:8;Ed=120;U=74;break}case 117:{qd=Pa;rd=Oa;sd=0;td=28408;U=85;break}case 88:case 120:{Cd=na;Dd=Ea;Ed=aa;U=74;break}default:{ud=Oa;vd=Pa;wd=N;xd=na;yd=Ea;zd=0;Ad=28408;Bd=x}}while(0);do if((U|0)==74){U=0;aa=Ed&32;if(!((Oa|0)==0&(Pa|0)==0)){R=x;pb=Oa;ba=Pa;while(1){mb=R+-1|0;a[mb>>0]=d[28488+(pb&15)>>0]|aa;pb=Zq(pb|0,ba|0,4)|0;ba=G;if((pb|0)==0&(ba|0)==0){Fd=mb;break}else R=mb}if(!(Cd&8)){_a=Oa;$a=Pa;ab=Fd;bb=Cd;cb=Dd;db=0;eb=28408;U=90}else{_a=Oa;$a=Pa;ab=Fd;bb=Cd;cb=Dd;db=2;eb=28408+(Ed>>4)|0;U=90}}else{_a=Oa;$a=Pa;ab=x;bb=Cd;cb=Dd;db=0;eb=28408;U=90}}else if((U|0)==85){U=0;if(qd>>>0>0|(qd|0)==0&rd>>>0>4294967295){R=x;ba=rd;pb=qd;while(1){aa=lr(ba|0,pb|0,10,0)|0;Jb=R+-1|0;a[Jb>>0]=aa|48;aa=kr(ba|0,pb|0,10,0)|0;if(pb>>>0>9|(pb|0)==9&ba>>>0>4294967295){R=Jb;ba=aa;pb=G}else{Gd=Jb;Hd=aa;break}}Id=Gd;Jd=Hd}else{Id=x;Jd=rd}if(!Jd){_a=rd;$a=qd;ab=Id;bb=na;cb=Ea;db=sd;eb=td;U=90}else{pb=Id;ba=Jd;while(1){R=pb+-1|0;a[R>>0]=(ba>>>0)%10|0|48;if(ba>>>0<10){_a=rd;$a=qd;ab=R;bb=na;cb=Ea;db=sd;eb=td;U=90;break}else{pb=R;ba=(ba>>>0)/10|0}}}}else if((U|0)==95){U=0;ba=Qq(pd,0,Ea)|0;if(!ba){ud=Oa;vd=Pa;wd=pd;xd=ea;yd=Ea;zd=0;Ad=28408;Bd=pd+Ea|0;break}else{ud=Oa;vd=Pa;wd=pd;xd=ea;yd=ba-pd|0;zd=0;Ad=28408;Bd=ba;break}}else if((U|0)==100){U=0;ba=0;pb=0;R=Ta;while(1){aa=c[R>>2]|0;if(!aa){Kd=ba;Ld=pb;break}Jb=Bq(v,aa)|0;if((Jb|0)<0|Jb>>>0>(Va-ba|0)>>>0){Kd=ba;Ld=Jb;break}aa=Jb+ba|0;if(Va>>>0>aa>>>0){ba=aa;pb=Jb;R=R+4|0}else{Kd=aa;Ld=Jb;break}}if((Ld|0)<0){sa=-1;U=369;break a}else{Wa=Ua;Xa=Ta;Ya=Kd;U=105}}while(0);if((U|0)==90){U=0;ea=(cb|0)>-1?bb&-65537:bb;R=(_a|0)!=0|($a|0)!=0;if(R|(cb|0)!=0){pb=(R&1^1)+(y-ab)|0;ud=_a;vd=$a;wd=ab;xd=ea;yd=(cb|0)>(pb|0)?cb:pb;zd=db;Ad=eb;Bd=x}else{ud=_a;vd=$a;wd=x;xd=ea;yd=0;zd=db;Ad=eb;Bd=x}}else if((U|0)==105){U=0;ea=na&73728;pb=(wa|0)>(Ya|0);if((ea|0)==0&pb){R=wa-Ya|0;cr(s|0,32,(R>>>0>256?256:R)|0)|0;if(R>>>0>255){ba=R;do{Hq(s,256,e)|0;ba=ba+-256|0}while(ba>>>0>255);Md=R&255}else Md=R;Hq(s,Md,e)|0}h:do if(Ya){ba=0;na=Xa;while(1){Jb=c[na>>2]|0;if(!Jb)break h;aa=Bq(v,Jb)|0;ba=aa+ba|0;if((ba|0)>(Ya|0))break h;Hq(v,aa,e)|0;if(ba>>>0>=Ya>>>0)break;else na=na+4|0}}while(0);if((ea|0)==8192&pb){R=wa-Ya|0;cr(s|0,32,(R>>>0>256?256:R)|0)|0;if(R>>>0>255){na=R;do{Hq(s,256,e)|0;na=na+-256|0}while(na>>>0>255);Nd=R&255}else Nd=R;Hq(s,Nd,e)|0}L=Wa;M=Pa;N=Ha;f=Q;O=pb?wa:Ya;P=va;continue}na=Bd-wd|0;ea=(yd|0)<(na|0)?na:yd;ba=zd+ea|0;aa=(wa|0)<(ba|0)?ba:wa;Jb=xd&73728;ma=(aa|0)>(ba|0);if((Jb|0)==0&ma){oa=aa-ba|0;cr(s|0,32,(oa>>>0>256?256:oa)|0)|0;if(oa>>>0>255){mb=oa;do{Hq(s,256,e)|0;mb=mb+-256|0}while(mb>>>0>255);Od=oa&255}else Od=oa;Hq(s,Od,e)|0}Hq(Ad,zd,e)|0;if((Jb|0)==65536&ma){mb=aa-ba|0;cr(s|0,48,(mb>>>0>256?256:mb)|0)|0;if(mb>>>0>255){pb=mb;do{Hq(s,256,e)|0;pb=pb+-256|0}while(pb>>>0>255);Pd=mb&255}else Pd=mb;Hq(s,Pd,e)|0}if((ea|0)>(na|0)){pb=ea-na|0;cr(s|0,48,(pb>>>0>256?256:pb)|0)|0;if(pb>>>0>255){oa=pb;do{Hq(s,256,e)|0;oa=oa+-256|0}while(oa>>>0>255);Qd=pb&255}else Qd=pb;Hq(s,Qd,e)|0}Hq(wd,na,e)|0;if(!((Jb|0)==8192&ma)){L=ud;M=vd;N=Ha;f=Q;O=aa;P=va;continue}oa=aa-ba|0;cr(s|0,32,(oa>>>0>256?256:oa)|0)|0;if(oa>>>0>255){ea=oa;do{Hq(s,256,e)|0;ea=ea+-256|0}while(ea>>>0>255);Rd=oa&255}else Rd=oa;Hq(s,Rd,e)|0;L=ud;M=vd;N=Ha;f=Q;O=aa;P=va}if((U|0)==351){if(e){sa=S;i=m;return sa|0}if(!T){sa=0;i=m;return sa|0}else Sd=1;while(1){T=c[l+(Sd<<2)>>2]|0;if(!T){Td=Sd;break}S=j+(Sd<<3)|0;i:do if(T>>>0<=20)do switch(T|0){case 9:{e=c[g>>2]|0;va=c[e>>2]|0;c[g>>2]=e+4;c[S>>2]=va;break i;break}case 10:{va=c[g>>2]|0;e=c[va>>2]|0;c[g>>2]=va+4;va=S;c[va>>2]=e;c[va+4>>2]=((e|0)<0)<<31>>31;break i;break}case 11:{e=c[g>>2]|0;va=c[e>>2]|0;c[g>>2]=e+4;e=S;c[e>>2]=va;c[e+4>>2]=0;break i;break}case 12:{e=c[g>>2]|0;va=e;P=c[va>>2]|0;O=c[va+4>>2]|0;c[g>>2]=e+8;e=S;c[e>>2]=P;c[e+4>>2]=O;break i;break}case 13:{O=c[g>>2]|0;e=c[O>>2]|0;c[g>>2]=O+4;O=(e&65535)<<16>>16;e=S;c[e>>2]=O;c[e+4>>2]=((O|0)<0)<<31>>31;break i;break}case 14:{O=c[g>>2]|0;e=c[O>>2]|0;c[g>>2]=O+4;O=S;c[O>>2]=e&65535;c[O+4>>2]=0;break i;break}case 15:{O=c[g>>2]|0;e=c[O>>2]|0;c[g>>2]=O+4;O=(e&255)<<24>>24;e=S;c[e>>2]=O;c[e+4>>2]=((O|0)<0)<<31>>31;break i;break}case 16:{O=c[g>>2]|0;e=c[O>>2]|0;c[g>>2]=O+4;O=S;c[O>>2]=e&255;c[O+4>>2]=0;break i;break}case 17:{O=c[g>>2]|0;c[k>>2]=c[O>>2];c[k+4>>2]=c[O+4>>2];vc=+h[k>>3];c[g>>2]=O+8;h[S>>3]=vc;break i;break}case 18:{O=c[g>>2]|0;c[k>>2]=c[O>>2];c[k+4>>2]=c[O+4>>2];vc=+h[k>>3];c[g>>2]=O+8;h[S>>3]=vc;break i;break}default:break i}while(0);while(0);Sd=Sd+1|0;if((Sd|0)>=10){sa=1;U=369;break}}if((U|0)==369){i=m;return sa|0}while(1){if(c[l+(Td<<2)>>2]|0){sa=-1;U=369;break}Td=Td+1|0;if((Td|0)>=10){sa=1;U=369;break}}if((U|0)==369){i=m;return sa|0}}else if((U|0)==369){i=m;return sa|0}return 0}function Vq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=a+20|0;f=c[e>>2]|0;g=(c[a+16>>2]|0)-f|0;a=g>>>0>d>>>0?d:g;$q(f|0,b|0,a|0)|0;c[e>>2]=(c[e>>2]|0)+a;return d|0}function Wq(){}function Xq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=a+c>>>0;return (G=b+d+(e>>>0<a>>>0|0)>>>0,e|0)|0}function Yq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=b-d>>>0;e=b-d-(c>>>0>a>>>0|0)>>>0;return (G=e,a-c>>>0|0)|0}function Zq(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){G=b>>>c;return a>>>c|(b&(1<<c)-1)<<32-c}G=0;return b>>>c-32|0}function _q(b){b=b|0;var c=0;c=b;while(a[c>>0]|0)c=c+1|0;return c-b|0}function $q(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((e|0)>=4096)return gb(b|0,d|0,e|0)|0;f=b|0;if((b&3)==(d&3)){while(b&3){if(!e)return f|0;a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0}while((e|0)>=4){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0;e=e-4|0}}while((e|0)>0){a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0}return f|0}function ar(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){G=b<<c|(a&(1<<c)-1<<32-c)>>>32-c;return a<<c}G=a<<c-32;return 0}function br(b,c,d){b=b|0;c=c|0;d=d|0;var e=0;if((c|0)<(b|0)&(b|0)<(c+d|0)){e=b;c=c+d|0;b=b+d|0;while((d|0)>0){b=b-1|0;c=c-1|0;d=d-1|0;a[b>>0]=a[c>>0]|0}b=e}else $q(b,c,d)|0;return b|0}function cr(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=b+e|0;if((e|0)>=20){d=d&255;g=b&3;h=d|d<<8|d<<16|d<<24;i=f&~3;if(g){g=b+4-g|0;while((b|0)<(g|0)){a[b>>0]=d;b=b+1|0}}while((b|0)<(i|0)){c[b>>2]=h;b=b+4|0}}while((b|0)<(f|0)){a[b>>0]=d;b=b+1|0}return b-e|0}function dr(b,c){b=b|0;c=c|0;var d=0;do{a[b+d>>0]=a[c+d>>0];d=d+1|0}while(a[c+(d-1)>>0]|0);return b|0}function er(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){G=b>>c;return a>>>c|(b&(1<<c)-1)<<32-c}G=(b|0)<0?-1:0;return b>>c-32|0}function fr(b){b=b|0;var c=0;c=a[m+(b&255)>>0]|0;if((c|0)<8)return c|0;c=a[m+(b>>8&255)>>0]|0;if((c|0)<8)return c+8|0;c=a[m+(b>>16&255)>>0]|0;if((c|0)<8)return c+16|0;return (a[m+(b>>>24)>>0]|0)+24|0}function gr(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=a&65535;d=b&65535;e=ca(d,c)|0;f=a>>>16;a=(e>>>16)+(ca(d,f)|0)|0;d=b>>>16;b=ca(d,c)|0;return (G=(a>>>16)+(ca(d,f)|0)+(((a&65535)+b|0)>>>16)|0,a+b<<16|e&65535|0)|0}function hr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=b>>31|((b|0)<0?-1:0)<<1;f=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;g=d>>31|((d|0)<0?-1:0)<<1;h=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;i=Yq(e^a,f^b,e,f)|0;b=G;a=g^e;e=h^f;f=Yq((mr(i,b,Yq(g^c,h^d,g,h)|0,G,0)|0)^a,G^e,a,e)|0;return f|0}function ir(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+8|0;g=f|0;h=b>>31|((b|0)<0?-1:0)<<1;j=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;k=e>>31|((e|0)<0?-1:0)<<1;l=((e|0)<0?-1:0)>>31|((e|0)<0?-1:0)<<1;m=Yq(h^a,j^b,h,j)|0;b=G;mr(m,b,Yq(k^d,l^e,k,l)|0,G,g)|0;l=Yq(c[g>>2]^h,c[g+4>>2]^j,h,j)|0;j=G;i=f;return (G=j,l)|0}function jr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;a=c;c=gr(e,a)|0;f=G;return (G=(ca(b,a)|0)+(ca(d,e)|0)+f|f&0,c|0|0)|0}function kr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=mr(a,b,c,d,0)|0;return e|0}function lr(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+8|0;g=f|0;mr(a,b,d,e,g)|0;i=f;return (G=c[g+4>>2]|0,c[g>>2]|0)|0}function mr(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,H=0;g=a;h=b;i=h;j=d;k=e;l=k;if(!i){m=(f|0)!=0;if(!l){if(m){c[f>>2]=(g>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(g>>>0)/(j>>>0)>>>0;return (G=n,o)|0}else{if(!m){n=0;o=0;return (G=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=b&0;n=0;o=0;return (G=n,o)|0}}m=(l|0)==0;do if(j){if(!m){p=(ea(l|0)|0)-(ea(i|0)|0)|0;if(p>>>0<=31){q=p+1|0;r=31-p|0;s=p-31>>31;t=q;u=g>>>(q>>>0)&s|i<<r;v=i>>>(q>>>0)&s;w=0;x=g<<r;break}if(!f){n=0;o=0;return (G=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return (G=n,o)|0}r=j-1|0;if(r&j){s=(ea(j|0)|0)+33-(ea(i|0)|0)|0;q=64-s|0;p=32-s|0;y=p>>31;z=s-32|0;A=z>>31;t=s;u=p-1>>31&i>>>(z>>>0)|(i<<p|g>>>(s>>>0))&A;v=A&i>>>(s>>>0);w=g<<q&y;x=(i<<q|g>>>(z>>>0))&y|g<<p&s-33>>31;break}if(f){c[f>>2]=r&g;c[f+4>>2]=0}if((j|0)==1){n=h|b&0;o=a|0|0;return (G=n,o)|0}else{r=fr(j|0)|0;n=i>>>(r>>>0)|0;o=i<<32-r|g>>>(r>>>0)|0;return (G=n,o)|0}}else{if(m){if(f){c[f>>2]=(i>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(i>>>0)/(j>>>0)>>>0;return (G=n,o)|0}if(!g){if(f){c[f>>2]=0;c[f+4>>2]=(i>>>0)%(l>>>0)}n=0;o=(i>>>0)/(l>>>0)>>>0;return (G=n,o)|0}r=l-1|0;if(!(r&l)){if(f){c[f>>2]=a|0;c[f+4>>2]=r&i|b&0}n=0;o=i>>>((fr(l|0)|0)>>>0);return (G=n,o)|0}r=(ea(l|0)|0)-(ea(i|0)|0)|0;if(r>>>0<=30){s=r+1|0;p=31-r|0;t=s;u=i<<p|g>>>(s>>>0);v=i>>>(s>>>0);w=0;x=g<<p;break}if(!f){n=0;o=0;return (G=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return (G=n,o)|0}while(0);if(!t){B=x;C=w;D=v;E=u;F=0;H=0}else{b=d|0|0;d=k|e&0;e=Xq(b,d,-1,-1)|0;k=G;h=x;x=w;w=v;v=u;u=t;t=0;do{a=h;h=x>>>31|h<<1;x=t|x<<1;g=v<<1|a>>>31|0;a=v>>>31|w<<1|0;Yq(e,k,g,a)|0;i=G;l=i>>31|((i|0)<0?-1:0)<<1;t=l&1;v=Yq(g,a,l&b,(((i|0)<0?-1:0)>>31|((i|0)<0?-1:0)<<1)&d)|0;w=G;u=u-1|0}while((u|0)!=0);B=h;C=x;D=w;E=v;F=0;H=t}t=C;C=0;if(f){c[f>>2]=E;c[f+4>>2]=D}n=(t|0)>>>31|(B|C)<<1|(C<<1|t>>>31)&0|F;o=(t<<1|0>>>31)&-2|H;return (G=n,o)|0}function nr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return $b[a&31](b|0,c|0,d|0)|0}function or(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;ac[a&63](b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function pr(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;bc[a&3](b|0,c|0,d|0,e|0,f|0)}function qr(a,b){a=a|0;b=b|0;cc[a&127](b|0)}function rr(a,b,c){a=a|0;b=b|0;c=c|0;dc[a&63](b|0,c|0)}function sr(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;ec[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0)}function tr(a,b){a=a|0;b=b|0;return fc[a&127](b|0)|0}function ur(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=+h;gc[a&3](b|0,c|0,d|0,e|0,f|0,g|0,+h)}function vr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;hc[a&3](b|0,c|0,d|0)}function wr(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;ic[a&7](b|0,c|0,d|0,e|0,f|0,+g)}function xr(a){a=a|0;jc[a&3]()}function yr(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;return kc[a&15](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)|0}function zr(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return lc[a&7](b|0,c|0,d|0,e|0)|0}function Ar(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;mc[a&7](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function Br(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;nc[a&15](b|0,c|0,d|0,e|0,f|0,g|0)}function Cr(a,b,c){a=a|0;b=b|0;c=c|0;return oc[a&15](b|0,c|0)|0}function Dr(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return pc[a&15](b|0,c|0,d|0,e|0,f|0)|0}function Er(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;qc[a&15](b|0,c|0,d|0,e|0)}function Fr(a,b,c){a=a|0;b=b|0;c=c|0;fa(0);return 0}function Gr(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;fa(1)}function Hr(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;fa(2)}function Ir(a){a=a|0;fa(3)}function Jr(a,b){a=a|0;b=b|0;fa(4)}function Kr(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;fa(5)}function Lr(a){a=a|0;fa(6);return 0}function Mr(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;fa(7)}function Nr(a,b,c){a=a|0;b=b|0;c=c|0;fa(8)}function Or(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;fa(9)}function Pr(){fa(10)}function Qr(){Ka()}function Rr(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;fa(11);return 0}function Sr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;fa(12);return 0}function Tr(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;fa(13)}function Ur(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;fa(14)}function Vr(a,b){a=a|0;b=b|0;fa(15);return 0}function Wr(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;fa(16);return 0}function Xr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;fa(17)}

// EMSCRIPTEN_END_FUNCS
var $b=[Fr,hd,jd,Kf,Pf,co,Tf,uf,zf,no,Df,ze,Ae,Cg,Hg,mk,rk,dl,fl,il,Nk,Uk,Xk,_k,Pp,Op,Vq,gp,Fr,Fr,Fr,Fr];var ac=[Gr,Kg,Lg,Mg,Ng,Og,Pg,Qg,Rg,Sg,Tg,Ug,Zg,_g,$g,ah,bh,ch,dh,eh,fh,gh,hh,wh,yh,Jh,Lh,Uh,Vh,Wh,Yh,_h,ri,si,ti,vi,xi,dk,jk,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr,Gr];var bc=[Hr,$p,_p,Xp];var cc=[Ir,ed,Ff,$n,fo,pf,ko,po,Ee,Fe,qf,rf,Gf,Hf,Vf,Xf,Wf,Yf,$f,bg,ag,cg,eg,gg,fg,hg,kg,mg,lg,ng,ug,vg,jf,wg,Ge,uo,yg,zg,Kk,Dg,Eg,Ig,Jg,Xg,Yg,ph,qh,Eh,Fh,Rh,Sh,oi,pi,Ni,Oi,Ri,Si,Vi,Wi,ej,fj,pj,qj,Aj,Bj,Lj,Mj,Uj,Vj,_j,$j,ek,fk,kk,lk,pk,qk,yk,zk,al,bl,um,tl,Tl,Ul,Vl,Wl,xg,Jk,Mk,kl,Bl,Jl,Rl,Sl,op,pp,vp,wp,yp,zp,Bp,Ep,Fp,Hp,Lp,Ip,Jp,Kp,Mp,Np,Zc,Oj,Lk,On,Vn,Wn,Xn,Yn,Zn,_n,Oe,af,re,lq,jq,Ir,Ir];var dc=[Jr,Ec,Fc,Qc,Rc,Tc,Vc,ao,go,lo,qo,tf,Jf,Zi,_i,$i,aj,cj,dj,ij,jj,kj,lj,nj,oj,tj,uj,vj,wj,yj,zj,Ej,Fj,Gj,Hj,Jj,Kj,ok,tk,$l,bm,dm,am,cm,em,Jr,Jr,Jr,Jr,Jr,Jr,Jr,Jr,Jr,Jr,Jr,Jr,Jr,Jr,Jr,Jr,Jr,Jr,Jr];var ec=[Kr,ai,zi,Kr];var fc=[Lr,cd,dd,fd,gd,bo,Of,Qf,Rf,Nf,ho,io,mo,yf,Af,Bf,xf,ro,so,Ap,qg,Th,gm,im,km,qm,sm,mm,om,qi,hm,jm,lm,rm,tm,nm,pm,Xi,Yi,bj,gj,hj,mj,rj,sj,xj,Cj,Dj,Ij,xl,yl,Al,Xl,Zl,Yl,_l,ol,pl,rl,Fl,Gl,Il,Nl,Ol,Ql,qp,xp,Gp,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr,Lr];var gc=[Mr,ak,gk,Mr];var hc=[Nr,ye,rg,Nr];var ic=[Or,zh,Ch,Mh,Oh,Or,Or,Or];var jc=[Pr,Qr,gq,hq];var kc=[Rr,ul,vl,ll,ml,Cl,Dl,Kl,Ll,Rr,Rr,Rr,Rr,Rr,Rr,Rr];var lc=[Sr,hl,Pk,Qk,Rk,Zk,Sr,Sr];var mc=[Tr,Pi,Ti,Nj,Rj,Wj,Yj,Tr];var nc=[Ur,Lf,vf,rh,sh,xh,Dh,Gh,Hh,Kh,Ph,nk,sk,cq,bq,aq];var oc=[Vr,id,Sf,eo,jo,Uf,Cf,oo,to,Ef,cl,el,gl,Sk,Vk,Yk];var pc=[Wr,Ag,Fg,jl,wl,zl,$k,nl,ql,El,Hl,Ml,Pl,Wr,Wr,Wr];var qc=[Xr,Dd,Ed,Fd,Gd,Hd,Id,Mf,wf,Bg,Gg,Rp,Sp,Up,Xr,Xr];return{___cxa_can_catch:dq,_free:lq,___cxa_is_pointer_type:eq,_i64Add:Xq,_memmove:br,_realloc:mq,_vlImageGetSize:oe,_i64Subtract:Yq,_memset:cr,_malloc:kq,_memcpy:$q,_strlen:_q,_fromData:be,_bitshift64Lshr:Zq,_vlImageSaveLump:ne,_strcpy:dr,_bitshift64Shl:ar,__GLOBAL__sub_I_VTFLib_cpp:de,__GLOBAL__sub_I_iostream_cpp:vm,runPostSets:Wq,stackAlloc:rc,stackSave:sc,stackRestore:tc,setThrew:uc,setTempRet0:xc,getTempRet0:yc,dynCall_iiii:nr,dynCall_viiiiiii:or,dynCall_viiiii:pr,dynCall_vi:qr,dynCall_vii:rr,dynCall_viiiiiiiii:sr,dynCall_ii:tr,dynCall_viiiiiid:ur,dynCall_viii:vr,dynCall_viiiiid:wr,dynCall_v:xr,dynCall_iiiiiiiii:yr,dynCall_iiiii:zr,dynCall_viiiiiiii:Ar,dynCall_viiiiii:Br,dynCall_iii:Cr,dynCall_iiiiii:Dr,dynCall_viiii:Er}})


// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg,Module.asmLibraryArg,buffer);var ___cxa_can_catch=Module["___cxa_can_catch"]=asm["___cxa_can_catch"];var _free=Module["_free"]=asm["_free"];var ___cxa_is_pointer_type=Module["___cxa_is_pointer_type"]=asm["___cxa_is_pointer_type"];var _i64Add=Module["_i64Add"]=asm["_i64Add"];var _memmove=Module["_memmove"]=asm["_memmove"];var _realloc=Module["_realloc"]=asm["_realloc"];var _vlImageGetSize=Module["_vlImageGetSize"]=asm["_vlImageGetSize"];var _i64Subtract=Module["_i64Subtract"]=asm["_i64Subtract"];var _memset=Module["_memset"]=asm["_memset"];var _malloc=Module["_malloc"]=asm["_malloc"];var _memcpy=Module["_memcpy"]=asm["_memcpy"];var _strlen=Module["_strlen"]=asm["_strlen"];var _fromData=Module["_fromData"]=asm["_fromData"];var _bitshift64Lshr=Module["_bitshift64Lshr"]=asm["_bitshift64Lshr"];var _vlImageSaveLump=Module["_vlImageSaveLump"]=asm["_vlImageSaveLump"];var _strcpy=Module["_strcpy"]=asm["_strcpy"];var _bitshift64Shl=Module["_bitshift64Shl"]=asm["_bitshift64Shl"];var __GLOBAL__sub_I_VTFLib_cpp=Module["__GLOBAL__sub_I_VTFLib_cpp"]=asm["__GLOBAL__sub_I_VTFLib_cpp"];var __GLOBAL__sub_I_iostream_cpp=Module["__GLOBAL__sub_I_iostream_cpp"]=asm["__GLOBAL__sub_I_iostream_cpp"];var runPostSets=Module["runPostSets"]=asm["runPostSets"];var dynCall_iiii=Module["dynCall_iiii"]=asm["dynCall_iiii"];var dynCall_viiiiiii=Module["dynCall_viiiiiii"]=asm["dynCall_viiiiiii"];var dynCall_viiiii=Module["dynCall_viiiii"]=asm["dynCall_viiiii"];var dynCall_vi=Module["dynCall_vi"]=asm["dynCall_vi"];var dynCall_vii=Module["dynCall_vii"]=asm["dynCall_vii"];var dynCall_viiiiiiiii=Module["dynCall_viiiiiiiii"]=asm["dynCall_viiiiiiiii"];var dynCall_ii=Module["dynCall_ii"]=asm["dynCall_ii"];var dynCall_viiiiiid=Module["dynCall_viiiiiid"]=asm["dynCall_viiiiiid"];var dynCall_viii=Module["dynCall_viii"]=asm["dynCall_viii"];var dynCall_viiiiid=Module["dynCall_viiiiid"]=asm["dynCall_viiiiid"];var dynCall_v=Module["dynCall_v"]=asm["dynCall_v"];var dynCall_iiiiiiiii=Module["dynCall_iiiiiiiii"]=asm["dynCall_iiiiiiiii"];var dynCall_iiiii=Module["dynCall_iiiii"]=asm["dynCall_iiiii"];var dynCall_viiiiiiii=Module["dynCall_viiiiiiii"]=asm["dynCall_viiiiiiii"];var dynCall_viiiiii=Module["dynCall_viiiiii"]=asm["dynCall_viiiiii"];var dynCall_iii=Module["dynCall_iii"]=asm["dynCall_iii"];var dynCall_iiiiii=Module["dynCall_iiiiii"]=asm["dynCall_iiiiii"];var dynCall_viiii=Module["dynCall_viiii"]=asm["dynCall_viiii"];Runtime.stackAlloc=asm["stackAlloc"];Runtime.stackSave=asm["stackSave"];Runtime.stackRestore=asm["stackRestore"];Runtime.setTempRet0=asm["setTempRet0"];Runtime.getTempRet0=asm["getTempRet0"];var i64Math=(function(){var goog={math:{}};goog.math.Long=(function(low,high){this.low_=low|0;this.high_=high|0});goog.math.Long.IntCache_={};goog.math.Long.fromInt=(function(value){if(-128<=value&&value<128){var cachedObj=goog.math.Long.IntCache_[value];if(cachedObj){return cachedObj}}var obj=new goog.math.Long(value|0,value<0?-1:0);if(-128<=value&&value<128){goog.math.Long.IntCache_[value]=obj}return obj});goog.math.Long.fromNumber=(function(value){if(isNaN(value)||!isFinite(value)){return goog.math.Long.ZERO}else if(value<=-goog.math.Long.TWO_PWR_63_DBL_){return goog.math.Long.MIN_VALUE}else if(value+1>=goog.math.Long.TWO_PWR_63_DBL_){return goog.math.Long.MAX_VALUE}else if(value<0){return goog.math.Long.fromNumber(-value).negate()}else{return new goog.math.Long(value%goog.math.Long.TWO_PWR_32_DBL_|0,value/goog.math.Long.TWO_PWR_32_DBL_|0)}});goog.math.Long.fromBits=(function(lowBits,highBits){return new goog.math.Long(lowBits,highBits)});goog.math.Long.fromString=(function(str,opt_radix){if(str.length==0){throw Error("number format error: empty string")}var radix=opt_radix||10;if(radix<2||36<radix){throw Error("radix out of range: "+radix)}if(str.charAt(0)=="-"){return goog.math.Long.fromString(str.substring(1),radix).negate()}else if(str.indexOf("-")>=0){throw Error('number format error: interior "-" character: '+str)}var radixToPower=goog.math.Long.fromNumber(Math.pow(radix,8));var result=goog.math.Long.ZERO;for(var i=0;i<str.length;i+=8){var size=Math.min(8,str.length-i);var value=parseInt(str.substring(i,i+size),radix);if(size<8){var power=goog.math.Long.fromNumber(Math.pow(radix,size));result=result.multiply(power).add(goog.math.Long.fromNumber(value))}else{result=result.multiply(radixToPower);result=result.add(goog.math.Long.fromNumber(value))}}return result});goog.math.Long.TWO_PWR_16_DBL_=1<<16;goog.math.Long.TWO_PWR_24_DBL_=1<<24;goog.math.Long.TWO_PWR_32_DBL_=goog.math.Long.TWO_PWR_16_DBL_*goog.math.Long.TWO_PWR_16_DBL_;goog.math.Long.TWO_PWR_31_DBL_=goog.math.Long.TWO_PWR_32_DBL_/2;goog.math.Long.TWO_PWR_48_DBL_=goog.math.Long.TWO_PWR_32_DBL_*goog.math.Long.TWO_PWR_16_DBL_;goog.math.Long.TWO_PWR_64_DBL_=goog.math.Long.TWO_PWR_32_DBL_*goog.math.Long.TWO_PWR_32_DBL_;goog.math.Long.TWO_PWR_63_DBL_=goog.math.Long.TWO_PWR_64_DBL_/2;goog.math.Long.ZERO=goog.math.Long.fromInt(0);goog.math.Long.ONE=goog.math.Long.fromInt(1);goog.math.Long.NEG_ONE=goog.math.Long.fromInt(-1);goog.math.Long.MAX_VALUE=goog.math.Long.fromBits(4294967295|0,2147483647|0);goog.math.Long.MIN_VALUE=goog.math.Long.fromBits(0,2147483648|0);goog.math.Long.TWO_PWR_24_=goog.math.Long.fromInt(1<<24);goog.math.Long.prototype.toInt=(function(){return this.low_});goog.math.Long.prototype.toNumber=(function(){return this.high_*goog.math.Long.TWO_PWR_32_DBL_+this.getLowBitsUnsigned()});goog.math.Long.prototype.toString=(function(opt_radix){var radix=opt_radix||10;if(radix<2||36<radix){throw Error("radix out of range: "+radix)}if(this.isZero()){return"0"}if(this.isNegative()){if(this.equals(goog.math.Long.MIN_VALUE)){var radixLong=goog.math.Long.fromNumber(radix);var div=this.div(radixLong);var rem=div.multiply(radixLong).subtract(this);return div.toString(radix)+rem.toInt().toString(radix)}else{return"-"+this.negate().toString(radix)}}var radixToPower=goog.math.Long.fromNumber(Math.pow(radix,6));var rem=this;var result="";while(true){var remDiv=rem.div(radixToPower);var intval=rem.subtract(remDiv.multiply(radixToPower)).toInt();var digits=intval.toString(radix);rem=remDiv;if(rem.isZero()){return digits+result}else{while(digits.length<6){digits="0"+digits}result=""+digits+result}}});goog.math.Long.prototype.getHighBits=(function(){return this.high_});goog.math.Long.prototype.getLowBits=(function(){return this.low_});goog.math.Long.prototype.getLowBitsUnsigned=(function(){return this.low_>=0?this.low_:goog.math.Long.TWO_PWR_32_DBL_+this.low_});goog.math.Long.prototype.getNumBitsAbs=(function(){if(this.isNegative()){if(this.equals(goog.math.Long.MIN_VALUE)){return 64}else{return this.negate().getNumBitsAbs()}}else{var val=this.high_!=0?this.high_:this.low_;for(var bit=31;bit>0;bit--){if((val&1<<bit)!=0){break}}return this.high_!=0?bit+33:bit+1}});goog.math.Long.prototype.isZero=(function(){return this.high_==0&&this.low_==0});goog.math.Long.prototype.isNegative=(function(){return this.high_<0});goog.math.Long.prototype.isOdd=(function(){return(this.low_&1)==1});goog.math.Long.prototype.equals=(function(other){return this.high_==other.high_&&this.low_==other.low_});goog.math.Long.prototype.notEquals=(function(other){return this.high_!=other.high_||this.low_!=other.low_});goog.math.Long.prototype.lessThan=(function(other){return this.compare(other)<0});goog.math.Long.prototype.lessThanOrEqual=(function(other){return this.compare(other)<=0});goog.math.Long.prototype.greaterThan=(function(other){return this.compare(other)>0});goog.math.Long.prototype.greaterThanOrEqual=(function(other){return this.compare(other)>=0});goog.math.Long.prototype.compare=(function(other){if(this.equals(other)){return 0}var thisNeg=this.isNegative();var otherNeg=other.isNegative();if(thisNeg&&!otherNeg){return-1}if(!thisNeg&&otherNeg){return 1}if(this.subtract(other).isNegative()){return-1}else{return 1}});goog.math.Long.prototype.negate=(function(){if(this.equals(goog.math.Long.MIN_VALUE)){return goog.math.Long.MIN_VALUE}else{return this.not().add(goog.math.Long.ONE)}});goog.math.Long.prototype.add=(function(other){var a48=this.high_>>>16;var a32=this.high_&65535;var a16=this.low_>>>16;var a00=this.low_&65535;var b48=other.high_>>>16;var b32=other.high_&65535;var b16=other.low_>>>16;var b00=other.low_&65535;var c48=0,c32=0,c16=0,c00=0;c00+=a00+b00;c16+=c00>>>16;c00&=65535;c16+=a16+b16;c32+=c16>>>16;c16&=65535;c32+=a32+b32;c48+=c32>>>16;c32&=65535;c48+=a48+b48;c48&=65535;return goog.math.Long.fromBits(c16<<16|c00,c48<<16|c32)});goog.math.Long.prototype.subtract=(function(other){return this.add(other.negate())});goog.math.Long.prototype.multiply=(function(other){if(this.isZero()){return goog.math.Long.ZERO}else if(other.isZero()){return goog.math.Long.ZERO}if(this.equals(goog.math.Long.MIN_VALUE)){return other.isOdd()?goog.math.Long.MIN_VALUE:goog.math.Long.ZERO}else if(other.equals(goog.math.Long.MIN_VALUE)){return this.isOdd()?goog.math.Long.MIN_VALUE:goog.math.Long.ZERO}if(this.isNegative()){if(other.isNegative()){return this.negate().multiply(other.negate())}else{return this.negate().multiply(other).negate()}}else if(other.isNegative()){return this.multiply(other.negate()).negate()}if(this.lessThan(goog.math.Long.TWO_PWR_24_)&&other.lessThan(goog.math.Long.TWO_PWR_24_)){return goog.math.Long.fromNumber(this.toNumber()*other.toNumber())}var a48=this.high_>>>16;var a32=this.high_&65535;var a16=this.low_>>>16;var a00=this.low_&65535;var b48=other.high_>>>16;var b32=other.high_&65535;var b16=other.low_>>>16;var b00=other.low_&65535;var c48=0,c32=0,c16=0,c00=0;c00+=a00*b00;c16+=c00>>>16;c00&=65535;c16+=a16*b00;c32+=c16>>>16;c16&=65535;c16+=a00*b16;c32+=c16>>>16;c16&=65535;c32+=a32*b00;c48+=c32>>>16;c32&=65535;c32+=a16*b16;c48+=c32>>>16;c32&=65535;c32+=a00*b32;c48+=c32>>>16;c32&=65535;c48+=a48*b00+a32*b16+a16*b32+a00*b48;c48&=65535;return goog.math.Long.fromBits(c16<<16|c00,c48<<16|c32)});goog.math.Long.prototype.div=(function(other){if(other.isZero()){throw Error("division by zero")}else if(this.isZero()){return goog.math.Long.ZERO}if(this.equals(goog.math.Long.MIN_VALUE)){if(other.equals(goog.math.Long.ONE)||other.equals(goog.math.Long.NEG_ONE)){return goog.math.Long.MIN_VALUE}else if(other.equals(goog.math.Long.MIN_VALUE)){return goog.math.Long.ONE}else{var halfThis=this.shiftRight(1);var approx=halfThis.div(other).shiftLeft(1);if(approx.equals(goog.math.Long.ZERO)){return other.isNegative()?goog.math.Long.ONE:goog.math.Long.NEG_ONE}else{var rem=this.subtract(other.multiply(approx));var result=approx.add(rem.div(other));return result}}}else if(other.equals(goog.math.Long.MIN_VALUE)){return goog.math.Long.ZERO}if(this.isNegative()){if(other.isNegative()){return this.negate().div(other.negate())}else{return this.negate().div(other).negate()}}else if(other.isNegative()){return this.div(other.negate()).negate()}var res=goog.math.Long.ZERO;var rem=this;while(rem.greaterThanOrEqual(other)){var approx=Math.max(1,Math.floor(rem.toNumber()/other.toNumber()));var log2=Math.ceil(Math.log(approx)/Math.LN2);var delta=log2<=48?1:Math.pow(2,log2-48);var approxRes=goog.math.Long.fromNumber(approx);var approxRem=approxRes.multiply(other);while(approxRem.isNegative()||approxRem.greaterThan(rem)){approx-=delta;approxRes=goog.math.Long.fromNumber(approx);approxRem=approxRes.multiply(other)}if(approxRes.isZero()){approxRes=goog.math.Long.ONE}res=res.add(approxRes);rem=rem.subtract(approxRem)}return res});goog.math.Long.prototype.modulo=(function(other){return this.subtract(this.div(other).multiply(other))});goog.math.Long.prototype.not=(function(){return goog.math.Long.fromBits(~this.low_,~this.high_)});goog.math.Long.prototype.and=(function(other){return goog.math.Long.fromBits(this.low_&other.low_,this.high_&other.high_)});goog.math.Long.prototype.or=(function(other){return goog.math.Long.fromBits(this.low_|other.low_,this.high_|other.high_)});goog.math.Long.prototype.xor=(function(other){return goog.math.Long.fromBits(this.low_^other.low_,this.high_^other.high_)});goog.math.Long.prototype.shiftLeft=(function(numBits){numBits&=63;if(numBits==0){return this}else{var low=this.low_;if(numBits<32){var high=this.high_;return goog.math.Long.fromBits(low<<numBits,high<<numBits|low>>>32-numBits)}else{return goog.math.Long.fromBits(0,low<<numBits-32)}}});goog.math.Long.prototype.shiftRight=(function(numBits){numBits&=63;if(numBits==0){return this}else{var high=this.high_;if(numBits<32){var low=this.low_;return goog.math.Long.fromBits(low>>>numBits|high<<32-numBits,high>>numBits)}else{return goog.math.Long.fromBits(high>>numBits-32,high>=0?0:-1)}}});goog.math.Long.prototype.shiftRightUnsigned=(function(numBits){numBits&=63;if(numBits==0){return this}else{var high=this.high_;if(numBits<32){var low=this.low_;return goog.math.Long.fromBits(low>>>numBits|high<<32-numBits,high>>>numBits)}else if(numBits==32){return goog.math.Long.fromBits(high,0)}else{return goog.math.Long.fromBits(high>>>numBits-32,0)}}});var navigator={appName:"Modern Browser"};var dbits;var canary=0xdeadbeefcafe;var j_lm=(canary&16777215)==15715070;function BigInteger(a,b,c){if(a!=null)if("number"==typeof a)this.fromNumber(a,b,c);else if(b==null&&"string"!=typeof a)this.fromString(a,256);else this.fromString(a,b)}function nbi(){return new BigInteger(null)}function am1(i,x,w,j,c,n){while(--n>=0){var v=x*this[i++]+w[j]+c;c=Math.floor(v/67108864);w[j++]=v&67108863}return c}function am2(i,x,w,j,c,n){var xl=x&32767,xh=x>>15;while(--n>=0){var l=this[i]&32767;var h=this[i++]>>15;var m=xh*l+h*xl;l=xl*l+((m&32767)<<15)+w[j]+(c&1073741823);c=(l>>>30)+(m>>>15)+xh*h+(c>>>30);w[j++]=l&1073741823}return c}function am3(i,x,w,j,c,n){var xl=x&16383,xh=x>>14;while(--n>=0){var l=this[i]&16383;var h=this[i++]>>14;var m=xh*l+h*xl;l=xl*l+((m&16383)<<14)+w[j]+c;c=(l>>28)+(m>>14)+xh*h;w[j++]=l&268435455}return c}if(j_lm&&navigator.appName=="Microsoft Internet Explorer"){BigInteger.prototype.am=am2;dbits=30}else if(j_lm&&navigator.appName!="Netscape"){BigInteger.prototype.am=am1;dbits=26}else{BigInteger.prototype.am=am3;dbits=28}BigInteger.prototype.DB=dbits;BigInteger.prototype.DM=(1<<dbits)-1;BigInteger.prototype.DV=1<<dbits;var BI_FP=52;BigInteger.prototype.FV=Math.pow(2,BI_FP);BigInteger.prototype.F1=BI_FP-dbits;BigInteger.prototype.F2=2*dbits-BI_FP;var BI_RM="0123456789abcdefghijklmnopqrstuvwxyz";var BI_RC=new Array;var rr,vv;rr="0".charCodeAt(0);for(vv=0;vv<=9;++vv)BI_RC[rr++]=vv;rr="a".charCodeAt(0);for(vv=10;vv<36;++vv)BI_RC[rr++]=vv;rr="A".charCodeAt(0);for(vv=10;vv<36;++vv)BI_RC[rr++]=vv;function int2char(n){return BI_RM.charAt(n)}function intAt(s,i){var c=BI_RC[s.charCodeAt(i)];return c==null?-1:c}function bnpCopyTo(r){for(var i=this.t-1;i>=0;--i)r[i]=this[i];r.t=this.t;r.s=this.s}function bnpFromInt(x){this.t=1;this.s=x<0?-1:0;if(x>0)this[0]=x;else if(x<-1)this[0]=x+DV;else this.t=0}function nbv(i){var r=nbi();r.fromInt(i);return r}function bnpFromString(s,b){var k;if(b==16)k=4;else if(b==8)k=3;else if(b==256)k=8;else if(b==2)k=1;else if(b==32)k=5;else if(b==4)k=2;else{this.fromRadix(s,b);return}this.t=0;this.s=0;var i=s.length,mi=false,sh=0;while(--i>=0){var x=k==8?s[i]&255:intAt(s,i);if(x<0){if(s.charAt(i)=="-")mi=true;continue}mi=false;if(sh==0)this[this.t++]=x;else if(sh+k>this.DB){this[this.t-1]|=(x&(1<<this.DB-sh)-1)<<sh;this[this.t++]=x>>this.DB-sh}else this[this.t-1]|=x<<sh;sh+=k;if(sh>=this.DB)sh-=this.DB}if(k==8&&(s[0]&128)!=0){this.s=-1;if(sh>0)this[this.t-1]|=(1<<this.DB-sh)-1<<sh}this.clamp();if(mi)BigInteger.ZERO.subTo(this,this)}function bnpClamp(){var c=this.s&this.DM;while(this.t>0&&this[this.t-1]==c)--this.t}function bnToString(b){if(this.s<0)return"-"+this.negate().toString(b);var k;if(b==16)k=4;else if(b==8)k=3;else if(b==2)k=1;else if(b==32)k=5;else if(b==4)k=2;else return this.toRadix(b);var km=(1<<k)-1,d,m=false,r="",i=this.t;var p=this.DB-i*this.DB%k;if(i-->0){if(p<this.DB&&(d=this[i]>>p)>0){m=true;r=int2char(d)}while(i>=0){if(p<k){d=(this[i]&(1<<p)-1)<<k-p;d|=this[--i]>>(p+=this.DB-k)}else{d=this[i]>>(p-=k)&km;if(p<=0){p+=this.DB;--i}}if(d>0)m=true;if(m)r+=int2char(d)}}return m?r:"0"}function bnNegate(){var r=nbi();BigInteger.ZERO.subTo(this,r);return r}function bnAbs(){return this.s<0?this.negate():this}function bnCompareTo(a){var r=this.s-a.s;if(r!=0)return r;var i=this.t;r=i-a.t;if(r!=0)return this.s<0?-r:r;while(--i>=0)if((r=this[i]-a[i])!=0)return r;return 0}function nbits(x){var r=1,t;if((t=x>>>16)!=0){x=t;r+=16}if((t=x>>8)!=0){x=t;r+=8}if((t=x>>4)!=0){x=t;r+=4}if((t=x>>2)!=0){x=t;r+=2}if((t=x>>1)!=0){x=t;r+=1}return r}function bnBitLength(){if(this.t<=0)return 0;return this.DB*(this.t-1)+nbits(this[this.t-1]^this.s&this.DM)}function bnpDLShiftTo(n,r){var i;for(i=this.t-1;i>=0;--i)r[i+n]=this[i];for(i=n-1;i>=0;--i)r[i]=0;r.t=this.t+n;r.s=this.s}function bnpDRShiftTo(n,r){for(var i=n;i<this.t;++i)r[i-n]=this[i];r.t=Math.max(this.t-n,0);r.s=this.s}function bnpLShiftTo(n,r){var bs=n%this.DB;var cbs=this.DB-bs;var bm=(1<<cbs)-1;var ds=Math.floor(n/this.DB),c=this.s<<bs&this.DM,i;for(i=this.t-1;i>=0;--i){r[i+ds+1]=this[i]>>cbs|c;c=(this[i]&bm)<<bs}for(i=ds-1;i>=0;--i)r[i]=0;r[ds]=c;r.t=this.t+ds+1;r.s=this.s;r.clamp()}function bnpRShiftTo(n,r){r.s=this.s;var ds=Math.floor(n/this.DB);if(ds>=this.t){r.t=0;return}var bs=n%this.DB;var cbs=this.DB-bs;var bm=(1<<bs)-1;r[0]=this[ds]>>bs;for(var i=ds+1;i<this.t;++i){r[i-ds-1]|=(this[i]&bm)<<cbs;r[i-ds]=this[i]>>bs}if(bs>0)r[this.t-ds-1]|=(this.s&bm)<<cbs;r.t=this.t-ds;r.clamp()}function bnpSubTo(a,r){var i=0,c=0,m=Math.min(a.t,this.t);while(i<m){c+=this[i]-a[i];r[i++]=c&this.DM;c>>=this.DB}if(a.t<this.t){c-=a.s;while(i<this.t){c+=this[i];r[i++]=c&this.DM;c>>=this.DB}c+=this.s}else{c+=this.s;while(i<a.t){c-=a[i];r[i++]=c&this.DM;c>>=this.DB}c-=a.s}r.s=c<0?-1:0;if(c<-1)r[i++]=this.DV+c;else if(c>0)r[i++]=c;r.t=i;r.clamp()}function bnpMultiplyTo(a,r){var x=this.abs(),y=a.abs();var i=x.t;r.t=i+y.t;while(--i>=0)r[i]=0;for(i=0;i<y.t;++i)r[i+x.t]=x.am(0,y[i],r,i,0,x.t);r.s=0;r.clamp();if(this.s!=a.s)BigInteger.ZERO.subTo(r,r)}function bnpSquareTo(r){var x=this.abs();var i=r.t=2*x.t;while(--i>=0)r[i]=0;for(i=0;i<x.t-1;++i){var c=x.am(i,x[i],r,2*i,0,1);if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1))>=x.DV){r[i+x.t]-=x.DV;r[i+x.t+1]=1}}if(r.t>0)r[r.t-1]+=x.am(i,x[i],r,2*i,0,1);r.s=0;r.clamp()}function bnpDivRemTo(m,q,r){var pm=m.abs();if(pm.t<=0)return;var pt=this.abs();if(pt.t<pm.t){if(q!=null)q.fromInt(0);if(r!=null)this.copyTo(r);return}if(r==null)r=nbi();var y=nbi(),ts=this.s,ms=m.s;var nsh=this.DB-nbits(pm[pm.t-1]);if(nsh>0){pm.lShiftTo(nsh,y);pt.lShiftTo(nsh,r)}else{pm.copyTo(y);pt.copyTo(r)}var ys=y.t;var y0=y[ys-1];if(y0==0)return;var yt=y0*(1<<this.F1)+(ys>1?y[ys-2]>>this.F2:0);var d1=this.FV/yt,d2=(1<<this.F1)/yt,e=1<<this.F2;var i=r.t,j=i-ys,t=q==null?nbi():q;y.dlShiftTo(j,t);if(r.compareTo(t)>=0){r[r.t++]=1;r.subTo(t,r)}BigInteger.ONE.dlShiftTo(ys,t);t.subTo(y,y);while(y.t<ys)y[y.t++]=0;while(--j>=0){var qd=r[--i]==y0?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);if((r[i]+=y.am(0,qd,r,j,0,ys))<qd){y.dlShiftTo(j,t);r.subTo(t,r);while(r[i]<--qd)r.subTo(t,r)}}if(q!=null){r.drShiftTo(ys,q);if(ts!=ms)BigInteger.ZERO.subTo(q,q)}r.t=ys;r.clamp();if(nsh>0)r.rShiftTo(nsh,r);if(ts<0)BigInteger.ZERO.subTo(r,r)}function bnMod(a){var r=nbi();this.abs().divRemTo(a,null,r);if(this.s<0&&r.compareTo(BigInteger.ZERO)>0)a.subTo(r,r);return r}function Classic(m){this.m=m}function cConvert(x){if(x.s<0||x.compareTo(this.m)>=0)return x.mod(this.m);else return x}function cRevert(x){return x}function cReduce(x){x.divRemTo(this.m,null,x)}function cMulTo(x,y,r){x.multiplyTo(y,r);this.reduce(r)}function cSqrTo(x,r){x.squareTo(r);this.reduce(r)}Classic.prototype.convert=cConvert;Classic.prototype.revert=cRevert;Classic.prototype.reduce=cReduce;Classic.prototype.mulTo=cMulTo;Classic.prototype.sqrTo=cSqrTo;function bnpInvDigit(){if(this.t<1)return 0;var x=this[0];if((x&1)==0)return 0;var y=x&3;y=y*(2-(x&15)*y)&15;y=y*(2-(x&255)*y)&255;y=y*(2-((x&65535)*y&65535))&65535;y=y*(2-x*y%this.DV)%this.DV;return y>0?this.DV-y:-y}function Montgomery(m){this.m=m;this.mp=m.invDigit();this.mpl=this.mp&32767;this.mph=this.mp>>15;this.um=(1<<m.DB-15)-1;this.mt2=2*m.t}function montConvert(x){var r=nbi();x.abs().dlShiftTo(this.m.t,r);r.divRemTo(this.m,null,r);if(x.s<0&&r.compareTo(BigInteger.ZERO)>0)this.m.subTo(r,r);return r}function montRevert(x){var r=nbi();x.copyTo(r);this.reduce(r);return r}function montReduce(x){while(x.t<=this.mt2)x[x.t++]=0;for(var i=0;i<this.m.t;++i){var j=x[i]&32767;var u0=j*this.mpl+((j*this.mph+(x[i]>>15)*this.mpl&this.um)<<15)&x.DM;j=i+this.m.t;x[j]+=this.m.am(0,u0,x,i,0,this.m.t);while(x[j]>=x.DV){x[j]-=x.DV;x[++j]++}}x.clamp();x.drShiftTo(this.m.t,x);if(x.compareTo(this.m)>=0)x.subTo(this.m,x)}function montSqrTo(x,r){x.squareTo(r);this.reduce(r)}function montMulTo(x,y,r){x.multiplyTo(y,r);this.reduce(r)}Montgomery.prototype.convert=montConvert;Montgomery.prototype.revert=montRevert;Montgomery.prototype.reduce=montReduce;Montgomery.prototype.mulTo=montMulTo;Montgomery.prototype.sqrTo=montSqrTo;function bnpIsEven(){return(this.t>0?this[0]&1:this.s)==0}function bnpExp(e,z){if(e>4294967295||e<1)return BigInteger.ONE;var r=nbi(),r2=nbi(),g=z.convert(this),i=nbits(e)-1;g.copyTo(r);while(--i>=0){z.sqrTo(r,r2);if((e&1<<i)>0)z.mulTo(r2,g,r);else{var t=r;r=r2;r2=t}}return z.revert(r)}function bnModPowInt(e,m){var z;if(e<256||m.isEven())z=new Classic(m);else z=new Montgomery(m);return this.exp(e,z)}BigInteger.prototype.copyTo=bnpCopyTo;BigInteger.prototype.fromInt=bnpFromInt;BigInteger.prototype.fromString=bnpFromString;BigInteger.prototype.clamp=bnpClamp;BigInteger.prototype.dlShiftTo=bnpDLShiftTo;BigInteger.prototype.drShiftTo=bnpDRShiftTo;BigInteger.prototype.lShiftTo=bnpLShiftTo;BigInteger.prototype.rShiftTo=bnpRShiftTo;BigInteger.prototype.subTo=bnpSubTo;BigInteger.prototype.multiplyTo=bnpMultiplyTo;BigInteger.prototype.squareTo=bnpSquareTo;BigInteger.prototype.divRemTo=bnpDivRemTo;BigInteger.prototype.invDigit=bnpInvDigit;BigInteger.prototype.isEven=bnpIsEven;BigInteger.prototype.exp=bnpExp;BigInteger.prototype.toString=bnToString;BigInteger.prototype.negate=bnNegate;BigInteger.prototype.abs=bnAbs;BigInteger.prototype.compareTo=bnCompareTo;BigInteger.prototype.bitLength=bnBitLength;BigInteger.prototype.mod=bnMod;BigInteger.prototype.modPowInt=bnModPowInt;BigInteger.ZERO=nbv(0);BigInteger.ONE=nbv(1);function bnpFromRadix(s,b){this.fromInt(0);if(b==null)b=10;var cs=this.chunkSize(b);var d=Math.pow(b,cs),mi=false,j=0,w=0;for(var i=0;i<s.length;++i){var x=intAt(s,i);if(x<0){if(s.charAt(i)=="-"&&this.signum()==0)mi=true;continue}w=b*w+x;if(++j>=cs){this.dMultiply(d);this.dAddOffset(w,0);j=0;w=0}}if(j>0){this.dMultiply(Math.pow(b,j));this.dAddOffset(w,0)}if(mi)BigInteger.ZERO.subTo(this,this)}function bnpChunkSize(r){return Math.floor(Math.LN2*this.DB/Math.log(r))}function bnSigNum(){if(this.s<0)return-1;else if(this.t<=0||this.t==1&&this[0]<=0)return 0;else return 1}function bnpDMultiply(n){this[this.t]=this.am(0,n-1,this,0,0,this.t);++this.t;this.clamp()}function bnpDAddOffset(n,w){if(n==0)return;while(this.t<=w)this[this.t++]=0;this[w]+=n;while(this[w]>=this.DV){this[w]-=this.DV;if(++w>=this.t)this[this.t++]=0;++this[w]}}function bnpToRadix(b){if(b==null)b=10;if(this.signum()==0||b<2||b>36)return"0";var cs=this.chunkSize(b);var a=Math.pow(b,cs);var d=nbv(a),y=nbi(),z=nbi(),r="";this.divRemTo(d,y,z);while(y.signum()>0){r=(a+z.intValue()).toString(b).substr(1)+r;y.divRemTo(d,y,z)}return z.intValue().toString(b)+r}function bnIntValue(){if(this.s<0){if(this.t==1)return this[0]-this.DV;else if(this.t==0)return-1}else if(this.t==1)return this[0];else if(this.t==0)return 0;return(this[1]&(1<<32-this.DB)-1)<<this.DB|this[0]}function bnpAddTo(a,r){var i=0,c=0,m=Math.min(a.t,this.t);while(i<m){c+=this[i]+a[i];r[i++]=c&this.DM;c>>=this.DB}if(a.t<this.t){c+=a.s;while(i<this.t){c+=this[i];r[i++]=c&this.DM;c>>=this.DB}c+=this.s}else{c+=this.s;while(i<a.t){c+=a[i];r[i++]=c&this.DM;c>>=this.DB}c+=a.s}r.s=c<0?-1:0;if(c>0)r[i++]=c;else if(c<-1)r[i++]=this.DV+c;r.t=i;r.clamp()}BigInteger.prototype.fromRadix=bnpFromRadix;BigInteger.prototype.chunkSize=bnpChunkSize;BigInteger.prototype.signum=bnSigNum;BigInteger.prototype.dMultiply=bnpDMultiply;BigInteger.prototype.dAddOffset=bnpDAddOffset;BigInteger.prototype.toRadix=bnpToRadix;BigInteger.prototype.intValue=bnIntValue;BigInteger.prototype.addTo=bnpAddTo;var Wrapper={abs:(function(l,h){var x=new goog.math.Long(l,h);var ret;if(x.isNegative()){ret=x.negate()}else{ret=x}HEAP32[tempDoublePtr>>2]=ret.low_;HEAP32[tempDoublePtr+4>>2]=ret.high_}),ensureTemps:(function(){if(Wrapper.ensuredTemps)return;Wrapper.ensuredTemps=true;Wrapper.two32=new BigInteger;Wrapper.two32.fromString("4294967296",10);Wrapper.two64=new BigInteger;Wrapper.two64.fromString("18446744073709551616",10);Wrapper.temp1=new BigInteger;Wrapper.temp2=new BigInteger}),lh2bignum:(function(l,h){var a=new BigInteger;a.fromString(h.toString(),10);var b=new BigInteger;a.multiplyTo(Wrapper.two32,b);var c=new BigInteger;c.fromString(l.toString(),10);var d=new BigInteger;c.addTo(b,d);return d}),stringify:(function(l,h,unsigned){var ret=(new goog.math.Long(l,h)).toString();if(unsigned&&ret[0]=="-"){Wrapper.ensureTemps();var bignum=new BigInteger;bignum.fromString(ret,10);ret=new BigInteger;Wrapper.two64.addTo(bignum,ret);ret=ret.toString(10)}return ret}),fromString:(function(str,base,min,max,unsigned){Wrapper.ensureTemps();var bignum=new BigInteger;bignum.fromString(str,base);var bigmin=new BigInteger;bigmin.fromString(min,10);var bigmax=new BigInteger;bigmax.fromString(max,10);if(unsigned&&bignum.compareTo(BigInteger.ZERO)<0){var temp=new BigInteger;bignum.addTo(Wrapper.two64,temp);bignum=temp}var error=false;if(bignum.compareTo(bigmin)<0){bignum=bigmin;error=true}else if(bignum.compareTo(bigmax)>0){bignum=bigmax;error=true}var ret=goog.math.Long.fromString(bignum.toString());HEAP32[tempDoublePtr>>2]=ret.low_;HEAP32[tempDoublePtr+4>>2]=ret.high_;if(error)throw"range error"})};return Wrapper})();if(memoryInitializer){if(typeof Module["locateFile"]==="function"){memoryInitializer=Module["locateFile"](memoryInitializer)}else if(Module["memoryInitializerPrefixURL"]){memoryInitializer=Module["memoryInitializerPrefixURL"]+memoryInitializer}if(ENVIRONMENT_IS_NODE||ENVIRONMENT_IS_SHELL){var data=Module["readBinary"](memoryInitializer);HEAPU8.set(data,STATIC_BASE)}else{addRunDependency("memory initializer");function applyMemoryInitializer(data){if(data.byteLength)data=new Uint8Array(data);HEAPU8.set(data,STATIC_BASE);removeRunDependency("memory initializer")}var request=Module["memoryInitializerRequest"];if(request){if(request.response){setTimeout((function(){applyMemoryInitializer(request.response)}),0)}else{request.addEventListener("load",(function(){if(request.status!==200&&request.status!==0){console.warn("a problem seems to have happened with Module.memoryInitializerRequest, status: "+request.status)}if(!request.response||typeof request.response!=="object"||!request.response.byteLength){console.warn("a problem seems to have happened with Module.memoryInitializerRequest response (expected ArrayBuffer): "+request.response)}applyMemoryInitializer(request.response)}))}}else{Browser.asyncLoad(memoryInitializer,applyMemoryInitializer,(function(){throw"could not load memory initializer "+memoryInitializer}))}}}function ExitStatus(status){this.name="ExitStatus";this.message="Program terminated with exit("+status+")";this.status=status}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;var initialStackTop;var preloadStartTime=null;var calledMain=false;dependenciesFulfilled=function runCaller(){if(!Module["calledRun"])run();if(!Module["calledRun"])dependenciesFulfilled=runCaller};Module["callMain"]=Module.callMain=function callMain(args){assert(runDependencies==0,"cannot call main when async dependencies remain! (listen on __ATMAIN__)");assert(__ATPRERUN__.length==0,"cannot call main when preRun functions remain to be called");args=args||[];ensureInitRuntime();var argc=args.length+1;function pad(){for(var i=0;i<4-1;i++){argv.push(0)}}var argv=[allocate(intArrayFromString(Module["thisProgram"]),"i8",ALLOC_NORMAL)];pad();for(var i=0;i<argc-1;i=i+1){argv.push(allocate(intArrayFromString(args[i]),"i8",ALLOC_NORMAL));pad()}argv.push(0);argv=allocate(argv,"i32",ALLOC_NORMAL);initialStackTop=STACKTOP;try{var ret=Module["_main"](argc,argv,0);exit(ret)}catch(e){if(e instanceof ExitStatus){return}else if(e=="SimulateInfiniteLoop"){Module["noExitRuntime"]=true;return}else{if(e&&typeof e==="object"&&e.stack)Module.printErr("exception thrown: "+[e,e.stack]);throw e}}finally{calledMain=true}};function run(args){args=args||Module["arguments"];if(preloadStartTime===null)preloadStartTime=Date.now();if(runDependencies>0){return}preRun();if(runDependencies>0)return;if(Module["calledRun"])return;function doRun(){if(Module["calledRun"])return;Module["calledRun"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(ENVIRONMENT_IS_WEB&&preloadStartTime!==null){Module.printErr("pre-main prep time: "+(Date.now()-preloadStartTime)+" ms")}if(Module["onRuntimeInitialized"])Module["onRuntimeInitialized"]();if(Module["_main"]&&shouldRunNow)Module["callMain"](args);postRun()}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout((function(){setTimeout((function(){Module["setStatus"]("")}),1);doRun()}),1)}else{doRun()}}Module["run"]=Module.run=run;function exit(status){if(Module["noExitRuntime"]){return}ABORT=true;EXITSTATUS=status;STACKTOP=initialStackTop;exitRuntime();if(Module["onExit"])Module["onExit"](status);if(ENVIRONMENT_IS_NODE){process["stdout"]["once"]("drain",(function(){process["exit"](status)}));console.log(" ");setTimeout((function(){process["exit"](status)}),500)}else if(ENVIRONMENT_IS_SHELL&&typeof quit==="function"){quit(status)}throw new ExitStatus(status)}Module["exit"]=Module.exit=exit;var abortDecorators=[];function abort(what){if(what!==undefined){Module.print(what);Module.printErr(what);what=JSON.stringify(what)}else{what=""}ABORT=true;EXITSTATUS=1;var extra="\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.";var output="abort("+what+") at "+stackTrace()+extra;abortDecorators.forEach((function(decorator){output=decorator(output,what)}));throw output}Module["abort"]=Module.abort=abort;if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].pop()()}}var shouldRunNow=true;if(Module["noInitialRun"]){shouldRunNow=false}run()





}).call(this,require('_process'),require("buffer").Buffer,"/node_modules/vtf/src")
},{"_process":155,"buffer":9,"crypto":13,"fs":7,"path":154,"pica/lib/pure/resize":2}],6:[function(require,module,exports){
var vtf = require('vtf');

self.onmessage = function (e) {
	var targetData = vtf.fromRGBA(e.data.data, e.data.size, e.data.size);
	postMessage(targetData);
};

},{"vtf":4}],7:[function(require,module,exports){

},{}],8:[function(require,module,exports){
arguments[4][7][0].apply(exports,arguments)
},{"dup":7}],9:[function(require,module,exports){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */

var base64 = require('base64-js')
var ieee754 = require('ieee754')
var isArray = require('is-array')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50
Buffer.poolSize = 8192 // not used by this implementation

var kMaxLength = 0x3fffffff
var rootParent = {}

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Note:
 *
 * - Implementation must support adding new properties to `Uint8Array` instances.
 *   Firefox 4-29 lacked support, fixed in Firefox 30+.
 *   See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *  - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *  - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *    incorrect length in some situations.
 *
 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they will
 * get the Object implementation, which is slower but will work correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = (function () {
  try {
    var buf = new ArrayBuffer(0)
    var arr = new Uint8Array(buf)
    arr.foo = function () { return 42 }
    return 42 === arr.foo() && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        new Uint8Array(1).subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
})()

/**
 * Class: Buffer
 * =============
 *
 * The Buffer constructor returns instances of `Uint8Array` that are augmented
 * with function properties for all the node `Buffer` API functions. We use
 * `Uint8Array` so that square bracket notation works as expected -- it returns
 * a single octet.
 *
 * By augmenting the instances, we can avoid modifying the `Uint8Array`
 * prototype.
 */
function Buffer (subject, encoding, noZero) {
  if (!(this instanceof Buffer))
    return new Buffer(subject, encoding, noZero)

  var type = typeof subject

  // Find the length
  var length
  if (type === 'number')
    length = subject > 0 ? subject >>> 0 : 0
  else if (type === 'string') {
    length = Buffer.byteLength(subject, encoding)
  } else if (type === 'object' && subject !== null) { // assume object is array-like
    if (subject.type === 'Buffer' && isArray(subject.data))
      subject = subject.data
    length = +subject.length > 0 ? Math.floor(+subject.length) : 0
  } else
    throw new TypeError('must start with number, buffer, array or string')

  if (length > kMaxLength)
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
      'size: 0x' + kMaxLength.toString(16) + ' bytes')

  var buf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Preferred: Return an augmented `Uint8Array` instance for best performance
    buf = Buffer._augment(new Uint8Array(length))
  } else {
    // Fallback: Return THIS instance of Buffer (created by `new`)
    buf = this
    buf.length = length
    buf._isBuffer = true
  }

  var i
  if (Buffer.TYPED_ARRAY_SUPPORT && typeof subject.byteLength === 'number') {
    // Speed optimization -- use set if we're copying from a typed array
    buf._set(subject)
  } else if (isArrayish(subject)) {
    // Treat array-ish objects as a byte array
    if (Buffer.isBuffer(subject)) {
      for (i = 0; i < length; i++)
        buf[i] = subject.readUInt8(i)
    } else {
      for (i = 0; i < length; i++)
        buf[i] = ((subject[i] % 256) + 256) % 256
    }
  } else if (type === 'string') {
    buf.write(subject, 0, encoding)
  } else if (type === 'number' && !Buffer.TYPED_ARRAY_SUPPORT && !noZero) {
    for (i = 0; i < length; i++) {
      buf[i] = 0
    }
  }

  if (length > 0 && length <= Buffer.poolSize)
    buf.parent = rootParent

  return buf
}

function SlowBuffer(subject, encoding, noZero) {
  if (!(this instanceof SlowBuffer))
    return new SlowBuffer(subject, encoding, noZero)

  var buf = new Buffer(subject, encoding, noZero)
  delete buf.parent
  return buf
}

Buffer.isBuffer = function (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b))
    throw new TypeError('Arguments must be Buffers')

  var x = a.length
  var y = b.length
  for (var i = 0, len = Math.min(x, y); i < len && a[i] === b[i]; i++) {}
  if (i !== len) {
    x = a[i]
    y = b[i]
  }
  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'binary':
    case 'base64':
    case 'raw':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function (list, totalLength) {
  if (!isArray(list)) throw new TypeError('Usage: Buffer.concat(list[, length])')

  if (list.length === 0) {
    return new Buffer(0)
  } else if (list.length === 1) {
    return list[0]
  }

  var i
  if (totalLength === undefined) {
    totalLength = 0
    for (i = 0; i < list.length; i++) {
      totalLength += list[i].length
    }
  }

  var buf = new Buffer(totalLength)
  var pos = 0
  for (i = 0; i < list.length; i++) {
    var item = list[i]
    item.copy(buf, pos)
    pos += item.length
  }
  return buf
}

Buffer.byteLength = function (str, encoding) {
  var ret
  str = str + ''
  switch (encoding || 'utf8') {
    case 'ascii':
    case 'binary':
    case 'raw':
      ret = str.length
      break
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      ret = str.length * 2
      break
    case 'hex':
      ret = str.length >>> 1
      break
    case 'utf8':
    case 'utf-8':
      ret = utf8ToBytes(str).length
      break
    case 'base64':
      ret = base64ToBytes(str).length
      break
    default:
      ret = str.length
  }
  return ret
}

// pre-set for values that may exist in the future
Buffer.prototype.length = undefined
Buffer.prototype.parent = undefined

// toString(encoding, start=0, end=buffer.length)
Buffer.prototype.toString = function (encoding, start, end) {
  var loweredCase = false

  start = start >>> 0
  end = end === undefined || end === Infinity ? this.length : end >>> 0

  if (!encoding) encoding = 'utf8'
  if (start < 0) start = 0
  if (end > this.length) end = this.length
  if (end <= start) return ''

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'binary':
        return binarySlice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase)
          throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.equals = function (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max)
      str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  return Buffer.compare(this, b)
}

// `get` will be removed in Node 0.13+
Buffer.prototype.get = function (offset) {
  console.log('.get() is deprecated. Access using array indexes instead.')
  return this.readUInt8(offset)
}

// `set` will be removed in Node 0.13+
Buffer.prototype.set = function (v, offset) {
  console.log('.set() is deprecated. Access using array indexes instead.')
  return this.writeUInt8(v, offset)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new Error('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; i++) {
    var byte = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(byte)) throw new Error('Invalid hex string')
    buf[offset + i] = byte
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  var charsWritten = blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
  return charsWritten
}

function asciiWrite (buf, string, offset, length) {
  var charsWritten = blitBuffer(asciiToBytes(string), buf, offset, length)
  return charsWritten
}

function binaryWrite (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  var charsWritten = blitBuffer(base64ToBytes(string), buf, offset, length)
  return charsWritten
}

function utf16leWrite (buf, string, offset, length) {
  var charsWritten = blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length, 2)
  return charsWritten
}

Buffer.prototype.write = function (string, offset, length, encoding) {
  // Support both (string, offset, length, encoding)
  // and the legacy (string, encoding, offset, length)
  if (isFinite(offset)) {
    if (!isFinite(length)) {
      encoding = length
      length = undefined
    }
  } else {  // legacy
    var swap = encoding
    encoding = offset
    offset = length
    length = swap
  }

  offset = Number(offset) || 0

  if (length < 0 || offset < 0 || offset > this.length)
    throw new RangeError('attempt to write outside buffer bounds');

  var remaining = this.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }
  encoding = String(encoding || 'utf8').toLowerCase()

  var ret
  switch (encoding) {
    case 'hex':
      ret = hexWrite(this, string, offset, length)
      break
    case 'utf8':
    case 'utf-8':
      ret = utf8Write(this, string, offset, length)
      break
    case 'ascii':
      ret = asciiWrite(this, string, offset, length)
      break
    case 'binary':
      ret = binaryWrite(this, string, offset, length)
      break
    case 'base64':
      ret = base64Write(this, string, offset, length)
      break
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      ret = utf16leWrite(this, string, offset, length)
      break
    default:
      throw new TypeError('Unknown encoding: ' + encoding)
  }
  return ret
}

Buffer.prototype.toJSON = function () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  var res = ''
  var tmp = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; i++) {
    if (buf[i] <= 0x7F) {
      res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i])
      tmp = ''
    } else {
      tmp += '%' + buf[i].toString(16)
    }
  }

  return res + decodeUtf8Char(tmp)
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; i++) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function binarySlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; i++) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; i++) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len;
    if (start < 0)
      start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0)
      end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start)
    end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = Buffer._augment(this.subarray(start, end))
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined, true)
    for (var i = 0; i < sliceLen; i++) {
      newBuf[i] = this[i + start]
    }
  }

  if (newBuf.length)
    newBuf.parent = this.parent || this

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0)
    throw new RangeError('offset is not uint')
  if (offset + ext > length)
    throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert)
    checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100))
    val += this[offset + i] * mul

  return val
}

Buffer.prototype.readUIntBE = function (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert)
    checkOffset(offset, byteLength, this.length)

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100))
    val += this[offset + --byteLength] * mul;

  return val
}

Buffer.prototype.readUInt8 = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
      ((this[offset + 1] << 16) |
      (this[offset + 2] << 8) |
      this[offset + 3])
}

Buffer.prototype.readIntLE = function (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert)
    checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100))
    val += this[offset + i] * mul
  mul *= 0x80

  if (val >= mul)
    val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert)
    checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100))
    val += this[offset + --i] * mul
  mul *= 0x80

  if (val >= mul)
    val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80))
    return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 4, this.length)

  return (this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16) |
      (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
      (this[offset + 1] << 16) |
      (this[offset + 2] << 8) |
      (this[offset + 3])
}

Buffer.prototype.readFloatLE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('value is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('index out of range')
}

Buffer.prototype.writeUIntLE = function (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert)
    checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100))
    this[offset + i] = (value / mul) >>> 0 & 0xFF

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert)
    checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100))
    this[offset + i] = (value / mul) >>> 0 & 0xFF

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert)
    checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = value
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert)
    checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = value
    this[offset + 1] = (value >>> 8)
  } else objectWriteUInt16(this, value, offset, true)
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert)
    checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = value
  } else objectWriteUInt16(this, value, offset, false)
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert)
    checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = value
  } else objectWriteUInt32(this, value, offset, true)
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert)
    checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = value
  } else objectWriteUInt32(this, value, offset, false)
  return offset + 4
}

Buffer.prototype.writeIntLE = function (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkInt(this,
             value,
             offset,
             byteLength,
             Math.pow(2, 8 * byteLength - 1) - 1,
             -Math.pow(2, 8 * byteLength - 1))
  }

  var i = 0
  var mul = 1
  var sub = value < 0 ? 1 : 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100))
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkInt(this,
             value,
             offset,
             byteLength,
             Math.pow(2, 8 * byteLength - 1) - 1,
             -Math.pow(2, 8 * byteLength - 1))
  }

  var i = byteLength - 1
  var mul = 1
  var sub = value < 0 ? 1 : 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100))
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert)
    checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = value
  return offset + 1
}

Buffer.prototype.writeInt16LE = function (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert)
    checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = value
    this[offset + 1] = (value >>> 8)
  } else objectWriteUInt16(this, value, offset, true)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert)
    checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = value
  } else objectWriteUInt16(this, value, offset, false)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert)
    checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = value
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else objectWriteUInt32(this, value, offset, true)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert)
    checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = value
  } else objectWriteUInt32(this, value, offset, false)
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (value > max || value < min) throw new RangeError('value is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('index out of range')
  if (offset < 0) throw new RangeError('index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert)
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert)
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function (target, target_start, start, end) {
  var source = this

  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (target_start >= target.length) target_start = target.length
  if (!target_start) target_start = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || source.length === 0) return 0

  // Fatal error conditions
  if (target_start < 0)
    throw new RangeError('targetStart out of bounds')
  if (start < 0 || start >= source.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length)
    end = this.length
  if (target.length - target_start < end - start)
    end = target.length - target_start + start

  var len = end - start

  if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < len; i++) {
      target[i + target_start] = this[i + start]
    }
  } else {
    target._set(this.subarray(start, start + len), target_start)
  }

  return len
}

// fill(value, start=0, end=buffer.length)
Buffer.prototype.fill = function (value, start, end) {
  if (!value) value = 0
  if (!start) start = 0
  if (!end) end = this.length

  if (end < start) throw new RangeError('end < start')

  // Fill 0 bytes; we're done
  if (end === start) return
  if (this.length === 0) return

  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')
  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')

  var i
  if (typeof value === 'number') {
    for (i = start; i < end; i++) {
      this[i] = value
    }
  } else {
    var bytes = utf8ToBytes(value.toString())
    var len = bytes.length
    for (i = start; i < end; i++) {
      this[i] = bytes[i % len]
    }
  }

  return this
}

/**
 * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.
 * Added in Node 0.12. Only available in browsers that support ArrayBuffer.
 */
Buffer.prototype.toArrayBuffer = function () {
  if (typeof Uint8Array !== 'undefined') {
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      return (new Buffer(this)).buffer
    } else {
      var buf = new Uint8Array(this.length)
      for (var i = 0, len = buf.length; i < len; i += 1) {
        buf[i] = this[i]
      }
      return buf.buffer
    }
  } else {
    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')
  }
}

// HELPER FUNCTIONS
// ================

var BP = Buffer.prototype

/**
 * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods
 */
Buffer._augment = function (arr) {
  arr.constructor = Buffer
  arr._isBuffer = true

  // save reference to original Uint8Array get/set methods before overwriting
  arr._get = arr.get
  arr._set = arr.set

  // deprecated, will be removed in node 0.13+
  arr.get = BP.get
  arr.set = BP.set

  arr.write = BP.write
  arr.toString = BP.toString
  arr.toLocaleString = BP.toString
  arr.toJSON = BP.toJSON
  arr.equals = BP.equals
  arr.compare = BP.compare
  arr.copy = BP.copy
  arr.slice = BP.slice
  arr.readUIntLE = BP.readUIntLE
  arr.readUIntBE = BP.readUIntBE
  arr.readUInt8 = BP.readUInt8
  arr.readUInt16LE = BP.readUInt16LE
  arr.readUInt16BE = BP.readUInt16BE
  arr.readUInt32LE = BP.readUInt32LE
  arr.readUInt32BE = BP.readUInt32BE
  arr.readIntLE = BP.readIntLE
  arr.readIntBE = BP.readIntBE
  arr.readInt8 = BP.readInt8
  arr.readInt16LE = BP.readInt16LE
  arr.readInt16BE = BP.readInt16BE
  arr.readInt32LE = BP.readInt32LE
  arr.readInt32BE = BP.readInt32BE
  arr.readFloatLE = BP.readFloatLE
  arr.readFloatBE = BP.readFloatBE
  arr.readDoubleLE = BP.readDoubleLE
  arr.readDoubleBE = BP.readDoubleBE
  arr.writeUInt8 = BP.writeUInt8
  arr.writeUIntLE = BP.writeUIntLE
  arr.writeUIntBE = BP.writeUIntBE
  arr.writeUInt16LE = BP.writeUInt16LE
  arr.writeUInt16BE = BP.writeUInt16BE
  arr.writeUInt32LE = BP.writeUInt32LE
  arr.writeUInt32BE = BP.writeUInt32BE
  arr.writeIntLE = BP.writeIntLE
  arr.writeIntBE = BP.writeIntBE
  arr.writeInt8 = BP.writeInt8
  arr.writeInt16LE = BP.writeInt16LE
  arr.writeInt16BE = BP.writeInt16BE
  arr.writeInt32LE = BP.writeInt32LE
  arr.writeInt32BE = BP.writeInt32BE
  arr.writeFloatLE = BP.writeFloatLE
  arr.writeFloatBE = BP.writeFloatBE
  arr.writeDoubleLE = BP.writeDoubleLE
  arr.writeDoubleBE = BP.writeDoubleBE
  arr.fill = BP.fill
  arr.inspect = BP.inspect
  arr.toArrayBuffer = BP.toArrayBuffer

  return arr
}

var INVALID_BASE64_RE = /[^+\/0-9A-z\-]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function isArrayish (subject) {
  return isArray(subject) || Buffer.isBuffer(subject) ||
      subject && typeof subject === 'object' &&
      typeof subject.length === 'number'
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes(string, units) {
  var codePoint, length = string.length
  var leadSurrogate = null
  units = units || Infinity
  var bytes = []
  var i = 0

  for (; i<length; i++) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {

      // last char was a lead
      if (leadSurrogate) {

        // 2 leads in a row
        if (codePoint < 0xDC00) {
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          leadSurrogate = codePoint
          continue
        }

        // valid surrogate pair
        else {
          codePoint = leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00 | 0x10000
          leadSurrogate = null
        }
      }

      // no lead yet
      else {

        // unexpected trail
        if (codePoint > 0xDBFF) {
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // unpaired lead
        else if (i + 1 === length) {
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        else {
          leadSurrogate = codePoint
          continue
        }
      }
    }

    // valid bmp char, but last char was a lead
    else if (leadSurrogate) {
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
      leadSurrogate = null
    }

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    }
    else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      );
    }
    else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      );
    }
    else if (codePoint < 0x200000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      );
    }
    else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; i++) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; i++) {

    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length, unitSize) {
  if (unitSize) length -= length % unitSize;
  for (var i = 0; i < length; i++) {
    if ((i + offset >= dst.length) || (i >= src.length))
      break
    dst[i + offset] = src[i]
  }
  return i
}

function decodeUtf8Char (str) {
  try {
    return decodeURIComponent(str)
  } catch (err) {
    return String.fromCharCode(0xFFFD) // UTF 8 invalid char
  }
}

},{"base64-js":10,"ieee754":11,"is-array":12}],10:[function(require,module,exports){
var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

;(function (exports) {
	'use strict';

  var Arr = (typeof Uint8Array !== 'undefined')
    ? Uint8Array
    : Array

	var PLUS   = '+'.charCodeAt(0)
	var SLASH  = '/'.charCodeAt(0)
	var NUMBER = '0'.charCodeAt(0)
	var LOWER  = 'a'.charCodeAt(0)
	var UPPER  = 'A'.charCodeAt(0)
	var PLUS_URL_SAFE = '-'.charCodeAt(0)
	var SLASH_URL_SAFE = '_'.charCodeAt(0)

	function decode (elt) {
		var code = elt.charCodeAt(0)
		if (code === PLUS ||
		    code === PLUS_URL_SAFE)
			return 62 // '+'
		if (code === SLASH ||
		    code === SLASH_URL_SAFE)
			return 63 // '/'
		if (code < NUMBER)
			return -1 //no match
		if (code < NUMBER + 10)
			return code - NUMBER + 26 + 26
		if (code < UPPER + 26)
			return code - UPPER
		if (code < LOWER + 26)
			return code - LOWER + 26
	}

	function b64ToByteArray (b64) {
		var i, j, l, tmp, placeHolders, arr

		if (b64.length % 4 > 0) {
			throw new Error('Invalid string. Length must be a multiple of 4')
		}

		// the number of equal signs (place holders)
		// if there are two placeholders, than the two characters before it
		// represent one byte
		// if there is only one, then the three characters before it represent 2 bytes
		// this is just a cheap hack to not do indexOf twice
		var len = b64.length
		placeHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0

		// base64 is 4/3 + up to two characters of the original data
		arr = new Arr(b64.length * 3 / 4 - placeHolders)

		// if there are placeholders, only get up to the last complete 4 chars
		l = placeHolders > 0 ? b64.length - 4 : b64.length

		var L = 0

		function push (v) {
			arr[L++] = v
		}

		for (i = 0, j = 0; i < l; i += 4, j += 3) {
			tmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))
			push((tmp & 0xFF0000) >> 16)
			push((tmp & 0xFF00) >> 8)
			push(tmp & 0xFF)
		}

		if (placeHolders === 2) {
			tmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)
			push(tmp & 0xFF)
		} else if (placeHolders === 1) {
			tmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)
			push((tmp >> 8) & 0xFF)
			push(tmp & 0xFF)
		}

		return arr
	}

	function uint8ToBase64 (uint8) {
		var i,
			extraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes
			output = "",
			temp, length

		function encode (num) {
			return lookup.charAt(num)
		}

		function tripletToBase64 (num) {
			return encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)
		}

		// go through the array every three bytes, we'll deal with trailing stuff later
		for (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {
			temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
			output += tripletToBase64(temp)
		}

		// pad the end with zeros, but make sure to not forget the extra bytes
		switch (extraBytes) {
			case 1:
				temp = uint8[uint8.length - 1]
				output += encode(temp >> 2)
				output += encode((temp << 4) & 0x3F)
				output += '=='
				break
			case 2:
				temp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])
				output += encode(temp >> 10)
				output += encode((temp >> 4) & 0x3F)
				output += encode((temp << 2) & 0x3F)
				output += '='
				break
		}

		return output
	}

	exports.toByteArray = b64ToByteArray
	exports.fromByteArray = uint8ToBase64
}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))

},{}],11:[function(require,module,exports){
exports.read = function(buffer, offset, isLE, mLen, nBytes) {
  var e, m,
      eLen = nBytes * 8 - mLen - 1,
      eMax = (1 << eLen) - 1,
      eBias = eMax >> 1,
      nBits = -7,
      i = isLE ? (nBytes - 1) : 0,
      d = isLE ? -1 : 1,
      s = buffer[offset + i];

  i += d;

  e = s & ((1 << (-nBits)) - 1);
  s >>= (-nBits);
  nBits += eLen;
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);

  m = e & ((1 << (-nBits)) - 1);
  e >>= (-nBits);
  nBits += mLen;
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);

  if (e === 0) {
    e = 1 - eBias;
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity);
  } else {
    m = m + Math.pow(2, mLen);
    e = e - eBias;
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
};

exports.write = function(buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c,
      eLen = nBytes * 8 - mLen - 1,
      eMax = (1 << eLen) - 1,
      eBias = eMax >> 1,
      rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0),
      i = isLE ? 0 : (nBytes - 1),
      d = isLE ? 1 : -1,
      s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;

  value = Math.abs(value);

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0;
    e = eMax;
  } else {
    e = Math.floor(Math.log(value) / Math.LN2);
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--;
      c *= 2;
    }
    if (e + eBias >= 1) {
      value += rt / c;
    } else {
      value += rt * Math.pow(2, 1 - eBias);
    }
    if (value * c >= 2) {
      e++;
      c /= 2;
    }

    if (e + eBias >= eMax) {
      m = 0;
      e = eMax;
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen);
      e = e + eBias;
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
      e = 0;
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);

  e = (e << mLen) | m;
  eLen += mLen;
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);

  buffer[offset + i - d] |= s * 128;
};

},{}],12:[function(require,module,exports){

/**
 * isArray
 */

var isArray = Array.isArray;

/**
 * toString
 */

var str = Object.prototype.toString;

/**
 * Whether or not the given `val`
 * is an array.
 *
 * example:
 *
 *        isArray([]);
 *        // > true
 *        isArray(arguments);
 *        // > false
 *        isArray('');
 *        // > false
 *
 * @param {mixed} val
 * @return {bool}
 */

module.exports = isArray || function (val) {
  return !! val && '[object Array]' == str.call(val);
};

},{}],13:[function(require,module,exports){
'use strict';
exports.randomBytes = exports.rng = require('randombytes')
var prng = exports.prng = require('./prng');

function error () {
  var m = [].slice.call(arguments).join(' ')
  throw new Error([
    m,
    'we accept pull requests',
    'http://github.com/dominictarr/crypto-browserify'
    ].join('\n'))
}

exports.createHash = exports.Hash = require('create-hash')

exports.createHmac = exports.Hmac = require('create-hmac')

exports.pseudoRandomBytes = function(size, callback) {
  if (callback && callback.call) {
    var res;
    try {
      res = prng(size)
    } catch (err) {
      return callback(err)
    }
    callback.call(this, undefined, res)
  } else {
    return prng(size)
  }
}

function each(a, f) {
  for(var i in a)
    f(a[i], i)
}
var hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(Object.keys(require('browserify-sign/algos')))
exports.getHashes = function () {
  return hashes;
}

var p = require('./pbkdf2')(exports)
exports.pbkdf2 = p.pbkdf2
exports.pbkdf2Sync = p.pbkdf2Sync

var aes = require('browserify-aes');
[
  'Cipher',
  'createCipher',
  'Cipheriv',
  'createCipheriv',
  'Decipher',
  'createDecipher',
  'Decipheriv',
  'createDecipheriv',
  'getCiphers',
  'listCiphers'
].forEach(function (key) {
  exports[key] = aes[key];
})

require('browserify-sign/inject')(module.exports, exports);
require('diffie-hellman/inject')(exports, module.exports);
require('create-ecdh/inject')(module.exports, exports);
require('public-encrypt/inject')(module.exports, exports);

// the least I can do is make error messages for the rest of the node.js/crypto api.
each([
  'createCredentials'
], function (name) {
  exports[name] = function () {
    error('sorry,', name, 'is not implemented yet')
  }
})

},{"./pbkdf2":149,"./prng":150,"browserify-aes":17,"browserify-sign/algos":32,"browserify-sign/inject":33,"create-ecdh/inject":79,"create-hash":101,"create-hmac":112,"diffie-hellman/inject":115,"public-encrypt/inject":121,"randombytes":148}],14:[function(require,module,exports){
(function (Buffer){
var md5 = require('create-hash/md5');
module.exports = EVP_BytesToKey;
function EVP_BytesToKey(password, keyLen, ivLen) {
  if (!Buffer.isBuffer(password)) {
    password = new Buffer(password, 'binary');
  }
  keyLen = keyLen/8;
  ivLen = ivLen || 0;
  var ki = 0;
  var ii = 0;
  var key = new Buffer(keyLen);
  var iv = new Buffer(ivLen);
  var addmd = 0;
  var md_buf;
  var i;
  var bufs =  [];
  while (true) {
    if(addmd++ > 0) {
       bufs.push(md_buf);
    }
    bufs.push(password);
    md_buf = md5(Buffer.concat(bufs));
    bufs = [];
    i = 0;
    if(keyLen > 0) {
      while(true) {
        if(keyLen === 0) {
          break;
        }
        if(i === md_buf.length) {
          break;
        }
        key[ki++] = md_buf[i];
        keyLen--;
        i++;
       }
    }
    if(ivLen > 0 && i !== md_buf.length) {
      while(true) {
        if(ivLen === 0) {
          break;
        }
        if(i === md_buf.length) {
          break;
        }
       iv[ii++] = md_buf[i];
       ivLen--;
       i++;
     }
   }
   if(keyLen === 0 && ivLen === 0) {
      break;
    }
  }
  for(i=0;i<md_buf.length;i++) {
    md_buf[i] = 0;
  }
  return {
    key: key,
    iv: iv
  };
}
}).call(this,require("buffer").Buffer)
},{"buffer":9,"create-hash/md5":103}],15:[function(require,module,exports){
(function (Buffer){
// based on the aes implimentation in triple sec
// https://github.com/keybase/triplesec

// which is in turn based on the one from crypto-js
// https://code.google.com/p/crypto-js/

var uint_max = Math.pow(2, 32);
function fixup_uint32(x) {
    var ret, x_pos;
    ret = x > uint_max || x < 0 ? (x_pos = Math.abs(x) % uint_max, x < 0 ? uint_max - x_pos : x_pos) : x;
    return ret;
}
function scrub_vec(v) {
  var i, _i, _ref;
  for (i = _i = 0, _ref = v.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
    v[i] = 0;
  }
  return false;
}

function Global() {
  var i;
  this.SBOX = [];
  this.INV_SBOX = [];
  this.SUB_MIX = (function() {
    var _i, _results;
    _results = [];
    for (i = _i = 0; _i < 4; i = ++_i) {
      _results.push([]);
    }
    return _results;
  })();
  this.INV_SUB_MIX = (function() {
    var _i, _results;
    _results = [];
    for (i = _i = 0; _i < 4; i = ++_i) {
      _results.push([]);
    }
    return _results;
  })();
  this.init();
  this.RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];
}

Global.prototype.init = function() {
  var d, i, sx, t, x, x2, x4, x8, xi, _i;
  d = (function() {
    var _i, _results;
    _results = [];
    for (i = _i = 0; _i < 256; i = ++_i) {
      if (i < 128) {
        _results.push(i << 1);
      } else {
        _results.push((i << 1) ^ 0x11b);
      }
    }
    return _results;
  })();
  x = 0;
  xi = 0;
  for (i = _i = 0; _i < 256; i = ++_i) {
    sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);
    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;
    this.SBOX[x] = sx;
    this.INV_SBOX[sx] = x;
    x2 = d[x];
    x4 = d[x2];
    x8 = d[x4];
    t = (d[sx] * 0x101) ^ (sx * 0x1010100);
    this.SUB_MIX[0][x] = (t << 24) | (t >>> 8);
    this.SUB_MIX[1][x] = (t << 16) | (t >>> 16);
    this.SUB_MIX[2][x] = (t << 8) | (t >>> 24);
    this.SUB_MIX[3][x] = t;
    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);
    this.INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8);
    this.INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16);
    this.INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24);
    this.INV_SUB_MIX[3][sx] = t;
    if (x === 0) {
      x = xi = 1;
    } else {
      x = x2 ^ d[d[d[x8 ^ x2]]];
      xi ^= d[d[xi]];
    }
  }
  return true;
};

var G = new Global();


AES.blockSize = 4 * 4;

AES.prototype.blockSize = AES.blockSize;

AES.keySize = 256 / 8;

AES.prototype.keySize = AES.keySize;

 function bufferToArray(buf) {
  var len = buf.length/4;
  var out = new Array(len);
  var i = -1;
  while (++i < len) {
    out[i] = buf.readUInt32BE(i * 4);
  }
  return out;
 }
function AES(key) {
  this._key = bufferToArray(key);
  this._doReset();
}

AES.prototype._doReset = function() {
  var invKsRow, keySize, keyWords, ksRow, ksRows, t, _i, _j;
  keyWords = this._key;
  keySize = keyWords.length;
  this._nRounds = keySize + 6;
  ksRows = (this._nRounds + 1) * 4;
  this._keySchedule = [];
  for (ksRow = _i = 0; 0 <= ksRows ? _i < ksRows : _i > ksRows; ksRow = 0 <= ksRows ? ++_i : --_i) {
    this._keySchedule[ksRow] = ksRow < keySize ? keyWords[ksRow] : (t = this._keySchedule[ksRow - 1], (ksRow % keySize) === 0 ? (t = (t << 8) | (t >>> 24), t = (G.SBOX[t >>> 24] << 24) | (G.SBOX[(t >>> 16) & 0xff] << 16) | (G.SBOX[(t >>> 8) & 0xff] << 8) | G.SBOX[t & 0xff], t ^= G.RCON[(ksRow / keySize) | 0] << 24) : keySize > 6 && ksRow % keySize === 4 ? t = (G.SBOX[t >>> 24] << 24) | (G.SBOX[(t >>> 16) & 0xff] << 16) | (G.SBOX[(t >>> 8) & 0xff] << 8) | G.SBOX[t & 0xff] : void 0, this._keySchedule[ksRow - keySize] ^ t);
  }
  this._invKeySchedule = [];
  for (invKsRow = _j = 0; 0 <= ksRows ? _j < ksRows : _j > ksRows; invKsRow = 0 <= ksRows ? ++_j : --_j) {
    ksRow = ksRows - invKsRow;
    t = this._keySchedule[ksRow - (invKsRow % 4 ? 0 : 4)];
    this._invKeySchedule[invKsRow] = invKsRow < 4 || ksRow <= 4 ? t : G.INV_SUB_MIX[0][G.SBOX[t >>> 24]] ^ G.INV_SUB_MIX[1][G.SBOX[(t >>> 16) & 0xff]] ^ G.INV_SUB_MIX[2][G.SBOX[(t >>> 8) & 0xff]] ^ G.INV_SUB_MIX[3][G.SBOX[t & 0xff]];
  }
  return true;
};

AES.prototype.encryptBlock = function(M) {
  M = bufferToArray(new Buffer(M));
  var out = this._doCryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX);
  var buf = new Buffer(16);
  buf.writeUInt32BE(out[0], 0);
  buf.writeUInt32BE(out[1], 4);
  buf.writeUInt32BE(out[2], 8);
  buf.writeUInt32BE(out[3], 12);
  return buf;
};

AES.prototype.decryptBlock = function(M) {
  M = bufferToArray(new Buffer(M));
  var temp = [M[3], M[1]];
  M[1] = temp[0];
  M[3] = temp[1];
  var out = this._doCryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX);
  var buf = new Buffer(16);
  buf.writeUInt32BE(out[0], 0);
  buf.writeUInt32BE(out[3], 4);
  buf.writeUInt32BE(out[2], 8);
  buf.writeUInt32BE(out[1], 12);
  return buf;
};

AES.prototype.scrub = function() {
  scrub_vec(this._keySchedule);
  scrub_vec(this._invKeySchedule);
  scrub_vec(this._key);
};

AES.prototype._doCryptBlock = function(M, keySchedule, SUB_MIX, SBOX) {
  var ksRow, round, s0, s1, s2, s3, t0, t1, t2, t3, _i, _ref;

  s0 = M[0] ^ keySchedule[0];
  s1 = M[1] ^ keySchedule[1];
  s2 = M[2] ^ keySchedule[2];
  s3 = M[3] ^ keySchedule[3];
  ksRow = 4;
  for (round = _i = 1, _ref = this._nRounds; 1 <= _ref ? _i < _ref : _i > _ref; round = 1 <= _ref ? ++_i : --_i) {
    t0 = SUB_MIX[0][s0 >>> 24] ^ SUB_MIX[1][(s1 >>> 16) & 0xff] ^ SUB_MIX[2][(s2 >>> 8) & 0xff] ^ SUB_MIX[3][s3 & 0xff] ^ keySchedule[ksRow++];
    t1 = SUB_MIX[0][s1 >>> 24] ^ SUB_MIX[1][(s2 >>> 16) & 0xff] ^ SUB_MIX[2][(s3 >>> 8) & 0xff] ^ SUB_MIX[3][s0 & 0xff] ^ keySchedule[ksRow++];
    t2 = SUB_MIX[0][s2 >>> 24] ^ SUB_MIX[1][(s3 >>> 16) & 0xff] ^ SUB_MIX[2][(s0 >>> 8) & 0xff] ^ SUB_MIX[3][s1 & 0xff] ^ keySchedule[ksRow++];
    t3 = SUB_MIX[0][s3 >>> 24] ^ SUB_MIX[1][(s0 >>> 16) & 0xff] ^ SUB_MIX[2][(s1 >>> 8) & 0xff] ^ SUB_MIX[3][s2 & 0xff] ^ keySchedule[ksRow++];
    s0 = t0;
    s1 = t1;
    s2 = t2;
    s3 = t3;
  }
  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];
  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];
  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];
  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];
  return [
    fixup_uint32(t0),
    fixup_uint32(t1),
    fixup_uint32(t2),
    fixup_uint32(t3)
  ];

};




  exports.AES = AES;
}).call(this,require("buffer").Buffer)
},{"buffer":9}],16:[function(require,module,exports){
(function (Buffer){
var aes = require('./aes');
var Transform = require('./cipherBase');
var inherits = require('inherits');
var GHASH = require('./ghash');
var xor = require('./xor');
inherits(StreamCipher, Transform);
module.exports = StreamCipher;

function StreamCipher(mode, key, iv, decrypt) {
  if (!(this instanceof StreamCipher)) {
    return new StreamCipher(mode, key, iv);
  }
  Transform.call(this);
  this._finID = Buffer.concat([iv, new Buffer([0, 0, 0, 1])]);
  iv = Buffer.concat([iv, new Buffer([0, 0, 0, 2])]);
  this._cipher = new aes.AES(key);
  this._prev = new Buffer(iv.length);
  this._cache = new Buffer('');
  this._secCache = new Buffer('');
  this._decrypt = decrypt;
  this._alen = 0;
  this._len = 0;
  iv.copy(this._prev);
  this._mode = mode;
  var h = new Buffer(4);
  h.fill(0);
  this._ghash = new GHASH(this._cipher.encryptBlock(h));
  this._authTag = null;
  this._called = false;
}
StreamCipher.prototype._update = function (chunk) {
  if (!this._called && this._alen) {
    var rump = 16 - (this._alen % 16);
    if (rump <16) {
      rump = new Buffer(rump);
      rump.fill(0);
      this._ghash.update(rump);
    }
  }
  this._called = true;
  var out = this._mode.encrypt(this, chunk);
  if (this._decrypt) {
    this._ghash.update(chunk);
  } else {
    this._ghash.update(out);
  }
  this._len += chunk.length;
  return out;
};
StreamCipher.prototype._final = function () {
  if (this._decrypt && !this._authTag) {
    throw new Error('Unsupported state or unable to authenticate data');
  }
  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID));
  if (this._decrypt) {
    if (xorTest(tag, this._authTag)) {
      throw new Error('Unsupported state or unable to authenticate data');
    }
  } else {
    this._authTag = tag;
  }
  this._cipher.scrub();
};
StreamCipher.prototype.getAuthTag = function getAuthTag () {
  if (!this._decrypt && Buffer.isBuffer(this._authTag)) {
    return this._authTag;
  } else {
    throw new Error('Attempting to get auth tag in unsupported state');
  }
};
StreamCipher.prototype.setAuthTag = function setAuthTag (tag) {
  if (this._decrypt) {
    this._authTag = tag;
  } else {
    throw new Error('Attempting to set auth tag in unsupported state');
  }
};
StreamCipher.prototype.setAAD = function setAAD (buf) {
  if (!this._called) {
    this._ghash.update(buf);
    this._alen += buf.length;
  } else {
    throw new Error('Attempting to set AAD in unsupported state');
  }
};
function xorTest(a, b) {
  var out = 0;
  if (a.length !== b.length) {
    out++;
  }
  var len = Math.min(a.length, b.length);
  var i = -1;
  while (++i < len) {
    out += (a[i] ^ b[i]);
  }
  return out;
}



}).call(this,require("buffer").Buffer)
},{"./aes":15,"./cipherBase":18,"./ghash":21,"./xor":31,"buffer":9,"inherits":152}],17:[function(require,module,exports){
var ciphers = require('./encrypter');
exports.createCipher = exports.Cipher = ciphers.createCipher;
exports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv;
var deciphers = require('./decrypter');
exports.createDecipher = exports.Decipher = deciphers.createDecipher;
exports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv;
var modes = require('./modes');
function getCiphers () {
  return Object.keys(modes);
}
exports.listCiphers = exports.getCiphers = getCiphers;

},{"./decrypter":19,"./encrypter":20,"./modes":22}],18:[function(require,module,exports){
(function (Buffer){
var Transform = require('stream').Transform;
var inherits = require('inherits');

module.exports = CipherBase;
inherits(CipherBase, Transform);
function CipherBase() {
  Transform.call(this);
}
CipherBase.prototype.update = function (data, inputEnc, outputEnc) {
  if (typeof data === 'string') {
    data = new Buffer(data, inputEnc);
  }
  var outData = this._update(data);
  if (outputEnc) {
    outData = outData.toString(outputEnc);
  }
  return outData;
};
CipherBase.prototype._transform = function (data, _, next) {
  this.push(this._update(data));
  next();
};
CipherBase.prototype._flush = function (next) {
  try {
    this.push(this._final());
  } catch(e) {
    return next(e);
  }
  next();
};
CipherBase.prototype.final = function (outputEnc) {
  var outData = this._final() || new Buffer('');
  if (outputEnc) {
    outData = outData.toString(outputEnc);
  }
  return outData;
};
}).call(this,require("buffer").Buffer)
},{"buffer":9,"inherits":152,"stream":167}],19:[function(require,module,exports){
(function (Buffer){
var aes = require('./aes');
var Transform = require('./cipherBase');
var inherits = require('inherits');
var modes = require('./modes');
var StreamCipher = require('./streamCipher');
var AuthCipher = require('./authCipher');
var ebtk = require('./EVP_BytesToKey');

inherits(Decipher, Transform);
function Decipher(mode, key, iv) {
  if (!(this instanceof Decipher)) {
    return new Decipher(mode, key, iv);
  }
  Transform.call(this);
  this._cache = new Splitter();
  this._last = void 0;
  this._cipher = new aes.AES(key);
  this._prev = new Buffer(iv.length);
  iv.copy(this._prev);
  this._mode = mode;
  this._autopadding = true;
}
Decipher.prototype._update = function (data) {
  this._cache.add(data);
  var chunk;
  var thing;
  var out = [];
  while ((chunk = this._cache.get(this._autopadding))) {
    thing = this._mode.decrypt(this, chunk);
    out.push(thing);
  }
  return Buffer.concat(out);
};
Decipher.prototype._final = function () {
  var chunk = this._cache.flush();
  if (this._autopadding) {
    return unpad(this._mode.decrypt(this, chunk));
  } else if (chunk) {
    throw new Error('data not multiple of block length');
  }
};
Decipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo;
};
function Splitter() {
   if (!(this instanceof Splitter)) {
    return new Splitter();
  }
  this.cache = new Buffer('');
}
Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data]);
};

Splitter.prototype.get = function (autoPadding) {
  var out;
  if (autoPadding) {
    if (this.cache.length > 16) {
      out = this.cache.slice(0, 16);
      this.cache = this.cache.slice(16);
      return out;
    }
  } else {
    if (this.cache.length >= 16) {
      out = this.cache.slice(0, 16);
      this.cache = this.cache.slice(16);
      return out;
    }
  }
  return null;
};
Splitter.prototype.flush = function () {
  if (this.cache.length) {
    return this.cache;
  }
};
function unpad(last) {
  var padded = last[15];
  var i = -1;
  while (++i < padded) {
    if (last[(i + (16 - padded))] !== padded) {
      throw new Error('unable to decrypt data');
    }
  }
  if (padded === 16) {
    return;
  }
  return last.slice(0, 16 - padded);
}

var modelist = {
  ECB: require('./modes/ecb'),
  CBC: require('./modes/cbc'),
  CFB: require('./modes/cfb'),
  CFB8: require('./modes/cfb8'),
  CFB1: require('./modes/cfb1'),
  OFB: require('./modes/ofb'),
  CTR: require('./modes/ctr'),
  GCM: require('./modes/ctr')
};


function createDecipheriv(suite, password, iv) {
  var config = modes[suite.toLowerCase()];
  if (!config) {
    throw new TypeError('invalid suite type');
  }
  if (typeof iv === 'string') {
    iv = new Buffer(iv);
  }
  if (typeof password === 'string') {
    password = new Buffer(password);
  }
  if (password.length !== config.key/8) {
    throw new TypeError('invalid key length ' + password.length);
  }
  if (iv.length !== config.iv) {
    throw new TypeError('invalid iv length ' + iv.length);
  }
  if (config.type === 'stream') {
    return new StreamCipher(modelist[config.mode], password, iv, true);
  } else if (config.type === 'auth') {
    return new AuthCipher(modelist[config.mode], password, iv, true);
  }
  return new Decipher(modelist[config.mode], password, iv);
}

function createDecipher (suite, password) {
  var config = modes[suite.toLowerCase()];
  if (!config) {
    throw new TypeError('invalid suite type');
  }
  var keys = ebtk(password, config.key, config.iv);
  return createDecipheriv(suite, keys.key, keys.iv);
}
exports.createDecipher = createDecipher;
exports.createDecipheriv = createDecipheriv;
}).call(this,require("buffer").Buffer)
},{"./EVP_BytesToKey":14,"./aes":15,"./authCipher":16,"./cipherBase":18,"./modes":22,"./modes/cbc":23,"./modes/cfb":24,"./modes/cfb1":25,"./modes/cfb8":26,"./modes/ctr":27,"./modes/ecb":28,"./modes/ofb":29,"./streamCipher":30,"buffer":9,"inherits":152}],20:[function(require,module,exports){
(function (Buffer){
var aes = require('./aes');
var Transform = require('./cipherBase');
var inherits = require('inherits');
var modes = require('./modes');
var ebtk = require('./EVP_BytesToKey');
var StreamCipher = require('./streamCipher');
var AuthCipher = require('./authCipher');
inherits(Cipher, Transform);
function Cipher(mode, key, iv) {
  if (!(this instanceof Cipher)) {
    return new Cipher(mode, key, iv);
  }
  Transform.call(this);
  this._cache = new Splitter();
  this._cipher = new aes.AES(key);
  this._prev = new Buffer(iv.length);
  iv.copy(this._prev);
  this._mode = mode;
  this._autopadding = true;
}
Cipher.prototype._update = function (data) {
  this._cache.add(data);
  var chunk;
  var thing;
  var out = [];
  while ((chunk = this._cache.get())) {
    thing = this._mode.encrypt(this, chunk);
    out.push(thing);
  }
  return Buffer.concat(out);
};
Cipher.prototype._final = function () {
  var chunk = this._cache.flush();
  if (this._autopadding) {
    chunk = this._mode.encrypt(this, chunk);
    this._cipher.scrub();
    return chunk;
  } else if (chunk.toString('hex') !== '10101010101010101010101010101010') {
    this._cipher.scrub();
    throw new Error('data not multiple of block length');
  }
};
Cipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo;
};

function Splitter() {
   if (!(this instanceof Splitter)) {
    return new Splitter();
  }
  this.cache = new Buffer('');
}
Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data]);
};

Splitter.prototype.get = function () {
  if (this.cache.length > 15) {
    var out = this.cache.slice(0, 16);
    this.cache = this.cache.slice(16);
    return out;
  }
  return null;
};
Splitter.prototype.flush = function () {
  var len = 16 - this.cache.length;
  var padBuff = new Buffer(len);

  var i = -1;
  while (++i < len) {
    padBuff.writeUInt8(len, i);
  }
  var out = Buffer.concat([this.cache, padBuff]);
  return out;
};
var modelist = {
  ECB: require('./modes/ecb'),
  CBC: require('./modes/cbc'),
  CFB: require('./modes/cfb'),
  CFB8: require('./modes/cfb8'),
  CFB1: require('./modes/cfb1'),
  OFB: require('./modes/ofb'),
  CTR: require('./modes/ctr'),
  GCM: require('./modes/ctr')
};

function createCipheriv(suite, password, iv) {
  var config = modes[suite.toLowerCase()];
  if (!config) {
    throw new TypeError('invalid suite type');
  }
  if (typeof iv === 'string') {
    iv = new Buffer(iv);
  }
  if (typeof password === 'string') {
    password = new Buffer(password);
  }
  if (password.length !== config.key/8) {
    throw new TypeError('invalid key length ' + password.length);
  }
  if (iv.length !== config.iv) {
    throw new TypeError('invalid iv length ' + iv.length);
  }
  if (config.type === 'stream') {
    return new StreamCipher(modelist[config.mode], password, iv);
  } else if (config.type === 'auth') {
    return new AuthCipher(modelist[config.mode], password, iv);
  }
  return new Cipher(modelist[config.mode], password, iv);
}
function createCipher (suite, password) {
  var config = modes[suite.toLowerCase()];
  if (!config) {
    throw new TypeError('invalid suite type');
  }
  var keys = ebtk(password, config.key, config.iv);
  return createCipheriv(suite, keys.key, keys.iv);
}

exports.createCipheriv = createCipheriv;
exports.createCipher = createCipher;
}).call(this,require("buffer").Buffer)
},{"./EVP_BytesToKey":14,"./aes":15,"./authCipher":16,"./cipherBase":18,"./modes":22,"./modes/cbc":23,"./modes/cfb":24,"./modes/cfb1":25,"./modes/cfb8":26,"./modes/ctr":27,"./modes/ecb":28,"./modes/ofb":29,"./streamCipher":30,"buffer":9,"inherits":152}],21:[function(require,module,exports){
(function (Buffer){
var zeros = new Buffer(16);
zeros.fill(0);
module.exports = GHASH;
function GHASH(key){
  this.h = key;
  this.state = new Buffer(16);
  this.state.fill(0);
  this.cache = new Buffer('');
}
// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html
// by Juho Vähä-Herttua
GHASH.prototype.ghash = function (block) {
  var i = -1;
  while (++i < block.length) {
   this.state[i] ^= block[i];
  }
  this._multiply();
};

GHASH.prototype._multiply = function () {
  var Vi = toArray(this.h);
  var Zi = [0, 0, 0, 0];
  var j, xi, lsb_Vi;
  var i = -1;
  while (++i < 128) {
    xi = (this.state[~~(i/8)] & (1 << (7-i%8))) !== 0;
    if (xi) {
      // Z_i+1 = Z_i ^ V_i
      Zi = xor(Zi, Vi);
    }

    // Store the value of LSB(V_i)
    lsb_Vi = (Vi[3] & 1) !== 0;

    // V_i+1 = V_i >> 1
    for (j=3; j>0; j--) {
      Vi[j] = (Vi[j] >>> 1) | ((Vi[j-1]&1) << 31);
    }
    Vi[0] = Vi[0] >>> 1;

    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R
    if (lsb_Vi) {
      Vi[0] = Vi[0] ^ (0xe1 << 24);
    }
  }
  this.state = fromArray(Zi);
};
GHASH.prototype.update = function (buf) {
  this.cache = Buffer.concat([this.cache, buf]);
  var chunk;
  while (this.cache.length >= 16) {
    chunk = this.cache.slice(0, 16);
    this.cache = this.cache.slice(16);
    this.ghash(chunk);
  }
};
GHASH.prototype.final = function (abl, bl) {
  if (this.cache.length) {
    this.ghash(Buffer.concat([this.cache, zeros], 16));
  }
  this.ghash(fromArray([
     0, abl,
     0, bl
   ]));
  return this.state;
};

function toArray(buf) {
  return [
    buf.readUInt32BE(0),
    buf.readUInt32BE(4),
    buf.readUInt32BE(8),
    buf.readUInt32BE(12)
  ];
}
function fromArray(out) {
  out = out.map(fixup_uint32);
  var buf = new Buffer(16);
  buf.writeUInt32BE(out[0], 0);
  buf.writeUInt32BE(out[1], 4);
  buf.writeUInt32BE(out[2], 8);
  buf.writeUInt32BE(out[3], 12);
  return buf;
}
var uint_max = Math.pow(2, 32);
function fixup_uint32(x) {
    var ret, x_pos;
    ret = x > uint_max || x < 0 ? (x_pos = Math.abs(x) % uint_max, x < 0 ? uint_max - x_pos : x_pos) : x;
    return ret;
}
function xor(a, b) {
  return [
    a[0] ^ b[0],
    a[1] ^ b[1],
    a[2] ^ b[2],
    a[3] ^ b[3],
  ];
}
}).call(this,require("buffer").Buffer)
},{"buffer":9}],22:[function(require,module,exports){
exports['aes-128-ecb'] = {
  cipher: 'AES',
  key: 128,
  iv: 0,
  mode: 'ECB',
  type: 'block'
};
exports['aes-192-ecb'] = {
  cipher: 'AES',
  key: 192,
  iv: 0,
  mode: 'ECB',
  type: 'block'
};
exports['aes-256-ecb'] = {
  cipher: 'AES',
  key: 256,
  iv: 0,
  mode: 'ECB',
  type: 'block'
};
exports['aes-128-cbc'] = {
  cipher: 'AES',
  key: 128,
  iv: 16,
  mode: 'CBC',
  type: 'block'
};
exports['aes-192-cbc'] = {
  cipher: 'AES',
  key: 192,
  iv: 16,
  mode: 'CBC',
  type: 'block'
};
exports['aes-256-cbc'] = {
  cipher: 'AES',
  key: 256,
  iv: 16,
  mode: 'CBC',
  type: 'block'
};
exports['aes128'] = exports['aes-128-cbc'];
exports['aes192'] = exports['aes-192-cbc'];
exports['aes256'] = exports['aes-256-cbc'];
exports['aes-128-cfb'] = {
  cipher: 'AES',
  key: 128,
  iv: 16,
  mode: 'CFB',
  type: 'stream'
};
exports['aes-192-cfb'] = {
  cipher: 'AES',
  key: 192,
  iv: 16,
  mode: 'CFB',
  type: 'stream'
};
exports['aes-256-cfb'] = {
  cipher: 'AES',
  key: 256,
  iv: 16,
  mode: 'CFB',
  type: 'stream'
};
exports['aes-128-cfb8'] = {
  cipher: 'AES',
  key: 128,
  iv: 16,
  mode: 'CFB8',
  type: 'stream'
};
exports['aes-192-cfb8'] = {
  cipher: 'AES',
  key: 192,
  iv: 16,
  mode: 'CFB8',
  type: 'stream'
};
exports['aes-256-cfb8'] = {
  cipher: 'AES',
  key: 256,
  iv: 16,
  mode: 'CFB8',
  type: 'stream'
};
exports['aes-128-cfb1'] = {
  cipher: 'AES',
  key: 128,
  iv: 16,
  mode: 'CFB1',
  type: 'stream'
};
exports['aes-192-cfb1'] = {
  cipher: 'AES',
  key: 192,
  iv: 16,
  mode: 'CFB1',
  type: 'stream'
};
exports['aes-256-cfb1'] = {
  cipher: 'AES',
  key: 256,
  iv: 16,
  mode: 'CFB1',
  type: 'stream'
};
exports['aes-128-ofb'] = {
  cipher: 'AES',
  key: 128,
  iv: 16,
  mode: 'OFB',
  type: 'stream'
};
exports['aes-192-ofb'] = {
  cipher: 'AES',
  key: 192,
  iv: 16,
  mode: 'OFB',
  type: 'stream'
};
exports['aes-256-ofb'] = {
  cipher: 'AES',
  key: 256,
  iv: 16,
  mode: 'OFB',
  type: 'stream'
};
exports['aes-128-ctr'] = {
  cipher: 'AES',
  key: 128,
  iv: 16,
  mode: 'CTR',
  type: 'stream'
};
exports['aes-192-ctr'] = {
  cipher: 'AES',
  key: 192,
  iv: 16,
  mode: 'CTR',
  type: 'stream'
};
exports['aes-256-ctr'] = {
  cipher: 'AES',
  key: 256,
  iv: 16,
  mode: 'CTR',
  type: 'stream'
};
exports['aes-128-gcm'] = {
  cipher: 'AES',
  key: 128,
  iv: 12,
  mode: 'GCM',
  type: 'auth'
};
exports['aes-192-gcm'] = {
  cipher: 'AES',
  key: 192,
  iv: 12,
  mode: 'GCM',
  type: 'auth'
};
exports['aes-256-gcm'] = {
  cipher: 'AES',
  key: 256,
  iv: 12,
  mode: 'GCM',
  type: 'auth'
};
},{}],23:[function(require,module,exports){
var xor = require('../xor');
exports.encrypt = function (self, block) {
  var data = xor(block, self._prev);
  self._prev = self._cipher.encryptBlock(data);
  return self._prev;
};
exports.decrypt = function (self, block) {
  var pad = self._prev;
  self._prev = block;
  var out = self._cipher.decryptBlock(block);
  return xor(out, pad);
};
},{"../xor":31}],24:[function(require,module,exports){
(function (Buffer){
var xor = require('../xor');
exports.encrypt = function (self, data, decrypt) {
  var out = new Buffer('');
  var len;
  while (data.length) {
    if (self._cache.length === 0) {
      self._cache = self._cipher.encryptBlock(self._prev);
      self._prev = new Buffer('');
    }
    if (self._cache.length <= data.length) {
      len = self._cache.length;
      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)]);
      data = data.slice(len);
    } else {
      out = Buffer.concat([out, encryptStart(self, data, decrypt)]);
      break;
    }
  }
  return out;
};
function encryptStart(self, data, decrypt) {
  var len = data.length;
  var out = xor(data, self._cache);
  self._cache = self._cache.slice(len);
  self._prev = Buffer.concat([self._prev, decrypt?data:out]);
  return out;
}
}).call(this,require("buffer").Buffer)
},{"../xor":31,"buffer":9}],25:[function(require,module,exports){
(function (Buffer){

function encryptByte(self, byte, decrypt) {
  var pad;
  var i = -1;
  var len = 8;
  var out = 0;
  var bit, value;
  while (++i < len) {
    pad = self._cipher.encryptBlock(self._prev);
    bit = (byte & (1 << (7-i))) ? 0x80:0;
    value = pad[0] ^ bit;
    out += ((value&0x80) >> (i%8));
    self._prev = shiftIn(self._prev, decrypt?bit:value);
  }
  return out;
}
exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length;
  var out = new Buffer(len);
  var i = -1;
  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt);
  }
  return out;
};
function shiftIn(buffer, value) {
  var len = buffer.length;
  var i = -1;
  var out = new Buffer(buffer.length);
  buffer = Buffer.concat([buffer, new Buffer([value])]);
  while(++i < len) {
    out[i] = buffer[i]<<1 | buffer[i+1]>>(7);
  }
  return out;
}
}).call(this,require("buffer").Buffer)
},{"buffer":9}],26:[function(require,module,exports){
(function (Buffer){
function encryptByte(self, byte, decrypt) {
  var pad = self._cipher.encryptBlock(self._prev);
  var out = pad[0] ^ byte;
  self._prev = Buffer.concat([self._prev.slice(1), new Buffer([decrypt?byte:out])]);
  return out;
}
exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length;
  var out = new Buffer(len);
  var i = -1;
  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt);
  }
  return out;
};
}).call(this,require("buffer").Buffer)
},{"buffer":9}],27:[function(require,module,exports){
(function (Buffer){
var xor = require('../xor');
function getBlock(self) {
  var out = self._cipher.encryptBlock(self._prev);
  incr32(self._prev);
  return out;
}
exports.encrypt = function (self, chunk) {
  while (self._cache.length < chunk.length) {
    self._cache = Buffer.concat([self._cache, getBlock(self)]);
  }
  var pad = self._cache.slice(0, chunk.length);
  self._cache = self._cache.slice(chunk.length);
  return xor(chunk, pad);
};
function incr32(iv) {
  var len = iv.length;
  var item;
  while (len--) {
    item = iv.readUInt8(len);
    if (item === 255) {
      iv.writeUInt8(0, len);
    } else {
      item++;
      iv.writeUInt8(item, len);
      break;
    }
  }
}
}).call(this,require("buffer").Buffer)
},{"../xor":31,"buffer":9}],28:[function(require,module,exports){
exports.encrypt = function (self, block) {
  return self._cipher.encryptBlock(block);
};
exports.decrypt = function (self, block) {
  return self._cipher.decryptBlock(block);
};
},{}],29:[function(require,module,exports){
(function (Buffer){
var xor = require('../xor');
function getBlock(self) {
  self._prev = self._cipher.encryptBlock(self._prev);
  return self._prev;
}
exports.encrypt = function (self, chunk) {
  while (self._cache.length < chunk.length) {
    self._cache = Buffer.concat([self._cache, getBlock(self)]);
  }
  var pad = self._cache.slice(0, chunk.length);
  self._cache = self._cache.slice(chunk.length);
  return xor(chunk, pad);
};
}).call(this,require("buffer").Buffer)
},{"../xor":31,"buffer":9}],30:[function(require,module,exports){
(function (Buffer){
var aes = require('./aes');
var Transform = require('./cipherBase');
var inherits = require('inherits');

inherits(StreamCipher, Transform);
module.exports = StreamCipher;
function StreamCipher(mode, key, iv, decrypt) {
  if (!(this instanceof StreamCipher)) {
    return new StreamCipher(mode, key, iv);
  }
  Transform.call(this);
  this._cipher = new aes.AES(key);
  this._prev = new Buffer(iv.length);
  this._cache = new Buffer('');
  this._secCache = new Buffer('');
  this._decrypt = decrypt;
  iv.copy(this._prev);
  this._mode = mode;
}
StreamCipher.prototype._update = function (chunk) {
  return this._mode.encrypt(this, chunk, this._decrypt);
};
StreamCipher.prototype._final = function () {
  this._cipher.scrub();
};
}).call(this,require("buffer").Buffer)
},{"./aes":15,"./cipherBase":18,"buffer":9,"inherits":152}],31:[function(require,module,exports){
(function (Buffer){
module.exports = xor;
function xor(a, b) {
  var len = Math.min(a.length, b.length);
  var out = new Buffer(len);
  var i = -1;
  while (++i < len) {
    out.writeUInt8(a[i] ^ b[i], i);
  }
  return out;
}
}).call(this,require("buffer").Buffer)
},{"buffer":9}],32:[function(require,module,exports){
(function (Buffer){
exports['RSA-SHA224'] = exports.sha224WithRSAEncryption = {
  sign: 'rsa',
  hash: 'sha224',
  id: new Buffer('302d300d06096086480165030402040500041c', 'hex')
};
exports['RSA-SHA256'] = exports.sha256WithRSAEncryption = {
  sign: 'rsa',
  hash: 'sha256',
  id: new Buffer('3031300d060960864801650304020105000420', 'hex')
};
exports['RSA-SHA384'] = exports.sha384WithRSAEncryption = {
  sign: 'rsa',
  hash: 'sha384',
  id: new Buffer('3041300d060960864801650304020205000430', 'hex')
};
exports['RSA-SHA512'] = exports.sha512WithRSAEncryption = {
  sign: 'rsa',
  hash: 'sha512',
  id: new Buffer('3051300d060960864801650304020305000440', 'hex')
};
exports['RSA-SHA1'] = {
	sign: 'rsa',
	hash: 'sha1',
	id: new Buffer('3021300906052b0e03021a05000414', 'hex')
};
exports['ecdsa-with-SHA1'] = {
	sign: 'ecdsa',
	hash: 'sha1',
	id: new Buffer('', 'hex')
};
exports.DSA = exports['DSA-SHA1'] = exports['DSA-SHA'] = {
  sign: 'dsa',
  hash: 'sha1',
  id: new Buffer('', 'hex')
};
exports['DSA-SHA224'] = exports['DSA-WITH-SHA224'] = {
  sign: 'dsa',
  hash: 'sha224',
  id: new Buffer('', 'hex')
};
exports['DSA-SHA256'] = exports['DSA-WITH-SHA256'] = {
  sign: 'dsa',
  hash: 'sha256',
  id: new Buffer('', 'hex')
};
exports['DSA-SHA384'] = exports['DSA-WITH-SHA384'] = {
  sign: 'dsa',
  hash: 'sha384',
  id: new Buffer('', 'hex')
};
exports['DSA-SHA512'] = exports['DSA-WITH-SHA512'] = {
  sign: 'dsa',
  hash: 'sha512',
  id: new Buffer('', 'hex')
};
exports['DSA-RIPEMD160'] = {
  sign: 'dsa',
  hash: 'rmd160',
  id: new Buffer('', 'hex')
};
exports['RSA-RIPEMD160'] = exports.ripemd160WithRSA = {
  sign: 'rsa',
  hash: 'rmd160',
  id: new Buffer('3021300906052b2403020105000414', 'hex')
};
exports['RSA-MD5'] = exports.md5WithRSAEncryption = {
  sign: 'rsa',
  hash: 'md5',
  id: new Buffer('3020300c06082a864886f70d020505000410', 'hex')
};
}).call(this,require("buffer").Buffer)
},{"buffer":9}],33:[function(require,module,exports){
(function (Buffer){
var sign = require('./sign');
var verify = require('./verify');
var stream = require('stream');
var inherits = require('inherits');
var _algos = require('./algos');
var algos = {};
Object.keys(_algos).forEach(function (key) {
	algos[key] = algos[key.toLowerCase()] = _algos[key];
});
'use strict';
module.exports = function (exports, crypto) {
	exports.createSign = exports.Sign = createSign;
	function createSign(algorithm) {

		return new Sign(algorithm, crypto);
	}
	exports.createVerify = exports.Verify = createVerify;
	function createVerify(algorithm) {
		return new Verify(algorithm, crypto);
	}
};
inherits(Sign, stream.Writable);
function Sign(algorithm, crypto) {
	stream.Writable.call(this);
	var data = algos[algorithm];
	if (!data) {
		throw new Error('Unknown message digest');
	}
	this._hashType = data.hash;
	this._hash = crypto.createHash(data.hash);
	this._tag = data.id;
	this._crypto = crypto;
}
Sign.prototype._write = function _write(data, _, done) {
	this._hash.update(data);
	done();
};
Sign.prototype.update = function update(data) {
	this.write(data);
	return this;
};

Sign.prototype.sign = function signMethod(key, enc) {
	this.end();
	var hash = this._hash.digest();
	var sig = sign(Buffer.concat([this._tag, hash]), key, this._hashType, this._crypto);
	if (enc) {
		sig = sig.toString(enc);
	}
	return sig;
};

inherits(Verify, stream.Writable);
function Verify(algorithm, crypto) {
	stream.Writable.call(this);
	var data = algos[algorithm];
	if (!data) {
		throw new Error('Unknown message digest');
	}
	this._hash = crypto.createHash(data.hash);
	this._tag = data.id;
}
Verify.prototype._write = function _write(data, _, done) {
	this._hash.update(data);
	done();
};
Verify.prototype.update = function update(data) {
	this.write(data);
	return this;
};

Verify.prototype.verify = function verifyMethod(key, sig, enc) {
	this.end();
	var hash = this._hash.digest();
	if (!Buffer.isBuffer(sig)) {
		sig = new Buffer(sig, enc);
	}
	return verify(sig, Buffer.concat([this._tag, hash]), key);
};
}).call(this,require("buffer").Buffer)
},{"./algos":32,"./sign":76,"./verify":77,"buffer":9,"inherits":152,"stream":167}],34:[function(require,module,exports){
// Utils

function assert(val, msg) {
  if (!val)
    throw new Error(msg || 'Assertion failed');
}

function assertEqual(l, r, msg) {
  if (l != r)
    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));
}

// Could use `inherits` module, but don't want to move from single file
// architecture yet.
function inherits(ctor, superCtor) {
  ctor.super_ = superCtor
  var TempCtor = function () {}
  TempCtor.prototype = superCtor.prototype
  ctor.prototype = new TempCtor()
  ctor.prototype.constructor = ctor
}

// BN

function BN(number, base, endian) {
  // May be `new BN(bn)` ?
  if (number !== null &&
      typeof number === 'object' &&
      Array.isArray(number.words)) {
    return number;
  }

  this.sign = false;
  this.words = null;
  this.length = 0;

  // Reduction context
  this.red = null;

  if (base === 'le' || base === 'be') {
    endian = base;
    base = 10;
  }

  if (number !== null)
    this._init(number || 0, base || 10, endian || 'be');
}
if (typeof module === 'object')
  module.exports = BN;

BN.BN = BN;
BN.wordSize = 26;

BN.prototype._init = function init(number, base, endian) {
  if (typeof number === 'number') {
    if (number < 0) {
      this.sign = true;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [ number & 0x3ffffff ];
      this.length = 1;
    } else {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    }
    return;
  } else if (typeof number === 'object') {
    return this._initArray(number, base, endian);
  }
  if (base === 'hex')
    base = 16;
  assert(base === (base | 0) && base >= 2 && base <= 36);

  number = number.toString().replace(/\s+/g, '');
  var start = 0;
  if (number[0] === '-')
    start++;

  if (base === 16)
    this._parseHex(number, start);
  else
    this._parseBase(number, base, start);

  if (number[0] === '-')
    this.sign = true;

  this.strip();
};

BN.prototype._initArray = function _initArray(number, base, endian) {
  // Perhaps a Uint8Array
  assert(typeof number.length === 'number');
  this.length = Math.ceil(number.length / 3);
  this.words = new Array(this.length);
  for (var i = 0; i < this.length; i++)
    this.words[i] = 0;

  var off = 0;
  if (endian === 'be') {
    for (var i = number.length - 1, j = 0; i >= 0; i -= 3) {
      var w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
      this.words[j] |= (w << off) & 0x3ffffff;
      this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
      off += 24;
      if (off >= 26) {
        off -= 26;
        j++;
      }
    }
  } else if (endian === 'le') {
    for (var i = 0, j = 0; i < number.length; i += 3) {
      var w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
      this.words[j] |= (w << off) & 0x3ffffff;
      this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
      off += 24;
      if (off >= 26) {
        off -= 26;
        j++;
      }
    }
  }
  return this.strip();
};

BN.prototype._parseHex = function parseHex(number, start) {
  // Create possibly bigger array to ensure that it fits the number
  this.length = Math.ceil((number.length - start) / 6);
  this.words = new Array(this.length);
  for (var i = 0; i < this.length; i++)
    this.words[i] = 0;

  // Scan 24-bit chunks and add them to the number
  var off = 0;
  for (var i = number.length - 6, j = 0; i >= start; i -= 6) {
    var w = parseInt(number.slice(i, i + 6), 16);
    this.words[j] |= (w << off) & 0x3ffffff;
    this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
    off += 24;
    if (off >= 26) {
      off -= 26;
      j++;
    }
  }
  if (i + 6 !== start) {
    var w = parseInt(number.slice(start, i + 6), 16);
    this.words[j] |= (w << off) & 0x3ffffff;
    this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
  }
  this.strip();
};

BN.prototype._parseBase = function parseBase(number, base, start) {
  // Initialize as zero
  this.words = [ 0 ];
  this.length = 1;

  var word = 0;
  var q = 1;
  var p = 0;
  var bigQ = null;
  for (var i = start; i < number.length; i++) {
    var digit;
    var ch = number[i];
    if (base === 10 || ch <= '9')
      digit = ch | 0;
    else if (ch >= 'a')
      digit = ch.charCodeAt(0) - 97 + 10;
    else
      digit = ch.charCodeAt(0) - 65 + 10;
    word *= base;
    word += digit;
    q *= base;
    p++;

    if (q > 0xfffff) {
      assert(q <= 0x3ffffff);
      if (!bigQ)
        bigQ = new BN(q);
      this.mul(bigQ).copy(this);
      this.iadd(new BN(word));
      word = 0;
      q = 1;
      p = 0;
    }
  }
  if (p !== 0) {
    this.mul(new BN(q)).copy(this);
    this.iadd(new BN(word));
  }
};

BN.prototype.copy = function copy(dest) {
  dest.words = new Array(this.length);
  for (var i = 0; i < this.length; i++)
    dest.words[i] = this.words[i];
  dest.length = this.length;
  dest.sign = this.sign;
  dest.red = this.red;
};

BN.prototype.clone = function clone() {
  var r = new BN(null);
  this.copy(r);
  return r;
};

// Remove leading `0` from `this`
BN.prototype.strip = function strip() {
  while (this.length > 1 && this.words[this.length - 1] === 0)
    this.length--;
  return this._normSign();
};

BN.prototype._normSign = function _normSign() {
  // -0 = 0
  if (this.length === 1 && this.words[0] === 0)
    this.sign = false;
  return this;
};

BN.prototype.inspect = function inspect() {
  return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
};

/*

var zeros = [];
var groupSizes = [];
var groupBases = [];

var s = '';
var i = -1;
while (++i < BN.wordSize) {
  zeros[i] = s;
  s += '0';
}
groupSizes[0] = 0;
groupSizes[1] = 0;
groupBases[0] = 0;
groupBases[1] = 0;
var base = 2 - 1;
while (++base < 36 + 1) {
  var groupSize = 0;
  var groupBase = 1;
  // TODO: <=
  while (groupBase < (1 << BN.wordSize) / base) {
    groupBase *= base;
    groupSize += 1;
  }
  groupSizes[base] = groupSize;
  groupBases[base] = groupBase;
}

*/

var zeros = [
  '',
  '0',
  '00',
  '000',
  '0000',
  '00000',
  '000000',
  '0000000',
  '00000000',
  '000000000',
  '0000000000',
  '00000000000',
  '000000000000',
  '0000000000000',
  '00000000000000',
  '000000000000000',
  '0000000000000000',
  '00000000000000000',
  '000000000000000000',
  '0000000000000000000',
  '00000000000000000000',
  '000000000000000000000',
  '0000000000000000000000',
  '00000000000000000000000',
  '000000000000000000000000',
  '0000000000000000000000000'
];

var groupSizes = [
  0, 0,
  25, 16, 12, 11, 10, 9, 8,
  8, 7, 7, 7, 7, 6, 6,
  6, 6, 6, 6, 6, 5, 5,
  5, 5, 5, 5, 5, 5, 5,
  5, 5, 5, 5, 5, 5, 5
];

var groupBases = [
  0, 0,
  33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
  43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
  16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
  6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
  24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
];

BN.prototype.toString = function toString(base, padding) {
  base = base || 10;
  if (base === 16 || base === 'hex') {
    var out = '';
    var off = 0;
    var padding = padding | 0 || 1;
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = this.words[i];
      var word = (((w << off) | carry) & 0xffffff).toString(16);
      carry = (w >>> (24 - off)) & 0xffffff;
      if (carry !== 0 || i !== this.length - 1)
        out = zeros[6 - word.length] + word + out;
      else
        out = word + out;
      off += 2;
      if (off >= 26) {
        off -= 26;
        i--;
      }
    }
    if (carry !== 0)
      out = carry.toString(16) + out;
    while (out.length % padding !== 0)
      out = '0' + out;
    if (this.sign)
      out = '-' + out;
    return out;
  } else if (base === (base | 0) && base >= 2 && base <= 36) {
    // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
    var groupSize = groupSizes[base];
    // var groupBase = Math.pow(base, groupSize);
    var groupBase = groupBases[base];
    var out = '';
    var c = this.clone();
    c.sign = false;
    while (c.cmpn(0) !== 0) {
      var r = c.modn(groupBase).toString(base);
      c = c.idivn(groupBase);

      if (c.cmpn(0) !== 0)
        out = zeros[groupSize - r.length] + r + out;
      else
        out = r + out;
    }
    if (this.cmpn(0) === 0)
      out = '0' + out;
    if (this.sign)
      out = '-' + out;
    return out;
  } else {
    assert(false, 'Base should be between 2 and 36');
  }
};

BN.prototype.toJSON = function toJSON() {
  return this.toString(16);
};

BN.prototype.toArray = function toArray() {
  this.strip();
  var res = new Array(this.byteLength());
  res[0] = 0;

  var q = this.clone();
  for (var i = 0; q.cmpn(0) !== 0; i++) {
    var b = q.andln(0xff);
    q.ishrn(8);

    // Assume big-endian
    res[res.length - i - 1] = b;
  }

  return res;
};

/*
function genCountBits(bits) {
  var arr = [];

  for (var i = bits - 1; i >= 0; i--) {
    var bit = '0x' + (1 << i).toString(16);
    arr.push('w >= ' + bit + ' ? ' + (i + 1));
  }

  return new Function('w', 'return ' + arr.join(' :\n') + ' :\n0;');
};

BN.prototype._countBits = genCountBits(26);
*/

// Sadly chrome apps could not contain `new Function()` calls
BN.prototype._countBits = function _countBits(w) {
  return w >= 0x2000000 ? 26 :
         w >= 0x1000000 ? 25 :
         w >= 0x800000 ? 24 :
         w >= 0x400000 ? 23 :
         w >= 0x200000 ? 22 :
         w >= 0x100000 ? 21 :
         w >= 0x80000 ? 20 :
         w >= 0x40000 ? 19 :
         w >= 0x20000 ? 18 :
         w >= 0x10000 ? 17 :
         w >= 0x8000 ? 16 :
         w >= 0x4000 ? 15 :
         w >= 0x2000 ? 14 :
         w >= 0x1000 ? 13 :
         w >= 0x800 ? 12 :
         w >= 0x400 ? 11 :
         w >= 0x200 ? 10 :
         w >= 0x100 ? 9 :
         w >= 0x80 ? 8 :
         w >= 0x40 ? 7 :
         w >= 0x20 ? 6 :
         w >= 0x10 ? 5 :
         w >= 0x8 ? 4 :
         w >= 0x4 ? 3 :
         w >= 0x2 ? 2 :
         w >= 0x1 ? 1 :
         0;
};

// Return number of used bits in a BN
BN.prototype.bitLength = function bitLength() {
  var hi = 0;
  var w = this.words[this.length - 1];
  var hi = this._countBits(w);
  return (this.length - 1) * 26 + hi;
};

BN.prototype.byteLength = function byteLength() {
  var hi = 0;
  var w = this.words[this.length - 1];
  return Math.ceil(this.bitLength() / 8);
};

// Return negative clone of `this`
BN.prototype.neg = function neg() {
  if (this.cmpn(0) === 0)
    return this.clone();

  var r = this.clone();
  r.sign = !this.sign;
  return r;
};

// Add `num` to `this` in-place
BN.prototype.iadd = function iadd(num) {
  // negative + positive
  if (this.sign && !num.sign) {
    this.sign = false;
    var r = this.isub(num);
    this.sign = !this.sign;
    return this._normSign();

  // positive + negative
  } else if (!this.sign && num.sign) {
    num.sign = false;
    var r = this.isub(num);
    num.sign = true;
    return r._normSign();
  }

  // a.length > b.length
  var a;
  var b;
  if (this.length > num.length) {
    a = this;
    b = num;
  } else {
    a = num;
    b = this;
  }

  var carry = 0;
  for (var i = 0; i < b.length; i++) {
    var r = a.words[i] + b.words[i] + carry;
    this.words[i] = r & 0x3ffffff;
    carry = r >>> 26;
  }
  for (; carry !== 0 && i < a.length; i++) {
    var r = a.words[i] + carry;
    this.words[i] = r & 0x3ffffff;
    carry = r >>> 26;
  }

  this.length = a.length;
  if (carry !== 0) {
    this.words[this.length] = carry;
    this.length++;
  // Copy the rest of the words
  } else if (a !== this) {
    for (; i < a.length; i++)
      this.words[i] = a.words[i];
  }

  return this;
};

// Add `num` to `this`
BN.prototype.add = function add(num) {
  if (num.sign && !this.sign) {
    num.sign = false;
    var res = this.sub(num);
    num.sign = true;
    return res;
  } else if (!num.sign && this.sign) {
    this.sign = false;
    var res = num.sub(this);
    this.sign = true;
    return res;
  }

  if (this.length > num.length)
    return this.clone().iadd(num);
  else
    return num.clone().iadd(this);
};

// Subtract `num` from `this` in-place
BN.prototype.isub = function isub(num) {
  // this - (-num) = this + num
  if (num.sign) {
    num.sign = false;
    var r = this.iadd(num);
    num.sign = true;
    return r._normSign();

  // -this - num = -(this + num)
  } else if (this.sign) {
    this.sign = false;
    this.iadd(num);
    this.sign = true;
    return this._normSign();
  }

  // At this point both numbers are positive
  var cmp = this.cmp(num);

  // Optimization - zeroify
  if (cmp === 0) {
    this.sign = false;
    this.length = 1;
    this.words[0] = 0;
    return this;
  }

  // a > b
  if (cmp > 0) {
    var a = this;
    var b = num;
  } else {
    var a = num;
    var b = this;
  }

  var carry = 0;
  for (var i = 0; i < b.length; i++) {
    var r = a.words[i] - b.words[i] - carry;
    if (r < 0) {
      r += 0x4000000;
      carry = 1;
    } else {
      carry = 0;
    }
    this.words[i] = r;
  }
  for (; carry !== 0 && i < a.length; i++) {
    var r = a.words[i] - carry;
    if (r < 0) {
      r += 0x4000000;
      carry = 1;
    } else {
      carry = 0;
    }
    this.words[i] = r;
  }

  // Copy rest of the words
  if (carry === 0 && i < a.length && a !== this)
    for (; i < a.length; i++)
      this.words[i] = a.words[i];
  this.length = Math.max(this.length, i);

  if (a !== this)
    this.sign = true;

  return this.strip();
};

// Subtract `num` from `this`
BN.prototype.sub = function sub(num) {
  return this.clone().isub(num);
};

/*
// NOTE: This could be potentionally used to generate loop-less multiplications
function _genCombMulTo(alen, blen) {
  var len = alen + blen - 1;
  var src = [
    'var a = this.words, b = num.words, o = out.words, c = 0, w, ' +
        'mask = 0x3ffffff, shift = 0x4000000;',
    'out.length = ' + len + ';'
  ];
  for (var k = 0; k < len; k++) {
    var minJ = Math.max(0, k - alen + 1);
    var maxJ = Math.min(k, blen - 1);

    for (var j = minJ; j <= maxJ; j++) {
      var i = k - j;
      var mul = 'a[' + i + '] * b[' + j + ']';

      if (j === minJ) {
        src.push('w = ' + mul + ' + c;');
        src.push('c = (w / shift) | 0;');
      } else {
        src.push('w += ' + mul + ';');
        src.push('c += (w / shift) | 0;');
      }
      src.push('w &= mask;');
    }
    src.push('o[' + k + '] = w;');
  }
  src.push('if (c !== 0) {',
           '  o[' + k + '] = c;',
           '  out.length++;',
           '}',
           'return out;');

  return src.join('\n');
}
*/

BN.prototype._smallMulTo = function _smallMulTo(num, out) {
  out.sign = num.sign !== this.sign;
  out.length = this.length + num.length;

  var carry = 0;
  for (var k = 0; k < out.length - 1; k++) {
    // Sum all words with the same `i + j = k` and accumulate `ncarry`,
    // note that ncarry could be >= 0x3ffffff
    var ncarry = carry >>> 26;
    var rword = carry & 0x3ffffff;
    var maxJ = Math.min(k, num.length - 1);
    for (var j = Math.max(0, k - this.length + 1); j <= maxJ; j++) {
      var i = k - j;
      var a = this.words[i] | 0;
      var b = num.words[j] | 0;
      var r = a * b;

      var lo = r & 0x3ffffff;
      ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
      lo = (lo + rword) | 0;
      rword = lo & 0x3ffffff;
      ncarry = (ncarry + (lo >>> 26)) | 0;
    }
    out.words[k] = rword;
    carry = ncarry;
  }
  if (carry !== 0) {
    out.words[k] = carry;
  } else {
    out.length--;
  }

  return out.strip();
};

BN.prototype._bigMulTo = function _bigMulTo(num, out) {
  out.sign = num.sign !== this.sign;
  out.length = this.length + num.length;

  var carry = 0;
  var hncarry = 0;
  for (var k = 0; k < out.length - 1; k++) {
    // Sum all words with the same `i + j = k` and accumulate `ncarry`,
    // note that ncarry could be >= 0x3ffffff
    var ncarry = hncarry;
    hncarry = 0;
    var rword = carry & 0x3ffffff;
    var maxJ = Math.min(k, num.length - 1);
    for (var j = Math.max(0, k - this.length + 1); j <= maxJ; j++) {
      var i = k - j;
      var a = this.words[i] | 0;
      var b = num.words[j] | 0;
      var r = a * b;

      var lo = r & 0x3ffffff;
      ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
      lo = (lo + rword) | 0;
      rword = lo & 0x3ffffff;
      ncarry = (ncarry + (lo >>> 26)) | 0;

      hncarry += ncarry >>> 26;
      ncarry &= 0x3ffffff;
    }
    out.words[k] = rword;
    carry = ncarry;
    ncarry = hncarry;
  }
  if (carry !== 0) {
    out.words[k] = carry;
  } else {
    out.length--;
  }

  return out.strip();
};

BN.prototype.mulTo = function mulTo(num, out) {
  var res;
  if (this.length + num.length < 63)
    res = this._smallMulTo(num, out);
  else
    res = this._bigMulTo(num, out);
  return res;
};

// Multiply `this` by `num`
BN.prototype.mul = function mul(num) {
  var out = new BN(null);
  out.words = new Array(this.length + num.length);
  return this.mulTo(num, out);
};

// In-place Multiplication
BN.prototype.imul = function imul(num) {
  if (this.cmpn(0) === 0 || num.cmpn(0) === 0) {
    this.words[0] = 0;
    this.length = 1;
    return this;
  }

  var tlen = this.length;
  var nlen = num.length;

  this.sign = num.sign !== this.sign;
  this.length = this.length + num.length;
  this.words[this.length - 1] = 0;

  var lastCarry = 0;
  for (var k = this.length - 2; k >= 0; k--) {
    // Sum all words with the same `i + j = k` and accumulate `carry`,
    // note that carry could be >= 0x3ffffff
    var carry = 0;
    var rword = 0;
    var maxJ = Math.min(k, nlen - 1);
    for (var j = Math.max(0, k - tlen + 1); j <= maxJ; j++) {
      var i = k - j;
      var a = this.words[i];
      var b = num.words[j];
      var r = a * b;

      var lo = r & 0x3ffffff;
      carry += (r / 0x4000000) | 0;
      lo += rword;
      rword = lo & 0x3ffffff;
      carry += lo >>> 26;
    }
    this.words[k] = rword;
    this.words[k + 1] += carry;
    carry = 0;
  }

  // Propagate overflows
  var carry = 0;
  for (var i = 1; i < this.length; i++) {
    var w = this.words[i] + carry;
    this.words[i] = w & 0x3ffffff;
    carry = w >>> 26;
  }

  return this.strip();
};

// `this` * `this`
BN.prototype.sqr = function sqr() {
  return this.mul(this);
};

// `this` * `this` in-place
BN.prototype.isqr = function isqr() {
  return this.mul(this);
};

// Shift-left in-place
BN.prototype.ishln = function ishln(bits) {
  assert(typeof bits === 'number' && bits >= 0);
  var r = bits % 26;
  var s = (bits - r) / 26;
  var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);

  var o = this.clone();
  if (r !== 0) {
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var newCarry = this.words[i] & carryMask;
      var c = (this.words[i] - newCarry) << r;
      this.words[i] = c | carry;
      carry = newCarry >>> (26 - r);
    }
    if (carry) {
      this.words[i] = carry;
      this.length++;
    }
  }

  if (s !== 0) {
    for (var i = this.length - 1; i >= 0; i--)
      this.words[i + s] = this.words[i];
    for (var i = 0; i < s; i++)
      this.words[i] = 0;
    this.length += s;
  }

  return this.strip();
};

// Shift-right in-place
// NOTE: `hint` is a lowest bit before trailing zeroes
// NOTE: if `extended` is true - { lo: ..., hi: } object will be returned
BN.prototype.ishrn = function ishrn(bits, hint, extended) {
  assert(typeof bits === 'number' && bits >= 0);
  if (hint)
    hint = (hint - (hint % 26)) / 26;
  else
    hint = 0;

  var r = bits % 26;
  var s = Math.min((bits - r) / 26, this.length);
  var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
  var maskedWords = extended;

  hint -= s;
  hint = Math.max(0, hint);

  // Extended mode, copy masked part
  if (maskedWords) {
    for (var i = 0; i < s; i++)
      maskedWords.words[i] = this.words[i];
    maskedWords.length = s;
  }

  if (s === 0) {
    // No-op, we should not move anything at all
  } else if (this.length > s) {
    this.length -= s;
    for (var i = 0; i < this.length; i++)
      this.words[i] = this.words[i + s];
  } else {
    this.words[0] = 0;
    this.length = 1;
  }

  var carry = 0;
  for (var i = this.length - 1; i >= 0 && (carry !== 0 || i >= hint); i--) {
    var word = this.words[i];
    this.words[i] = (carry << (26 - r)) | (word >>> r);
    carry = word & mask;
  }

  // Push carried bits as a mask
  if (maskedWords && carry !== 0)
    maskedWords.words[maskedWords.length++] = carry;

  if (this.length === 0) {
    this.words[0] = 0;
    this.length = 1;
  }

  this.strip();
  if (extended)
    return { hi: this, lo: maskedWords };

  return this;
};

// Shift-left
BN.prototype.shln = function shln(bits) {
  return this.clone().ishln(bits);
};

// Shift-right
BN.prototype.shrn = function shrn(bits) {
  return this.clone().ishrn(bits);
};

// Test if n bit is set
BN.prototype.testn = function testn(bit) {
  assert(typeof bit === 'number' && bit >= 0);
  var r = bit % 26;
  var s = (bit - r) / 26;
  var q = 1 << r;

  // Fast case: bit is much higher than all existing words
  if (this.length <= s) {
    return false;
  }

  // Check bit and return
  var w = this.words[s];

  return !!(w & q);
};

// Return only lowers bits of number (in-place)
BN.prototype.imaskn = function imaskn(bits) {
  assert(typeof bits === 'number' && bits >= 0);
  var r = bits % 26;
  var s = (bits - r) / 26;

  assert(!this.sign, 'imaskn works only with positive numbers');

  if (r !== 0)
    s++;
  this.length = Math.min(s, this.length);

  if (r !== 0) {
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    this.words[this.length - 1] &= mask;
  }

  return this.strip();
};

// Return only lowers bits of number
BN.prototype.maskn = function maskn(bits) {
  return this.clone().imaskn(bits);
};

// Add plain number `num` to `this`
BN.prototype.iaddn = function iaddn(num) {
  assert(typeof num === 'number');
  if (num < 0)
    return this.isubn(-num);

  // Possible sign change
  if (this.sign) {
    if (this.length === 1 && this.words[0] < num) {
      this.words[0] = num - this.words[0];
      this.sign = false;
      return this;
    }

    this.sign = false;
    this.isubn(num);
    this.sign = true;
    return this;
  }
  this.words[0] += num;

  // Carry
  for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
    this.words[i] -= 0x4000000;
    if (i === this.length - 1)
      this.words[i + 1] = 1;
    else
      this.words[i + 1]++;
  }
  this.length = Math.max(this.length, i + 1);

  return this;
};

// Subtract plain number `num` from `this`
BN.prototype.isubn = function isubn(num) {
  assert(typeof num === 'number');
  if (num < 0)
    return this.iaddn(-num);

  if (this.sign) {
    this.sign = false;
    this.iaddn(num);
    this.sign = true;
    return this;
  }

  this.words[0] -= num;

  // Carry
  for (var i = 0; i < this.length && this.words[i] < 0; i++) {
    this.words[i] += 0x4000000;
    this.words[i + 1] -= 1;
  }

  return this.strip();
};

BN.prototype.addn = function addn(num) {
  return this.clone().iaddn(num);
};

BN.prototype.subn = function subn(num) {
  return this.clone().isubn(num);
};

BN.prototype.iabs = function iabs() {
  this.sign = false;

  return this
};

BN.prototype.abs = function abs() {
  return this.clone().iabs();
};

BN.prototype._wordDiv = function _wordDiv(num, mode) {
  var shift = this.length - num.length;

  var a = this.clone();
  var b = num;

  var q = mode !== 'mod' && new BN(0);
  var sign = false;

  // Approximate quotient at each step
  while (a.length > b.length) {
    // NOTE: a.length is always >= 2, because of the condition .div()
    var hi = a.words[a.length - 1] * 0x4000000 + a.words[a.length - 2];
    var sq = (hi / b.words[b.length - 1]);
    var sqhi = (sq / 0x4000000) | 0;
    var sqlo = sq & 0x3ffffff;
    sq = new BN(null);
    sq.words = [ sqlo, sqhi ];
    sq.length = 2;

    // Collect quotient
    var shift = (a.length - b.length - 1) * 26;
    if (q) {
      var t = sq.shln(shift);
      if (a.sign)
        q.isub(t);
      else
        q.iadd(t);
    }

    sq = sq.mul(b).ishln(shift);
    if (a.sign)
      a.iadd(sq)
    else
      a.isub(sq);
  }
  // At this point a.length <= b.length
  while (a.ucmp(b) >= 0) {
    // NOTE: a.length is always >= 2, because of the condition above
    var hi = a.words[a.length - 1];
    var sq = new BN((hi / b.words[b.length - 1]) | 0);
    var shift = (a.length - b.length) * 26;

    if (q) {
      var t = sq.shln(shift);
      if (a.sign)
        q.isub(t);
      else
        q.iadd(t);
    }

    sq = sq.mul(b).ishln(shift);

    if (a.sign)
      a.iadd(sq);
    else
      a.isub(sq);
  }

  if (a.sign) {
    if (q)
      q.isubn(1);
    a.iadd(b);
  }
  return { div: q ? q : null, mod: a };
};

BN.prototype.divmod = function divmod(num, mode) {
  assert(num.cmpn(0) !== 0);

  if (this.sign && !num.sign) {
    var res = this.neg().divmod(num, mode);
    var div;
    var mod;
    if (mode !== 'mod')
      div = res.div.neg();
    if (mode !== 'div')
      mod = res.mod.cmpn(0) === 0 ? res.mod : num.sub(res.mod);
    return {
      div: div,
      mod: mod
    };
  } else if (!this.sign && num.sign) {
    var res = this.divmod(num.neg(), mode);
    var div;
    if (mode !== 'mod')
      div = res.div.neg();
    return { div: div, mod: res.mod };
  } else if (this.sign && num.sign) {
    return this.neg().divmod(num.neg(), mode);
  }

  // Both numbers are positive at this point

  // Strip both numbers to approximate shift value
  if (num.length > this.length || this.cmp(num) < 0)
    return { div: new BN(0), mod: this };

  // Very short reduction
  if (num.length === 1) {
    if (mode === 'div')
      return { div: this.divn(num.words[0]), mod: null };
    else if (mode === 'mod')
      return { div: null, mod: new BN(this.modn(num.words[0])) };
    return {
      div: this.divn(num.words[0]),
      mod: new BN(this.modn(num.words[0]))
    };
  }

  return this._wordDiv(num, mode);
};

// Find `this` / `num`
BN.prototype.div = function div(num) {
  return this.divmod(num, 'div').div;
};

// Find `this` % `num`
BN.prototype.mod = function mod(num) {
  return this.divmod(num, 'mod').mod;
};

// Find Round(`this` / `num`)
BN.prototype.divRound = function divRound(num) {
  var dm = this.divmod(num);

  // Fast case - exact division
  if (dm.mod.cmpn(0) === 0)
    return dm.div;

  var mod = dm.div.sign ? dm.mod.isub(num) : dm.mod;

  var half = num.shrn(1);
  var r2 = num.andln(1);
  var cmp = mod.cmp(half);

  // Round down
  if (cmp < 0 || r2 === 1 && cmp === 0)
    return dm.div;

  // Round up
  return dm.div.sign ? dm.div.isubn(1) : dm.div.iaddn(1);
};

BN.prototype.modn = function modn(num) {
  assert(num <= 0x3ffffff);
  var p = (1 << 26) % num;

  var acc = 0;
  for (var i = this.length - 1; i >= 0; i--)
    acc = (p * acc + this.words[i]) % num;

  return acc;
};

// In-place division by number
BN.prototype.idivn = function idivn(num) {
  assert(num <= 0x3ffffff);

  var carry = 0;
  for (var i = this.length - 1; i >= 0; i--) {
    var w = this.words[i] + carry * 0x4000000;
    this.words[i] = (w / num) | 0;
    carry = w % num;
  }

  return this.strip();
};

BN.prototype.divn = function divn(num) {
  return this.clone().idivn(num);
};

BN.prototype._egcd = function _egcd(x1, p) {
  assert(!p.sign);
  assert(p.cmpn(0) !== 0);

  var a = this;
  var b = p.clone();

  if (a.sign)
    a = a.mod(p);
  else
    a = a.clone();

  var x2 = new BN(0);
  while (b.isEven())
    b.ishrn(1);
  var delta = b.clone();
  while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
    while (a.isEven()) {
      a.ishrn(1);
      if (x1.isEven())
        x1.ishrn(1);
      else
        x1.iadd(delta).ishrn(1);
    }
    while (b.isEven()) {
      b.ishrn(1);
      if (x2.isEven())
        x2.ishrn(1);
      else
        x2.iadd(delta).ishrn(1);
    }
    if (a.cmp(b) >= 0) {
      a.isub(b);
      x1.isub(x2);
    } else {
      b.isub(a);
      x2.isub(x1);
    }
  }
  if (a.cmpn(1) === 0)
    return x1;
  else
    return x2;
};

BN.prototype.gcd = function gcd(num) {
  if (this.cmpn(0) === 0)
    return num.clone();
  if (num.cmpn(0) === 0)
    return this.clone();

  var a = this.clone();
  var b = num.clone();
  a.sign = false;
  b.sign = false;

  // Remove common factor of two
  for (var shift = 0; a.isEven() && b.isEven(); shift++) {
    a.ishrn(1);
    b.ishrn(1);
  }

  while (a.isEven())
    a.ishrn(1);

  do {
    while (b.isEven())
      b.ishrn(1);

    // Swap `a` and `b` to make `a` always bigger than `b`
    if (a.cmp(b) < 0) {
      var t = a;
      a = b;
      b = t;
    }
    a.isub(a.div(b).mul(b));
  } while (a.cmpn(0) !== 0 && b.cmpn(0) !== 0);
  if (a.cmpn(0) === 0)
    return b.ishln(shift);
  else
    return a.ishln(shift);
};

// Invert number in the field F(num)
BN.prototype.invm = function invm(num) {
  return this._egcd(new BN(1), num).mod(num);
};

BN.prototype.isEven = function isEven(num) {
  return (this.words[0] & 1) === 0;
};

BN.prototype.isOdd = function isOdd(num) {
  return (this.words[0] & 1) === 1;
};

// And first word and num
BN.prototype.andln = function andln(num) {
  return this.words[0] & num;
};

// Increment at the bit position in-line
BN.prototype.bincn = function bincn(bit) {
  assert(typeof bit === 'number');
  var r = bit % 26;
  var s = (bit - r) / 26;
  var q = 1 << r;

  // Fast case: bit is much higher than all existing words
  if (this.length <= s) {
    for (var i = this.length; i < s + 1; i++)
      this.words[i] = 0;
    this.words[s] |= q;
    this.length = s + 1;
    return this;
  }

  // Add bit and propagate, if needed
  var carry = q;
  for (var i = s; carry !== 0 && i < this.length; i++) {
    var w = this.words[i];
    w += carry;
    carry = w >>> 26;
    w &= 0x3ffffff;
    this.words[i] = w;
  }
  if (carry !== 0) {
    this.words[i] = carry;
    this.length++;
  }
  return this;
};

BN.prototype.cmpn = function cmpn(num) {
  var sign = num < 0;
  if (sign)
    num = -num;

  if (this.sign && !sign)
    return -1;
  else if (!this.sign && sign)
    return 1;

  num &= 0x3ffffff;
  this.strip();

  var res;
  if (this.length > 1) {
    res = 1;
  } else {
    var w = this.words[0];
    res = w === num ? 0 : w < num ? -1 : 1;
  }
  if (this.sign)
    res = -res;
  return res;
};

// Compare two numbers and return:
// 1 - if `this` > `num`
// 0 - if `this` == `num`
// -1 - if `this` < `num`
BN.prototype.cmp = function cmp(num) {
  if (this.sign && !num.sign)
    return -1;
  else if (!this.sign && num.sign)
    return 1;

  var res = this.ucmp(num);
  if (this.sign)
    return -res;
  else
    return res;
};

// Unsigned comparison
BN.prototype.ucmp = function ucmp(num) {
  // At this point both numbers have the same sign
  if (this.length > num.length)
    return 1;
  else if (this.length < num.length)
    return -1;

  var res = 0;
  for (var i = this.length - 1; i >= 0; i--) {
    var a = this.words[i];
    var b = num.words[i];

    if (a === b)
      continue;
    if (a < b)
      res = -1;
    else if (a > b)
      res = 1;
    break;
  }
  return res;
};

//
// A reduce context, could be using montgomery or something better, depending
// on the `m` itself.
//
BN.red = function red(num) {
  return new Red(num);
};

BN.prototype.toRed = function toRed(ctx) {
  assert(!this.red, 'Already a number in reduction context');
  assert(!this.sign, 'red works only with positives');
  return ctx.convertTo(this)._forceRed(ctx);
};

BN.prototype.fromRed = function fromRed() {
  assert(this.red, 'fromRed works only with numbers in reduction context');
  return this.red.convertFrom(this);
};

BN.prototype._forceRed = function _forceRed(ctx) {
  this.red = ctx;
  return this;
};

BN.prototype.forceRed = function forceRed(ctx) {
  assert(!this.red, 'Already a number in reduction context');
  return this._forceRed(ctx);
};

BN.prototype.redAdd = function redAdd(num) {
  assert(this.red, 'redAdd works only with red numbers');
  return this.red.add(this, num);
};

BN.prototype.redIAdd = function redIAdd(num) {
  assert(this.red, 'redIAdd works only with red numbers');
  return this.red.iadd(this, num);
};

BN.prototype.redSub = function redSub(num) {
  assert(this.red, 'redSub works only with red numbers');
  return this.red.sub(this, num);
};

BN.prototype.redISub = function redISub(num) {
  assert(this.red, 'redISub works only with red numbers');
  return this.red.isub(this, num);
};

BN.prototype.redShl = function redShl(num) {
  assert(this.red, 'redShl works only with red numbers');
  return this.red.shl(this, num);
};

BN.prototype.redMul = function redMul(num) {
  assert(this.red, 'redMul works only with red numbers');
  this.red._verify2(this, num);
  return this.red.mul(this, num);
};

BN.prototype.redIMul = function redIMul(num) {
  assert(this.red, 'redMul works only with red numbers');
  this.red._verify2(this, num);
  return this.red.imul(this, num);
};

BN.prototype.redSqr = function redSqr() {
  assert(this.red, 'redSqr works only with red numbers');
  this.red._verify1(this);
  return this.red.sqr(this);
};

BN.prototype.redISqr = function redISqr() {
  assert(this.red, 'redISqr works only with red numbers');
  this.red._verify1(this);
  return this.red.isqr(this);
};

// Square root over p
BN.prototype.redSqrt = function redSqrt() {
  assert(this.red, 'redSqrt works only with red numbers');
  this.red._verify1(this);
  return this.red.sqrt(this);
};

BN.prototype.redInvm = function redInvm() {
  assert(this.red, 'redInvm works only with red numbers');
  this.red._verify1(this);
  return this.red.invm(this);
};

// Return negative clone of `this` % `red modulo`
BN.prototype.redNeg = function redNeg() {
  assert(this.red, 'redNeg works only with red numbers');
  this.red._verify1(this);
  return this.red.neg(this);
};

BN.prototype.redPow = function redPow(num) {
  assert(this.red && !num.red, 'redPow(normalNum)');
  this.red._verify1(this);
  return this.red.pow(this, num);
};

// Prime numbers with efficient reduction
var primes = {
  k256: null,
  p224: null,
  p192: null,
  p25519: null
};

// Pseudo-Mersenne prime
function MPrime(name, p) {
  // P = 2 ^ N - K
  this.name = name;
  this.p = new BN(p, 16);
  this.n = this.p.bitLength();
  this.k = new BN(1).ishln(this.n).isub(this.p);

  this.tmp = this._tmp();
}

MPrime.prototype._tmp = function _tmp() {
  var tmp = new BN(null);
  tmp.words = new Array(Math.ceil(this.n / 13));
  return tmp;
};

MPrime.prototype.ireduce = function ireduce(num) {
  // Assumes that `num` is less than `P^2`
  // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
  var r = num;
  var rlen;

  do {
    var pair = r.ishrn(this.n, 0, this.tmp);
    r = this.imulK(pair.hi);
    r = r.iadd(pair.lo);
    rlen = r.bitLength();
  } while (rlen > this.n);

  var cmp = rlen < this.n ? -1 : r.cmp(this.p);
  if (cmp === 0) {
    r.words[0] = 0;
    r.length = 1;
  } else if (cmp > 0) {
    r.isub(this.p);
  } else {
    r.strip();
  }

  return r;
};

MPrime.prototype.imulK = function imulK(num) {
  return num.imul(this.k);
};

function K256() {
  MPrime.call(
    this,
    'k256',
    'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
}
inherits(K256, MPrime);

K256.prototype.imulK = function imulK(num) {
  // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
  num.words[num.length] = 0;
  num.words[num.length + 1] = 0;
  num.length += 2;

  var uhi = 0;
  var hi = 0;
  var lo = 0;
  for (var i = 0; i < num.length; i++) {
    var w = num.words[i];
    hi += w * 0x40;
    lo += w * 0x3d1;
    hi += (lo / 0x4000000) | 0;
    uhi += (hi / 0x4000000) | 0;
    hi &= 0x3ffffff;
    lo &= 0x3ffffff;

    num.words[i] = lo;

    lo = hi;
    hi = uhi;
    uhi = 0;
  }

  // Fast length reduction
  if (num.words[num.length - 1] === 0)
    num.length--;
  if (num.words[num.length - 1] === 0)
    num.length--;
  return num;
};

function P224() {
  MPrime.call(
    this,
    'p224',
    'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
}
inherits(P224, MPrime);

function P192() {
  MPrime.call(
    this,
    'p192',
    'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
}
inherits(P192, MPrime);

function P25519() {
  // 2 ^ 255 - 19
  MPrime.call(
    this,
    '25519',
    '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
}
inherits(P25519, MPrime);

P25519.prototype.imulK = function imulK(num) {
  // K = 0x13
  var carry = 0;
  for (var i = 0; i < num.length; i++) {
    var hi = num.words[i] * 0x13 + carry;
    var lo = hi & 0x3ffffff;
    hi >>>= 26;

    num.words[i] = lo;
    carry = hi;
  }
  if (carry !== 0)
    num.words[num.length++] = carry;
  return num;
};

// Exported mostly for testing purposes, use plain name instead
BN._prime = function prime(name) {
  // Cached version of prime
  if (primes[name])
    return primes[name];

  var prime;
  if (name === 'k256')
    prime = new K256();
  else if (name === 'p224')
    prime = new P224();
  else if (name === 'p192')
    prime = new P192();
  else if (name === 'p25519')
    prime = new P25519();
  else
    throw new Error('Unknown prime ' + name);
  primes[name] = prime;

  return prime;
}

//
// Base reduction engine
//
function Red(m) {
  if (typeof m === 'string') {
    var prime = BN._prime(m);
    this.m = prime.p;
    this.prime = prime;
  } else {
    this.m = m;
    this.prime = null;
  }
}

Red.prototype._verify1 = function _verify1(a) {
  assert(!a.sign, 'red works only with positives');
  assert(a.red, 'red works only with red numbers');
};

Red.prototype._verify2 = function _verify2(a, b) {
  assert(!a.sign && !b.sign, 'red works only with positives');
  assert(a.red && a.red === b.red,
         'red works only with red numbers');
};

Red.prototype.imod = function imod(a) {
  if (this.prime)
    return this.prime.ireduce(a)._forceRed(this);
  return a.mod(this.m)._forceRed(this);
};

Red.prototype.neg = function neg(a) {
  var r = a.clone();
  r.sign = !r.sign;
  return r.iadd(this.m)._forceRed(this);
};

Red.prototype.add = function add(a, b) {
  this._verify2(a, b);

  var res = a.add(b);
  if (res.cmp(this.m) >= 0)
    res.isub(this.m);
  return res._forceRed(this);
};

Red.prototype.iadd = function iadd(a, b) {
  this._verify2(a, b);

  var res = a.iadd(b);
  if (res.cmp(this.m) >= 0)
    res.isub(this.m);
  return res;
};

Red.prototype.sub = function sub(a, b) {
  this._verify2(a, b);

  var res = a.sub(b);
  if (res.cmpn(0) < 0)
    res.iadd(this.m);
  return res._forceRed(this);
};

Red.prototype.isub = function isub(a, b) {
  this._verify2(a, b);

  var res = a.isub(b);
  if (res.cmpn(0) < 0)
    res.iadd(this.m);
  return res;
};

Red.prototype.shl = function shl(a, num) {
  this._verify1(a);
  return this.imod(a.shln(num));
};

Red.prototype.imul = function imul(a, b) {
  this._verify2(a, b);
  return this.imod(a.imul(b));
};

Red.prototype.mul = function mul(a, b) {
  this._verify2(a, b);
  return this.imod(a.mul(b));
};

Red.prototype.isqr = function isqr(a) {
  return this.imul(a, a);
};

Red.prototype.sqr = function sqr(a) {
  return this.mul(a, a);
};

Red.prototype.sqrt = function sqrt(a) {
  if (a.cmpn(0) === 0)
    return a.clone();

  var mod3 = this.m.andln(3);
  assert(mod3 % 2 === 1);

  // Fast case
  if (mod3 === 3) {
    var pow = this.m.add(new BN(1)).ishrn(2);
    var r = this.pow(a, pow);
    return r;
  }

  // Tonelli-Shanks algorithm (Totally unoptimized and slow)
  //
  // Find Q and S, that Q * 2 ^ S = (P - 1)
  var q = this.m.subn(1);
  var s = 0;
  while (q.cmpn(0) !== 0 && q.andln(1) === 0) {
    s++;
    q.ishrn(1);
  }
  assert(q.cmpn(0) !== 0);

  var one = new BN(1).toRed(this);
  var nOne = one.redNeg();

  // Find quadratic non-residue
  // NOTE: Max is such because of generalized Riemann hypothesis.
  var lpow = this.m.subn(1).ishrn(1);
  var z = this.m.bitLength();
  z = new BN(2 * z * z).toRed(this);
  while (this.pow(z, lpow).cmp(nOne) !== 0)
    z.redIAdd(nOne);

  var c = this.pow(z, q);
  var r = this.pow(a, q.addn(1).ishrn(1));
  var t = this.pow(a, q);
  var m = s;
  while (t.cmp(one) !== 0) {
    var tmp = t;
    for (var i = 0; tmp.cmp(one) !== 0; i++)
      tmp = tmp.redSqr();
    assert(i < m);
    var b = this.pow(c, new BN(1).ishln(m - i - 1));

    r = r.redMul(b);
    c = b.redSqr();
    t = t.redMul(c);
    m = i;
  }

  return r;
};

Red.prototype.invm = function invm(a) {
  var inv = a._egcd(new BN(1), this.m);
  if (inv.sign) {
    inv.sign = false;
    return this.imod(inv).redNeg();
  } else {
    return this.imod(inv);
  }
};

Red.prototype.pow = function pow(a, num) {
  var w = [];
  var q = num.clone();
  while (q.cmpn(0) !== 0) {
    w.push(q.andln(1));
    q.ishrn(1);
  }

  // Skip leading zeroes
  var res = a;
  for (var i = 0; i < w.length; i++, res = this.sqr(res))
    if (w[i] !== 0)
      break;

  if (++i < w.length) {
    for (var q = this.sqr(res); i < w.length; i++, q = this.sqr(q)) {
      if (w[i] === 0)
        continue;
      res = this.mul(res, q);
    }
  }

  return res;
};

Red.prototype.convertTo = function convertTo(num) {
  return num.clone();
};

Red.prototype.convertFrom = function convertFrom(num) {
  var res = num.clone();
  res.red = null;
  return res;
};

//
// Montgomery method engine
//

BN.mont = function mont(num) {
  return new Mont(num);
};

function Mont(m) {
  Red.call(this, m);

  this.shift = this.m.bitLength();
  if (this.shift % 26 !== 0)
    this.shift += 26 - (this.shift % 26);
  this.r = new BN(1).ishln(this.shift);
  this.r2 = this.imod(this.r.sqr());
  this.rinv = this.r.invm(this.m);

  // TODO(indutny): simplify it
  this.minv = this.rinv.mul(this.r)
                       .sub(new BN(1))
                       .div(this.m)
                       .neg()
                       .mod(this.r);
}
inherits(Mont, Red);

Mont.prototype.convertTo = function convertTo(num) {
  return this.imod(num.shln(this.shift));
};

Mont.prototype.convertFrom = function convertFrom(num) {
  var r = this.imod(num.mul(this.rinv));
  r.red = null;
  return r;
};

Mont.prototype.imul = function imul(a, b) {
  if (a.cmpn(0) === 0 || b.cmpn(0) === 0) {
    a.words[0] = 0;
    a.length = 1;
    return a;
  }

  var t = a.imul(b);
  var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
  var u = t.isub(c).ishrn(this.shift);
  var res = u;
  if (u.cmp(this.m) >= 0)
    res = u.isub(this.m);
  else if (u.cmpn(0) < 0)
    res = u.iadd(this.m);

  return res._forceRed(this);
};

Mont.prototype.mul = function mul(a, b) {
  if (a.cmpn(0) === 0 || b.cmpn(0) === 0)
    return new BN(0)._forceRed(this);

  var t = a.mul(b);
  var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
  var u = t.isub(c).ishrn(this.shift);
  var res = u;
  if (u.cmp(this.m) >= 0)
    res = u.isub(this.m);
  else if (u.cmpn(0) < 0)
    res = u.iadd(this.m);

  return res._forceRed(this);
};

Mont.prototype.invm = function invm(a) {
  // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
  var res = this.imod(a.invm(this.m).mul(this.r2));
  return res._forceRed(this);
};

},{}],35:[function(require,module,exports){
(function (Buffer){
var bn = require('bn.js');
module.exports = crt;
function blind(priv, crypto) {
  var r = getr(priv, crypto);
  var blinder = r.toRed(bn.mont(priv.modulus))
  .redPow(new bn(priv.publicExponent)).fromRed();
  return {
    blinder: blinder,
    unblinder:r.invm(priv.modulus)
  };
}
function crt(msg, priv, crypto) {
  var blinds = blind(priv, crypto);
  var len = priv.modulus.byteLength();
  var mod = bn.mont(priv.modulus);
  var blinded = new bn(msg).mul(blinds.blinder).mod(priv.modulus);
  var c1 = blinded.toRed(bn.mont(priv.prime1));
  var c2 = blinded.toRed(bn.mont(priv.prime2));
  var qinv = priv.coefficient;
  var p = priv.prime1;
  var q = priv.prime2;
  var m1 = c1.redPow(priv.exponent1);
  var m2 = c2.redPow(priv.exponent2);
  m1 = m1.fromRed();
  m2 = m2.fromRed();
  var h = m1.isub(m2).imul(qinv).mod(p);
  h.imul(q);
  m2.iadd(h);
  var out = new Buffer(m2.imul(blinds.unblinder).mod(priv.modulus).toArray());
  if (out.length < len) {
    var prefix = new Buffer(len - out.length);
    prefix.fill(0);
    out = Buffer.concat([prefix, out], len);
  }
  return out;
}
crt.getr = getr;
function getr(priv, crypto) {
  var len = priv.modulus.byteLength();
  var r = new bn(crypto.randomBytes(len));
  while (r.cmp(priv.modulus) >=  0 || !r.mod(priv.prime1) || !r.mod(priv.prime2)) {
    r = new bn(crypto.randomBytes(len));
  }
  return r;
}
}).call(this,require("buffer").Buffer)
},{"bn.js":34,"buffer":9}],36:[function(require,module,exports){
var elliptic = exports;

elliptic.version = require('../package.json').version;
elliptic.utils = require('./elliptic/utils');
elliptic.rand = require('brorand');
elliptic.hmacDRBG = require('./elliptic/hmac-drbg');
elliptic.curve = require('./elliptic/curve');
elliptic.curves = require('./elliptic/curves');

// Protocols
elliptic.ec = require('./elliptic/ec');

},{"../package.json":55,"./elliptic/curve":39,"./elliptic/curves":42,"./elliptic/ec":43,"./elliptic/hmac-drbg":46,"./elliptic/utils":47,"brorand":48}],37:[function(require,module,exports){
var bn = require('bn.js');
var elliptic = require('../../elliptic');

var getNAF = elliptic.utils.getNAF;
var getJSF = elliptic.utils.getJSF;
var assert = elliptic.utils.assert;

function BaseCurve(type, conf) {
  this.type = type;
  this.p = new bn(conf.p, 16);

  // Use Montgomery, when there is no fast reduction for the prime
  this.red = conf.prime ? bn.red(conf.prime) : bn.mont(this.p);

  // Useful for many curves
  this.zero = new bn(0).toRed(this.red);
  this.one = new bn(1).toRed(this.red);
  this.two = new bn(2).toRed(this.red);

  // Curve configuration, optional
  this.n = conf.n && new bn(conf.n, 16);
  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);

  // Temporary arrays
  this._wnafT1 = new Array(4);
  this._wnafT2 = new Array(4);
  this._wnafT3 = new Array(4);
  this._wnafT4 = new Array(4);
}
module.exports = BaseCurve;

BaseCurve.prototype.point = function point() {
  throw new Error('Not implemented');
};

BaseCurve.prototype.validate = function validate(point) {
  throw new Error('Not implemented');
};

BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
  var doubles = p._getDoubles();

  var naf = getNAF(k, 1);
  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);
  I /= 3;

  // Translate into more windowed form
  var repr = [];
  for (var j = 0; j < naf.length; j += doubles.step) {
    var nafW = 0;
    for (var k = j + doubles.step - 1; k >= j; k--)
      nafW = (nafW << 1) + naf[k];
    repr.push(nafW);
  }

  var a = this.jpoint(null, null, null);
  var b = this.jpoint(null, null, null);
  for (var i = I; i > 0; i--) {
    for (var j = 0; j < repr.length; j++) {
      var nafW = repr[j];
      if (nafW === i)
        b = b.mixedAdd(doubles.points[j]);
      else if (nafW === -i)
        b = b.mixedAdd(doubles.points[j].neg());
    }
    a = a.add(b);
  }
  return a.toP();
};

BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
  var w = 4;

  // Precompute window
  var nafPoints = p._getNAFPoints(w);
  w = nafPoints.wnd;
  var wnd = nafPoints.points;

  // Get NAF form
  var naf = getNAF(k, w);

  // Add `this`*(N+1) for every w-NAF index
  var acc = this.jpoint(null, null, null);
  for (var i = naf.length - 1; i >= 0; i--) {
    // Count zeroes
    for (var k = 0; i >= 0 && naf[i] === 0; i--)
      k++;
    if (i >= 0)
      k++;
    acc = acc.dblp(k);

    if (i < 0)
      break;
    var z = naf[i];
    assert(z !== 0);
    if (p.type === 'affine') {
      // J +- P
      if (z > 0)
        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);
      else
        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());
    } else {
      // J +- J
      if (z > 0)
        acc = acc.add(wnd[(z - 1) >> 1]);
      else
        acc = acc.add(wnd[(-z - 1) >> 1].neg());
    }
  }
  return p.type === 'affine' ? acc.toP() : acc;
};

BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,
                                                       points,
                                                       coeffs,
                                                       len) {
  var wndWidth = this._wnafT1;
  var wnd = this._wnafT2;
  var naf = this._wnafT3;

  // Fill all arrays
  var max = 0;
  for (var i = 0; i < len; i++) {
    var p = points[i];
    var nafPoints = p._getNAFPoints(defW);
    wndWidth[i] = nafPoints.wnd;
    wnd[i] = nafPoints.points;
  }

  // Comb small window NAFs
  for (var i = len - 1; i >= 1; i -= 2) {
    var a = i - 1;
    var b = i;
    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
      naf[a] = getNAF(coeffs[a], wndWidth[a]);
      naf[b] = getNAF(coeffs[b], wndWidth[b]);
      max = Math.max(naf[a].length, max);
      max = Math.max(naf[b].length, max);
      continue;
    }

    var comb = [
      points[a], /* 1 */
      null, /* 3 */
      null, /* 5 */
      points[b] /* 7 */
    ];

    // Try to avoid Projective points, if possible
    if (points[a].y.cmp(points[b].y) === 0) {
      comb[1] = points[a].add(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].add(points[b].neg());
    } else {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    }

    var index = [
      -3, /* -1 -1 */
      -1, /* -1 0 */
      -5, /* -1 1 */
      -7, /* 0 -1 */
      0, /* 0 0 */
      7, /* 0 1 */
      5, /* 1 -1 */
      1, /* 1 0 */
      3  /* 1 1 */
    ];

    var jsf = getJSF(coeffs[a], coeffs[b]);
    max = Math.max(jsf[0].length, max);
    naf[a] = new Array(max);
    naf[b] = new Array(max);
    for (var j = 0; j < max; j++) {
      var ja = jsf[0][j] | 0;
      var jb = jsf[1][j] | 0;

      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
      naf[b][j] = 0;
      wnd[a] = comb;
    }
  }

  var acc = this.jpoint(null, null, null);
  var tmp = this._wnafT4;
  for (var i = max; i >= 0; i--) {
    var k = 0;

    while (i >= 0) {
      var zero = true;
      for (var j = 0; j < len; j++) {
        tmp[j] = naf[j][i] | 0;
        if (tmp[j] !== 0)
          zero = false;
      }
      if (!zero)
        break;
      k++;
      i--;
    }
    if (i >= 0)
      k++;
    acc = acc.dblp(k);
    if (i < 0)
      break;

    for (var j = 0; j < len; j++) {
      var z = tmp[j];
      var p;
      if (z === 0)
        continue;
      else if (z > 0)
        p = wnd[j][(z - 1) >> 1];
      else if (z < 0)
        p = wnd[j][(-z - 1) >> 1].neg();

      if (p.type === 'affine')
        acc = acc.mixedAdd(p);
      else
        acc = acc.add(p);
    }
  }
  // Zeroify references
  for (var i = 0; i < len; i++)
    wnd[i] = null;
  return acc.toP();
};

BaseCurve.BasePoint = BasePoint;

function BasePoint(curve, type) {
  this.curve = curve;
  this.type = type;
  this.precomputed = null;
}

BasePoint.prototype.validate = function validate() {
  return this.curve.validate(this);
};

BasePoint.prototype.precompute = function precompute(power, _beta) {
  if (this.precomputed)
    return this;

  var precomputed = {
    doubles: null,
    naf: null,
    beta: null
  };
  precomputed.naf = this._getNAFPoints(8);
  precomputed.doubles = this._getDoubles(4, power);
  precomputed.beta = this._getBeta();
  this.precomputed = precomputed;

  return this;
};

BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
  if (this.precomputed && this.precomputed.doubles)
    return this.precomputed.doubles;

  var doubles = [ this ];
  var acc = this;
  for (var i = 0; i < power; i += step) {
    for (var j = 0; j < step; j++)
      acc = acc.dbl();
    doubles.push(acc);
  }
  return {
    step: step,
    points: doubles
  };
};

BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
  if (this.precomputed && this.precomputed.naf)
    return this.precomputed.naf;

  var res = [ this ];
  var max = (1 << wnd) - 1;
  var dbl = max === 1 ? null : this.dbl();
  for (var i = 1; i < max; i++)
    res[i] = res[i - 1].add(dbl);
  return {
    wnd: wnd,
    points: res
  };
};

BasePoint.prototype._getBeta = function _getBeta() {
  return null;
};

BasePoint.prototype.dblp = function dblp(k) {
  var r = this;
  for (var i = 0; i < k; i++)
    r = r.dbl();
  return r;
};

},{"../../elliptic":36,"bn.js":34}],38:[function(require,module,exports){
var curve = require('../curve');
var elliptic = require('../../elliptic');
var bn = require('bn.js');
var inherits = require('inherits');
var Base = curve.base;

var getNAF = elliptic.utils.getNAF;
var assert = elliptic.utils.assert;

function EdwardsCurve(conf) {
  // NOTE: Important as we are creating point in Base.call()
  this.twisted = conf.a != 1;
  this.mOneA = this.twisted && conf.a == -1;
  this.extended = this.mOneA;

  Base.call(this, 'mont', conf);

  this.a = new bn(conf.a, 16).mod(this.red.m).toRed(this.red);
  this.c = new bn(conf.c, 16).toRed(this.red);
  this.c2 = this.c.redSqr();
  this.d = new bn(conf.d, 16).toRed(this.red);
  this.dd = this.d.redAdd(this.d);

  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);
  this.oneC = conf.c == 1;
}
inherits(EdwardsCurve, Base);
module.exports = EdwardsCurve;

EdwardsCurve.prototype._mulA = function _mulA(num) {
  if (this.mOneA)
    return num.redNeg();
  else
    return this.a.redMul(num);
};

EdwardsCurve.prototype._mulC = function _mulC(num) {
  if (this.oneC)
    return num;
  else
    return this.c.redMul(num);
};

EdwardsCurve.prototype.point = function point(x, y, z, t) {
  return new Point(this, x, y, z, t);
};

// Just for compatibility with Short curve
EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {
  return this.point(x, y, z, t);
};

EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

EdwardsCurve.prototype.pointFromX = function pointFromX(odd, x) {
  x = new bn(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var x2 = x.redSqr();
  var rhs = this.c2.redSub(this.a.redMul(x2));
  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));

  var y = rhs.redMul(lhs.redInvm()).redSqrt();
  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y, curve.one);
};

EdwardsCurve.prototype.validate = function validate(point) {
  if (point.isInfinity())
    return true;

  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)
  point.normalize();

  var x2 = point.x.redSqr();
  var y2 = point.y.redSqr();
  var lhs = x2.redMul(this.a).redAdd(y2);
  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));

  return lhs.cmp(rhs) === 0;
};

function Point(curve, x, y, z, t) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && y === null && z === null) {
    this.x = this.curve.zero;
    this.y = this.curve.one;
    this.z = this.curve.one;
    this.t = this.curve.zero;
    this.zOne = true;
  } else {
    this.x = new bn(x, 16);
    this.y = new bn(y, 16);
    this.z = z ? new bn(z, 16) : this.curve.one;
    this.t = t && new bn(t, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
    if (this.t && !this.t.red)
      this.t = this.t.toRed(this.curve.red);
    this.zOne = this.z === this.curve.one;

    // Use extended coordinates
    if (this.curve.extended && !this.t) {
      this.t = this.x.redMul(this.y);
      if (!this.zOne)
        this.t = this.t.redMul(this.z.redInvm());
    }
  }
}
inherits(Point, Base.BasePoint);

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1], obj[2]);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.x.cmpn(0) === 0 &&
         this.y.cmp(this.z) === 0;
};

Point.prototype._extDbl = function _extDbl() {
  // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#doubling-dbl-2008-hwcd
  // 4M + 4S

  // A = X1^2
  var a = this.x.redSqr();
  // B = Y1^2
  var b = this.y.redSqr();
  // C = 2 * Z1^2
  var c = this.z.redSqr();
  c = c.redIAdd(c);
  // D = a * A
  var d = this.curve._mulA(a);
  // E = (X1 + Y1)^2 - A - B
  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
  // G = D + B
  var g = d.redAdd(b);
  // F = G - C
  var f = g.redSub(c);
  // H = D - B
  var h = d.redSub(b);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projDbl = function _projDbl() {
  // http://hyperelliptic.org/EFD/g1p/auto-twisted-projective.html#doubling-dbl-2008-bbjlp
  // http://hyperelliptic.org/EFD/g1p/auto-edwards-projective.html#doubling-dbl-2007-bl
  // and others
  // Generally 3M + 4S or 2M + 4S

  // B = (X1 + Y1)^2
  var b = this.x.redAdd(this.y).redSqr();
  // C = X1^2
  var c = this.x.redSqr();
  // D = Y1^2
  var d = this.y.redSqr();

  if (this.curve.twisted) {
    // E = a * C
    var e = this.curve._mulA(c);
    // F = E + D
    var f = e.redAdd(d);
    if (this.zOne) {
      // X3 = (B - C - D) * (F - 2)
      var nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
      // Y3 = F * (E - D)
      var ny = f.redMul(e.redSub(d));
      // Z3 = F^2 - 2 * F
      var nz = f.redSqr().redSub(f).redSub(f);
    } else {
      // H = Z1^2
      var h = this.z.redSqr();
      // J = F - 2 * H
      var j = f.redSub(h).redISub(h);
      // X3 = (B-C-D)*J
      var nx = b.redSub(c).redISub(d).redMul(j);
      // Y3 = F * (E - D)
      var ny = f.redMul(e.redSub(d));
      // Z3 = F * J
      var nz = f.redMul(j);
    }
  } else {
    // E = C + D
    var e = c.redAdd(d);
    // H = (c * Z1)^2
    var h = this.curve._mulC(redMul(this.z)).redSqr();
    // J = E - 2 * H
    var j = e.redSub(h).redSub(h);
    // X3 = c * (B - E) * J
    var nx = this.curve._mulC(b.redISub(e)).redMul(j);
    // Y3 = c * E * (C - D)
    var ny = this.curve._mulC(e).redMul(c.redISub(d));
    // Z3 = E * J
    var nz = e.redMul(j);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  // Double in extended coordinates
  if (this.curve.extended)
    return this._extDbl();
  else
    return this._projDbl();
};

Point.prototype._extAdd = function _extAdd(p) {
  // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-3
  // 8M

  // A = (Y1 - X1) * (Y2 - X2)
  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
  // B = (Y1 + X1) * (Y2 + X2)
  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
  // C = T1 * k * T2
  var c = this.t.redMul(this.curve.dd).redMul(p.t);
  // D = Z1 * 2 * Z2
  var d = this.z.redMul(p.z.redAdd(p.z));
  // E = B - A
  var e = b.redSub(a);
  // F = D - C
  var f = d.redSub(c);
  // G = D + C
  var g = d.redAdd(c);
  // H = B + A
  var h = b.redAdd(a);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projAdd = function _projAdd(p) {
  // http://hyperelliptic.org/EFD/g1p/auto-twisted-projective.html#addition-add-2008-bbjlp
  // http://hyperelliptic.org/EFD/g1p/auto-edwards-projective.html#addition-add-2007-bl
  // 10M + 1S

  // A = Z1 * Z2
  var a = this.z.redMul(p.z);
  // B = A^2
  var b = a.redSqr();
  // C = X1 * X2
  var c = this.x.redMul(p.x);
  // D = Y1 * Y2
  var d = this.y.redMul(p.y);
  // E = d * C * D
  var e = this.curve.d.redMul(c).redMul(d);
  // F = B - E
  var f = b.redSub(e);
  // G = B + E
  var g = b.redAdd(e);
  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)
  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
  var nx = a.redMul(f).redMul(tmp);
  if (this.curve.twisted) {
    // Y3 = A * G * (D - a * C)
    var ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
    // Z3 = F * G
    var nz = f.redMul(g);
  } else {
    // Y3 = A * G * (D - C)
    var ny = a.redMul(g).redMul(d.redSub(c));
    // Z3 = c * F * G
    var nz = this.curve._mulC(f).redMul(g);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.add = function add(p) {
  if (this.isInfinity())
    return p;
  if (p.isInfinity())
    return this;

  if (this.curve.extended)
    return this._extAdd(p);
  else
    return this._projAdd(p);
};

Point.prototype.mul = function mul(k) {
  if (this.precomputed && this.precomputed.doubles)
    return this.curve._fixedNafMul(this, k);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2);
};

Point.prototype.normalize = function normalize() {
  if (this.zOne)
    return this;

  // Normalize coordinates
  var zi = this.z.redInvm();
  this.x = this.x.redMul(zi);
  this.y = this.y.redMul(zi);
  if (this.t)
    this.t = this.t.redMul(zi);
  this.z = this.curve.one;
  this.zOne = true;
  return this;
};

Point.prototype.neg = function neg() {
  return this.curve.point(this.x.redNeg(),
                          this.y,
                          this.z,
                          this.t && this.t.redNeg());
};

Point.prototype.getX = function getX() {
  this.normalize();
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  this.normalize();
  return this.y.fromRed();
};

// Compatibility with BaseCurve
Point.prototype.toP = Point.prototype.normalize;
Point.prototype.mixedAdd = Point.prototype.add;

},{"../../elliptic":36,"../curve":39,"bn.js":34,"inherits":152}],39:[function(require,module,exports){
var curve = exports;

curve.base = require('./base');
curve.short = require('./short');
curve.mont = require('./mont');
curve.edwards = require('./edwards');

},{"./base":37,"./edwards":38,"./mont":40,"./short":41}],40:[function(require,module,exports){
var curve = require('../curve');
var elliptic = require('../../elliptic');
var bn = require('bn.js');
var inherits = require('inherits');
var Base = curve.base;

var getNAF = elliptic.utils.getNAF;
var assert = elliptic.utils.assert;

function MontCurve(conf) {
  Base.call(this, 'mont', conf);

  this.a = new bn(conf.a, 16).toRed(this.red);
  this.b = new bn(conf.b, 16).toRed(this.red);
  this.i4 = new bn(4).toRed(this.red).redInvm();
  this.two = new bn(2).toRed(this.red);
  this.a24 = this.i4.redMul(this.a.redAdd(this.two));
}
inherits(MontCurve, Base);
module.exports = MontCurve;

MontCurve.prototype.point = function point(x, z) {
  return new Point(this, x, z);
};

MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
}

MontCurve.prototype.validate = function validate(point) {
  var x = point.normalize().x;
  var x2 = x.redSqr();
  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
  var y = rhs.redSqrt();

  return y.redSqr().cmp(rhs) === 0;
};

function Point(curve, x, z) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && z === null) {
    this.x = this.curve.one;
    this.z = this.curve.zero;
  } else {
    this.x = new bn(x, 16);
    this.z = new bn(z, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
  }
}
inherits(Point, Base.BasePoint);

Point.prototype.precompute = function precompute() {
  // No-op
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1] || curve.one);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

Point.prototype.dbl = function dbl() {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3
  // 2M + 2S + 4A

  // A = X1 + Z1
  var a = this.x.redAdd(this.z);
  // AA = A^2
  var aa = a.redSqr();
  // B = X1 - Z1
  var b = this.x.redSub(this.z);
  // BB = B^2
  var bb = b.redSqr();
  // C = AA - BB
  var c = aa.redSub(bb);
  // X3 = AA * BB
  var nx = aa.redMul(bb);
  // Z3 = C * (BB + A24 * C)
  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
  return this.curve.point(nx, nz);
};

Point.prototype.add = function add(p) {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.diffAdd = function diffAdd(p, diff) {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3
  // 4M + 2S + 6A

  // A = X2 + Z2
  var a = this.x.redAdd(this.z);
  // B = X2 - Z2
  var b = this.x.redSub(this.z);
  // C = X3 + Z3
  var c = p.x.redAdd(p.z);
  // D = X3 - Z3
  var d = p.x.redSub(p.z);
  // DA = D * A
  var da = d.redMul(a);
  // CB = C * B
  var cb = c.redMul(b);
  // X5 = Z1 * (DA + CB)^2
  var nx = diff.z.redMul(da.redAdd(cb).redSqr());
  // Z5 = X1 * (DA - CB)^2
  var nz = diff.x.redMul(da.redISub(cb).redSqr());
  return this.curve.point(nx, nz);
};

Point.prototype.mul = function mul(k) {
  var t = k.clone();
  var a = this; // (N / 2) * Q + Q
  var b = this.curve.point(null, null); // (N / 2) * Q
  var c = this; // Q

  for (var bits = []; t.cmpn(0) !== 0; t.ishrn(1))
    bits.push(t.andln(1));

  for (var i = bits.length - 1; i >= 0; i--) {
    if (bits[i] === 0) {
      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q
      a = a.diffAdd(b, c);
      // N * Q = 2 * ((N / 2) * Q + Q))
      b = b.dbl();
    } else {
      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)
      b = a.diffAdd(b, c);
      // N * Q + Q = 2 * ((N / 2) * Q + Q)
      a = a.dbl();
    }
  }
  return b;
};

Point.prototype.mulAdd = function mulAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.normalize = function normalize() {
  this.x = this.x.redMul(this.z.redInvm());
  this.z = this.curve.one;
  return this;
};

Point.prototype.getX = function getX() {
  // Normalize coordinates
  this.normalize();

  return this.x.fromRed();
};

},{"../../elliptic":36,"../curve":39,"bn.js":34,"inherits":152}],41:[function(require,module,exports){
var curve = require('../curve');
var elliptic = require('../../elliptic');
var bn = require('bn.js');
var inherits = require('inherits');
var Base = curve.base;

var getNAF = elliptic.utils.getNAF;
var assert = elliptic.utils.assert;

function ShortCurve(conf) {
  Base.call(this, 'short', conf);

  this.a = new bn(conf.a, 16).toRed(this.red);
  this.b = new bn(conf.b, 16).toRed(this.red);
  this.tinv = this.two.redInvm();

  this.zeroA = this.a.fromRed().cmpn(0) === 0;
  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;

  // If the curve is endomorphic, precalculate beta and lambda
  this.endo = this._getEndomorphism(conf);
  this._endoWnafT1 = new Array(4);
  this._endoWnafT2 = new Array(4);
}
inherits(ShortCurve, Base);
module.exports = ShortCurve;

ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
  // No efficient endomorphism
  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
    return;

  // Compute beta and lambda, that lambda * P = (beta * Px; Py)
  var beta;
  var lambda;
  if (conf.beta) {
    beta = new bn(conf.beta, 16).toRed(this.red);
  } else {
    var betas = this._getEndoRoots(this.p);
    // Choose the smallest beta
    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
    beta = beta.toRed(this.red);
  }
  if (conf.lambda) {
    lambda = new bn(conf.lambda, 16);
  } else {
    // Choose the lambda that is matching selected beta
    var lambdas = this._getEndoRoots(this.n);
    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
      lambda = lambdas[0];
    } else {
      lambda = lambdas[1];
      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
    }
  }

  // Get basis vectors, used for balanced length-two representation
  var basis;
  if (conf.basis) {
    basis = conf.basis.map(function(vec) {
      return {
        a: new bn(vec.a, 16),
        b: new bn(vec.b, 16),
      };
    });
  } else {
    basis = this._getEndoBasis(lambda);
  }

  return {
    beta: beta,
    lambda: lambda,
    basis: basis
  };
};

ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
  // Find roots of for x^2 + x + 1 in F
  // Root = (-1 +- Sqrt(-3)) / 2
  //
  var red = num === this.p ? this.red : bn.mont(num);
  var tinv = new bn(2).toRed(red).redInvm();
  var ntinv = tinv.redNeg();
  var one = new bn(1).toRed(red);

  var s = new bn(3).toRed(red).redNeg().redSqrt().redMul(tinv);

  var l1 = ntinv.redAdd(s).fromRed();
  var l2 = ntinv.redSub(s).fromRed();
  return [ l1, l2 ];
};

ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
  // aprxSqrt >= sqrt(this.n)
  var aprxSqrt = this.n.shrn(Math.floor(this.n.bitLength() / 2));

  // 3.74
  // Run EGCD, until r(L + 1) < aprxSqrt
  var u = lambda;
  var v = this.n.clone();
  var x1 = new bn(1);
  var y1 = new bn(0);
  var x2 = new bn(0);
  var y2 = new bn(1);

  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
  var a0;
  var b0;
  // First vector
  var a1;
  var b1;
  // Second vector
  var a2;
  var b2;

  var prevR;
  var i = 0;
  while (u.cmpn(0) !== 0) {
    var q = v.div(u);
    var r = v.sub(q.mul(u));
    var x = x2.sub(q.mul(x1));
    var y = y2.sub(q.mul(y1));

    if (!a1 && r.cmp(aprxSqrt) < 0) {
      a0 = prevR.neg();
      b0 = x1;
      a1 = r.neg();
      b1 = x;
    } else if (a1 && ++i === 2) {
      break;
    }
    prevR = r;

    v = u;
    u = r;
    x2 = x1;
    x1 = x;
    y2 = y1;
    y1 = y;
  }
  a2 = r.neg();
  b2 = x;

  var len1 = a1.sqr().add(b1.sqr());
  var len2 = a2.sqr().add(b2.sqr());
  if (len2.cmp(len1) >= 0) {
    a2 = a0;
    b2 = b0;
  }

  // Normalize signs
  if (a1.sign) {
    a1 = a1.neg();
    b1 = b1.neg();
  }
  if (a2.sign) {
    a2 = a2.neg();
    b2 = b2.neg();
  }

  return [
    { a: a1, b: b1 },
    { a: a2, b: b2 }
  ];
};

ShortCurve.prototype._endoSplit = function _endoSplit(k) {
  var basis = this.endo.basis;
  var v1 = basis[0];
  var v2 = basis[1];

  var c1 = v2.b.mul(k).divRound(this.n);
  var c2 = v1.b.neg().mul(k).divRound(this.n);

  var p1 = c1.mul(v1.a);
  var p2 = c2.mul(v2.a);
  var q1 = c1.mul(v1.b);
  var q2 = c2.mul(v2.b);

  // Calculate answer
  var k1 = k.sub(p1).sub(p2);
  var k2 = q1.add(q2).neg();
  return { k1: k1, k2: k2 };
};

ShortCurve.prototype.point = function point(x, y, isRed) {
  return new Point(this, x, y, isRed);
};

ShortCurve.prototype.pointFromX = function pointFromX(odd, x) {
  x = new bn(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
  var y = y2.redSqrt();

  // XXX Is there any way to tell if the number is odd without converting it
  // to non-red form?
  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
  return new JPoint(this, x, y, z);
};

ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
  return Point.fromJSON(this, obj, red);
};

ShortCurve.prototype.validate = function validate(point) {
  if (point.inf)
    return true;

  var x = point.x;
  var y = point.y;

  var ax = this.a.redMul(x);
  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
  return y.redSqr().redISub(rhs).cmpn(0) === 0;
};

ShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(points, coeffs) {
  var npoints = this._endoWnafT1;
  var ncoeffs = this._endoWnafT2;
  for (var i = 0; i < points.length; i++) {
    var split = this._endoSplit(coeffs[i]);
    var p = points[i];
    var beta = p._getBeta();

    if (split.k1.sign) {
      split.k1.sign = !split.k1.sign;
      p = p.neg(true);
    }
    if (split.k2.sign) {
      split.k2.sign = !split.k2.sign;
      beta = beta.neg(true);
    }

    npoints[i * 2] = p;
    npoints[i * 2 + 1] = beta;
    ncoeffs[i * 2] = split.k1;
    ncoeffs[i * 2 + 1] = split.k2;
  }
  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2);

  // Clean-up references to points and coefficients
  for (var j = 0; j < i * 2; j++) {
    npoints[j] = null;
    ncoeffs[j] = null;
  }
  return res;
};

function Point(curve, x, y, isRed) {
  Base.BasePoint.call(this, curve, 'affine');
  if (x === null && y === null) {
    this.x = null;
    this.y = null;
    this.inf = true;
  } else {
    this.x = new bn(x, 16);
    this.y = new bn(y, 16);
    // Force redgomery representation when loading from JSON
    if (isRed) {
      this.x.forceRed(this.curve.red);
      this.y.forceRed(this.curve.red);
    }
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    this.inf = false;
  }
}
inherits(Point, Base.BasePoint);

Point.prototype._getBeta = function _getBeta() {
  if (!this.curve.endo)
    return;

  var pre = this.precomputed;
  if (pre && pre.beta)
    return pre.beta;

  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
  if (pre) {
    var curve = this.curve;
    function endoMul(p) {
      return curve.point(p.x.redMul(curve.endo.beta), p.y);
    }
    pre.beta = beta;
    beta.precomputed = {
      beta: null,
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(endoMul)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(endoMul)
      }
    };
  }
  return beta;
};

Point.prototype.toJSON = function toJSON() {
  if (!this.precomputed)
    return [ this.x, this.y ];

  return [ this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1)
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1)
    }
  }];
};

Point.fromJSON = function fromJSON(curve, obj, red) {
  if (typeof obj === 'string')
    obj = JSON.parse(obj);
  var res = curve.point(obj[0], obj[1], red);
  if (!obj[2])
    return res;

  function obj2point(obj) {
    return curve.point(obj[0], obj[1], red);
  }

  var pre = obj[2];
  res.precomputed = {
    beta: null,
    doubles: pre.doubles && {
      step: pre.doubles.step,
      points: [ res ].concat(pre.doubles.points.map(obj2point))
    },
    naf: pre.naf && {
      wnd: pre.naf.wnd,
      points: [ res ].concat(pre.naf.points.map(obj2point))
    }
  };
  return res;
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16 ,2) +
      ' y: ' + this.y.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  return this.inf;
};

Point.prototype.add = function add(p) {
  // O + P = P
  if (this.inf)
    return p;

  // P + O = P
  if (p.inf)
    return this;

  // P + P = 2P
  if (this.eq(p))
    return this.dbl();

  // P + (-P) = O
  if (this.neg().eq(p))
    return this.curve.point(null, null);

  // P + Q = O
  if (this.x.cmp(p.x) === 0)
    return this.curve.point(null, null);

  var c = this.y.redSub(p.y);
  if (c.cmpn(0) !== 0)
    c = c.redMul(this.x.redSub(p.x).redInvm());
  var nx = c.redSqr().redISub(this.x).redISub(p.x);
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.dbl = function dbl() {
  if (this.inf)
    return this;

  // 2P = O
  var ys1 = this.y.redAdd(this.y);
  if (ys1.cmpn(0) === 0)
    return this.curve.point(null, null);

  var a = this.curve.a;

  var x2 = this.x.redSqr();
  var dyinv = ys1.redInvm();
  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);

  var nx = c.redSqr().redISub(this.x.redAdd(this.x));
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.getX = function getX() {
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  return this.y.fromRed();
};

Point.prototype.mul = function mul(k) {
  k = new bn(k, 16);

  if (this.precomputed && this.precomputed.doubles)
    return this.curve._fixedNafMul(this, k);
  else if (this.curve.endo)
    return this.curve._endoWnafMulAdd([ this ], [ k ]);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2);
};

Point.prototype.eq = function eq(p) {
  return this === p ||
         this.inf === p.inf &&
             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
};

Point.prototype.neg = function neg(_precompute) {
  if (this.inf)
    return this;

  var res = this.curve.point(this.x, this.y.redNeg());
  if (_precompute && this.precomputed) {
    var pre = this.precomputed;
    function negate(p) {
      return p.neg();
    }
    res.precomputed = {
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(negate)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(negate)
      }
    };
  }
  return res;
};

Point.prototype.toJ = function toJ() {
  if (this.inf)
    return this.curve.jpoint(null, null, null);

  var res = this.curve.jpoint(this.x, this.y, this.curve.one);
  return res;
};

function JPoint(curve, x, y, z) {
  Base.BasePoint.call(this, curve, 'jacobian');
  if (x === null && y === null && z === null) {
    this.x = this.curve.one;
    this.y = this.curve.one;
    this.z = new bn(0);
  } else {
    this.x = new bn(x, 16);
    this.y = new bn(y, 16);
    this.z = new bn(z, 16);
  }
  if (!this.x.red)
    this.x = this.x.toRed(this.curve.red);
  if (!this.y.red)
    this.y = this.y.toRed(this.curve.red);
  if (!this.z.red)
    this.z = this.z.toRed(this.curve.red);

  this.zOne = this.z === this.curve.one;
}
inherits(JPoint, Base.BasePoint);

JPoint.prototype.toP = function toP() {
  if (this.isInfinity())
    return this.curve.point(null, null);

  var zinv = this.z.redInvm();
  var zinv2 = zinv.redSqr();
  var ax = this.x.redMul(zinv2);
  var ay = this.y.redMul(zinv2).redMul(zinv);

  return this.curve.point(ax, ay);
};

JPoint.prototype.neg = function neg() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};

JPoint.prototype.add = function add(p) {
  // O + P = P
  if (this.isInfinity())
    return p;

  // P + O = P
  if (p.isInfinity())
    return this;

  // 12M + 4S + 7A
  var pz2 = p.z.redSqr();
  var z2 = this.z.redSqr();
  var u1 = this.x.redMul(pz2);
  var u2 = p.x.redMul(z2);
  var s1 = this.y.redMul(pz2.redMul(p.z));
  var s2 = p.y.redMul(z2.redMul(this.z));

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(p.z).redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mixedAdd = function mixedAdd(p) {
  // O + P = P
  if (this.isInfinity())
    return p.toJ();

  // P + O = P
  if (p.isInfinity())
    return this;

  // 8M + 3S + 7A
  var z2 = this.z.redSqr();
  var u1 = this.x;
  var u2 = p.x.redMul(z2);
  var s1 = this.y;
  var s2 = p.y.redMul(z2).redMul(this.z);

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.dblp = function dblp(pow) {
  if (pow === 0)
    return this;
  if (this.isInfinity())
    return this;
  if (!pow)
    return this.dbl();

  if (this.curve.zeroA || this.curve.threeA) {
    var r = this;
    for (var i = 0; i < pow; i++)
      r = r.dbl();
    return r;
  }

  // 1M + 2S + 1A + N * (4S + 5M + 8A)
  // N = 1 => 6M + 6S + 9A
  var a = this.curve.a;
  var tinv = this.curve.tinv;

  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  // Reuse results
  var jyd = jy.redAdd(jy);
  for (var i = 0; i < pow; i++) {
    var jx2 = jx.redSqr();
    var jyd2 = jyd.redSqr();
    var jyd4 = jyd2.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

    var t1 = jx.redMul(jyd2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var dny = c.redMul(t2);
    dny = dny.redIAdd(dny).redISub(jyd4);
    var nz = jyd.redMul(jz);
    if (i + 1 < pow)
      jz4 = jz4.redMul(jyd4);

    jx = nx;
    jz = nz;
    jyd = dny;
  }

  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};

JPoint.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  if (this.curve.zeroA)
    return this._zeroDbl();
  else if (this.curve.threeA)
    return this._threeDbl();
  else
    return this._dbl();
};

JPoint.prototype._zeroDbl = function _zeroDbl() {
  // Z = 1
  if (this.zOne) {
    // http://hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#doubling-mdbl-2007-bl
    // 1M + 5S + 14A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a; a = 0
    var m = xx.redAdd(xx).redIAdd(xx);
    // T = M ^ 2 - 2*S
    var t = m.redSqr().redISub(s).redISub(s);

    // 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);

    // X3 = T
    var nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    var ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2*Y1
    var nz = this.y.redAdd(this.y);
  } else {
    // http://hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#doubling-dbl-2009-l
    // 2M + 5S + 13A

    // A = X1^2
    var a = this.x.redSqr();
    // B = Y1^2
    var b = this.y.redSqr();
    // C = B^2
    var c = b.redSqr();
    // D = 2 * ((X1 + B)^2 - A - C)
    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
    d = d.redIAdd(d);
    // E = 3 * A
    var e = a.redAdd(a).redIAdd(a);
    // F = E^2
    var f = e.redSqr();

    // 8 * C
    var c8 = c.redIAdd(c);
    c8 = c8.redIAdd(c8);
    c8 = c8.redIAdd(c8);

    // X3 = F - 2 * D
    var nx = f.redISub(d).redISub(d);
    // Y3 = E * (D - X3) - 8 * C
    var ny = e.redMul(d.redISub(nx)).redISub(c8);
    // Z3 = 2 * Y1 * Z1
    var nz = this.y.redMul(this.z);
    nz = nz.redIAdd(nz);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._threeDbl = function _threeDbl() {
  // Z = 1
  if (this.zOne) {
    // http://hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-mdbl-2007-bl
    // 1M + 5S + 15A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a
    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
    // T = M^2 - 2 * S
    var t = m.redSqr().redISub(s).redISub(s);
    // X3 = T
    var nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    var ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2 * Y1
    var nz = this.y.redAdd(this.y);
  } else {
    // http://hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
    // 3M + 5S

    // delta = Z1^2
    var delta = this.z.redSqr();
    // gamma = Y1^2
    var gamma = this.y.redSqr();
    // beta = X1 * gamma
    var beta = this.x.redMul(gamma);
    // alpha = 3 * (X1 - delta) * (X1 + delta)
    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
    alpha = alpha.redAdd(alpha).redIAdd(alpha);
    // X3 = alpha^2 - 8 * beta
    var beta4 = beta.redIAdd(beta);
    beta4 = beta4.redIAdd(beta4);
    var beta8 = beta4.redAdd(beta4);
    var nx = alpha.redSqr().redISub(beta8);
    // Z3 = (Y1 + Z1)^2 - gamma - delta
    var nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
    var ggamma8 = gamma.redSqr();
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    var ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._dbl = function _dbl() {
  var a = this.curve.a;
  var tinv = this.curve.tinv;

  // 4M + 6S + 10A
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  var jx2 = jx.redSqr();
  var jy2 = jy.redSqr();

  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

  var jxd4 = jx.redAdd(jx);
  jxd4 = jxd4.redIAdd(jxd4);
  var t1 = jxd4.redMul(jy2);
  var nx = c.redSqr().redISub(t1.redAdd(t1));
  var t2 = t1.redISub(nx);

  var jyd8 = jy2.redSqr();
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  var ny = c.redMul(t2).redISub(jyd8);
  var nz = jy.redAdd(jy).redMul(jz);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.trpl = function trpl() {
  if (!this.curve.zeroA)
    return this.dbl().add(this);

  // http://hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
  // 5M + 10S + ...

  // XX = X1^2
  var xx = this.x.redSqr();
  // YY = Y1^2
  var yy = this.y.redSqr();
  // ZZ = Z1^2
  var zz = this.z.redSqr();
  // YYYY = YY^2
  var yyyy = yy.redSqr();
  // M = 3 * XX + a * ZZ2; a = 0
  var m = xx.redAdd(xx).redIAdd(xx);
  // MM = M^2
  var mm = m.redSqr();
  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
  e = e.redIAdd(e);
  e = e.redAdd(e).redIAdd(e);
  e = e.redISub(mm);
  // EE = E^2
  var ee = e.redSqr();
  // T = 16*YYYY
  var t = yyyy.redIAdd(yyyy);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  // U = (M + E)^2 - MM - EE - T
  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
  // X3 = 4 * (X1 * EE - 4 * YY * U)
  var yyu4 = yy.redMul(u);
  yyu4 = yyu4.redIAdd(yyu4);
  yyu4 = yyu4.redIAdd(yyu4);
  var nx = this.x.redMul(ee).redISub(yyu4);
  nx = nx.redIAdd(nx);
  nx = nx.redIAdd(nx);
  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  // Z3 = (Z1 + E)^2 - ZZ - EE
  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mul = function mul(k, kbase) {
  k = new bn(k, kbase);

  return this.curve._wnafMul(this, k);
};

JPoint.prototype.eq = function eq(p) {
  if (p.type === 'affine')
    return this.eq(p.toJ());

  if (this === p)
    return true;

  // x1 * z2^2 == x2 * z1^2
  var z2 = this.z.redSqr();
  var pz2 = p.z.redSqr();
  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
    return false;

  // y1 * z2^3 == y2 * z1^3
  var z3 = z2.redMul(this.z);
  var pz3 = pz2.redMul(p.z);
  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
};

JPoint.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC JPoint Infinity>';
  return '<EC JPoint x: ' + this.x.toString(16, 2) +
      ' y: ' + this.y.toString(16, 2) +
      ' z: ' + this.z.toString(16, 2) + '>';
};

JPoint.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

},{"../../elliptic":36,"../curve":39,"bn.js":34,"inherits":152}],42:[function(require,module,exports){
var curves = exports;

var hash = require('hash.js');
var bn = require('bn.js');
var elliptic = require('../elliptic');

var assert = elliptic.utils.assert;

function PresetCurve(options) {
  if (options.type === 'short')
    this.curve = new elliptic.curve.short(options);
  else if (options.type === 'edwards')
    this.curve = new elliptic.curve.edwards(options);
  else
    this.curve = new elliptic.curve.mont(options);
  this.g = this.curve.g;
  this.n = this.curve.n;
  this.hash = options.hash;

  assert(this.g.validate(), 'Invalid curve');
  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
}
curves.PresetCurve = PresetCurve;

function defineCurve(name, options) {
  Object.defineProperty(curves, name, {
    configurable: true,
    enumerable: true,
    get: function() {
      var curve = new PresetCurve(options);
      Object.defineProperty(curves, name, {
        configurable: true,
        enumerable: true,
        value: curve
      });
      return curve;
    }
  });
}

defineCurve('p192', {
  type: 'short',
  prime: 'p192',
  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
  hash: hash.sha256,
  gRed: false,
  g: [
    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',
    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'
  ],
});

defineCurve('p224', {
  type: 'short',
  prime: 'p224',
  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
  hash: hash.sha256,
  gRed: false,
  g: [
    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',
    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'
  ],
});

defineCurve('p256', {
  type: 'short',
  prime: null,
  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
  hash: hash.sha256,
  gRed: false,
  g: [
    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',
    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'
  ],
});

defineCurve('curve25519', {
  type: 'mont',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '76d06',
  b: '0',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '9'
  ]
});

defineCurve('ed25519', {
  type: 'edwards',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '-1',
  c: '1',
  // -121665 * (121666^(-1)) (mod P)
  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',

    // 4/5
    '6666666666666666666666666666666666666666666666666666666666666658'
  ]
});

defineCurve('secp256k1', {
  type: 'short',
  prime: 'k256',
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
  a: '0',
  b: '7',
  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
  h: '1',
  hash: hash.sha256,

  // Precomputed endomorphism
  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
  basis: [
    {
      a: '3086d221a7d46bcde86c90e49284eb15',
      b: '-e4437ed6010e88286f547fa90abfe4c3'
    },
    {
      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
      b: '3086d221a7d46bcde86c90e49284eb15'
    }
  ],

  gRed: false,
  g: [
    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',
    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',
    {
      'doubles': {
        'step': 4,
        'points': [
          [
            'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',
            'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'
          ],
          [
            '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',
            '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'
          ],
          [
            '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',
            'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'
          ],
          [
            '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',
            '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'
          ],
          [
            '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',
            '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'
          ],
          [
            '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',
            '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'
          ],
          [
            'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',
            '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'
          ],
          [
            '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',
            'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'
          ],
          [
            'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',
            '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'
          ],
          [
            'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',
            'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'
          ],
          [
            'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',
            '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'
          ],
          [
            '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',
            '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'
          ],
          [
            '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',
            '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'
          ],
          [
            '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',
            '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'
          ],
          [
            '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',
            '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'
          ],
          [
            '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',
            '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'
          ],
          [
            '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',
            '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'
          ],
          [
            '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',
            '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'
          ],
          [
            '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',
            'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'
          ],
          [
            'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',
            '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'
          ],
          [
            'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',
            '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'
          ],
          [
            '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',
            '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'
          ],
          [
            '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',
            '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'
          ],
          [
            'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',
            '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'
          ],
          [
            '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',
            'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'
          ],
          [
            'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',
            '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'
          ],
          [
            'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',
            'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'
          ],
          [
            'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',
            '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'
          ],
          [
            'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',
            'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'
          ],
          [
            'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',
            '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'
          ],
          [
            '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',
            'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'
          ],
          [
            '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',
            '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'
          ],
          [
            'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',
            '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'
          ],
          [
            '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',
            'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'
          ],
          [
            'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',
            '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'
          ],
          [
            'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',
            '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'
          ],
          [
            'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',
            'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'
          ],
          [
            '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',
            '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'
          ],
          [
            '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',
            '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'
          ],
          [
            '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',
            'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'
          ],
          [
            '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',
            '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'
          ],
          [
            'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',
            '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'
          ],
          [
            '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',
            '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'
          ],
          [
            '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',
            'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'
          ],
          [
            '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',
            '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'
          ],
          [
            'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',
            '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'
          ],
          [
            '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',
            'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'
          ],
          [
            'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',
            'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'
          ],
          [
            'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',
            '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'
          ],
          [
            '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',
            'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'
          ],
          [
            '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',
            'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'
          ],
          [
            'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',
            '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'
          ],
          [
            'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',
            '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'
          ],
          [
            'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',
            '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'
          ],
          [
            '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',
            'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'
          ],
          [
            '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',
            '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'
          ],
          [
            'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',
            'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'
          ],
          [
            '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',
            'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'
          ],
          [
            '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',
            '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'
          ],
          [
            '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',
            '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'
          ],
          [
            'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',
            'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'
          ],
          [
            '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',
            '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'
          ],
          [
            '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',
            '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'
          ],
          [
            'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',
            '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'
          ],
          [
            'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',
            'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'
          ]
        ]
      },
      'naf': {
        'wnd': 7,
        'points': [
          [
            'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',
            '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'
          ],
          [
            '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',
            'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'
          ],
          [
            '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',
            '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'
          ],
          [
            'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',
            'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'
          ],
          [
            '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',
            'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'
          ],
          [
            'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',
            'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'
          ],
          [
            'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',
            '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'
          ],
          [
            'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',
            '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'
          ],
          [
            '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',
            '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'
          ],
          [
            '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',
            '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'
          ],
          [
            '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',
            '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'
          ],
          [
            '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',
            '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'
          ],
          [
            'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',
            'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'
          ],
          [
            'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',
            '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'
          ],
          [
            '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',
            'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'
          ],
          [
            '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',
            'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'
          ],
          [
            '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',
            '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'
          ],
          [
            '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',
            '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'
          ],
          [
            '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',
            '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'
          ],
          [
            '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',
            'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'
          ],
          [
            'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',
            'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'
          ],
          [
            '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',
            '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'
          ],
          [
            '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',
            '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'
          ],
          [
            'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',
            'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'
          ],
          [
            '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',
            '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'
          ],
          [
            'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',
            'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'
          ],
          [
            'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',
            'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'
          ],
          [
            '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',
            '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'
          ],
          [
            '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',
            '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'
          ],
          [
            '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',
            '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'
          ],
          [
            'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',
            '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'
          ],
          [
            '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',
            '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'
          ],
          [
            'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',
            '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'
          ],
          [
            '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',
            'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'
          ],
          [
            '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',
            'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'
          ],
          [
            'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',
            'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'
          ],
          [
            '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',
            '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'
          ],
          [
            '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',
            'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'
          ],
          [
            'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',
            'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'
          ],
          [
            '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',
            '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'
          ],
          [
            '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',
            'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'
          ],
          [
            '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',
            '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'
          ],
          [
            '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',
            'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'
          ],
          [
            'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',
            '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'
          ],
          [
            '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',
            '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'
          ],
          [
            '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',
            'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'
          ],
          [
            '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',
            'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'
          ],
          [
            'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',
            'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'
          ],
          [
            'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',
            'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'
          ],
          [
            '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',
            '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'
          ],
          [
            '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',
            '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'
          ],
          [
            'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',
            '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'
          ],
          [
            'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',
            'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'
          ],
          [
            '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',
            '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'
          ],
          [
            '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',
            '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'
          ],
          [
            'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',
            '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'
          ],
          [
            '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',
            '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'
          ],
          [
            'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',
            'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'
          ],
          [
            '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',
            'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'
          ],
          [
            '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',
            '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'
          ],
          [
            'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',
            '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'
          ],
          [
            'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',
            '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'
          ],
          [
            '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',
            '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'
          ],
          [
            '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',
            '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'
          ],
          [
            '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',
            'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'
          ],
          [
            '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',
            'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'
          ],
          [
            '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',
            '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'
          ],
          [
            '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',
            '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'
          ],
          [
            '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',
            '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'
          ],
          [
            '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',
            'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'
          ],
          [
            'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',
            'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'
          ],
          [
            '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',
            'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'
          ],
          [
            'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',
            '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'
          ],
          [
            'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',
            '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'
          ],
          [
            'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',
            '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'
          ],
          [
            'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',
            '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'
          ],
          [
            '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',
            'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'
          ],
          [
            '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',
            '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'
          ],
          [
            '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',
            'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'
          ],
          [
            'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',
            'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'
          ],
          [
            'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',
            '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'
          ],
          [
            'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',
            'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'
          ],
          [
            'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',
            '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'
          ],
          [
            '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',
            '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'
          ],
          [
            'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',
            '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'
          ],
          [
            'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',
            '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'
          ],
          [
            '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',
            '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'
          ],
          [
            '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',
            'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'
          ],
          [
            'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',
            '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'
          ],
          [
            'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',
            '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'
          ],
          [
            'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',
            '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'
          ],
          [
            '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',
            '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'
          ],
          [
            'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',
            'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'
          ],
          [
            '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',
            'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'
          ],
          [
            'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',
            'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'
          ],
          [
            'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',
            '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'
          ],
          [
            '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',
            'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'
          ],
          [
            'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',
            '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'
          ],
          [
            'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',
            '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'
          ],
          [
            'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',
            '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'
          ],
          [
            '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',
            'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'
          ],
          [
            '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',
            'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'
          ],
          [
            'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',
            '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'
          ],
          [
            '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',
            'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'
          ],
          [
            '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',
            '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'
          ],
          [
            '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',
            'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'
          ],
          [
            'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',
            'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'
          ],
          [
            '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',
            'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'
          ],
          [
            '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',
            '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'
          ],
          [
            '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',
            'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'
          ],
          [
            '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',
            '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'
          ],
          [
            'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',
            'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'
          ],
          [
            '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',
            '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'
          ],
          [
            'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',
            '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'
          ],
          [
            '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',
            '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'
          ],
          [
            'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',
            'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'
          ],
          [
            'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',
            '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'
          ],
          [
            'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',
            'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'
          ],
          [
            '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',
            'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'
          ],
          [
            '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',
            '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'
          ],
          [
            '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',
            'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'
          ],
          [
            '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',
            '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'
          ],
          [
            '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',
            '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'
          ],
          [
            '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',
            'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'
          ],
          [
            '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',
            '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'
          ],
          [
            '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',
            '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'
          ],
          [
            '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',
            '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'
          ]
        ]
      }
    }
  ]
});

},{"../elliptic":36,"bn.js":34,"hash.js":49}],43:[function(require,module,exports){
var bn = require('bn.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;

var KeyPair = require('./key');
var Signature = require('./signature');

function EC(options) {
  if (!(this instanceof EC))
    return new EC(options);

  // Shortcut `elliptic.ec(curve-name)`
  if (typeof options === 'string') {
    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);

    options = elliptic.curves[options];
  }

  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
  if (options instanceof elliptic.curves.PresetCurve)
    options = { curve: options };

  this.curve = options.curve.curve;
  this.n = this.curve.n;
  this.nh = this.n.shrn(1);
  this.g = this.curve.g;

  // Point on curve
  this.g = options.curve.g;
  this.g.precompute(options.curve.n.bitLength() + 1);

  // Hash for function for DRBG
  this.hash = options.hash || options.curve.hash;
}
module.exports = EC;

EC.prototype.keyPair = function keyPair(priv, pub) {
  return new KeyPair(this, priv, pub);
};

EC.prototype.genKeyPair = function genKeyPair(options) {
  if (!options)
    options = {};

  // Instantiate Hmac_DRBG
  var drbg = new elliptic.hmacDRBG({
    hash: this.hash,
    pers: options.pers,
    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),
    nonce: this.n.toArray()
  });

  var bytes = this.n.byteLength();
  var ns2 = this.n.sub(new bn(2));
  do {
    var priv = new bn(drbg.generate(bytes));
    if (priv.cmp(ns2) > 0)
      continue;

    priv.iaddn(1);
    return this.keyPair(priv);
  } while (true);
};

EC.prototype._truncateToN = function truncateToN(msg, truncOnly) {
  var delta = msg.byteLength() * 8 - this.n.bitLength();
  if (delta > 0)
    msg = msg.shrn(delta);
  if (!truncOnly && msg.cmp(this.n) >= 0)
    return msg.sub(this.n);
  else
    return msg;
};

EC.prototype.sign = function sign(msg, key, options) {
  key = this.keyPair(key, 'hex');
  msg = this._truncateToN(new bn(msg, 16));
  if (!options)
    options = {};

  // Zero-extend key to provide enough entropy
  var bytes = this.n.byteLength();
  var bkey = key.getPrivate().toArray();
  for (var i = bkey.length; i < 21; i++)
    bkey.unshift(0);

  // Zero-extend nonce to have the same byte size as N
  var nonce = msg.toArray();
  for (var i = nonce.length; i < bytes; i++)
    nonce.unshift(0);

  // Instantiate Hmac_DRBG
  var drbg = new elliptic.hmacDRBG({
    hash: this.hash,
    entropy: bkey,
    nonce: nonce
  });

  // Number of bytes to generate
  var ns1 = this.n.sub(new bn(1));
  do {
    var k = new bn(drbg.generate(this.n.byteLength()));
    k = this._truncateToN(k, true);
    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
      continue;

    var kp = this.g.mul(k);
    if (kp.isInfinity())
      continue;

    var r = kp.getX().mod(this.n);
    if (r.cmpn(0) === 0)
      continue;

    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg)).mod(this.n);
    if (s.cmpn(0) === 0)
      continue;

    // Use complement of `s`, if it is > `n / 2`
    if (options.canonical && s.cmp(this.nh) > 0)
      s = this.n.sub(s);

    return new Signature(r, s);
  } while (true);
};

EC.prototype.verify = function verify(msg, signature, key) {
  msg = this._truncateToN(new bn(msg, 16));
  key = this.keyPair(key, 'hex');
  signature = new Signature(signature, 'hex');

  // Perform primitive values validation
  var r = signature.r;
  var s = signature.s;
  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
    return false;
  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
    return false;

  // Validate signature
  var sinv = s.invm(this.n);
  var u1 = sinv.mul(msg).mod(this.n);
  var u2 = sinv.mul(r).mod(this.n);

  var p = this.g.mulAdd(u1, key.getPublic(), u2);
  if (p.isInfinity())
    return false;

  return p.getX().mod(this.n).cmp(r) === 0;
};

},{"../../elliptic":36,"./key":44,"./signature":45,"bn.js":34}],44:[function(require,module,exports){
var bn = require('bn.js');

var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;

function KeyPair(ec, priv, pub) {
  if (priv instanceof KeyPair)
    return priv;
  if (pub instanceof KeyPair)
    return pub;

  if (!priv) {
    priv = pub;
    pub = null;
  }
  if (priv !== null && typeof priv === 'object') {
    if (priv.x) {
      // KeyPair(public)
      pub = priv;
      priv = null;
    } else if (priv.priv || priv.pub) {
      // KeyPair({ priv: ..., pub: ... })
      pub = priv.pub;
      priv = priv.priv;
    }
  }

  this.ec = ec;
  this.priv = null;
  this.pub = null;

  // KeyPair(public, 'hex')
  if (this._importPublicHex(priv, pub))
    return;

  if (pub === 'hex')
    pub = null;

  // KeyPair(priv, pub)
  if (priv)
    this._importPrivate(priv);
  if (pub)
    this._importPublic(pub);
}
module.exports = KeyPair;

KeyPair.prototype.validate = function validate() {
  var pub = this.getPublic();

  if (pub.isInfinity())
    return { result: false, reason: 'Invalid public key' };
  if (!pub.validate())
    return { result: false, reason: 'Public key is not a point' };
  if (!pub.mul(this.ec.curve.n).isInfinity())
    return { result: false, reason: 'Public key * N != O' };

  return { result: true, reason: null };
};

KeyPair.prototype.getPublic = function getPublic(compact, enc) {
  if (!this.pub)
    this.pub = this.ec.g.mul(this.priv);

  // compact is optional argument
  if (typeof compact === 'string') {
    enc = compact;
    compact = null;
  }

  if (!enc)
    return this.pub;

  var len = this.ec.curve.p.byteLength();
  var x = this.pub.getX().toArray();

  for (var i = x.length; i < len; i++)
    x.unshift(0);

  if (compact) {
    var res = [ this.pub.getY().isEven() ? 0x02 : 0x03 ].concat(x);
  } else {
    var y = this.pub.getY().toArray();
    for (var i = y.length; i < len; i++)
      y.unshift(0);
    var res = [ 0x04 ].concat(x, y);
  }
  return utils.encode(res, enc);
};

KeyPair.prototype.getPrivate = function getPrivate(enc) {
  if (enc === 'hex')
    return this.priv.toString(16, 2);
  else
    return this.priv;
};

KeyPair.prototype._importPrivate = function _importPrivate(key) {
  this.priv = new bn(key, 16);

  // Ensure that the priv won't be bigger than n, otherwise we may fail
  // in fixed multiplication method
  this.priv = this.priv.mod(this.ec.curve.n);
};

KeyPair.prototype._importPublic = function _importPublic(key) {
  this.pub = this.ec.curve.point(key.x, key.y);
};

KeyPair.prototype._importPublicHex = function _importPublic(key, enc) {
  key = utils.toArray(key, enc);
  var len = this.ec.curve.p.byteLength();
  if (key[0] === 0x04 && key.length - 1 === 2 * len) {
    this.pub = this.ec.curve.point(
      key.slice(1, 1 + len),
      key.slice(1 + len, 1 + 2 * len));
  } else if ((key[0] === 0x02 || key[0] === 0x03) && key.length - 1 === len) {
    this.pub = this.ec.curve.pointFromX(key[0] === 0x03,
                                        key.slice(1, 1 +len));
  } else {
    return false;
  }

  return true;
};

// ECDH
KeyPair.prototype.derive = function derive(pub) {
  return pub.mul(this.priv).getX();
};

// ECDSA
KeyPair.prototype.sign = function sign(msg) {
  return this.ec.sign(msg, this);
};

KeyPair.prototype.verify = function verify(msg, signature) {
  return this.ec.verify(msg, signature, this);
};

KeyPair.prototype.inspect = function inspect() {
  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +
         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
};

},{"../../elliptic":36,"bn.js":34}],45:[function(require,module,exports){
var bn = require('bn.js');

var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;

function Signature(r, s) {
  if (r instanceof Signature)
    return r;

  if (this._importDER(r, s))
    return;

  assert(r && s, 'Signature without r or s');
  this.r = new bn(r, 16);
  this.s = new bn(s, 16);
}
module.exports = Signature;

Signature.prototype._importDER = function _importDER(data, enc) {
  data = utils.toArray(data, enc);
  if (data.length < 6 || data[0] !== 0x30 || data[2] !== 0x02)
    return false;
  var total = data[1];
  if (1 + total > data.length)
    return false;
  var rlen = data[3];
  // Short length notation
  if (rlen >= 0x80)
    return false;
  if (4 + rlen + 2 >= data.length)
    return false;
  if (data[4 + rlen] !== 0x02)
    return false;
  var slen = data[5 + rlen];
  // Short length notation
  if (slen >= 0x80)
    return false;
  if (4 + rlen + 2 + slen > data.length)
    return false;

  this.r = new bn(data.slice(4, 4 + rlen));
  this.s = new bn(data.slice(4 + rlen + 2, 4 + rlen + 2 + slen));

  return true;
};

Signature.prototype.toDER = function toDER(enc) {
  var r = this.r.toArray();
  var s = this.s.toArray();

  // Pad values
  if (r[0] & 0x80)
    r = [ 0 ].concat(r);
  // Pad values
  if (s[0] & 0x80)
    s = [ 0 ].concat(s);

  var total = r.length + s.length + 4;
  var res = [ 0x30, total, 0x02, r.length ];
  res = res.concat(r, [ 0x02, s.length ], s);
  return utils.encode(res, enc);
};

},{"../../elliptic":36,"bn.js":34}],46:[function(require,module,exports){
var hash = require('hash.js');
var elliptic = require('../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;

function HmacDRBG(options) {
  if (!(this instanceof HmacDRBG))
    return new HmacDRBG(options);
  this.hash = options.hash;
  this.predResist = !!options.predResist;

  this.outLen = this.hash.outSize;
  this.minEntropy = options.minEntropy || this.hash.hmacStrength;

  this.reseed = null;
  this.reseedInterval = null;
  this.K = null;
  this.V = null;

  var entropy = utils.toArray(options.entropy, options.entropyEnc);
  var nonce = utils.toArray(options.nonce, options.nonceEnc);
  var pers = utils.toArray(options.pers, options.persEnc);
  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
  this._init(entropy, nonce, pers);
}
module.exports = HmacDRBG;

HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
  var seed = entropy.concat(nonce).concat(pers);

  this.K = new Array(this.outLen / 8);
  this.V = new Array(this.outLen / 8);
  for (var i = 0; i < this.V.length; i++) {
    this.K[i] = 0x00;
    this.V[i] = 0x01;
  }

  this._update(seed);
  this.reseed = 1;
  this.reseedInterval = 0x1000000000000;  // 2^48
};

HmacDRBG.prototype._hmac = function hmac() {
  return new hash.hmac(this.hash, this.K);
};

HmacDRBG.prototype._update = function update(seed) {
  var kmac = this._hmac()
                 .update(this.V)
                 .update([ 0x00 ]);
  if (seed)
    kmac = kmac.update(seed);
  this.K = kmac.digest();
  this.V = this._hmac().update(this.V).digest();
  if (!seed)
    return;

  this.K = this._hmac()
               .update(this.V)
               .update([ 0x01 ])
               .update(seed)
               .digest();
  this.V = this._hmac().update(this.V).digest();
};

HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
  // Optional entropy enc
  if (typeof entropyEnc !== 'string') {
    addEnc = add;
    add = entropyEnc;
    entropyEnc = null;
  }

  entropy = utils.toBuffer(entropy, entropyEnc);
  add = utils.toBuffer(add, addEnc);

  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');

  this._update(entropy.concat(add || []));
  this.reseed = 1;
};

HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
  if (this.reseed > this.reseedInterval)
    throw new Error('Reseed is required');

  // Optional encoding
  if (typeof enc !== 'string') {
    addEnc = add;
    add = enc;
    enc = null;
  }

  // Optional additional data
  if (add) {
    add = utils.toArray(add, addEnc);
    this._update(add);
  }

  var temp = [];
  while (temp.length < len) {
    this.V = this._hmac().update(this.V).digest();
    temp = temp.concat(this.V);
  }

  var res = temp.slice(0, len);
  this._update(add);
  this.reseed++;
  return utils.encode(res, enc);
};

},{"../elliptic":36,"hash.js":49}],47:[function(require,module,exports){
var bn = require('bn.js');

var utils = exports;

utils.assert = function assert(val, msg) {
  if (!val)
    throw new Error(msg || 'Assertion failed');
};

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg === 'string') {
    if (!enc) {
      for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i);
        var hi = c >> 8;
        var lo = c & 0xff;
        if (hi)
          res.push(hi, lo);
        else
          res.push(lo);
      }
    } else if (enc === 'hex') {
      msg = msg.replace(/[^a-z0-9]+/ig, '');
      if (msg.length % 2 !== 0)
        msg = '0' + msg;
      for (var i = 0; i < msg.length; i += 2)
        res.push(parseInt(msg[i] + msg[i + 1], 16));
    }
  } else {
    for (var i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
  }
  return res;
}
utils.toArray = toArray;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
utils.toHex = toHex;

utils.encode = function encode(arr, enc) {
  if (enc === 'hex')
    return toHex(arr);
  else
    return arr;
};

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
utils.zero2 = zero2;

// Represent num in a w-NAF form
function getNAF(num, w) {
  var naf = [];
  var ws = 1 << (w + 1);
  var k = num.clone();
  while (k.cmpn(1) >= 0) {
    var z;
    if (k.isOdd()) {
      var mod = k.andln(ws - 1);
      if (mod > (ws >> 1) - 1)
        z = (ws >> 1) - mod;
      else
        z = mod;
      k.isubn(z);
    } else {
      z = 0;
    }
    naf.push(z);

    // Optimization, shift by word if possible
    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;
    for (var i = 1; i < shift; i++)
      naf.push(0);
    k.ishrn(shift);
  }

  return naf;
}
utils.getNAF = getNAF;

// Represent k1, k2 in a Joint Sparse Form
function getJSF(k1, k2) {
  var jsf = [
    [],
    []
  ];

  k1 = k1.clone();
  k2 = k2.clone();
  var d1 = 0;
  var d2 = 0;
  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {

    // First phase
    var m14 = (k1.andln(3) + d1) & 3;
    var m24 = (k2.andln(3) + d2) & 3;
    if (m14 === 3)
      m14 = -1;
    if (m24 === 3)
      m24 = -1;
    var u1;
    if ((m14 & 1) === 0) {
      u1 = 0;
    } else {
      var m8 = (k1.andln(7) + d1) & 7;
      if ((m8 === 3 || m8 === 5) && m24 === 2)
        u1 = -m14;
      else
        u1 = m14;
    }
    jsf[0].push(u1);

    var u2;
    if ((m24 & 1) === 0) {
      u2 = 0;
    } else {
      var m8 = (k2.andln(7) + d2) & 7;
      if ((m8 === 3 || m8 === 5) && m14 === 2)
        u2 = -m24;
      else
        u2 = m24;
    }
    jsf[1].push(u2);

    // Second phase
    if (2 * d1 === u1 + 1)
      d1 = 1 - d1;
    if (2 * d2 === u2 + 1)
      d2 = 1 - d2;
    k1.ishrn(1);
    k2.ishrn(1);
  }

  return jsf;
}
utils.getJSF = getJSF;

},{"bn.js":34}],48:[function(require,module,exports){
var r;

module.exports = function rand(len) {
  if (!r)
    r = new Rand(null);

  return r.generate(len);
};

function Rand(rand) {
  this.rand = rand;
}
module.exports.Rand = Rand;

Rand.prototype.generate = function generate(len) {
  return this._rand(len);
};

if (typeof window === 'object') {
  if (window.crypto && window.crypto.getRandomValues) {
    // Modern browsers
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      window.crypto.getRandomValues(arr);
      return arr;
    };
  } else if (window.msCrypto && window.msCrypto.getRandomValues) {
    // IE
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      window.msCrypto.getRandomValues(arr);
      return arr;
    };
  } else {
    // Old junk
    Rand.prototype._rand = function() {
      throw new Error('Not implemented yet');
    };
  }
} else {
  // Node.js or Web worker
  try {
    var crypto = require('cry' + 'pto');

    Rand.prototype._rand = function _rand(n) {
      return crypto.randomBytes(n);
    };
  } catch (e) {
    // Emulate crypto API using randy
    Rand.prototype._rand = function _rand(n) {
      var res = new Uint8Array(n);
      for (var i = 0; i < res.length; i++)
        res[i] = this.rand.getByte();
      return res;
    };
  }
}

},{}],49:[function(require,module,exports){
var hash = exports;

hash.utils = require('./hash/utils');
hash.common = require('./hash/common');
hash.sha = require('./hash/sha');
hash.ripemd = require('./hash/ripemd');
hash.hmac = require('./hash/hmac');

// Proxy hash functions to the main object
hash.sha1 = hash.sha.sha1;
hash.sha256 = hash.sha.sha256;
hash.sha224 = hash.sha.sha224;
hash.sha384 = hash.sha.sha384;
hash.sha512 = hash.sha.sha512;
hash.ripemd160 = hash.ripemd.ripemd160;

},{"./hash/common":50,"./hash/hmac":51,"./hash/ripemd":52,"./hash/sha":53,"./hash/utils":54}],50:[function(require,module,exports){
var hash = require('../hash');
var utils = hash.utils;
var assert = utils.assert;

function BlockHash() {
  this.pending = null;
  this.pendingTotal = 0;
  this.blockSize = this.constructor.blockSize;
  this.outSize = this.constructor.outSize;
  this.hmacStrength = this.constructor.hmacStrength;
  this.padLength = this.constructor.padLength / 8;
  this.endian = 'big';

  this._delta8 = this.blockSize / 8;
  this._delta32 = this.blockSize / 32;
}
exports.BlockHash = BlockHash;

BlockHash.prototype.update = function update(msg, enc) {
  // Convert message to array, pad it, and join into 32bit blocks
  msg = utils.toArray(msg, enc);
  if (!this.pending)
    this.pending = msg;
  else
    this.pending = this.pending.concat(msg);
  this.pendingTotal += msg.length;

  // Enough data, try updating
  if (this.pending.length >= this._delta8) {
    msg = this.pending;

    // Process pending data in blocks
    var r = msg.length % this._delta8;
    this.pending = msg.slice(msg.length - r, msg.length);
    if (this.pending.length === 0)
      this.pending = null;

    msg = utils.join32(msg, 0, msg.length - r, this.endian);
    for (var i = 0; i < msg.length; i += this._delta32)
      this._update(msg, i, i + this._delta32);
  }

  return this;
};

BlockHash.prototype.digest = function digest(enc) {
  this.update(this._pad());
  assert(this.pending === null);

  return this._digest(enc);
};

BlockHash.prototype._pad = function pad() {
  var len = this.pendingTotal;
  var bytes = this._delta8;
  var k = bytes - ((len + this.padLength) % bytes);
  var res = new Array(k + this.padLength);
  res[0] = 0x80;
  for (var i = 1; i < k; i++)
    res[i] = 0;

  // Append length
  len <<= 3;
  if (this.endian === 'big') {
    for (var t = 8; t < this.padLength; t++)
      res[i++] = 0;

    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = len & 0xff;
  } else {
    res[i++] = len & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;

    for (var t = 8; t < this.padLength; t++)
      res[i++] = 0;
  }

  return res;
};

},{"../hash":49}],51:[function(require,module,exports){
var hmac = exports;

var hash = require('../hash');
var utils = hash.utils;
var assert = utils.assert;

function Hmac(hash, key, enc) {
  if (!(this instanceof Hmac))
    return new Hmac(hash, key, enc);
  this.Hash = hash;
  this.blockSize = hash.blockSize / 8;
  this.outSize = hash.outSize / 8;
  this.inner = null;
  this.outer = null;

  this._init(utils.toArray(key, enc));
}
module.exports = Hmac;

Hmac.prototype._init = function init(key) {
  // Shorten key, if needed
  if (key.length > this.blockSize)
    key = new this.Hash().update(key).digest();
  assert(key.length <= this.blockSize);

  // Add padding to key
  for (var i = key.length; i < this.blockSize; i++)
    key.push(0);

  for (var i = 0; i < key.length; i++)
    key[i] ^= 0x36;
  this.inner = new this.Hash().update(key);

  // 0x36 ^ 0x5c = 0x6a
  for (var i = 0; i < key.length; i++)
    key[i] ^= 0x6a;
  this.outer = new this.Hash().update(key);
};

Hmac.prototype.update = function update(msg, enc) {
  this.inner.update(msg, enc);
  return this;
};

Hmac.prototype.digest = function digest(enc) {
  this.outer.update(this.inner.digest());
  return this.outer.digest(enc);
};

},{"../hash":49}],52:[function(require,module,exports){
var hash = require('../hash');
var utils = hash.utils;

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_3 = utils.sum32_3;
var sum32_4 = utils.sum32_4;
var BlockHash = hash.common.BlockHash;

function RIPEMD160() {
  if (!(this instanceof RIPEMD160))
    return new RIPEMD160();

  BlockHash.call(this);

  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];
  this.endian = 'little';
}
utils.inherits(RIPEMD160, BlockHash);
exports.ripemd160 = RIPEMD160;

RIPEMD160.blockSize = 512;
RIPEMD160.outSize = 160;
RIPEMD160.hmacStrength = 192;
RIPEMD160.padLength = 64;

RIPEMD160.prototype._update = function update(msg, start) {
  var A = this.h[0];
  var B = this.h[1];
  var C = this.h[2];
  var D = this.h[3];
  var E = this.h[4];
  var Ah = A;
  var Bh = B;
  var Ch = C;
  var Dh = D;
  var Eh = E;
  for (var j = 0; j < 80; j++) {
    var T = sum32(
      rotl32(
        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),
        s[j]),
      E);
    A = E;
    E = D;
    D = rotl32(C, 10);
    C = B;
    B = T;
    T = sum32(
      rotl32(
        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),
        sh[j]),
      Eh);
    Ah = Eh;
    Eh = Dh;
    Dh = rotl32(Ch, 10);
    Ch = Bh;
    Bh = T;
  }
  T = sum32_3(this.h[1], C, Dh);
  this.h[1] = sum32_3(this.h[2], D, Eh);
  this.h[2] = sum32_3(this.h[3], E, Ah);
  this.h[3] = sum32_3(this.h[4], A, Bh);
  this.h[4] = sum32_3(this.h[0], B, Ch);
  this.h[0] = T;
};

RIPEMD160.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'little');
  else
    return utils.split32(this.h, 'little');
};

function f(j, x, y, z) {
  if (j <= 15)
    return x ^ y ^ z;
  else if (j <= 31)
    return (x & y) | ((~x) & z);
  else if (j <= 47)
    return (x | (~y)) ^ z;
  else if (j <= 63)
    return (x & z) | (y & (~z));
  else
    return x ^ (y | (~z));
}

function K(j) {
  if (j <= 15)
    return 0x00000000;
  else if (j <= 31)
    return 0x5a827999;
  else if (j <= 47)
    return 0x6ed9eba1;
  else if (j <= 63)
    return 0x8f1bbcdc;
  else
    return 0xa953fd4e;
}

function Kh(j) {
  if (j <= 15)
    return 0x50a28be6;
  else if (j <= 31)
    return 0x5c4dd124;
  else if (j <= 47)
    return 0x6d703ef3;
  else if (j <= 63)
    return 0x7a6d76e9;
  else
    return 0x00000000;
}

var r = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13,
];

var rh = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
];

var s = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6,
];

var sh = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
];

},{"../hash":49}],53:[function(require,module,exports){
var hash = require('../hash');
var utils = hash.utils;
var assert = utils.assert;

var rotr32 = utils.rotr32;
var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_4 = utils.sum32_4;
var sum32_5 = utils.sum32_5;
var rotr64_hi = utils.rotr64_hi;
var rotr64_lo = utils.rotr64_lo;
var shr64_hi = utils.shr64_hi;
var shr64_lo = utils.shr64_lo;
var sum64 = utils.sum64;
var sum64_hi = utils.sum64_hi;
var sum64_lo = utils.sum64_lo;
var sum64_4_hi = utils.sum64_4_hi;
var sum64_4_lo = utils.sum64_4_lo;
var sum64_5_hi = utils.sum64_5_hi;
var sum64_5_lo = utils.sum64_5_lo;
var BlockHash = hash.common.BlockHash;

var sha256_K = [
  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,
  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,
  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,
  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,
  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,
  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
];

var sha512_K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
];

var sha1_K = [
  0x5A827999, 0x6ED9EBA1,
  0x8F1BBCDC, 0xCA62C1D6
];

function SHA256() {
  if (!(this instanceof SHA256))
    return new SHA256();

  BlockHash.call(this);
  this.h = [ 0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,
             0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19 ];
  this.k = sha256_K;
  this.W = new Array(64);
}
utils.inherits(SHA256, BlockHash);
exports.sha256 = SHA256;

SHA256.blockSize = 512;
SHA256.outSize = 256;
SHA256.hmacStrength = 192;
SHA256.padLength = 64;

SHA256.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i++)
    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];
  var f = this.h[5];
  var g = this.h[6];
  var h = this.h[7];

  assert(this.k.length === W.length);
  for (var i = 0; i < W.length; i++) {
    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
    var T2 = sum32(s0_256(a), maj32(a, b, c));
    h = g;
    g = f;
    f = e;
    e = sum32(d, T1);
    d = c;
    c = b;
    b = a;
    a = sum32(T1, T2);
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
  this.h[5] = sum32(this.h[5], f);
  this.h[6] = sum32(this.h[6], g);
  this.h[7] = sum32(this.h[7], h);
};

SHA256.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

function SHA224() {
  if (!(this instanceof SHA224))
    return new SHA224();

  SHA256.call(this);
  this.h = [ 0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
             0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];
}
utils.inherits(SHA224, SHA256);
exports.sha224 = SHA224;

SHA224.blockSize = 512;
SHA224.outSize = 224;
SHA224.hmacStrength = 192;
SHA224.padLength = 64;

SHA224.prototype._digest = function digest(enc) {
  // Just truncate output
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 7), 'big');
  else
    return utils.split32(this.h.slice(0, 7), 'big');
};

function SHA512() {
  if (!(this instanceof SHA512))
    return new SHA512();

  BlockHash.call(this);
  this.h = [ 0x6a09e667, 0xf3bcc908,
             0xbb67ae85, 0x84caa73b,
             0x3c6ef372, 0xfe94f82b,
             0xa54ff53a, 0x5f1d36f1,
             0x510e527f, 0xade682d1,
             0x9b05688c, 0x2b3e6c1f,
             0x1f83d9ab, 0xfb41bd6b,
             0x5be0cd19, 0x137e2179 ];
  this.k = sha512_K;
  this.W = new Array(160);
}
utils.inherits(SHA512, BlockHash);
exports.sha512 = SHA512;

SHA512.blockSize = 1024;
SHA512.outSize = 512;
SHA512.hmacStrength = 192;
SHA512.padLength = 128;

SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
  var W = this.W;

  // 32 x 32bit words
  for (var i = 0; i < 32; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i += 2) {
    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2
    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
    var c1_hi = W[i - 14];  // i - 7
    var c1_lo = W[i - 13];
    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15
    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
    var c3_hi = W[i - 32];  // i - 16
    var c3_lo = W[i - 31];

    W[i] = sum64_4_hi(c0_hi, c0_lo,
                      c1_hi, c1_lo,
                      c2_hi, c2_lo,
                      c3_hi, c3_lo);
    W[i + 1] = sum64_4_lo(c0_hi, c0_lo,
                          c1_hi, c1_lo,
                          c2_hi, c2_lo,
                          c3_hi, c3_lo);
  }
};

SHA512.prototype._update = function _update(msg, start) {
  this._prepareBlock(msg, start);

  var W = this.W;

  var ah = this.h[0];
  var al = this.h[1];
  var bh = this.h[2];
  var bl = this.h[3];
  var ch = this.h[4];
  var cl = this.h[5];
  var dh = this.h[6];
  var dl = this.h[7];
  var eh = this.h[8];
  var el = this.h[9];
  var fh = this.h[10];
  var fl = this.h[11];
  var gh = this.h[12];
  var gl = this.h[13];
  var hh = this.h[14];
  var hl = this.h[15];

  assert(this.k.length === W.length);
  for (var i = 0; i < W.length; i += 2) {
    var c0_hi = hh;
    var c0_lo = hl;
    var c1_hi = s1_512_hi(eh, el);
    var c1_lo = s1_512_lo(eh, el);
    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
    var c3_hi = this.k[i];
    var c3_lo = this.k[i + 1];
    var c4_hi = W[i];
    var c4_lo = W[i + 1];

    var T1_hi = sum64_5_hi(c0_hi, c0_lo,
                           c1_hi, c1_lo,
                           c2_hi, c2_lo,
                           c3_hi, c3_lo,
                           c4_hi, c4_lo);
    var T1_lo = sum64_5_lo(c0_hi, c0_lo,
                           c1_hi, c1_lo,
                           c2_hi, c2_lo,
                           c3_hi, c3_lo,
                           c4_hi, c4_lo);

    var c0_hi = s0_512_hi(ah, al);
    var c0_lo = s0_512_lo(ah, al);
    var c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
    var c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);

    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);

    hh = gh;
    hl = gl;

    gh = fh;
    gl = fl;

    fh = eh;
    fl = el;

    eh = sum64_hi(dh, dl, T1_hi, T1_lo);
    el = sum64_lo(dl, dl, T1_hi, T1_lo);

    dh = ch;
    dl = cl;

    ch = bh;
    cl = bl;

    bh = ah;
    bl = al;

    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
  }

  sum64(this.h, 0, ah, al);
  sum64(this.h, 2, bh, bl);
  sum64(this.h, 4, ch, cl);
  sum64(this.h, 6, dh, dl);
  sum64(this.h, 8, eh, el);
  sum64(this.h, 10, fh, fl);
  sum64(this.h, 12, gh, gl);
  sum64(this.h, 14, hh, hl);
};

SHA512.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

function SHA384() {
  if (!(this instanceof SHA384))
    return new SHA384();

  SHA512.call(this);
  this.h = [ 0xcbbb9d5d, 0xc1059ed8,
             0x629a292a, 0x367cd507,
             0x9159015a, 0x3070dd17,
             0x152fecd8, 0xf70e5939,
             0x67332667, 0xffc00b31,
             0x8eb44a87, 0x68581511,
             0xdb0c2e0d, 0x64f98fa7,
             0x47b5481d, 0xbefa4fa4 ];
}
utils.inherits(SHA384, SHA512);
exports.sha384 = SHA384;

SHA384.blockSize = 1024;
SHA384.outSize = 384;
SHA384.hmacStrength = 192;
SHA384.padLength = 128;

SHA384.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 12), 'big');
  else
    return utils.split32(this.h.slice(0, 12), 'big');
};

function SHA1() {
  if (!(this instanceof SHA1))
    return new SHA1();

  BlockHash.call(this);
  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe,
             0x10325476, 0xc3d2e1f0 ];
  this.W = new Array(80);
}

utils.inherits(SHA1, BlockHash);
exports.sha1 = SHA1;

SHA1.blockSize = 512;
SHA1.outSize = 160;
SHA1.hmacStrength = 80;
SHA1.padLength = 64;

SHA1.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];

  for(; i < W.length; i++)
    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];

  for (var i = 0; i < W.length; i++) {
    var s = ~~(i / 20);
    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
    e = d;
    d = c;
    c = rotl32(b, 30);
    b = a;
    a = t;
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
};

SHA1.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

function ch32(x, y, z) {
  return (x & y) ^ ((~x) & z);
}

function maj32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}

function p32(x, y, z) {
  return x ^ y ^ z;
}

function s0_256(x) {
  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
}

function s1_256(x) {
  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
}

function g0_256(x) {
  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);
}

function g1_256(x) {
  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);
}

function ft_1(s, x, y, z) {
  if (s === 0)
    return ch32(x, y, z);
  if (s === 1 || s === 3)
    return p32(x, y, z);
  if (s === 2)
    return maj32(x, y, z);
}

function ch64_hi(xh, xl, yh, yl, zh, zl) {
  var r = (xh & yh) ^ ((~xh) & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function ch64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ ((~xl) & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_hi(xh, xl, yh, yl, zh, zl) {
  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 28);
  var c1_hi = rotr64_hi(xl, xh, 2);  // 34
  var c2_hi = rotr64_hi(xl, xh, 7);  // 39

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 28);
  var c1_lo = rotr64_lo(xl, xh, 2);  // 34
  var c2_lo = rotr64_lo(xl, xh, 7);  // 39

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 14);
  var c1_hi = rotr64_hi(xh, xl, 18);
  var c2_hi = rotr64_hi(xl, xh, 9);  // 41

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 14);
  var c1_lo = rotr64_lo(xh, xl, 18);
  var c2_lo = rotr64_lo(xl, xh, 9);  // 41

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 1);
  var c1_hi = rotr64_hi(xh, xl, 8);
  var c2_hi = shr64_hi(xh, xl, 7);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 1);
  var c1_lo = rotr64_lo(xh, xl, 8);
  var c2_lo = shr64_lo(xh, xl, 7);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 19);
  var c1_hi = rotr64_hi(xl, xh, 29);  // 61
  var c2_hi = shr64_hi(xh, xl, 6);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 19);
  var c1_lo = rotr64_lo(xl, xh, 29);  // 61
  var c2_lo = shr64_lo(xh, xl, 6);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

},{"../hash":49}],54:[function(require,module,exports){
var utils = exports;
var inherits = require('inherits');

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg === 'string') {
    if (!enc) {
      for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i);
        var hi = c >> 8;
        var lo = c & 0xff;
        if (hi)
          res.push(hi, lo);
        else
          res.push(lo);
      }
    } else if (enc === 'hex') {
      msg = msg.replace(/[^a-z0-9]+/ig, '');
      if (msg.length % 2 !== 0)
        msg = '0' + msg;
      for (var i = 0; i < msg.length; i += 2)
        res.push(parseInt(msg[i] + msg[i + 1], 16));
    }
  } else {
    for (var i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
  }
  return res;
}
utils.toArray = toArray;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
utils.toHex = toHex;

function htonl(w) {
  var res = (w >>> 24) |
            ((w >>> 8) & 0xff00) |
            ((w << 8) & 0xff0000) |
            ((w & 0xff) << 24);
  return res >>> 0;
}
utils.htonl = htonl;

function toHex32(msg, endian) {
  var res = '';
  for (var i = 0; i < msg.length; i++) {
    var w = msg[i];
    if (endian === 'little')
      w = htonl(w);
    res += zero8(w.toString(16));
  }
  return res;
}
utils.toHex32 = toHex32;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
utils.zero2 = zero2;

function zero8(word) {
  if (word.length === 7)
    return '0' + word;
  else if (word.length === 6)
    return '00' + word;
  else if (word.length === 5)
    return '000' + word;
  else if (word.length === 4)
    return '0000' + word;
  else if (word.length === 3)
    return '00000' + word;
  else if (word.length === 2)
    return '000000' + word;
  else if (word.length === 1)
    return '0000000' + word;
  else
    return word;
}
utils.zero8 = zero8;

function join32(msg, start, end, endian) {
  var len = end - start;
  assert(len % 4 === 0);
  var res = new Array(len / 4);
  for (var i = 0, k = start; i < res.length; i++, k += 4) {
    var w;
    if (endian === 'big')
      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];
    else
      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];
    res[i] = w >>> 0;
  }
  return res;
}
utils.join32 = join32;

function split32(msg, endian) {
  var res = new Array(msg.length * 4);
  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
    var m = msg[i];
    if (endian === 'big') {
      res[k] = m >>> 24;
      res[k + 1] = (m >>> 16) & 0xff;
      res[k + 2] = (m >>> 8) & 0xff;
      res[k + 3] = m & 0xff;
    } else {
      res[k + 3] = m >>> 24;
      res[k + 2] = (m >>> 16) & 0xff;
      res[k + 1] = (m >>> 8) & 0xff;
      res[k] = m & 0xff;
    }
  }
  return res;
}
utils.split32 = split32;

function rotr32(w, b) {
  return (w >>> b) | (w << (32 - b));
}
utils.rotr32 = rotr32;

function rotl32(w, b) {
  return (w << b) | (w >>> (32 - b));
}
utils.rotl32 = rotl32;

function sum32(a, b) {
  return (a + b) >>> 0;
}
utils.sum32 = sum32;

function sum32_3(a, b, c) {
  return (a + b + c) >>> 0;
}
utils.sum32_3 = sum32_3;

function sum32_4(a, b, c, d) {
  return (a + b + c + d) >>> 0;
}
utils.sum32_4 = sum32_4;

function sum32_5(a, b, c, d, e) {
  return (a + b + c + d + e) >>> 0;
}
utils.sum32_5 = sum32_5;

function assert(cond, msg) {
  if (!cond)
    throw new Error(msg || 'Assertion failed');
}
utils.assert = assert;

utils.inherits = inherits;

function sum64(buf, pos, ah, al) {
  var bh = buf[pos];
  var bl = buf[pos + 1];

  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  buf[pos] = hi >>> 0;
  buf[pos + 1] = lo;
}
exports.sum64 = sum64;

function sum64_hi(ah, al, bh, bl) {
  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  return hi >>> 0;
};
exports.sum64_hi = sum64_hi;

function sum64_lo(ah, al, bh, bl) {
  var lo = al + bl;
  return lo >>> 0;
};
exports.sum64_lo = sum64_lo;

function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;

  var hi = ah + bh + ch + dh + carry;
  return hi >>> 0;
};
exports.sum64_4_hi = sum64_4_hi;

function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
  var lo = al + bl + cl + dl;
  return lo >>> 0;
};
exports.sum64_4_lo = sum64_4_lo;

function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;
  lo = (lo + el) >>> 0;
  carry += lo < el ? 1 : 0;

  var hi = ah + bh + ch + dh + eh + carry;
  return hi >>> 0;
};
exports.sum64_5_hi = sum64_5_hi;

function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var lo = al + bl + cl + dl + el;

  return lo >>> 0;
};
exports.sum64_5_lo = sum64_5_lo;

function rotr64_hi(ah, al, num) {
  var r = (al << (32 - num)) | (ah >>> num);
  return r >>> 0;
};
exports.rotr64_hi = rotr64_hi;

function rotr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
};
exports.rotr64_lo = rotr64_lo;

function shr64_hi(ah, al, num) {
  return ah >>> num;
};
exports.shr64_hi = shr64_hi;

function shr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
};
exports.shr64_lo = shr64_lo;

},{"inherits":152}],55:[function(require,module,exports){
module.exports={
  "name": "elliptic",
  "version": "1.0.1",
  "description": "EC cryptography",
  "main": "lib/elliptic.js",
  "scripts": {
    "test": "mocha --reporter=spec test/*-test.js"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:indutny/elliptic"
  },
  "keywords": [
    "EC",
    "Elliptic",
    "curve",
    "Cryptography"
  ],
  "author": {
    "name": "Fedor Indutny",
    "email": "fedor@indutny.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/indutny/elliptic/issues"
  },
  "homepage": "https://github.com/indutny/elliptic",
  "devDependencies": {
    "browserify": "^3.44.2",
    "mocha": "^1.18.2",
    "uglify-js": "^2.4.13"
  },
  "dependencies": {
    "bn.js": "^1.0.0",
    "brorand": "^1.0.1",
    "hash.js": "^1.0.0",
    "inherits": "^2.0.1"
  },
  "gitHead": "17dc013761dd1efcfb868e2b06b0b897627b40be",
  "_id": "elliptic@1.0.1",
  "_shasum": "d180376b66a17d74995c837796362ac4d22aefe3",
  "_from": "elliptic@>=1.0.0 <2.0.0",
  "_npmVersion": "1.4.28",
  "_npmUser": {
    "name": "indutny",
    "email": "fedor@indutny.com"
  },
  "maintainers": [
    {
      "name": "indutny",
      "email": "fedor@indutny.com"
    }
  ],
  "dist": {
    "shasum": "d180376b66a17d74995c837796362ac4d22aefe3",
    "tarball": "http://registry.npmjs.org/elliptic/-/elliptic-1.0.1.tgz"
  },
  "directories": {},
  "_resolved": "https://registry.npmjs.org/elliptic/-/elliptic-1.0.1.tgz"
}

},{}],56:[function(require,module,exports){
(function (Buffer){

module.exports = function evp(crypto, password, salt, keyLen) {
  keyLen = keyLen/8;
  var ki = 0;
  var ii = 0;
  var key = new Buffer(keyLen);
  var addmd = 0;
  var md, md_buf;
  var i;
  while (true) {
    md = crypto.createHash('md5');
    if(addmd++ > 0) {
       md.update(md_buf);
    }
    md.update(password);
    md.update(salt);
    md_buf = md.digest();
    i = 0;
    if(keyLen > 0) {
      while(true) {
        if(keyLen === 0) {
          break;
        }
        if(i === md_buf.length) {
          break;
        }
        key[ki++] = md_buf[i++];
        keyLen--;
       }
    }
   if(keyLen === 0) {
      break;
    }
  }
  for(i=0;i<md_buf.length;i++) {
    md_buf[i] = 0;
  }
  return key;
};
}).call(this,require("buffer").Buffer)
},{"buffer":9}],57:[function(require,module,exports){
module.exports={"2.16.840.1.101.3.4.1.1": "aes-128-ecb",
"2.16.840.1.101.3.4.1.2": "aes-128-cbc",
"2.16.840.1.101.3.4.1.3": "aes-128-ofb",
"2.16.840.1.101.3.4.1.4": "aes-128-cfb",
"2.16.840.1.101.3.4.1.21": "aes-192-ecb",
"2.16.840.1.101.3.4.1.22": "aes-192-cbc",
"2.16.840.1.101.3.4.1.23": "aes-192-ofb",
"2.16.840.1.101.3.4.1.24": "aes-192-cfb",
"2.16.840.1.101.3.4.1.41": "aes-256-ecb",
"2.16.840.1.101.3.4.1.42": "aes-256-cbc",
"2.16.840.1.101.3.4.1.43": "aes-256-ofb",
"2.16.840.1.101.3.4.1.44": "aes-256-cfb"
}
},{}],58:[function(require,module,exports){
// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js
// Fedor, you are amazing.

var asn1 = require('asn1.js');
var rfc3280 = require('asn1.js-rfc3280');

var RSAPrivateKey = asn1.define('RSAPrivateKey', function() {
  this.seq().obj(
    this.key('version').int(),
    this.key('modulus').int(),
    this.key('publicExponent').int(),
    this.key('privateExponent').int(),
    this.key('prime1').int(),
    this.key('prime2').int(),
    this.key('exponent1').int(),
    this.key('exponent2').int(),
    this.key('coefficient').int()
  );
});
exports.RSAPrivateKey = RSAPrivateKey;

var RSAPublicKey = asn1.define('RSAPublicKey', function() {
  this.seq().obj(
    this.key('modulus').int(),
    this.key('publicExponent').int()
  );
});
exports.RSAPublicKey = RSAPublicKey;

var PublicKey = rfc3280.SubjectPublicKeyInfo;
exports.PublicKey = PublicKey;
var ECPublicKey =  asn1.define('ECPublicKey', function() {
  this.seq().obj(
    this.key('algorithm').seq().obj(
      this.key('id').objid(),
      this.key('curve').objid()
    ),
    this.key('subjectPrivateKey').bitstr()
  );
});
exports.ECPublicKey = ECPublicKey;
var ECPrivateWrap =  asn1.define('ECPrivateWrap', function() {
  this.seq().obj(
    this.key('version').int(),
    this.key('algorithm').seq().obj(
      this.key('id').objid(),
      this.key('curve').objid()
    ),
    this.key('subjectPrivateKey').octstr()
  );
});
exports.ECPrivateWrap = ECPrivateWrap;

var PrivateKeyInfo = asn1.define('PrivateKeyInfo', function() {
  this.seq().obj(
    this.key('version').int(),
    this.key('algorithm').use(rfc3280.AlgorithmIdentifier),
    this.key('subjectPrivateKey').octstr()
  );
});
exports.PrivateKey = PrivateKeyInfo;
var EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function() {
  this.seq().obj(
    this.key('algorithm').seq().obj(
      this.key('id').objid(),
      this.key('decrypt').seq().obj(
        this.key('kde').seq().obj(
          this.key('id').objid(),
          this.key('kdeparams').seq().obj(
            this.key('salt').octstr(),
            this.key('iters').int()
          )
        ),
        this.key('cipher').seq().obj(
          this.key('algo').objid(),
          this.key('iv').octstr()
        )
      )
    ),
    this.key('subjectPrivateKey').octstr()
  );
});
var dsaParams = asn1.define('dsaParams', function() {
  this.seq().obj(
    this.key('algorithm').objid(),
    this.key('parameters').seq().obj(
        this.key('p').int(),
        this.key('q').int(),
        this.key('g').int()
      )
  );
});
exports.EncryptedPrivateKey = EncryptedPrivateKeyInfo;
var DSAPublicKey = asn1.define('DSAPublicKey', function() {
  this.seq().obj(
    this.key('algorithm').use(dsaParams),
    this.key('subjectPublicKey').bitstr()
  );
});
exports.DSAPublicKey = DSAPublicKey;
var DSAPrivateWrap =  asn1.define('DSAPrivateWrap', function() {
  this.seq().obj(
    this.key('version').int(),
    this.key('algorithm').seq().obj(
      this.key('id').objid(),
      this.key('parameters').seq().obj(
        this.key('p').int(),
        this.key('q').int(),
        this.key('g').int()
      )
    ),
    this.key('subjectPrivateKey').octstr()
  );
});
exports.DSAPrivateWrap = DSAPrivateWrap;
var DSAPrivateKey = asn1.define('DSAPrivateKey', function() {
  this.seq().obj(
    this.key('version').int(),
    this.key('p').int(),
    this.key('q').int(),
    this.key('g').int(),
    this.key('pub_key').int(),
    this.key('priv_key').int()
  );
});
exports.DSAPrivateKey = DSAPrivateKey;

exports.DSAparam = asn1.define('DSAparam', function () {
  this.int();
});
var ECPrivateKey = asn1.define('ECPrivateKey', function() {
  this.seq().obj(
    this.key('version').int(),
    this.key('privateKey').octstr(),
    this.key('parameters').optional().explicit(0).use(ECParameters),
    this.key('publicKey').optional().explicit(1).bitstr()
  );
});
exports.ECPrivateKey = ECPrivateKey;
var ECParameters = asn1.define('ECParameters', function() {
  this.choice({
    namedCurve: this.objid()
  });
});

var ECPrivateKey2 = asn1.define('ECPrivateKey2', function() {
  this.seq().obj(
    this.key('version').int(),
    this.key('privateKey').octstr(),
    this.key('publicKey').seq().obj(
      this.key('key').bitstr()
    )
  );
});
exports.ECPrivateKey2 = ECPrivateKey2;

exports.signature = asn1.define('signature', function() {
  this.seq().obj(
    this.key('r').int(),
    this.key('s').int()
  );
});
},{"asn1.js":62,"asn1.js-rfc3280":61}],59:[function(require,module,exports){
(function (Buffer){
var findProc = /Proc-Type: 4,ENCRYPTED\n\r?DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)\n\r?\n\r?([0-9A-z\n\r\+\/\=]+)\n\r?/m;
var startRegex = /^-----BEGIN (.*)-----\n/;
var evp = require('./EVP_BytesToKey');
module.exports = function (okey, password, crypto) {
  var key = okey.toString();
  var match = key.match(findProc);
  if (!match) {
    return okey;
  }
  var suite = 'aes' + match[1];
  var iv = new Buffer(match[2], 'hex');
  var cipherText = new Buffer(match[3].replace(/\n\r?/g, ''), 'base64');
  var cipherKey = evp(crypto, password, iv.slice(0,8), parseInt(match[1]));
  var out = [];
  var cipher = crypto.createDecipheriv(suite, cipherKey, iv);
  out.push(cipher.update(cipherText));
  out.push(cipher.final());
  var decrypted = Buffer.concat(out).toString('base64');
  var tag = key.match(startRegex)[1];
  return '-----BEGIN ' + tag + "-----\n" + wrap(decrypted) + "\n" + '-----END ' + tag + "-----\n";
};
// http://stackoverflow.com/a/7033705
function wrap(str) {
  var chunks = [];
  while (str) {
    if (str.length < 64) {
      chunks.push(str);
      break;
    }
    else {
      chunks.push(str.slice(0, 64));
      str = str.slice(64);
    }
  }
  return chunks.join("\n");
}
}).call(this,require("buffer").Buffer)
},{"./EVP_BytesToKey":56,"buffer":9}],60:[function(require,module,exports){
(function (Buffer){
var pemstrip = require('pemstrip');
var asn1 = require('./asn1');
var aesid = require('./aesid.json');
var fixProc = require('./fixProc');
module.exports = parseKeys;

function parseKeys(buffer, crypto) {
  var password;
  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {
    password = buffer.passphrase;
    buffer = buffer.key;
  }
  if (typeof buffer === 'string') {
    buffer = new Buffer(buffer);
  }
  if (password) {
    buffer = fixProc(buffer, password, crypto);
  }
  var stripped = pemstrip.strip(buffer);
  var type = stripped.tag;
  var data = new Buffer(stripped.base64, 'base64');
  var subtype,ndata;
  switch (type) {
    case 'PUBLIC KEY':
      ndata = asn1.PublicKey.decode(data, 'der');
      subtype = ndata.algorithm.algorithm.join('.');
      switch(subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der');
        case '1.2.840.10045.2.1':
          return {
            type: 'ec',
            data:  asn1.ECPublicKey.decode(data, 'der')
          };
        case '1.2.840.10040.4.1':
          ndata = asn1.DSAPublicKey.decode(data, 'der');
          ndata.algorithm.parameters.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der');
          return {
            type: 'dsa',
            data: ndata.algorithm.parameters
          };
        default: throw new Error('unknown key id ' +  subtype);
      }
      throw new Error('unknown key type ' +  type);
    case 'ENCRYPTED PRIVATE KEY':
      data = asn1.EncryptedPrivateKey.decode(data, 'der');
      data = decrypt(crypto, data, password);
      //falling through
    case 'PRIVATE KEY':
      ndata = asn1.PrivateKey.decode(data, 'der');
      subtype = ndata.algorithm.algorithm.join('.');
      switch(subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der');
        case '1.2.840.10045.2.1':
          ndata =  asn1.ECPrivateWrap.decode(data, 'der');
          return {
            curve: ndata.algorithm.curve,
            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey
          };
        case '1.2.840.10040.4.1':
          ndata =  asn1.DSAPrivateWrap.decode(data, 'der');
          ndata.algorithm.parameters.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der');
          return {
            type: 'dsa',
            params: ndata.algorithm.parameters
          };
        default: throw new Error('unknown key id ' +  subtype);
      }
      throw new Error('unknown key type ' +  type);
    case 'RSA PUBLIC KEY':
      return asn1.RSAPublicKey.decode(data, 'der');
    case 'RSA PRIVATE KEY':
      return asn1.RSAPrivateKey.decode(data, 'der');
    case 'DSA PRIVATE KEY':
      return {
        type: 'dsa',
        params: asn1.DSAPrivateKey.decode(data, 'der')
      };
    case 'EC PRIVATE KEY':
      data = asn1.ECPrivateKey.decode(data, 'der');
      return {
        curve: data.parameters.value,
        privateKey: data.privateKey
      };
    default: throw new Error('unknown key type ' +  type);
  }
}
parseKeys.signature = asn1.signature;
function decrypt(crypto, data, password) {
  var salt = data.algorithm.decrypt.kde.kdeparams.salt;
  var iters = data.algorithm.decrypt.kde.kdeparams.iters;
  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')];
  var iv = data.algorithm.decrypt.cipher.iv;
  var cipherText = data.subjectPrivateKey;
  var keylen = parseInt(algo.split('-')[1], 10)/8;
  var key = crypto.pbkdf2Sync(password, salt, iters, keylen);
  var cipher = crypto.createDecipheriv(algo, key, iv);
  var out = [];
  out.push(cipher.update(cipherText));
  out.push(cipher.final());
  return Buffer.concat(out);
}
}).call(this,require("buffer").Buffer)
},{"./aesid.json":57,"./asn1":58,"./fixProc":59,"buffer":9,"pemstrip":75}],61:[function(require,module,exports){
try {
  var asn1 = require('asn1.js');
} catch (e) {
  var asn1 = require('../' + '..');
}

var CRLReason = asn1.define('CRLReason', function() {
  this.enum({
    0: 'unspecified',
    1: 'keyCompromise',
    2: 'CACompromise',
    3: 'affiliationChanged',
    4: 'superseded',
    5: 'cessationOfOperation',
    6: 'certificateHold',
    8: 'removeFromCRL',
    9: 'privilegeWithdrawn',
    10: 'AACompromise'
  });
});
exports.CRLReason = CRLReason;

var AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function() {
  this.seq().obj(
    this.key('algorithm').objid(),
    this.key('parameters').optional().any()
  );
});
exports.AlgorithmIdentifier = AlgorithmIdentifier;

var Certificate = asn1.define('Certificate', function() {
  this.seq().obj(
    this.key('tbsCertificate').use(TBSCertificate),
    this.key('signatureAlgorithm').use(AlgorithmIdentifier),
    this.key('signature').bitstr()
  );
});
exports.Certificate = Certificate;

var TBSCertificate = asn1.define('TBSCertificate', function() {
  this.seq().obj(
    this.key('version').def('v1').explicit(0).use(Version),
    this.key('serialNumber').use(CertificateSerialNumber),
    this.key('signature').use(AlgorithmIdentifier),
    this.key('issuer').use(Name),
    this.key('validity').use(Validity),
    this.key('subject').use(Name),
    this.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo),

    // TODO(indutny): validate that version is v2 or v3
    this.key('issuerUniqueID').optional().explicit(1).use(UniqueIdentifier),
    this.key('subjectUniqueID').optional().explicit(2).use(UniqueIdentifier),

    // TODO(indutny): validate that version is v3
    this.key('extensions').optional().explicit(3).use(Extensions)
  );
});
exports.TBSCertificate = TBSCertificate;

var Version = asn1.define('Version', function() {
  this.int({
    0: 'v1',
    1: 'v2',
    2: 'v3'
  });
});
exports.Version = Version;

var CertificateSerialNumber = asn1.define('CertificateSerialNumber',
                                          function() {
  this.int();
});
exports.CertificateSerialNumber = CertificateSerialNumber;

var Validity = asn1.define('Validity', function() {
  this.seq().obj(
    this.key('notBefore').use(Time),
    this.key('notAfter').use(Time)
  );
});
exports.Validity = Validity;

var Time = asn1.define('Time', function() {
  this.choice({
    utcTime: this.utctime(),
    genTime: this.gentime()
  });
});
exports.Time = Time;

var UniqueIdentifier = asn1.define('UniqueIdentifier', function() {
  this.bitstr();
});
exports.UniqueIdentifier = UniqueIdentifier;

var SubjectPublicKeyInfo = asn1.define('SubjectPublicKeyInfo', function() {
  this.seq().obj(
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPublicKey').bitstr()
  );
});
exports.SubjectPublicKeyInfo = SubjectPublicKeyInfo;

var Extensions = asn1.define('Extensions', function() {
  this.seqof(Extension);
});
exports.Extensions = Extensions;

var Extension = asn1.define('Extension', function() {
  this.seq().obj(
    this.key('extnID').objid(),
    this.key('critical').bool().def(false),
    this.key('extnValue').octstr()
  );
});
exports.Extension = Extension;

var Name = asn1.define('Name', function() {
  this.choice({
    rdn: this.use(RDNSequence)
  });
});
exports.Name = Name;

var RDNSequence = asn1.define('RDNSequence', function() {
  this.seqof(RelativeDistinguishedName);
});
exports.RDNSequence = RDNSequence;

var RelativeDistinguishedName = asn1.define('RelativeDistinguishedName',
                                            function() {
  this.setof(AttributeTypeAndValue);
});
exports.RelativeDistinguishedName = RelativeDistinguishedName;

var AttributeTypeAndValue = asn1.define('AttributeTypeAndValue', function() {
  this.seq().obj(
    this.key('type').use(AttributeType),
    this.key('value').use(AttributeValue)
  );
});
exports.AttributeTypeAndValue = AttributeTypeAndValue;

var AttributeType = asn1.define('AttributeType', function() {
  this.objid();
});
exports.AttributeType = AttributeType;

var AttributeValue = asn1.define('AttributeValue', function() {
  this.any();
});
exports.AttributeValue = AttributeValue;

},{"asn1.js":62}],62:[function(require,module,exports){
var asn1 = exports;

asn1.bignum = require('bn.js');

asn1.define = require('./asn1/api').define;
asn1.base = require('./asn1/base');
asn1.constants = require('./asn1/constants');
asn1.decoders = require('./asn1/decoders');
asn1.encoders = require('./asn1/encoders');

},{"./asn1/api":63,"./asn1/base":65,"./asn1/constants":69,"./asn1/decoders":71,"./asn1/encoders":73,"bn.js":34}],63:[function(require,module,exports){
var asn1 = require('../asn1');
var inherits = require('inherits');
var vm = require('vm');

var api = exports;

api.define = function define(name, body) {
  return new Entity(name, body);
};

function Entity(name, body) {
  this.name = name;
  this.body = body;

  this.decoders = {};
  this.encoders = {};
};

Entity.prototype._createNamed = function createNamed(base) {
  var named = vm.runInThisContext('(function ' + this.name + '(entity) {\n' +
    '  this._initNamed(entity);\n' +
    '})');
  inherits(named, base);
  named.prototype._initNamed = function initnamed(entity) {
    base.call(this, entity);
  };

  return new named(this);
};

Entity.prototype._getDecoder = function _getDecoder(enc) {
  // Lazily create decoder
  if (!this.decoders.hasOwnProperty(enc))
    this.decoders[enc] = this._createNamed(asn1.decoders[enc]);
  return this.decoders[enc];
};

Entity.prototype.decode = function decode(data, enc, options) {
  return this._getDecoder(enc).decode(data, options);
};

Entity.prototype._getEncoder = function _getEncoder(enc) {
  // Lazily create encoder
  if (!this.encoders.hasOwnProperty(enc))
    this.encoders[enc] = this._createNamed(asn1.encoders[enc]);
  return this.encoders[enc];
};

Entity.prototype.encode = function encode(data, enc, /* internal */ reporter) {
  return this._getEncoder(enc).encode(data, reporter);
};

},{"../asn1":62,"inherits":152,"vm":169}],64:[function(require,module,exports){
var inherits = require('inherits');
var Reporter = require('../base').Reporter;
var Buffer = require('buffer').Buffer;

function DecoderBuffer(base, options) {
  Reporter.call(this, options);
  if (!Buffer.isBuffer(base)) {
    this.error('Input not Buffer');
    return;
  }

  this.base = base;
  this.offset = 0;
  this.length = base.length;
}
inherits(DecoderBuffer, Reporter);
exports.DecoderBuffer = DecoderBuffer;

DecoderBuffer.prototype.save = function save() {
  return { offset: this.offset };
};

DecoderBuffer.prototype.restore = function restore(save) {
  // Return skipped data
  var res = new DecoderBuffer(this.base);
  res.offset = save.offset;
  res.length = this.offset;

  this.offset = save.offset;

  return res;
};

DecoderBuffer.prototype.isEmpty = function isEmpty() {
  return this.offset === this.length;
};

DecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {
  if (this.offset + 1 <= this.length)
    return this.base.readUInt8(this.offset++, true);
  else
    return this.error(fail || 'DecoderBuffer overrun');
}

DecoderBuffer.prototype.skip = function skip(bytes, fail) {
  if (!(this.offset + bytes <= this.length))
    return this.error(fail || 'DecoderBuffer overrun');

  var res = new DecoderBuffer(this.base);

  // Share reporter state
  res._reporterState = this._reporterState;

  res.offset = this.offset;
  res.length = this.offset + bytes;
  this.offset += bytes;
  return res;
}

DecoderBuffer.prototype.raw = function raw(save) {
  return this.base.slice(save ? save.offset : this.offset, this.length);
}

function EncoderBuffer(value, reporter) {
  if (Array.isArray(value)) {
    this.length = 0;
    this.value = value.map(function(item) {
      if (!(item instanceof EncoderBuffer))
        item = new EncoderBuffer(item, reporter);
      this.length += item.length;
      return item;
    }, this);
  } else if (typeof value === 'number') {
    if (!(0 <= value && value <= 0xff))
      return reporter.error('non-byte EncoderBuffer value');
    this.value = value;
    this.length = 1;
  } else if (typeof value === 'string') {
    this.value = value;
    this.length = Buffer.byteLength(value);
  } else if (Buffer.isBuffer(value)) {
    this.value = value;
    this.length = value.length;
  } else {
    return reporter.error('Unsupported type: ' + typeof value);
  }
}
exports.EncoderBuffer = EncoderBuffer;

EncoderBuffer.prototype.join = function join(out, offset) {
  if (!out)
    out = new Buffer(this.length);
  if (!offset)
    offset = 0;

  if (this.length === 0)
    return out;

  if (Array.isArray(this.value)) {
    this.value.forEach(function(item) {
      item.join(out, offset);
      offset += item.length;
    });
  } else {
    if (typeof this.value === 'number')
      out[offset] = this.value;
    else if (typeof this.value === 'string')
      out.write(this.value, offset);
    else if (Buffer.isBuffer(this.value))
      this.value.copy(out, offset);
    offset += this.length;
  }

  return out;
};

},{"../base":65,"buffer":9,"inherits":152}],65:[function(require,module,exports){
var base = exports;

base.Reporter = require('./reporter').Reporter;
base.DecoderBuffer = require('./buffer').DecoderBuffer;
base.EncoderBuffer = require('./buffer').EncoderBuffer;
base.Node = require('./node');

},{"./buffer":64,"./node":66,"./reporter":67}],66:[function(require,module,exports){
var Reporter = require('../base').Reporter;
var EncoderBuffer = require('../base').EncoderBuffer;
var assert = require('minimalistic-assert');

// Supported tags
var tags = [
  'seq', 'seqof', 'set', 'setof', 'octstr', 'bitstr', 'objid', 'bool',
  'gentime', 'utctime', 'null_', 'enum', 'int', 'ia5str'
];

// Public methods list
var methods = [
  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',
  'any'
].concat(tags);

// Overrided methods list
var overrided = [
  '_peekTag', '_decodeTag', '_use',
  '_decodeStr', '_decodeObjid', '_decodeTime',
  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',

  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',
  '_encodeNull', '_encodeInt', '_encodeBool'
];

function Node(enc, parent) {
  var state = {};
  this._baseState = state;

  state.enc = enc;

  state.parent = parent || null;
  state.children = null;

  // State
  state.tag = null;
  state.args = null;
  state.reverseArgs = null;
  state.choice = null;
  state.optional = false;
  state.any = false;
  state.obj = false;
  state.use = null;
  state.useDecoder = null;
  state.key = null;
  state['default'] = null;
  state.explicit = null;
  state.implicit = null;

  // Should create new instance on each method
  if (!state.parent) {
    state.children = [];
    this._wrap();
  }
}
module.exports = Node;

var stateProps = [
  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',
  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',
  'implicit'
];

Node.prototype.clone = function clone() {
  var state = this._baseState;
  var cstate = {};
  stateProps.forEach(function(prop) {
    cstate[prop] = state[prop];
  });
  var res = new this.constructor(cstate.parent);
  res._baseState = cstate;
  return res;
};

Node.prototype._wrap = function wrap() {
  var state = this._baseState;
  methods.forEach(function(method) {
    this[method] = function _wrappedMethod() {
      var clone = new this.constructor(this);
      state.children.push(clone);
      return clone[method].apply(clone, arguments);
    };
  }, this);
};

Node.prototype._init = function init(body) {
  var state = this._baseState;

  assert(state.parent === null);
  body.call(this);

  // Filter children
  state.children = state.children.filter(function(child) {
    return child._baseState.parent === this;
  }, this);
  assert.equal(state.children.length, 1, 'Root node can have only one child');
};

Node.prototype._useArgs = function useArgs(args) {
  var state = this._baseState;

  // Filter children and args
  var children = args.filter(function(arg) {
    return arg instanceof this.constructor;
  }, this);
  args = args.filter(function(arg) {
    return !(arg instanceof this.constructor);
  }, this);

  if (children.length !== 0) {
    assert(state.children === null);
    state.children = children;

    // Replace parent to maintain backward link
    children.forEach(function(child) {
      child._baseState.parent = this;
    }, this);
  }
  if (args.length !== 0) {
    assert(state.args === null);
    state.args = args;
    state.reverseArgs = args.map(function(arg) {
      if (typeof arg !== 'object' || arg.constructor !== Object)
        return arg;

      var res = {};
      Object.keys(arg).forEach(function(key) {
        if (key == (key | 0))
          key |= 0;
        var value = arg[key];
        res[value] = key;
      });
      return res;
    });
  }
};

//
// Overrided methods
//

overrided.forEach(function(method) {
  Node.prototype[method] = function _overrided() {
    var state = this._baseState;
    throw new Error(method + ' not implemented for encoding: ' + state.enc);
  };
});

//
// Public methods
//

tags.forEach(function(tag) {
  Node.prototype[tag] = function _tagMethod() {
    var state = this._baseState;
    var args = Array.prototype.slice.call(arguments);

    assert(state.tag === null);
    state.tag = tag;

    this._useArgs(args);

    return this;
  };
});

Node.prototype.use = function use(item) {
  var state = this._baseState;

  assert(state.use === null);
  state.use = item;

  return this;
};

Node.prototype.optional = function optional() {
  var state = this._baseState;

  state.optional = true;

  return this;
};

Node.prototype.def = function def(val) {
  var state = this._baseState;

  assert(state['default'] === null);
  state['default'] = val;
  state.optional = true;

  return this;
};

Node.prototype.explicit = function explicit(num) {
  var state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.explicit = num;

  return this;
};

Node.prototype.implicit = function implicit(num) {
  var state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.implicit = num;

  return this;
};

Node.prototype.obj = function obj() {
  var state = this._baseState;
  var args = Array.prototype.slice.call(arguments);

  state.obj = true;

  if (args.length !== 0)
    this._useArgs(args);

  return this;
};

Node.prototype.key = function key(key) {
  var state = this._baseState;

  assert(state.key === null);
  state.key = key;

  return this;
};

Node.prototype.any = function any() {
  var state = this._baseState;

  state.any = true;

  return this;
};

Node.prototype.choice = function choice(obj) {
  var state = this._baseState;

  assert(state.choice === null);
  state.choice = obj;
  this._useArgs(Object.keys(obj).map(function(key) {
    return obj[key];
  }));

  return this;
};

//
// Decoding
//

Node.prototype._decode = function decode(input) {
  var state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return input.wrapResult(state.children[0]._decode(input));

  var result = state['default'];
  var present = true;

  var prevKey;
  if (state.key !== null)
    prevKey = input.enterKey(state.key);

  // Check if tag is there
  if (state.optional) {
    present = this._peekTag(
      input,
      state.explicit !== null ? state.explicit :
          state.implicit !== null ? state.implicit :
              state.tag || 0
    );
    if (input.isError(present))
      return present;
  }

  // Push object on stack
  var prevObj;
  if (state.obj && present)
    prevObj = input.enterObject();

  if (present) {
    // Unwrap explicit values
    if (state.explicit !== null) {
      var explicit = this._decodeTag(input, state.explicit);
      if (input.isError(explicit))
        return explicit;
      input = explicit;
    }

    // Unwrap implicit and normal values
    if (state.use === null && state.choice === null) {
      if (state.any)
        var save = input.save();
      var body = this._decodeTag(
        input,
        state.implicit !== null ? state.implicit : state.tag,
        state.any
      );
      if (input.isError(body))
        return body;

      if (state.any)
        result = input.raw(save);
      else
        input = body;
    }

    // Select proper method for tag
    if (state.any)
      result = result;
    else if (state.choice === null)
      result = this._decodeGeneric(state.tag, input);
    else
      result = this._decodeChoice(input);

    if (input.isError(result))
      return result;

    // Decode children
    if (!state.any && state.choice === null && state.children !== null) {
      var fail = state.children.some(function decodeChildren(child) {
        // NOTE: We are ignoring errors here, to let parser continue with other
        // parts of encoded data
        child._decode(input);
      });
      if (fail)
        return err;
    }
  }

  // Pop object
  if (state.obj && present)
    result = input.leaveObject(prevObj);

  // Set key
  if (state.key !== null && (result !== null || present === true))
    input.leaveKey(prevKey, state.key, result);

  return result;
};

Node.prototype._decodeGeneric = function decodeGeneric(tag, input) {
  var state = this._baseState;

  if (tag === 'seq' || tag === 'set')
    return null;
  if (tag === 'seqof' || tag === 'setof')
    return this._decodeList(input, tag, state.args[0]);
  else if (tag === 'octstr' || tag === 'bitstr' || tag === 'ia5str')
    return this._decodeStr(input, tag);
  else if (tag === 'objid' && state.args)
    return this._decodeObjid(input, state.args[0], state.args[1]);
  else if (tag === 'objid')
    return this._decodeObjid(input, null, null);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._decodeTime(input, tag);
  else if (tag === 'null_')
    return this._decodeNull(input);
  else if (tag === 'bool')
    return this._decodeBool(input);
  else if (tag === 'int' || tag === 'enum')
    return this._decodeInt(input, state.args && state.args[0]);
  else if (state.use !== null)
    return this._getUse(state.use, input._reporterState.obj)._decode(input);
  else
    return input.error('unknown tag: ' + tag);

  return null;
};

Node.prototype._getUse = function _getUse(entity, obj) {

  var state = this._baseState;
  // Create altered use decoder if implicit is set
  state.useDecoder = this._use(entity, obj);
  assert(state.useDecoder._baseState.parent === null);
  state.useDecoder = state.useDecoder._baseState.children[0];
  if (state.implicit !== state.useDecoder._baseState.implicit) {
    state.useDecoder = state.useDecoder.clone();
    state.useDecoder._baseState.implicit = state.implicit;
  }
  return state.useDecoder;
};

Node.prototype._decodeChoice = function decodeChoice(input) {
  var state = this._baseState;
  var result = null;
  var match = false;

  Object.keys(state.choice).some(function(key) {
    var save = input.save();
    var node = state.choice[key];
    try {
      var value = node._decode(input);
      if (input.isError(value))
        return false;

      result = { type: key, value: value };
      match = true;
    } catch (e) {
      input.restore(save);
      return false;
    }
    return true;
  }, this);

  if (!match)
    return input.error('Choice not matched');

  return result;
};

//
// Encoding
//

Node.prototype._createEncoderBuffer = function createEncoderBuffer(data) {
  return new EncoderBuffer(data, this.reporter);
};

Node.prototype._encode = function encode(data, reporter, parent) {
  var state = this._baseState;
  if (state['default'] !== null && state['default'] === data)
    return;

  var result = this._encodeValue(data, reporter, parent);
  if (result === undefined)
    return;

  if (this._skipDefault(result, reporter, parent))
    return;

  return result;
};

Node.prototype._encodeValue = function encode(data, reporter, parent) {
  var state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return state.children[0]._encode(data, reporter || new Reporter());

  var result = null;
  var present = true;

  // Set reporter to share it with a child class
  this.reporter = reporter;

  // Check if data is there
  if (state.optional && data === undefined) {
    if (state['default'] !== null)
      data = state['default']
    else
      return;
  }

  // For error reporting
  var prevKey;

  // Encode children first
  var content = null;
  var primitive = false;
  if (state.any) {
    // Anything that was given is translated to buffer
    result = this._createEncoderBuffer(data);
  } else if (state.choice) {
    result = this._encodeChoice(data, reporter);
  } else if (state.children) {
    content = state.children.map(function(child) {
      if (child._baseState.tag === 'null_')
        return child._encode(null, reporter, data);

      if (child._baseState.key === null)
        return reporter.error('Child should have a key');
      var prevKey = reporter.enterKey(child._baseState.key);

      if (typeof data !== 'object')
        return reporter.error('Child expected, but input is not object');

      var res = child._encode(data[child._baseState.key], reporter, data);
      reporter.leaveKey(prevKey);

      return res;
    }, this).filter(function(child) {
      return child;
    });

    content = this._createEncoderBuffer(content);
  } else {
    if (state.tag === 'seqof' || state.tag === 'setof') {
      // TODO(indutny): this should be thrown on DSL level
      if (!(state.args && state.args.length === 1))
        return reporter.error('Too many args for : ' + state.tag);

      if (!Array.isArray(data))
        return reporter.error('seqof/setof, but data is not Array');

      var child = this.clone();
      child._baseState.implicit = null;
      content = this._createEncoderBuffer(data.map(function(item) {
        var state = this._baseState;

        return this._getUse(state.args[0], data)._encode(item, reporter);
      }, child));
    } else if (state.use !== null) {
      result = this._getUse(state.use, parent)._encode(data, reporter);
    } else {
      content = this._encodePrimitive(state.tag, data);
      primitive = true;
    }
  }

  // Encode data itself
  var result;
  if (!state.any && state.choice === null) {
    var tag = state.implicit !== null ? state.implicit : state.tag;
    var cls = state.implicit === null ? 'universal' : 'context';

    if (tag === null) {
      if (state.use === null)
        reporter.error('Tag could be ommited only for .use()');
    } else {
      if (state.use === null)
        result = this._encodeComposite(tag, primitive, cls, content);
    }
  }

  // Wrap in explicit
  if (state.explicit !== null)
    result = this._encodeComposite(state.explicit, false, 'context', result);

  return result;
};

Node.prototype._encodeChoice = function encodeChoice(data, reporter) {
  var state = this._baseState;

  var node = state.choice[data.type];
  if (!node) {
    assert(
        false,
        data.type + ' not found in ' +
            JSON.stringify(Object.keys(state.choice)));
  }
  return node._encode(data.value, reporter);
};

Node.prototype._encodePrimitive = function encodePrimitive(tag, data) {
  var state = this._baseState;

  if (tag === 'octstr' || tag === 'bitstr' || tag === 'ia5str')
    return this._encodeStr(data, tag);
  else if (tag === 'objid' && state.args)
    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);
  else if (tag === 'objid')
    return this._encodeObjid(data, null, null);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._encodeTime(data, tag);
  else if (tag === 'null_')
    return this._encodeNull();
  else if (tag === 'int' || tag === 'enum')
    return this._encodeInt(data, state.args && state.reverseArgs[0]);
  else if (tag === 'bool')
    return this._encodeBool(data);
  else
    throw new Error('Unsupported tag: ' + tag);
};

},{"../base":65,"minimalistic-assert":74}],67:[function(require,module,exports){
var inherits = require('inherits');

function Reporter(options) {
  this._reporterState = {
    obj: null,
    path: [],
    options: options || {},
    errors: []
  };
}
exports.Reporter = Reporter;

Reporter.prototype.isError = function isError(obj) {
  return obj instanceof ReporterError;
};

Reporter.prototype.enterKey = function enterKey(key) {
  return this._reporterState.path.push(key);
};

Reporter.prototype.leaveKey = function leaveKey(index, key, value) {
  var state = this._reporterState;

  state.path = state.path.slice(0, index - 1);
  if (state.obj !== null)
    state.obj[key] = value;
};

Reporter.prototype.enterObject = function enterObject() {
  var state = this._reporterState;

  var prev = state.obj;
  state.obj = {};
  return prev;
};

Reporter.prototype.leaveObject = function leaveObject(prev) {
  var state = this._reporterState;

  var now = state.obj;
  state.obj = prev;
  return now;
};

Reporter.prototype.error = function error(msg) {
  var err;
  var state = this._reporterState;

  var inherited = msg instanceof ReporterError;
  if (inherited) {
    err = msg;
  } else {
    err = new ReporterError(state.path.map(function(elem) {
      return '[' + JSON.stringify(elem) + ']';
    }).join(''), msg.message || msg, msg.stack);
  }

  if (!state.options.partial)
    throw err;

  if (!inherited)
    state.errors.push(err);

  return err;
};

Reporter.prototype.wrapResult = function wrapResult(result) {
  var state = this._reporterState;
  if (!state.options.partial)
    return result;

  return {
    result: this.isError(result) ? null : result,
    errors: state.errors
  };
};

function ReporterError(path, msg) {
  this.path = path;
  this.rethrow(msg);
};
inherits(ReporterError, Error);

ReporterError.prototype.rethrow = function rethrow(msg) {
  this.message = msg + ' at: ' + (this.path || '(shallow)');
  Error.captureStackTrace(this, ReporterError);

  return this;
};

},{"inherits":152}],68:[function(require,module,exports){
var constants = require('../constants');

exports.tagClass = {
  0: 'universal',
  1: 'application',
  2: 'context',
  3: 'private'
};
exports.tagClassByName = constants._reverse(exports.tagClass);

exports.tag = {
  0x00: 'end',
  0x01: 'bool',
  0x02: 'int',
  0x03: 'bitstr',
  0x04: 'octstr',
  0x05: 'null_',
  0x06: 'objid',
  0x07: 'objDesc',
  0x08: 'external',
  0x09: 'real',
  0x0a: 'enum',
  0x0b: 'embed',
  0x0c: 'utf8str',
  0x0d: 'relativeOid',
  0x10: 'seq',
  0x11: 'set',
  0x12: 'numstr',
  0x13: 'printstr',
  0x14: 't61str',
  0x15: 'videostr',
  0x16: 'ia5str',
  0x17: 'utctime',
  0x18: 'gentime',
  0x19: 'graphstr',
  0x1a: 'iso646str',
  0x1b: 'genstr',
  0x1c: 'unistr',
  0x1d: 'charstr',
  0x1e: 'bmpstr'
};
exports.tagByName = constants._reverse(exports.tag);

},{"../constants":69}],69:[function(require,module,exports){
var constants = exports;

// Helper
constants._reverse = function reverse(map) {
  var res = {};

  Object.keys(map).forEach(function(key) {
    // Convert key to integer if it is stringified
    if ((key | 0) == key)
      key = key | 0;

    var value = map[key];
    res[value] = key;
  });

  return res;
};

constants.der = require('./der');

},{"./der":68}],70:[function(require,module,exports){
var inherits = require('inherits');

var asn1 = require('../../asn1');
var base = asn1.base;
var bignum = asn1.bignum;

// Import DER constants
var der = asn1.constants.der;

function DERDecoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
};
module.exports = DERDecoder;

DERDecoder.prototype.decode = function decode(data, options) {
  if (!(data instanceof base.DecoderBuffer))
    data = new base.DecoderBuffer(data, options);

  return this.tree._decode(data, options);
};

// Tree methods

function DERNode(parent) {
  base.Node.call(this, 'der', parent);
}
inherits(DERNode, base.Node);

DERNode.prototype._peekTag = function peekTag(buffer, tag) {
  if (buffer.isEmpty())
    return false;

  var state = buffer.save();
  var decodedTag = derDecodeTag(buffer, 'Failed to peek tag: "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  buffer.restore(state);

  return decodedTag.tag === tag || decodedTag.tagStr === tag;
};

DERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {
  var decodedTag = derDecodeTag(buffer,
                                'Failed to decode tag of "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  var len = derDecodeLen(buffer,
                         decodedTag.primitive,
                         'Failed to get length of "' + tag + '"');

  // Failure
  if (buffer.isError(len))
    return len;

  if (!any &&
      decodedTag.tag !== tag &&
      decodedTag.tagStr !== tag &&
      decodedTag.tagStr + 'of' !== tag) {
    return buffer.error('Failed to match tag: "' + tag + '"');
  }

  if (decodedTag.primitive || len !== null)
    return buffer.skip(len, 'Failed to match body of: "' + tag + '"');

  // Indefinite length... find END tag
  var state = buffer.start();
  var res = this._skipUntilEnd(
      buffer,
      'Failed to skip indefinite length body: "' + this.tag + '"');
  if (buffer.isError(res))
    return res;

  return buffer.cut(state);
};

DERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {
  while (true) {
    var tag = derDecodeTag(buffer, fail);
    if (buffer.isError(tag))
      return tag;
    var len = derDecodeLen(buffer, tag.primitive, fail);
    if (buffer.isError(len))
      return len;

    var res;
    if (tag.primitive || len !== null)
      res = buffer.skip(len)
    else
      res = this._skipUntilEnd(buffer, fail);

    // Failure
    if (buffer.isError(res))
      return res;

    if (tag.tagStr === 'end')
      break;
  }
};

DERNode.prototype._decodeList = function decodeList(buffer, tag, decoder) {
  var result = [];
  while (!buffer.isEmpty()) {
    var possibleEnd = this._peekTag(buffer, 'end');
    if (buffer.isError(possibleEnd))
      return possibleEnd;

    var res = decoder.decode(buffer, 'der');
    if (buffer.isError(res) && possibleEnd)
      break;
    result.push(res);
  }
  return result;
};

DERNode.prototype._decodeStr = function decodeStr(buffer, tag) {
  if (tag === 'octstr') {
    return buffer.raw();
  } else if (tag === 'bitstr') {
    var unused = buffer.readUInt8();
    if (buffer.isError(unused))
      return unused;

    return { unused: unused, data: buffer.raw() };
  } else if (tag === 'ia5str') {
    return buffer.raw().toString();
  } else {
    return this.error('Decoding of string type: ' + tag + ' unsupported');
  }
};

DERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {
  var identifiers = [];
  var ident = 0;
  while (!buffer.isEmpty()) {
    var subident = buffer.readUInt8();
    ident <<= 7;
    ident |= subident & 0x7f;
    if ((subident & 0x80) === 0) {
      identifiers.push(ident);
      ident = 0;
    }
  }
  if (subident & 0x80)
    identifiers.push(ident);

  var first = (identifiers[0] / 40) | 0;
  var second = identifiers[0] % 40;

  if (relative)
    result = identifiers;
  else
    result = [first, second].concat(identifiers.slice(1));

  if (values)
    result = values[result.join(' ')];

  return result;
};

DERNode.prototype._decodeTime = function decodeTime(buffer, tag) {
  var str = buffer.raw().toString();
  if (tag === 'gentime') {
    var year = str.slice(0, 4) | 0;
    var mon = str.slice(4, 6) | 0;
    var day = str.slice(6, 8) | 0;
    var hour = str.slice(8, 10) | 0;
    var min = str.slice(10, 12) | 0;
    var sec = str.slice(12, 14) | 0;
  } else if (tag === 'utctime') {
    var year = str.slice(0, 2) | 0;
    var mon = str.slice(2, 4) | 0;
    var day = str.slice(4, 6) | 0;
    var hour = str.slice(6, 8) | 0;
    var min = str.slice(8, 10) | 0;
    var sec = str.slice(10, 12) | 0;
    if (year < 70)
      year = 2000 + year;
    else
      year = 1900 + year;
  } else {
    return this.error('Decoding ' + tag + ' time is not supported yet');
  }

  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);
};

DERNode.prototype._decodeNull = function decodeNull(buffer) {
  return null;
};

DERNode.prototype._decodeBool = function decodeBool(buffer) {
  var res = buffer.readUInt8();
  if (buffer.isError(res))
    return res;
  else
    return res !== 0;
};

DERNode.prototype._decodeInt = function decodeInt(buffer, values) {
  var res = 0;

  // Bigint, return as it is (assume big endian)
  var raw = buffer.raw();
  if (raw.length > 3)
    return new bignum(raw);

  while (!buffer.isEmpty()) {
    res <<= 8;
    var i = buffer.readUInt8();
    if (buffer.isError(i))
      return i;
    res |= i;
  }

  if (values)
    res = values[res] || res;

  return res;
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getDecoder('der').tree;
};

// Utility methods

function derDecodeTag(buf, fail) {
  var tag = buf.readUInt8(fail);
  if (buf.isError(tag))
    return tag;

  var cls = der.tagClass[tag >> 6];
  var primitive = (tag & 0x20) === 0;

  // Multi-octet tag - load
  if ((tag & 0x1f) === 0x1f) {
    var oct = tag;
    tag = 0;
    while ((oct & 0x80) === 0x80) {
      oct = buf.readUInt8(fail);
      if (buf.isError(oct))
        return oct;

      tag <<= 7;
      tag |= oct & 0x7f;
    }
  } else {
    tag &= 0x1f;
  }
  var tagStr = der.tag[tag];

  return {
    cls: cls,
    primitive: primitive,
    tag: tag,
    tagStr: tagStr
  };
}

function derDecodeLen(buf, primitive, fail) {
  var len = buf.readUInt8(fail);
  if (buf.isError(len))
    return len;

  // Indefinite form
  if (!primitive && len === 0x80)
    return null;

  // Definite form
  if ((len & 0x80) === 0) {
    // Short form
    return len;
  }

  // Long form
  var num = len & 0x7f;
  if (num >= 4)
    return buf.error('length octect is too long');

  len = 0;
  for (var i = 0; i < num; i++) {
    len <<= 8;
    var j = buf.readUInt8(fail);
    if (buf.isError(j))
      return j;
    len |= j;
  }

  return len;
}

},{"../../asn1":62,"inherits":152}],71:[function(require,module,exports){
var decoders = exports;

decoders.der = require('./der');

},{"./der":70}],72:[function(require,module,exports){
var inherits = require('inherits');
var Buffer = require('buffer').Buffer;

var asn1 = require('../../asn1');
var base = asn1.base;
var bignum = asn1.bignum;

// Import DER constants
var der = asn1.constants.der;

function DEREncoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
};
module.exports = DEREncoder;

DEREncoder.prototype.encode = function encode(data, reporter) {
  return this.tree._encode(data, reporter).join();
};

// Tree methods

function DERNode(parent) {
  base.Node.call(this, 'der', parent);
}
inherits(DERNode, base.Node);

DERNode.prototype._encodeComposite = function encodeComposite(tag,
                                                              primitive,
                                                              cls,
                                                              content) {
  var encodedTag = encodeTag(tag, primitive, cls, this.reporter);

  // Short form
  if (content.length < 0x80) {
    var header = new Buffer(2);
    header[0] = encodedTag;
    header[1] = content.length;
    return this._createEncoderBuffer([ header, content ]);
  }

  // Long form
  // Count octets required to store length
  var lenOctets = 1;
  for (var i = content.length; i >= 0x100; i >>= 8)
    lenOctets++;

  var header = new Buffer(1 + 1 + lenOctets);
  header[0] = encodedTag;
  header[1] = 0x80 | lenOctets;

  for (var i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)
    header[i] = j & 0xff;

  return this._createEncoderBuffer([ header, content ]);
};

DERNode.prototype._encodeStr = function encodeStr(str, tag) {
  if (tag === 'octstr')
    return this._createEncoderBuffer(str);
  else if (tag === 'bitstr')
    return this._createEncoderBuffer([ str.unused | 0, str.data ]);
  else if (tag === 'ia5str')
    return this._createEncoderBuffer(str);
  return this.reporter.error('Encoding of string type: ' + tag +
                             ' unsupported');
};

DERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {
  if (typeof id === 'string') {
    if (!values)
      return this.reporter.error('string objid given, but no values map found');
    if (!values.hasOwnProperty(id))
      return this.reporter.error('objid not found in values map');
    id = values[id].split(/\s+/g);
    for (var i = 0; i < id.length; i++)
      id[i] |= 0;
  } else if (Array.isArray(id)) {
    id = id.slice();
  }

  if (!Array.isArray(id)) {
    return this.reporter.error('objid() should be either array or string, ' +
                               'got: ' + JSON.stringify(id));
  }

  if (!relative) {
    if (id[1] >= 40)
      return this.reporter.error('Second objid identifier OOB');
    id.splice(0, 2, id[0] * 40 + id[1]);
  }

  // Count number of octets
  var size = 0;
  for (var i = 0; i < id.length; i++) {
    var ident = id[i];
    for (size++; ident >= 0x80; ident >>= 7)
      size++;
  }

  var objid = new Buffer(size);
  var offset = objid.length - 1;
  for (var i = id.length - 1; i >= 0; i--) {
    var ident = id[i];
    objid[offset--] = ident & 0x7f;
    while ((ident >>= 7) > 0)
      objid[offset--] = 0x80 | (ident & 0x7f);
  }

  return this._createEncoderBuffer(objid);
};

function two(num) {
  if (num <= 10)
    return '0' + num;
  else
    return num;
}

DERNode.prototype._encodeTime = function encodeTime(time, tag) {
  var str;
  var date = new Date(time);

  if (tag === 'gentime') {
    str = [
      date.getFullYear(),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else if (tag === 'utctime') {
    str = [
      date.getFullYear() % 100,
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else {
    this.reporter.error('Encoding ' + tag + ' time is not supported yet');
  }

  return this._encodeStr(str, 'octstr');
};

DERNode.prototype._encodeNull = function encodeNull() {
  return this._createEncoderBuffer('');
};

DERNode.prototype._encodeInt = function encodeInt(num, values) {
  if (typeof num === 'string') {
    if (!values)
      return this.reporter.error('String int or enum given, but no values map');
    if (!values.hasOwnProperty(num)) {
      return this.reporter.error('Values map doesn\'t contain: ' +
                                 JSON.stringify(num));
    }
    num = values[num];
  }

  // Bignum, assume big endian
  if (bignum !== null && num instanceof bignum) {
    var numArray = num.toArray();
    if(num.sign === false && numArray[0] & 0x80) {
      numArray.unshift(0);
    }
    num = new Buffer(numArray);
  }

  if (Buffer.isBuffer(num)) {
    var size = num.length;
    if (num.length === 0)
      size++;

    var out = new Buffer(size);
    num.copy(out);
    if (num.length === 0)
      out[0] = 0
    return this._createEncoderBuffer(out);
  }

  if (num < 0x80)
    return this._createEncoderBuffer(num);

  if (num < 0x100)
    return this._createEncoderBuffer([0, num]);

  var size = 1;
  for (var i = num; i >= 0x100; i >>= 8)
    size++;

  var out = new Array(size);
  for (var i = out.length - 1; i >= 0; i--) {
    out[i] = num & 0xff;
    num >>= 8;
  }
  if(out[0] & 0x80) {
    out.unshift(0);
  }

  return this._createEncoderBuffer(new Buffer(out));
};

DERNode.prototype._encodeBool = function encodeBool(value) {
  return this._createEncoderBuffer(value ? 0xff : 0);
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getEncoder('der').tree;
};

DERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {
  var state = this._baseState;
  var i;
  if (state['default'] === null)
    return false;

  var data = dataBuffer.join();
  if (state.defaultBuffer === undefined)
    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();

  if (data.length !== state.defaultBuffer.length)
    return false;

  for (i=0; i < data.length; i++)
    if (data[i] !== state.defaultBuffer[i])
      return false;

  return true;
};

// Utility methods

function encodeTag(tag, primitive, cls, reporter) {
  var res;

  if (tag === 'seqof')
    tag = 'seq';
  else if (tag === 'setof')
    tag = 'set';

  if (der.tagByName.hasOwnProperty(tag))
    res = der.tagByName[tag];
  else if (typeof tag === 'number' && (tag | 0) === tag)
    res = tag;
  else
    return reporter.error('Unknown tag: ' + tag);

  if (res >= 0x1f)
    return reporter.error('Multi-octet tag encoding unsupported');

  if (!primitive)
    res |= 0x20;

  res |= (der.tagClassByName[cls || 'universal'] << 6);

  return res;
}

},{"../../asn1":62,"buffer":9,"inherits":152}],73:[function(require,module,exports){
var encoders = exports;

encoders.der = require('./der');

},{"./der":72}],74:[function(require,module,exports){
module.exports = assert;

function assert(val, msg) {
  if (!val)
    throw new Error(msg || 'Assertion failed');
}

assert.equal = function assertEqual(l, r, msg) {
  if (l != r)
    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));
};

},{}],75:[function(require,module,exports){
exports.strip = function strip(artifact) {
  artifact = artifact.toString()
  var startRegex = /^-----BEGIN (.*)-----\n/;
  var match = startRegex.exec(artifact);
  var tag = match[1];
  var endRegex = new RegExp("\n-----END " + tag + "-----(\n*)$");
  var base64 = artifact.slice(match[0].length).replace(endRegex, "").replace(/\n/g, "");
  return {tag: tag, base64: base64};
};

// http://stackoverflow.com/a/7033705
var wrap = function wrap(str, l) {
  var chunks = [];
  while (str) {
    if (str.length < l) {
      chunks.push(str);
      break;
    }
    else {
      chunks.push(str.substr(0, l));
      str = str.substr(l);
    }
  }
  return chunks.join("\n");
}

exports.assemble = function assemble(info) {
  var tag = info.tag;
  var base64 = info.base64;
  var startLine = "-----BEGIN " + tag + "-----";
  var endLine = "-----END " + tag + "-----";
  return startLine + "\n" + wrap(base64, 64) + "\n" + endLine + "\n";
}
},{}],76:[function(require,module,exports){
(function (Buffer){
// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var parseKeys = require('parse-asn1');
var bn = require('bn.js');
var elliptic = require('elliptic');
var crt = require("browserify-rsa");
module.exports = sign;
function sign(hash, key, hashType, crypto) {
  var priv = parseKeys(key, crypto);
  if (priv.curve) {
    return ecSign(hash, priv, crypto);
  } else if (priv.type === 'dsa') {
    return dsaSign(hash, priv, hashType, crypto);
  }
  var len = priv.modulus.byteLength();
  var pad = [ 0, 1 ];
  while (hash.length + pad.length + 1 < len) {
    pad.push(0xff);
  }
  pad.push(0x00);
  var i = -1;
  while (++i < hash.length) {
    pad.push(hash[i]);
  }
  
  var out = crt(pad, priv, crypto);
  return out;
}
function ecSign(hash, priv, crypto) {
  elliptic.rand = crypto.randomBytes;
  var curve;
  if (priv.curve.join('.')  === '1.3.132.0.10') {
    curve = new elliptic.ec('secp256k1');
  }
  var key = curve.genKeyPair();
  key._importPrivate(priv.privateKey);
  var out = key.sign(hash);
  return new Buffer(out.toDER());
}
function dsaSign(hash, priv, algo, crypto) {
  var x = priv.params.priv_key;
  var p = priv.params.p;
  var q = priv.params.q;
  var montq = bn.mont(q);
  var g = priv.params.g;
  var r = new bn(0);
  var k;
  var H = bits2int(hash, q).mod(q);
  var s = false;
  var kv = getKay(x, q, hash, algo, crypto);
  while (s === false) {
    k = makeKey(q, kv, algo, crypto);
    r = makeR(g, k, p, q);
    s = k.invm(q).imul(H.add(x.mul(r))).mod(q);
    if (!s.cmpn(0)) {
      s = false;
      r = new bn(0);
    }
  }
  return toDER(r,s);
}
function toDER(r, s) {
  r = r.toArray();
  s = s.toArray();

  // Pad values
  if (r[0] & 0x80)
    r = [ 0 ].concat(r);
  // Pad values
  if (s[0] & 0x80)
    s = [0].concat(s);

  var total = r.length + s.length + 4;
  var res = [ 0x30, total, 0x02, r.length ];
  res = res.concat(r, [ 0x02, s.length ], s);
  return new Buffer(res);
}
module.exports.getKay = getKay;
function getKay(x, q, hash, algo, crypto) {
  x = new Buffer(x.toArray());
  if (x.length < q.byteLength()) {
    var zeros = new Buffer(q.byteLength() - x.length);
    zeros.fill(0);
    x = Buffer.concat([zeros, x]);
  }
  var hlen = hash.length;
  var hbits = bits2octets(hash, q);
  var v = new Buffer(hlen);
  v.fill(1);
  var k = new Buffer(hlen);
  k.fill(0);
  k = crypto.createHmac(algo, k)
    .update(v)
    .update(new Buffer([0]))
    .update(x)
    .update(hbits)
    .digest();
  v = crypto.createHmac(algo, k)
    .update(v)
    .digest();
  k = crypto.createHmac(algo, k)
    .update(v)
    .update(new Buffer([1]))
    .update(x)
    .update(hbits)
    .digest();
  v = crypto.createHmac(algo, k)
    .update(v)
    .digest();
  return {
    k:k,
    v:v
  };
}
function bits2int(obits, q) {
  bits = new bn(obits);
  var shift = obits.length * 8 - q.bitLength();
  if (shift > 0) {
    bits.ishrn(shift);
  }
  return bits;
}
function bits2octets (bits, q) {
  bits = bits2int(bits, q);
  bits = bits.mod(q);
  var out = new Buffer(bits.toArray());
  if (out.length < q.byteLength()) {
    var zeros = new Buffer(q.byteLength() - out.length);
    zeros.fill(0);
    out = Buffer.concat([zeros, out]);
  }
  return out;
}
module.exports.makeKey = makeKey;
function makeKey(q, kv, algo, crypto) {
  var t;
  var k;
  while (true) {
    t = new Buffer('');
    while (t.length * 8 < q.bitLength()) {
      kv.v = crypto.createHmac(algo, kv.k)
        .update(kv.v)
        .digest();
      t = Buffer.concat([t, kv.v]);
    }
    k = bits2int(t, q);
    kv.k =  crypto.createHmac(algo, kv.k)
        .update(kv.v)
        .update(new Buffer([0]))
        .digest();
    kv.v = crypto.createHmac(algo, kv.k)
        .update(kv.v)
        .digest();
    if (k.cmp(q) === -1) {
      return k;
    }
  }
}
function makeR(g, k, p, q) {
  return g.toRed(bn.mont(p)).redPow(k).fromRed().mod(q);
}
}).call(this,require("buffer").Buffer)
},{"bn.js":34,"browserify-rsa":35,"buffer":9,"elliptic":36,"parse-asn1":60}],77:[function(require,module,exports){
(function (Buffer){
// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var parseKeys = require('parse-asn1');
var elliptic = require('elliptic');
var bn = require('bn.js');
module.exports = verify;
function verify(sig, hash, key) {
  var pub = parseKeys(key);
  if (pub.type === 'ec') {
    return ecVerify(sig, hash, pub);
  } else if (pub.type === 'dsa') {
    return dsaVerify(sig, hash, pub);
  }
  var len = pub.modulus.byteLength();
  var pad = [ 0, 1 ];
  while (hash.length + pad.length + 1 < len) {
    pad.push(0xff);
  }
  pad.push(0x00);
  var i = -1;
  while (++i < hash.length) {
    pad.push(hash[i]);
  }
  pad = hash;
  var red = bn.mont(pub.modulus);
  sig = new bn(sig).toRed(red);

  sig = sig.redPow(new bn(pub.publicExponent));

  sig = new Buffer(sig.fromRed().toArray());
  sig = sig.slice(sig.length - hash.length);
  var out = 0;
  len = sig.length;
  i = -1;
  while (++i < len) {
    out += (sig[i] ^ hash[i]);
  }
  return !out;
}
function ecVerify(sig, hash, pub) {
  var curve;
  if (pub.data.algorithm.curve.join('.')  === '1.3.132.0.10') {
    curve = new elliptic.ec('secp256k1');
  }
  var pubkey = pub.data.subjectPrivateKey.data;
  return curve.verify(hash.toString('hex'), sig.toString('hex'), pubkey.toString('hex'));
}
function dsaVerify(sig, hash, pub) {
  var p = pub.data.p;
  var q = pub.data.q;
  var g = pub.data.g;
  var y = pub.data.pub_key;
  var unpacked = parseKeys.signature.decode(sig, 'der');
  var s = unpacked.s;
  var r = unpacked.r;
  checkValue(s, q);
  checkValue(r, q);
  var montq = bn.mont(q);
  var montp = bn.mont(p);
  var w =  s.invm(q);
  var v = g.toRed(montp)
  .redPow(new bn(hash).mul(w).mod(q))
  .fromRed()
  .mul(
    y.toRed(montp)
    .redPow(r.mul(w).mod(q))
    .fromRed()
  ).mod(p).mod(q);
  return !v.cmp(r);
}
function checkValue(b, q) {
  if (b.cmpn(0) <= 0) {
    throw new Error('invalid sig');
  }
  if (b.cmp(q) >= q) {
    throw new Error('invalid sig');
  }
}
}).call(this,require("buffer").Buffer)
},{"bn.js":34,"buffer":9,"elliptic":36,"parse-asn1":60}],78:[function(require,module,exports){
(function (Buffer){
var elliptic = require('elliptic');
var BN = require('bn.js');
module.exports = ECDH;

function ECDH(curve, crypto) {
	elliptic.rand = crypto.randomBytes;
	this.curve = new elliptic.ec(curve);
	this.keys = void 0;
}
ECDH.prototype.generateKeys = function (enc, format) {
	this.keys = this.curve.genKeyPair();
	return this.getPublicKey(enc, format);
};

ECDH.prototype.computeSecret = function (other, inenc, enc) {
	inenc = inenc || 'utf8';
	if (!Buffer.isBuffer(other)) {
		other = new Buffer(other, inenc);
	}
	other = new BN(other);
	other = other.toString(16);
	var otherPub = this.curve.keyPair(other, 'hex').getPublic();
	var out = otherPub.mul(this.keys.getPrivate()).getX();
	return returnValue(out, enc);
};
ECDH.prototype.getPublicKey = function (enc, format) {
	var key = this.keys.getPublic(format === 'compressed', true);
	if (format === 'hybrid') {
		if (key[key.length - 1] % 2) {
			key[0] = 7;
		} else {
			key [0] = 6;
		}
	}
	return returnValue(key, enc);
};
ECDH.prototype.getPrivateKey = function (enc) {
	return returnValue(this.keys.getPrivate(), enc);
};

ECDH.prototype.setPublicKey = function (pub, enc) {
	enc = enc || 'utf8';
	if (!Buffer.isBuffer(pub)) {
		pub = new Buffer(pub, enc);
	}
	var pkey = new BN(pub);
	pkey = pkey.toArray();
	this.keys._importPublicHex(pkey);
};
ECDH.prototype.setPrivateKey = function (priv, enc) {
	enc = enc || 'utf8';
	if (!Buffer.isBuffer(priv)) {
		priv = new Buffer(priv, enc);
	}
	var _priv = new BN(priv);
	_priv = _priv.toString(16);
	this.keys._importPrivate(_priv);
};
function returnValue(bn, enc) {
	if (!Array.isArray(bn)) {
		bn = bn.toArray();
	}
	var buf = new Buffer(bn);
	if (!enc) {
		return buf;
	} else {
		return buf.toString(enc);
	}
}
}).call(this,require("buffer").Buffer)
},{"bn.js":80,"buffer":9,"elliptic":81}],79:[function(require,module,exports){
var ECDH = require('./ecdh');
module.exports = function (crypto, exports) {
	exports.createECDH = function (curve) {
		return new ECDH(curve, crypto);
	};
};
},{"./ecdh":78}],80:[function(require,module,exports){
arguments[4][34][0].apply(exports,arguments)
},{"dup":34}],81:[function(require,module,exports){
arguments[4][36][0].apply(exports,arguments)
},{"../package.json":100,"./elliptic/curve":84,"./elliptic/curves":87,"./elliptic/ec":88,"./elliptic/hmac-drbg":91,"./elliptic/utils":92,"brorand":93,"dup":36}],82:[function(require,module,exports){
arguments[4][37][0].apply(exports,arguments)
},{"../../elliptic":81,"bn.js":80,"dup":37}],83:[function(require,module,exports){
arguments[4][38][0].apply(exports,arguments)
},{"../../elliptic":81,"../curve":84,"bn.js":80,"dup":38,"inherits":152}],84:[function(require,module,exports){
arguments[4][39][0].apply(exports,arguments)
},{"./base":82,"./edwards":83,"./mont":85,"./short":86,"dup":39}],85:[function(require,module,exports){
arguments[4][40][0].apply(exports,arguments)
},{"../../elliptic":81,"../curve":84,"bn.js":80,"dup":40,"inherits":152}],86:[function(require,module,exports){
arguments[4][41][0].apply(exports,arguments)
},{"../../elliptic":81,"../curve":84,"bn.js":80,"dup":41,"inherits":152}],87:[function(require,module,exports){
arguments[4][42][0].apply(exports,arguments)
},{"../elliptic":81,"bn.js":80,"dup":42,"hash.js":94}],88:[function(require,module,exports){
arguments[4][43][0].apply(exports,arguments)
},{"../../elliptic":81,"./key":89,"./signature":90,"bn.js":80,"dup":43}],89:[function(require,module,exports){
arguments[4][44][0].apply(exports,arguments)
},{"../../elliptic":81,"bn.js":80,"dup":44}],90:[function(require,module,exports){
arguments[4][45][0].apply(exports,arguments)
},{"../../elliptic":81,"bn.js":80,"dup":45}],91:[function(require,module,exports){
arguments[4][46][0].apply(exports,arguments)
},{"../elliptic":81,"dup":46,"hash.js":94}],92:[function(require,module,exports){
arguments[4][47][0].apply(exports,arguments)
},{"bn.js":80,"dup":47}],93:[function(require,module,exports){
arguments[4][48][0].apply(exports,arguments)
},{"dup":48}],94:[function(require,module,exports){
arguments[4][49][0].apply(exports,arguments)
},{"./hash/common":95,"./hash/hmac":96,"./hash/ripemd":97,"./hash/sha":98,"./hash/utils":99,"dup":49}],95:[function(require,module,exports){
arguments[4][50][0].apply(exports,arguments)
},{"../hash":94,"dup":50}],96:[function(require,module,exports){
arguments[4][51][0].apply(exports,arguments)
},{"../hash":94,"dup":51}],97:[function(require,module,exports){
arguments[4][52][0].apply(exports,arguments)
},{"../hash":94,"dup":52}],98:[function(require,module,exports){
arguments[4][53][0].apply(exports,arguments)
},{"../hash":94,"dup":53}],99:[function(require,module,exports){
arguments[4][54][0].apply(exports,arguments)
},{"dup":54,"inherits":152}],100:[function(require,module,exports){
arguments[4][55][0].apply(exports,arguments)
},{"dup":55}],101:[function(require,module,exports){
(function (Buffer){
'use strict';
var createHash = require('sha.js')

var md5 = require('./md5')
var rmd160 = require('ripemd160')
var Transform = require('stream').Transform;
var inherits = require('inherits')

module.exports = function (alg) {
  if('md5' === alg) return new HashNoConstructor(md5)
  if('rmd160' === alg) return new HashNoConstructor(rmd160)
  return new Hash(createHash(alg))
}
inherits(HashNoConstructor, Transform)

function HashNoConstructor(hash) {
  Transform.call(this);
  this._hash = hash
  this.buffers = []
}

HashNoConstructor.prototype._transform = function (data, _, done) {
  this.buffers.push(data)
  done()
}
HashNoConstructor.prototype._flush = function (done) {
  var buf = Buffer.concat(this.buffers)
  var r = this._hash(buf)
  this.buffers = null
  this.push(r)
  done()
}
HashNoConstructor.prototype.update = function (data, enc) {
  this.write(data, enc)
  return this
}

HashNoConstructor.prototype.digest = function (enc) {
  this.end()
  var outData = new Buffer('')
  var chunk
  while ((chunk = this.read())) {
    outData = Buffer.concat([outData, chunk])
  }
  if (enc) {
    outData = outData.toString(enc)
  }
  return outData
}

inherits(Hash, Transform)

function Hash(hash) {
  Transform.call(this);
  this._hash = hash
}

Hash.prototype._transform = function (data, _, done) {
  this._hash.update(data)
  done()
}
Hash.prototype._flush = function (done) {
  this.push(this._hash.digest())
  this._hash = null
  done()
}
Hash.prototype.update = function (data, enc) {
  this.write(data, enc)
  return this
}

Hash.prototype.digest = function (enc) {
  this.end()
  var outData = new Buffer('')
  var chunk
  while ((chunk = this.read())) {
    outData = Buffer.concat([outData, chunk])
  }
  if (enc) {
    outData = outData.toString(enc)
  }
  return outData
}
}).call(this,require("buffer").Buffer)
},{"./md5":103,"buffer":9,"inherits":152,"ripemd160":104,"sha.js":106,"stream":167}],102:[function(require,module,exports){
(function (Buffer){
'use strict';
var intSize = 4;
var zeroBuffer = new Buffer(intSize); zeroBuffer.fill(0);
var chrsz = 8;

function toArray(buf, bigEndian) {
  if ((buf.length % intSize) !== 0) {
    var len = buf.length + (intSize - (buf.length % intSize));
    buf = Buffer.concat([buf, zeroBuffer], len);
  }

  var arr = [];
  var fn = bigEndian ? buf.readInt32BE : buf.readInt32LE;
  for (var i = 0; i < buf.length; i += intSize) {
    arr.push(fn.call(buf, i));
  }
  return arr;
}

function toBuffer(arr, size, bigEndian) {
  var buf = new Buffer(size);
  var fn = bigEndian ? buf.writeInt32BE : buf.writeInt32LE;
  for (var i = 0; i < arr.length; i++) {
    fn.call(buf, arr[i], i * 4, true);
  }
  return buf;
}

function hash(buf, fn, hashSize, bigEndian) {
  if (!Buffer.isBuffer(buf)) buf = new Buffer(buf);
  var arr = fn(toArray(buf, bigEndian), buf.length * chrsz);
  return toBuffer(arr, hashSize, bigEndian);
}
exports.hash = hash;
}).call(this,require("buffer").Buffer)
},{"buffer":9}],103:[function(require,module,exports){
'use strict';
/*
 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
 * Digest Algorithm, as defined in RFC 1321.
 * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for more info.
 */

var helpers = require('./helpers');

/*
 * Calculate the MD5 of an array of little-endian words, and a bit length
 */
function core_md5(x, len)
{
  /* append padding */
  x[len >> 5] |= 0x80 << ((len) % 32);
  x[(((len + 64) >>> 9) << 4) + 14] = len;

  var a =  1732584193;
  var b = -271733879;
  var c = -1732584194;
  var d =  271733878;

  for(var i = 0; i < x.length; i += 16)
  {
    var olda = a;
    var oldb = b;
    var oldc = c;
    var oldd = d;

    a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);
    d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);
    c = md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);
    b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);
    a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);
    d = md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);
    c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);
    b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);
    a = md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);
    d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);
    c = md5_ff(c, d, a, b, x[i+10], 17, -42063);
    b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162);
    a = md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);
    d = md5_ff(d, a, b, c, x[i+13], 12, -40341101);
    c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290);
    b = md5_ff(b, c, d, a, x[i+15], 22,  1236535329);

    a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);
    d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);
    c = md5_gg(c, d, a, b, x[i+11], 14,  643717713);
    b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);
    a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);
    d = md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);
    c = md5_gg(c, d, a, b, x[i+15], 14, -660478335);
    b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);
    a = md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);
    d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);
    c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);
    b = md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);
    a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);
    d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);
    c = md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);
    b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734);

    a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);
    d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);
    c = md5_hh(c, d, a, b, x[i+11], 16,  1839030562);
    b = md5_hh(b, c, d, a, x[i+14], 23, -35309556);
    a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);
    d = md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);
    c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);
    b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640);
    a = md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);
    d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);
    c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);
    b = md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);
    a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);
    d = md5_hh(d, a, b, c, x[i+12], 11, -421815835);
    c = md5_hh(c, d, a, b, x[i+15], 16,  530742520);
    b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);

    a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);
    d = md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);
    c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905);
    b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);
    a = md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);
    d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);
    c = md5_ii(c, d, a, b, x[i+10], 15, -1051523);
    b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);
    a = md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);
    d = md5_ii(d, a, b, c, x[i+15], 10, -30611744);
    c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);
    b = md5_ii(b, c, d, a, x[i+13], 21,  1309151649);
    a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);
    d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379);
    c = md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);
    b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);

    a = safe_add(a, olda);
    b = safe_add(b, oldb);
    c = safe_add(c, oldc);
    d = safe_add(d, oldd);
  }
  return Array(a, b, c, d);

}

/*
 * These functions implement the four basic operations the algorithm uses.
 */
function md5_cmn(q, a, b, x, s, t)
{
  return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s),b);
}
function md5_ff(a, b, c, d, x, s, t)
{
  return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);
}
function md5_gg(a, b, c, d, x, s, t)
{
  return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);
}
function md5_hh(a, b, c, d, x, s, t)
{
  return md5_cmn(b ^ c ^ d, a, b, x, s, t);
}
function md5_ii(a, b, c, d, x, s, t)
{
  return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);
}

/*
 * Add integers, wrapping at 2^32. This uses 16-bit operations internally
 * to work around bugs in some JS interpreters.
 */
function safe_add(x, y)
{
  var lsw = (x & 0xFFFF) + (y & 0xFFFF);
  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
  return (msw << 16) | (lsw & 0xFFFF);
}

/*
 * Bitwise rotate a 32-bit number to the left.
 */
function bit_rol(num, cnt)
{
  return (num << cnt) | (num >>> (32 - cnt));
}

module.exports = function md5(buf) {
  return helpers.hash(buf, core_md5, 16);
};
},{"./helpers":102}],104:[function(require,module,exports){
(function (Buffer){
/*
CryptoJS v3.1.2
code.google.com/p/crypto-js
(c) 2009-2013 by Jeff Mott. All rights reserved.
code.google.com/p/crypto-js/wiki/License
*/
/** @preserve
(c) 2012 by Cédric Mesnil. All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

// constants table
var zl = [
    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,
    7,  4, 13,  1, 10,  6, 15,  3, 12,  0,  9,  5,  2, 14, 11,  8,
    3, 10, 14,  4,  9, 15,  8,  1,  2,  7,  0,  6, 13, 11,  5, 12,
    1,  9, 11, 10,  0,  8, 12,  4, 13,  3,  7, 15, 14,  5,  6,  2,
    4,  0,  5,  9,  7, 12,  2, 10, 14,  1,  3,  8, 11,  6, 15, 13]

var zr = [
    5, 14,  7,  0,  9,  2, 11,  4, 13,  6, 15,  8,  1, 10,  3, 12,
    6, 11,  3,  7,  0, 13,  5, 10, 14, 15,  8, 12,  4,  9,  1,  2,
    15,  5,  1,  3,  7, 14,  6,  9, 11,  8, 12,  2, 10,  0,  4, 13,
    8,  6,  4,  1,  3, 11, 15,  0,  5, 12,  2, 13,  9,  7, 10, 14,
    12, 15, 10,  4,  1,  5,  8,  7,  6,  2, 13, 14,  0,  3,  9, 11]

var sl = [
     11, 14, 15, 12,  5,  8,  7,  9, 11, 13, 14, 15,  6,  7,  9,  8,
    7, 6,   8, 13, 11,  9,  7, 15,  7, 12, 15,  9, 11,  7, 13, 12,
    11, 13,  6,  7, 14,  9, 13, 15, 14,  8, 13,  6,  5, 12,  7,  5,
      11, 12, 14, 15, 14, 15,  9,  8,  9, 14,  5,  6,  8,  6,  5, 12,
    9, 15,  5, 11,  6,  8, 13, 12,  5, 12, 13, 14, 11,  8,  5,  6 ]

var sr = [
    8,  9,  9, 11, 13, 15, 15,  5,  7,  7,  8, 11, 14, 14, 12,  6,
    9, 13, 15,  7, 12,  8,  9, 11,  7,  7, 12,  7,  6, 15, 13, 11,
    9,  7, 15, 11,  8,  6,  6, 14, 12, 13,  5, 14, 13, 13,  7,  5,
    15,  5,  8, 11, 14, 14,  6, 14,  6,  9, 12,  9, 12,  5, 15,  8,
    8,  5, 12,  9, 12,  5, 14,  6,  8, 13,  6,  5, 15, 13, 11, 11 ]


var hl =  [0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]
var hr =  [0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]

function bytesToWords(bytes) {
  var words = []
  for (var i = 0, b = 0; i < bytes.length; i++, b += 8) {
    words[b >>> 5] |= bytes[i] << (24 - b % 32)
  }
  return words
}

function wordsToBytes(words) {
  var bytes = []
  for (var b = 0; b < words.length * 32; b += 8) {
    bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF)
  }
  return bytes
}

function processBlock(H, M, offset) {
  // swap endian
  for (var i = 0; i < 16; i++) {
    var offset_i = offset + i;
    var M_offset_i = M[offset_i]

    // Swap
    M[offset_i] = (
        (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |
        (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)
    )
  }

  // Working variables
  var al, bl, cl, dl, el
  var ar, br, cr, dr, er

  ar = al = H[0]
  br = bl = H[1]
  cr = cl = H[2]
  dr = dl = H[3]
  er = el = H[4]

  // computation
  var t
  for (var i = 0; i < 80; i += 1) {
    t = (al +  M[offset+zl[i]])|0
    if (i<16){
        t +=  f1(bl,cl,dl) + hl[0]
    } else if (i<32) {
        t +=  f2(bl,cl,dl) + hl[1]
    } else if (i<48) {
        t +=  f3(bl,cl,dl) + hl[2]
    } else if (i<64) {
        t +=  f4(bl,cl,dl) + hl[3]
    } else {// if (i<80) {
        t +=  f5(bl,cl,dl) + hl[4]
    }
    t = t|0
    t =  rotl(t,sl[i])
    t = (t+el)|0
    al = el
    el = dl
    dl = rotl(cl, 10)
    cl = bl
    bl = t

    t = (ar + M[offset+zr[i]])|0
    if (i<16) {
      t +=  f5(br,cr,dr) + hr[0]
    } else if (i<32) {
      t +=  f4(br,cr,dr) + hr[1]
    } else if (i<48) {
      t +=  f3(br,cr,dr) + hr[2]
    } else if (i<64) {
      t +=  f2(br,cr,dr) + hr[3]
    } else {// if (i<80) {
      t +=  f1(br,cr,dr) + hr[4]
    }

    t = t|0
    t =  rotl(t,sr[i]) 
    t = (t+er)|0
    ar = er
    er = dr
    dr = rotl(cr, 10)
    cr = br
    br = t
  }

  // intermediate hash value
  t    = (H[1] + cl + dr)|0
  H[1] = (H[2] + dl + er)|0
  H[2] = (H[3] + el + ar)|0
  H[3] = (H[4] + al + br)|0
  H[4] = (H[0] + bl + cr)|0
  H[0] =  t
}

function f1(x, y, z) {
  return ((x) ^ (y) ^ (z))
}

function f2(x, y, z) {
  return (((x)&(y)) | ((~x)&(z)))
}

function f3(x, y, z) {
  return (((x) | (~(y))) ^ (z))
}

function f4(x, y, z) {
  return (((x) & (z)) | ((y)&(~(z))))
}

function f5(x, y, z) {
  return ((x) ^ ((y) |(~(z))))
}

function rotl(x,n) {
  return (x<<n) | (x>>>(32-n))
}

function ripemd160(message) {
  var H = [0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]

  if (typeof message == 'string')
    message = new Buffer(message, 'utf8')

  var m = bytesToWords(message)

  var nBitsLeft = message.length * 8
  var nBitsTotal = message.length * 8

  // Add padding
  m[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32)
  m[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (
      (((nBitsTotal << 8)  | (nBitsTotal >>> 24)) & 0x00ff00ff) |
      (((nBitsTotal << 24) | (nBitsTotal >>> 8))  & 0xff00ff00)
  )

  for (var i=0 ; i<m.length; i += 16) {
    processBlock(H, m, i)
  }

  // swap endian
  for (var i = 0; i < 5; i++) {
      // shortcut
    var H_i = H[i]

    // Swap
    H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |
          (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00)
  }

  var digestbytes = wordsToBytes(H)
  return new Buffer(digestbytes)
}

module.exports = ripemd160

}).call(this,require("buffer").Buffer)
},{"buffer":9}],105:[function(require,module,exports){
(function (Buffer){
//prototype class for hash functions
function Hash (blockSize, finalSize) {
  this._block = new Buffer(blockSize) //new Uint32Array(blockSize/4)
  this._finalSize = finalSize
  this._blockSize = blockSize
  this._len = 0
  this._s = 0
}

Hash.prototype.update = function (data, enc) {
  if ("string" === typeof data) {
    enc = enc || "utf8"
    data = new Buffer(data, enc)
  }

  var l = this._len += data.length
  var s = this._s || 0
  var f = 0
  var buffer = this._block

  while (s < l) {
    var t = Math.min(data.length, f + this._blockSize - (s % this._blockSize))
    var ch = (t - f)

    for (var i = 0; i < ch; i++) {
      buffer[(s % this._blockSize) + i] = data[i + f]
    }

    s += ch
    f += ch

    if ((s % this._blockSize) === 0) {
      this._update(buffer)
    }
  }
  this._s = s

  return this
}

Hash.prototype.digest = function (enc) {
  // Suppose the length of the message M, in bits, is l
  var l = this._len * 8

  // Append the bit 1 to the end of the message
  this._block[this._len % this._blockSize] = 0x80

  // and then k zero bits, where k is the smallest non-negative solution to the equation (l + 1 + k) === finalSize mod blockSize
  this._block.fill(0, this._len % this._blockSize + 1)

  if (l % (this._blockSize * 8) >= this._finalSize * 8) {
    this._update(this._block)
    this._block.fill(0)
  }

  // to this append the block which is equal to the number l written in binary
  // TODO: handle case where l is > Math.pow(2, 29)
  this._block.writeInt32BE(l, this._blockSize - 4)

  var hash = this._update(this._block) || this._hash()

  return enc ? hash.toString(enc) : hash
}

Hash.prototype._update = function () {
  throw new Error('_update must be implemented by subclass')
}

module.exports = Hash

}).call(this,require("buffer").Buffer)
},{"buffer":9}],106:[function(require,module,exports){
var exports = module.exports = function (alg) {
  var Alg = exports[alg.toLowerCase()]
  if(!Alg) throw new Error(alg + ' is not supported (we accept pull requests)')
  return new Alg()
}


exports.sha1 = require('./sha1')
exports.sha224 = require('./sha224')
exports.sha256 = require('./sha256')
exports.sha384 = require('./sha384')
exports.sha512 = require('./sha512')

},{"./sha1":107,"./sha224":108,"./sha256":109,"./sha384":110,"./sha512":111}],107:[function(require,module,exports){
(function (Buffer){
/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
 * in FIPS PUB 180-1
 * Version 2.1a Copyright Paul Johnston 2000 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for details.
 */

var inherits = require('inherits')
var Hash = require('./hash')

var W = new Array(80)

function Sha1() {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha1, Hash)

Sha1.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

/*
 * Bitwise rotate a 32-bit number to the left.
 */
function rol(num, cnt) {
  return (num << cnt) | (num >>> (32 - cnt));
}

Sha1.prototype._update = function (M) {
  var W = this._w

  var a = this._a
  var b = this._b
  var c = this._c
  var d = this._d
  var e = this._e

  var j = 0, k

  function calcW() { return rol(W[j - 3] ^ W[j -  8] ^ W[j - 14] ^ W[j - 16], 1) }
  function loop(w, f) {
    W[j] = w

    var t = rol(a, 5) + f + e + w + k

    e = d
    d = c
    c = rol(b, 30)
    b = a
    a = t
    j++
  }

  k = 1518500249
  while (j < 16) loop(M.readInt32BE(j * 4), (b & c) | ((~b) & d))
  while (j < 20) loop(calcW(), (b & c) | ((~b) & d))
  k = 1859775393
  while (j < 40) loop(calcW(), b ^ c ^ d)
  k = -1894007588
  while (j < 60) loop(calcW(), (b & c) | (b & d) | (c & d))
  k = -899497514
  while (j < 80) loop(calcW(), b ^ c ^ d)

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha1.prototype._hash = function () {
  var H = new Buffer(20)

  H.writeInt32BE(this._a|0, 0)
  H.writeInt32BE(this._b|0, 4)
  H.writeInt32BE(this._c|0, 8)
  H.writeInt32BE(this._d|0, 12)
  H.writeInt32BE(this._e|0, 16)

  return H
}

module.exports = Sha1


}).call(this,require("buffer").Buffer)
},{"./hash":105,"buffer":9,"inherits":152}],108:[function(require,module,exports){
(function (Buffer){
/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = require('inherits')
var SHA256 = require('./sha256')
var Hash = require('./hash')

var W = new Array(64)

function Sha224() {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha224, SHA256)

Sha224.prototype.init = function () {
  this._a = 0xc1059ed8|0
  this._b = 0x367cd507|0
  this._c = 0x3070dd17|0
  this._d = 0xf70e5939|0
  this._e = 0xffc00b31|0
  this._f = 0x68581511|0
  this._g = 0x64f98fa7|0
  this._h = 0xbefa4fa4|0

  return this
}

Sha224.prototype._hash = function () {
  var H = new Buffer(28)

  H.writeInt32BE(this._a,  0)
  H.writeInt32BE(this._b,  4)
  H.writeInt32BE(this._c,  8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)

  return H
}

module.exports = Sha224

}).call(this,require("buffer").Buffer)
},{"./hash":105,"./sha256":109,"buffer":9,"inherits":152}],109:[function(require,module,exports){
(function (Buffer){
/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = require('inherits')
var Hash = require('./hash')

var K = [
  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,
  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,
  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,
  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,
  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,
  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,
  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,
  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,
  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,
  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,
  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,
  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,
  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,
  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,
  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,
  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2
]

var W = new Array(64)

function Sha256() {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha256, Hash)

Sha256.prototype.init = function () {
  this._a = 0x6a09e667|0
  this._b = 0xbb67ae85|0
  this._c = 0x3c6ef372|0
  this._d = 0xa54ff53a|0
  this._e = 0x510e527f|0
  this._f = 0x9b05688c|0
  this._g = 0x1f83d9ab|0
  this._h = 0x5be0cd19|0

  return this
}

function S (X, n) {
  return (X >>> n) | (X << (32 - n));
}

function R (X, n) {
  return (X >>> n);
}

function Ch (x, y, z) {
  return ((x & y) ^ ((~x) & z));
}

function Maj (x, y, z) {
  return ((x & y) ^ (x & z) ^ (y & z));
}

function Sigma0256 (x) {
  return (S(x, 2) ^ S(x, 13) ^ S(x, 22));
}

function Sigma1256 (x) {
  return (S(x, 6) ^ S(x, 11) ^ S(x, 25));
}

function Gamma0256 (x) {
  return (S(x, 7) ^ S(x, 18) ^ R(x, 3));
}

function Gamma1256 (x) {
  return (S(x, 17) ^ S(x, 19) ^ R(x, 10));
}

Sha256.prototype._update = function(M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0
  var f = this._f | 0
  var g = this._g | 0
  var h = this._h | 0

  var j = 0

  function calcW() { return Gamma1256(W[j - 2]) + W[j - 7] + Gamma0256(W[j - 15]) + W[j - 16] }
  function loop(w) {
    W[j] = w

    var T1 = h + Sigma1256(e) + Ch(e, f, g) + K[j] + w
    var T2 = Sigma0256(a) + Maj(a, b, c);

    h = g;
    g = f;
    f = e;
    e = d + T1;
    d = c;
    c = b;
    b = a;
    a = T1 + T2;

    j++
  }

  while (j < 16) loop(M.readInt32BE(j * 4))
  while (j < 64) loop(calcW())

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
  this._f = (f + this._f) | 0
  this._g = (g + this._g) | 0
  this._h = (h + this._h) | 0
};

Sha256.prototype._hash = function () {
  var H = new Buffer(32)

  H.writeInt32BE(this._a,  0)
  H.writeInt32BE(this._b,  4)
  H.writeInt32BE(this._c,  8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)
  H.writeInt32BE(this._h, 28)

  return H
}

module.exports = Sha256

}).call(this,require("buffer").Buffer)
},{"./hash":105,"buffer":9,"inherits":152}],110:[function(require,module,exports){
(function (Buffer){
var inherits = require('inherits')
var SHA512 = require('./sha512');
var Hash = require('./hash')

var W = new Array(160)

function Sha384() {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha384, SHA512)

Sha384.prototype.init = function () {
  this._a = 0xcbbb9d5d|0
  this._b = 0x629a292a|0
  this._c = 0x9159015a|0
  this._d = 0x152fecd8|0
  this._e = 0x67332667|0
  this._f = 0x8eb44a87|0
  this._g = 0xdb0c2e0d|0
  this._h = 0x47b5481d|0

  this._al = 0xc1059ed8|0
  this._bl = 0x367cd507|0
  this._cl = 0x3070dd17|0
  this._dl = 0xf70e5939|0
  this._el = 0xffc00b31|0
  this._fl = 0x68581511|0
  this._gl = 0x64f98fa7|0
  this._hl = 0xbefa4fa4|0

  return this
}

Sha384.prototype._hash = function () {
  var H = new Buffer(48)

  function writeInt64BE(h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._a, this._al, 0)
  writeInt64BE(this._b, this._bl, 8)
  writeInt64BE(this._c, this._cl, 16)
  writeInt64BE(this._d, this._dl, 24)
  writeInt64BE(this._e, this._el, 32)
  writeInt64BE(this._f, this._fl, 40)

  return H
}

module.exports = Sha384

}).call(this,require("buffer").Buffer)
},{"./hash":105,"./sha512":111,"buffer":9,"inherits":152}],111:[function(require,module,exports){
(function (Buffer){
var inherits = require('inherits')
var Hash = require('./hash')

var K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
]

var W = new Array(160)

function Sha512() {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha512, Hash)

Sha512.prototype.init = function () {
  this._a = 0x6a09e667|0
  this._b = 0xbb67ae85|0
  this._c = 0x3c6ef372|0
  this._d = 0xa54ff53a|0
  this._e = 0x510e527f|0
  this._f = 0x9b05688c|0
  this._g = 0x1f83d9ab|0
  this._h = 0x5be0cd19|0

  this._al = 0xf3bcc908|0
  this._bl = 0x84caa73b|0
  this._cl = 0xfe94f82b|0
  this._dl = 0x5f1d36f1|0
  this._el = 0xade682d1|0
  this._fl = 0x2b3e6c1f|0
  this._gl = 0xfb41bd6b|0
  this._hl = 0x137e2179|0

  return this
}

function S (X, Xl, n) {
  return (X >>> n) | (Xl << (32 - n))
}

function Ch (x, y, z) {
  return ((x & y) ^ ((~x) & z));
}

function Maj (x, y, z) {
  return ((x & y) ^ (x & z) ^ (y & z));
}

Sha512.prototype._update = function(M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0
  var f = this._f | 0
  var g = this._g | 0
  var h = this._h | 0

  var al = this._al | 0
  var bl = this._bl | 0
  var cl = this._cl | 0
  var dl = this._dl | 0
  var el = this._el | 0
  var fl = this._fl | 0
  var gl = this._gl | 0
  var hl = this._hl | 0

  var i = 0, j = 0
  var Wi, Wil
  function calcW() {
    var x  = W[j - 15*2]
    var xl = W[j - 15*2 + 1]
    var gamma0  = S(x, xl, 1) ^ S(x, xl, 8) ^ (x >>> 7)
    var gamma0l = S(xl, x, 1) ^ S(xl, x, 8) ^ S(xl, x, 7)

    x  = W[j - 2*2]
    xl = W[j - 2*2 + 1]
    var gamma1  = S(x, xl, 19) ^ S(xl, x, 29) ^ (x >>> 6)
    var gamma1l = S(xl, x, 19) ^ S(x, xl, 29) ^ S(xl, x, 6)

    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
    var Wi7  = W[j - 7*2]
    var Wi7l = W[j - 7*2 + 1]

    var Wi16  = W[j - 16*2]
    var Wi16l = W[j - 16*2 + 1]

    Wil = gamma0l + Wi7l
    Wi  = gamma0  + Wi7 + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0)
    Wil = Wil + gamma1l
    Wi  = Wi  + gamma1  + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0)
    Wil = Wil + Wi16l
    Wi  = Wi  + Wi16 + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0)
  }

  function loop() {
    W[j] = Wi
    W[j + 1] = Wil

    var maj = Maj(a, b, c)
    var majl = Maj(al, bl, cl)

    var sigma0h = S(a, al, 28) ^ S(al, a, 2) ^ S(al, a, 7)
    var sigma0l = S(al, a, 28) ^ S(a, al, 2) ^ S(a, al, 7)
    var sigma1h = S(e, el, 14) ^ S(e, el, 18) ^ S(el, e, 9)
    var sigma1l = S(el, e, 14) ^ S(el, e, 18) ^ S(e, el, 9)

    // t1 = h + sigma1 + ch + K[i] + W[i]
    var Ki = K[j]
    var Kil = K[j + 1]

    var ch = Ch(e, f, g)
    var chl = Ch(el, fl, gl)

    var t1l = hl + sigma1l
    var t1 = h + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0)
    t1l = t1l + chl
    t1 = t1 + ch + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0)
    t1l = t1l + Kil
    t1 = t1 + Ki + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0)
    t1l = t1l + Wil
    t1 = t1 + Wi + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0)

    // t2 = sigma0 + maj
    var t2l = sigma0l + majl
    var t2 = sigma0h + maj + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0)

    h  = g
    hl = gl
    g  = f
    gl = fl
    f  = e
    fl = el
    el = (dl + t1l) | 0
    e  = (d + t1 + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0
    d  = c
    dl = cl
    c  = b
    cl = bl
    b  = a
    bl = al
    al = (t1l + t2l) | 0
    a  = (t1 + t2 + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0

    i++
    j += 2
  }

  while (i < 16) {
    Wi = M.readInt32BE(j * 4)
    Wil = M.readInt32BE(j * 4 + 4)

    loop()
  }

  while (i < 80) {
    calcW()
    loop()
  }

  this._al = (this._al + al) | 0
  this._bl = (this._bl + bl) | 0
  this._cl = (this._cl + cl) | 0
  this._dl = (this._dl + dl) | 0
  this._el = (this._el + el) | 0
  this._fl = (this._fl + fl) | 0
  this._gl = (this._gl + gl) | 0
  this._hl = (this._hl + hl) | 0

  this._a = (this._a + a + ((this._al >>> 0) < (al >>> 0) ? 1 : 0)) | 0
  this._b = (this._b + b + ((this._bl >>> 0) < (bl >>> 0) ? 1 : 0)) | 0
  this._c = (this._c + c + ((this._cl >>> 0) < (cl >>> 0) ? 1 : 0)) | 0
  this._d = (this._d + d + ((this._dl >>> 0) < (dl >>> 0) ? 1 : 0)) | 0
  this._e = (this._e + e + ((this._el >>> 0) < (el >>> 0) ? 1 : 0)) | 0
  this._f = (this._f + f + ((this._fl >>> 0) < (fl >>> 0) ? 1 : 0)) | 0
  this._g = (this._g + g + ((this._gl >>> 0) < (gl >>> 0) ? 1 : 0)) | 0
  this._h = (this._h + h + ((this._hl >>> 0) < (hl >>> 0) ? 1 : 0)) | 0
}

Sha512.prototype._hash = function () {
  var H = new Buffer(64)

  function writeInt64BE(h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._a, this._al, 0)
  writeInt64BE(this._b, this._bl, 8)
  writeInt64BE(this._c, this._cl, 16)
  writeInt64BE(this._d, this._dl, 24)
  writeInt64BE(this._e, this._el, 32)
  writeInt64BE(this._f, this._fl, 40)
  writeInt64BE(this._g, this._gl, 48)
  writeInt64BE(this._h, this._hl, 56)

  return H
}

module.exports = Sha512

}).call(this,require("buffer").Buffer)
},{"./hash":105,"buffer":9,"inherits":152}],112:[function(require,module,exports){
(function (Buffer){
'use strict';
var createHash = require('create-hash/browser');
var Transform = require('stream').Transform;
var inherits = require('inherits')
var zeroBuffer = new Buffer(128)
zeroBuffer.fill(0)

module.exports = Hmac
inherits(Hmac, Transform)
function Hmac (alg, key) {
  if(!(this instanceof Hmac)) return new Hmac(alg, key)

  Transform.call(this)
  this._opad = opad
  this._alg = alg

  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

  key = this._key = !Buffer.isBuffer(key) ? new Buffer(key) : key

  if(key.length > blocksize) {
    key = createHash(alg).update(key).digest()
  } else if(key.length < blocksize) {
    key = Buffer.concat([key, zeroBuffer], blocksize)
  }

  var ipad = this._ipad = new Buffer(blocksize)
  var opad = this._opad = new Buffer(blocksize)

  for(var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }

  this._hash = createHash(alg).update(ipad)
}

Hmac.prototype.update = function (data, enc) {
  this.write(data, enc)
  return this
}

Hmac.prototype._transform = function (data, _, next) {
  this._hash.update(data)
  next()
}

Hmac.prototype._flush = function (next) {
  var h = this._hash.digest()
  this.push(createHash(this._alg).update(this._opad).update(h).digest())
  next()
}

Hmac.prototype.digest = function (enc) {
  this.end()
  var outData = new Buffer('')
  var chunk
  while ((chunk = this.read())) {
    outData = Buffer.concat([outData, chunk])
  }
  if (enc) {
    outData = outData.toString(enc)
  }
  return outData
}

}).call(this,require("buffer").Buffer)
},{"buffer":9,"create-hash/browser":101,"inherits":152,"stream":167}],113:[function(require,module,exports){
(function (Buffer){
var BN = require('bn.js');
var MillerRabin = require('miller-rabin');
var millerRabin = new MillerRabin();
var TWENTYFOUR = new BN(24);
var ELEVEN = new BN(11);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var primes = require('./generatePrime');
module.exports = DH;
function setPublicKey(pub, enc) {
	enc = enc || 'utf8';
	if (!Buffer.isBuffer(pub)) {
		pub = new Buffer(pub, enc);
	}
	this._pub = new BN(pub);
}
function setPrivateKey(priv, enc) {
	enc = enc || 'utf8';
	if (!Buffer.isBuffer(priv)) {
		priv = new Buffer(priv, enc);
	}
	this._priv = new BN(priv);
}
var primeCache = {};
function checkPrime(prime, generator) {
	var gen = generator.toString('hex');
	var hex = [gen, prime.toString(16)].join('_');
	if (hex in primeCache) {
		return primeCache[hex];
	}
	var error = 0;
	
	if (prime.isEven() ||
		!primes.simpleSieve ||
		!primes.fermatTest(prime) ||
		!millerRabin.test(prime)) {
		//not a prime so +1
		error += 1;
		
		if (gen === '02' || gen === '05') {
			// we'd be able to check the generator
			// it would fail so +8
			error += 8;
		} else {
			//we wouldn't be able to test the generator
			// so +4
			error += 4;
		}
		primeCache[hex] = error;
		return error;
	}
	if (!millerRabin.test(prime.shrn(1))) {
		//not a safe prime
		error += 2;
	}
	var gen = generator.toString('hex');
	var rem;
	switch (gen) {
		case '02':
		  if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {
		  	// unsuidable generator
		  	error += 8;
		  }
		  break;
		case '05':
		  rem = prime.mod(TEN);
		  if (rem.cmp(THREE) && rem.cmp(SEVEN)) {
		  	// prime mod 10 needs to equal 3 or 7
		  	error += 8;
		  } 
		  break;
		default: 
		  error += 4;
	}
	primeCache[hex] = error;
	return error;
}
function defineError (self, error) {
	try {
		Object.defineProperty(self, 'verifyError', {
	    enumerable: true,
	    value: error,
	    writable: false
	  });
	} catch(e) {
		self.verifyError = error;
	}
}
function DH(prime, generator,crypto, malleable) {
	this.setGenerator(generator);
	this.__prime = new BN(prime);
	this._prime = BN.mont(this.__prime);
	this._pub = void 0;
	this._priv = void 0;
	
	if (malleable) {
		this.setPublicKey = setPublicKey;
		this.setPrivateKey = setPrivateKey;
		defineError(this, checkPrime(this.__prime, generator));
	} else {
		defineError(this, 8);
	}
	this._makeNum = function makeNum() {
		return crypto.randomBytes(prime.length);
	};
}
DH.prototype.generateKeys = function () {
	if (!this._priv) {
		this._priv = new BN(this._makeNum());
	}
	this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();
	return this.getPublicKey();
};

DH.prototype.computeSecret = function (other) {
	other = new BN(other);
	other = other.toRed(this._prime);
	var secret = other.redPow(this._priv).fromRed();
	var out = new Buffer(secret.toArray());
	var prime = this.getPrime();
	if (out.length < prime.length) {
		var front = new Buffer(prime.length - out.length);
		front.fill(0);
		out = Buffer.concat([front, out]);
	}
	return out;
};
DH.prototype.getPublicKey = function getPublicKey(enc) {
	return returnValue(this._pub, enc);
};
DH.prototype.getPrivateKey = function getPrivateKey(enc) {
	return returnValue(this._priv, enc);
};

DH.prototype.getPrime = function (enc) {
	return returnValue(this.__prime, enc);
};
DH.prototype.getGenerator = function (enc) {
	return returnValue(this._gen, enc);
};
DH.prototype.setGenerator = function (gen, enc) {
	enc = enc || 'utf8';
	if (!Buffer.isBuffer(gen)) {
		gen = new Buffer(gen, enc);
	}
	this._gen = new BN(gen);
};

function returnValue(bn, enc) {
	var buf = new Buffer(bn.toArray());
	if (!enc) {
		return buf;
	} else {
		return buf.toString(enc);
	}
}
}).call(this,require("buffer").Buffer)
},{"./generatePrime":114,"bn.js":116,"buffer":9,"miller-rabin":117}],114:[function(require,module,exports){

module.exports = findPrime;
findPrime.simpleSieve = simpleSieve;
findPrime.fermatTest = fermatTest;
var BN = require('bn.js');
var TWENTYFOUR = new BN(24);
var MillerRabin = require('miller-rabin');
var millerRabin = new MillerRabin();
var ONE = new BN(1);
var TWO = new BN(2);
var FIVE = new BN(5);
var SIXTEEN = new BN(16);
var EIGHT = new BN(8);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var ELEVEN = new BN(11);
var FOUR = new BN(4);
var TWELVE = new BN(12);
var primes = null;

function _getPrimes() {
  if (primes !== null)
    return primes;

  var limit = 0x100000;
  var res = [];
  res[0] = 2;
  for (var i = 1, k = 3; k < limit; k += 2) {
    var sqrt = Math.ceil(Math.sqrt(k));
    for (var j = 0; j < i && res[j] <= sqrt; j++)
      if (k % res[j] === 0)
        break;

    if (i !== j && res[j] <= sqrt)
      continue;

    res[i++] = k;
  }
  primes = res;
  return res;
}
function simpleSieve(p) {
  var primes = _getPrimes();

  for (var i = 0; i < primes.length; i++)
    if (p.modn(primes[i]) === 0) {
      if (p.cmpn(primes[i]) === 0) {
        return true;
      } else {
        return false;
      }
    }

  return true;
}
function fermatTest(p) {
  var red = BN.mont(p);
  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;
}
function findPrime(bits, gen ,crypto) {
  if (bits < 16) {
    // this is what openssl does
    if (gen === 2 || gen === 5) {
      return new BN([0x8c, 0x7b]);
    } else {
      return new BN([0x8c, 0x27]);
    }
  }
  gen = new BN(gen);
  var runs, comp;
  function generateRandom(bits) {
    runs = -1;
    var out = new BN(crypto.randomBytes(Math.ceil(bits / 8)));
    while (out.bitLength() > bits) {
      out.ishrn(1);
    }
    if (out.isEven()) {
      out.iadd(ONE);
    }
    if (!out.testn(1)) {
      out.iadd(TWO);
    }
    if (!gen.cmp(TWO)) {
      while (out.mod(TWENTYFOUR).cmp(ELEVEN)) {
        out.iadd(FOUR);
      }
      comp = {
        major: [TWENTYFOUR],
        minor: [TWELVE]
      };
    } else if (!gen.cmp(FIVE)) {
      rem = out.mod(TEN);
      while (rem.cmp(THREE)) {
        out.iadd(FOUR);
        rem = out.mod(TEN);
      }
      comp = {
        major: [FOUR, SIXTEEN],
        minor: [TWO, EIGHT]
      };
    } else {
      comp = {
        major: [FOUR],
        minor: [TWO]
      };
    }
    return out;
  }
  var num = generateRandom(bits);



  var n2 = num.shrn(1);

  while (true) {
    while (num.bitLength() > bits) {
      num = generateRandom(bits);
      n2 = num.shrn(1);
    }
    runs++;
    if (simpleSieve(n2) &&  simpleSieve(num) &&
      fermatTest(n2) &&  fermatTest(num) &&
      millerRabin.test(n2) && millerRabin.test(num)) {
      return num;
    }
    num.iadd(comp.major[runs%comp.major.length]);
    n2.iadd(comp.minor[runs%comp.minor.length]);
  }

}
},{"bn.js":116,"miller-rabin":117}],115:[function(require,module,exports){
(function (Buffer){
var primes = require('./primes.json');
var DH = require('./dh');
var generatePrime = require('./generatePrime');
module.exports = function (crypto, exports) {
	exports.DiffieHellmanGroup =
    exports.createDiffieHellmanGroup =
    exports.getDiffieHellman = DiffieHellmanGroup;
	function DiffieHellmanGroup(mod) {
		return new DH(new Buffer(primes[mod].prime, 'hex'),
			new Buffer(primes[mod].gen, 'hex'), crypto);
	}
	exports.createDiffieHellman = exports.DiffieHellman = DiffieHellman;
	function DiffieHellman(prime, enc, generator, genc) {
		
		if (Buffer.isBuffer(enc) ||
			(typeof enc === 'string' && ['hex', 'binary', 'base64'].indexOf(enc) === -1)) {
			genc = generator;
			generator = enc
			enc = void 0;
		}
		enc = enc || 'binary';
		genc = genc || 'binary';
		generator = generator || new Buffer([2]);
		if (!Buffer.isBuffer(generator)) {
			generator = new Buffer(generator, genc);
		}
		if (typeof prime === 'number') {
			return new DH(generatePrime(prime, generator, crypto), generator, crypto, true);
		}
		if (!Buffer.isBuffer(prime)) {
			prime = new Buffer(prime, enc);
		}
		
		return new DH(prime, generator, crypto, true);
	};
}
}).call(this,require("buffer").Buffer)
},{"./dh":113,"./generatePrime":114,"./primes.json":119,"buffer":9}],116:[function(require,module,exports){
arguments[4][34][0].apply(exports,arguments)
},{"dup":34}],117:[function(require,module,exports){
var bn = require('bn.js');
var brorand = require('brorand');

function MillerRabin(rand) {
  this.rand = rand || new brorand.Rand();
}
module.exports = MillerRabin;

MillerRabin.create = function create(rand) {
  return new MillerRabin(rand);
};

MillerRabin.prototype._rand = function _rand(n) {
  var len = n.bitLength();
  var buf = this.rand.generate(Math.ceil(len / 8));

  // Set low bits
  buf[0] |= 3;

  // Mask high bits
  var mask = len & 0x7;
  if (mask !== 0)
    buf[buf.length - 1] >>= 7 - mask;

  return new bn(buf);
}

MillerRabin.prototype.test = function test(n, k, cb) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  var n2 = n1.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  var prime = true;
  for (; k > 0; k--) {
    var a = this._rand(n2);
    if (cb)
      cb(a);

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return false;
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s)
      return false;
  }

  return prime;
};

MillerRabin.prototype.getDivisor = function getDivisor(n, k) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  var n2 = n1.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  var prime = true;
  for (; k > 0; k--) {
    var a = this._rand(n2);

    var g = n.gcd(a);
    if (g.cmpn(1) !== 0)
      return g;

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return x.fromRed().subn(1).gcd(n);
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s) {
      x = x.redSqr();
      return x.fromRed().subn(1).gcd(n);
    }
  }

  return prime;
};

},{"bn.js":116,"brorand":118}],118:[function(require,module,exports){
arguments[4][48][0].apply(exports,arguments)
},{"dup":48}],119:[function(require,module,exports){
module.exports={
    "modp1": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"
    },
    "modp2": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"
    },
    "modp5": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"
    },
    "modp14": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"
    },
    "modp15": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"
    },
    "modp16": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"
    },
    "modp17": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"
    },
    "modp18": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"
    }
}
},{}],120:[function(require,module,exports){
(function (Buffer){
module.exports = function(crypto) {
  function pbkdf2(password, salt, iterations, keylen, digest, callback) {
    if ('function' === typeof digest) {
      callback = digest
      digest = undefined
    }

    if ('function' !== typeof callback)
      throw new Error('No callback provided to pbkdf2')

    setTimeout(function() {
      var result

      try {
        result = pbkdf2Sync(password, salt, iterations, keylen, digest)
      } catch (e) {
        return callback(e)
      }

      callback(undefined, result)
    })
  }

  function pbkdf2Sync(password, salt, iterations, keylen, digest) {
    if ('number' !== typeof iterations)
      throw new TypeError('Iterations not a number')

    if (iterations < 0)
      throw new TypeError('Bad iterations')

    if ('number' !== typeof keylen)
      throw new TypeError('Key length not a number')

    if (keylen < 0)
      throw new TypeError('Bad key length')

    digest = digest || 'sha1'

    if (!Buffer.isBuffer(password)) password = new Buffer(password)
    if (!Buffer.isBuffer(salt)) salt = new Buffer(salt)

    var hLen, l = 1, r, T
    var DK = new Buffer(keylen)
    var block1 = new Buffer(salt.length + 4)
    salt.copy(block1, 0, 0, salt.length)

    for (var i = 1; i <= l; i++) {
      block1.writeUInt32BE(i, salt.length)

      var U = crypto.createHmac(digest, password).update(block1).digest()

      if (!hLen) {
        hLen = U.length
        T = new Buffer(hLen)
        l = Math.ceil(keylen / hLen)
        r = keylen - (l - 1) * hLen

        if (keylen > (Math.pow(2, 32) - 1) * hLen)
          throw new TypeError('keylen exceeds maximum length')
      }

      U.copy(T, 0, 0, hLen)

      for (var j = 1; j < iterations; j++) {
        U = crypto.createHmac(digest, password).update(U).digest()

        for (var k = 0; k < hLen; k++) {
          T[k] ^= U[k]
        }
      }

      var destPos = (i - 1) * hLen
      var len = (i == l ? r : hLen)
      T.copy(DK, destPos, 0, len)
    }

    return DK
  }

  return {
    pbkdf2: pbkdf2,
    pbkdf2Sync: pbkdf2Sync
  }
}

}).call(this,require("buffer").Buffer)
},{"buffer":9}],121:[function(require,module,exports){

module.exports = function (exports, crypto) {
  exports.publicEncrypt = require('./publicEncrypt')(crypto);
  exports.privateDecrypt = require('./privateDecrypt')(crypto);
};
},{"./privateDecrypt":145,"./publicEncrypt":146}],122:[function(require,module,exports){
(function (Buffer){
module.exports = function (seed, len, crypto) {
  var t = new Buffer('');
  var  i = 0, c;
  while (t.length < len) {
    c = i2ops(i++);
    t = Buffer.concat([t, crypto.createHash('sha1').update(seed).update(c).digest()]);
  }
  return t.slice(0, len);
};

function i2ops(c) {
  var out = new Buffer(4);
  out.writeUInt32BE(c,0);
  return out;
}
}).call(this,require("buffer").Buffer)
},{"buffer":9}],123:[function(require,module,exports){
arguments[4][34][0].apply(exports,arguments)
},{"dup":34}],124:[function(require,module,exports){
arguments[4][35][0].apply(exports,arguments)
},{"bn.js":123,"buffer":9,"dup":35}],125:[function(require,module,exports){
arguments[4][56][0].apply(exports,arguments)
},{"buffer":9,"dup":56}],126:[function(require,module,exports){
arguments[4][57][0].apply(exports,arguments)
},{"dup":57}],127:[function(require,module,exports){
arguments[4][58][0].apply(exports,arguments)
},{"asn1.js":131,"asn1.js-rfc3280":130,"dup":58}],128:[function(require,module,exports){
arguments[4][59][0].apply(exports,arguments)
},{"./EVP_BytesToKey":125,"buffer":9,"dup":59}],129:[function(require,module,exports){
arguments[4][60][0].apply(exports,arguments)
},{"./aesid.json":126,"./asn1":127,"./fixProc":128,"buffer":9,"dup":60,"pemstrip":144}],130:[function(require,module,exports){
arguments[4][61][0].apply(exports,arguments)
},{"asn1.js":131,"dup":61}],131:[function(require,module,exports){
arguments[4][62][0].apply(exports,arguments)
},{"./asn1/api":132,"./asn1/base":134,"./asn1/constants":138,"./asn1/decoders":140,"./asn1/encoders":142,"bn.js":123,"dup":62}],132:[function(require,module,exports){
arguments[4][63][0].apply(exports,arguments)
},{"../asn1":131,"dup":63,"inherits":152,"vm":169}],133:[function(require,module,exports){
arguments[4][64][0].apply(exports,arguments)
},{"../base":134,"buffer":9,"dup":64,"inherits":152}],134:[function(require,module,exports){
arguments[4][65][0].apply(exports,arguments)
},{"./buffer":133,"./node":135,"./reporter":136,"dup":65}],135:[function(require,module,exports){
arguments[4][66][0].apply(exports,arguments)
},{"../base":134,"dup":66,"minimalistic-assert":143}],136:[function(require,module,exports){
arguments[4][67][0].apply(exports,arguments)
},{"dup":67,"inherits":152}],137:[function(require,module,exports){
arguments[4][68][0].apply(exports,arguments)
},{"../constants":138,"dup":68}],138:[function(require,module,exports){
arguments[4][69][0].apply(exports,arguments)
},{"./der":137,"dup":69}],139:[function(require,module,exports){
arguments[4][70][0].apply(exports,arguments)
},{"../../asn1":131,"dup":70,"inherits":152}],140:[function(require,module,exports){
arguments[4][71][0].apply(exports,arguments)
},{"./der":139,"dup":71}],141:[function(require,module,exports){
arguments[4][72][0].apply(exports,arguments)
},{"../../asn1":131,"buffer":9,"dup":72,"inherits":152}],142:[function(require,module,exports){
arguments[4][73][0].apply(exports,arguments)
},{"./der":141,"dup":73}],143:[function(require,module,exports){
arguments[4][74][0].apply(exports,arguments)
},{"dup":74}],144:[function(require,module,exports){
arguments[4][75][0].apply(exports,arguments)
},{"dup":75}],145:[function(require,module,exports){
(function (Buffer){
var parseKeys = require('parse-asn1');
var mgf = require('./mgf');
var xor = require('./xor');
var bn = require('bn.js');
var crt = require('browserify-rsa');
module.exports = function (crypto) {
  return privateDecrypt;
  function privateDecrypt(private_key, enc) {
    var padding;
    if (private_key.padding) {
      padding = private_key.padding;
    } else {
      padding = 4;
    }
    
    var key = parseKeys(private_key, crypto);
    var k = key.modulus.byteLength();
    if (enc.length > k || new bn(enc).cmp(key.modulus) >= 0) {
      throw new Error('decryption error');
    }
    var msg = crt(enc, key, crypto);
    var zBuffer = new Buffer(k - msg.length);
    zBuffer.fill(0);
    msg = Buffer.concat([zBuffer, msg], k);
    if (padding === 4) {
      return oaep(key, msg, crypto);
    } else if (padding === 1) {
      return pkcs1(key, msg, crypto);
    } else if (padding === 3) {
      return msg;
    } else {
      throw new Error('unknown padding');
    }
  }
};

function oaep(key, msg, crypto){
  var n = key.modulus;
  var k = key.modulus.byteLength();
  var mLen = msg.length;
  var iHash = crypto.createHash('sha1').update(new Buffer('')).digest();
  var hLen = iHash.length;
  var hLen2 = 2 * hLen;
  if (msg[0] !== 0) {
    throw new Error('decryption error');
  }
  var maskedSeed = msg.slice(1, hLen + 1);
  var maskedDb =  msg.slice(hLen + 1);
  var seed = xor(maskedSeed, mgf(maskedDb, hLen, crypto));
  var db = xor(maskedDb, mgf(seed, k - hLen - 1, crypto));
  if (compare(iHash, db.slice(0, hLen))) {
    throw new Error('decryption error');
  }
  var i = hLen;
  while (db[i] === 0) {
    i++;
  }
  if (db[i++] !== 1) {
    throw new Error('decryption error');
  }
  return db.slice(i);
}

function pkcs1(key, msg, crypto){
  var p1 = msg.slice(0, 2);
  var i = 2;
  var status = 0;
  while (msg[i++] !== 0) {
    if (i >= msg.length) {
      status++;
      break;
    }
  }
  var ps = msg.slice(2, i - 1);
  var p2 = msg.slice(i - 1, i);

  if (p1.toString('hex') !== '0002') {
    status++;
  }
  if (ps.length < 8) {
    status++;
  }
  return  msg.slice(i);
}
function compare(a, b){
  var dif = 0;
  var len = a.length;
  if (a.length !== b.length) {
    dif++;
    len = Math.min(a.length, b.length);
  }
  var i = -1;
  while (++i < len) {
    dif += (a[i] ^ b[i]);
  }
  return dif;
}
}).call(this,require("buffer").Buffer)
},{"./mgf":122,"./xor":147,"bn.js":123,"browserify-rsa":124,"buffer":9,"parse-asn1":129}],146:[function(require,module,exports){
(function (Buffer){
var parseKeys = require('parse-asn1');
var mgf = require('./mgf');
var xor = require('./xor');
var bn = require('bn.js');
var constants = {
  RSA_PKCS1_OAEP_PADDING: 4,
  RSA_PKCS1_PADDIN: 1,
  RSA_NO_PADDING: 3
};

module.exports = function (crypto) {
  return publicEncrypt;
  function publicEncrypt(public_key, msg) {
    var padding;
    if (public_key.padding) {
      padding = public_key.padding;
    } else {
      padding = 4;
    }
    var key = parseKeys(public_key);
    var paddedMsg;
    if (padding === 4) {
      paddedMsg = oaep(key, msg, crypto);
    } else if (padding === 1) {
      paddedMsg = pkcs1(key, msg, crypto);
    } else if (padding === 3) {
      paddedMsg = new bn(msg);
      if (paddedMsg.cmp(key.modulus) >= 0) {
        throw new Error('data too long for modulus');
      }
    } else {
      throw new Error('unknown padding');
    }
    var enc = paddedMsg
      .toRed(bn.mont(key.modulus))
      .redPow(new bn(key.publicExponent))
      .fromRed()
      .toArray();
    return new Buffer(enc);
  }
};

function oaep(key, msg, crypto){
  var k = key.modulus.byteLength();
  var mLen = msg.length;
  var iHash = crypto.createHash('sha1').update(new Buffer('')).digest();
  var hLen = iHash.length;
  var hLen2 = 2 * hLen;
  if (mLen > k - hLen2 - 2) {
    throw new Error('message too long');
  }
  var ps = new Buffer(k - mLen - hLen2 - 2);
  ps.fill(0);
  var dblen = k - hLen - 1;
  var seed = crypto.randomBytes(hLen);
  var maskedDb = xor(Buffer.concat([iHash, ps, new Buffer([1]), msg], dblen), mgf(seed, dblen, crypto));
  var maskedSeed = xor(seed, mgf(maskedDb, hLen, crypto));
  return new bn(Buffer.concat([new Buffer([0]), maskedSeed, maskedDb], k));
}
function pkcs1(key, msg, crypto){
  var mLen = msg.length;
  var k = key.modulus.byteLength();
  if (mLen > k - 11) {
    throw new Error('message too long');
  }
  var ps = nonZero(k - mLen - 3, crypto);
  return new bn(Buffer.concat([new Buffer([0, 2]), ps, new Buffer([0]), msg], k));
}
function nonZero(len, crypto) {
  var out = new Buffer(len);
  var i = 0;
  var cache = crypto.randomBytes(len*2);
  var cur = 0;
  var num;
  while (i < len) {
    if (cur === cache.length) {
      cache = crypto.randomBytes(len*2);
      cur = 0;
    }
    num = cache[cur++];
    if (num) {
      out[i++] = num;
    }
  }
  return out;
}
}).call(this,require("buffer").Buffer)
},{"./mgf":122,"./xor":147,"bn.js":123,"buffer":9,"parse-asn1":129}],147:[function(require,module,exports){
module.exports = function xor(a, b) {
  var len = a.length;
  var i = -1;
  while (++i < len) {
    a[i] ^= b[i];
  }
  return a
};
},{}],148:[function(require,module,exports){
(function (process,global,Buffer){
'use strict';

var crypto = global.crypto || global.msCrypto
if(crypto && crypto.getRandomValues) {
  module.exports = randomBytes;
} else {
  module.exports = oldBrowser;
}
function randomBytes(size, cb) {
  var bytes = new Buffer(size); //in browserify, this is an extended Uint8Array
    /* This will not work in older browsers.
     * See https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues
     */

  crypto.getRandomValues(bytes);
  if (typeof cb === 'function') {
    return process.nextTick(function () {
      cb(null, bytes);
    });
  }
  return bytes;
}
function oldBrowser() {
  throw new Error(
      'secure random number generation not supported by this browser\n'+
      'use chrome, FireFox or Internet Explorer 11'
    )
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer)
},{"_process":155,"buffer":9}],149:[function(require,module,exports){
'use strict';
var pbkdf2Export = require('pbkdf2-compat/pbkdf2')

module.exports = function (crypto, exports) {
  exports = exports || {}

  var exported = pbkdf2Export(crypto)

  exports.pbkdf2 = exported.pbkdf2
  exports.pbkdf2Sync = exported.pbkdf2Sync

  return exports
}

},{"pbkdf2-compat/pbkdf2":120}],150:[function(require,module,exports){
(function (global,Buffer){
'use strict';
(function() {
  var g = ('undefined' === typeof window ? global : window) || {}
  var _crypto = (
    g.crypto || g.msCrypto || require('crypto')
  )
  module.exports = function(size) {
    // Modern Browsers
    if(_crypto.getRandomValues) {
      var bytes = new Buffer(size); //in browserify, this is an extended Uint8Array
      /* This will not work in older browsers.
       * See https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues
       */

      _crypto.getRandomValues(bytes);
      return bytes;
    }
    else if (_crypto.pseudoRandomBytes) {
      return _crypto.pseudoRandomBytes(size)
    }
    else
      throw new Error(
        'pseudo random number generation not yet implemented for this browser\n'+
        'use chrome, FireFox or Internet Explorer 11'
      )
  }
}())

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer)
},{"buffer":9,"crypto":8}],151:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function EventEmitter() {
  this._events = this._events || {};
  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
EventEmitter.defaultMaxListeners = 10;

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function(n) {
  if (!isNumber(n) || n < 0 || isNaN(n))
    throw TypeError('n must be a positive number');
  this._maxListeners = n;
  return this;
};

EventEmitter.prototype.emit = function(type) {
  var er, handler, len, args, i, listeners;

  if (!this._events)
    this._events = {};

  // If there is no 'error' event listener then throw.
  if (type === 'error') {
    if (!this._events.error ||
        (isObject(this._events.error) && !this._events.error.length)) {
      er = arguments[1];
      if (er instanceof Error) {
        throw er; // Unhandled 'error' event
      }
      throw TypeError('Uncaught, unspecified "error" event.');
    }
  }

  handler = this._events[type];

  if (isUndefined(handler))
    return false;

  if (isFunction(handler)) {
    switch (arguments.length) {
      // fast cases
      case 1:
        handler.call(this);
        break;
      case 2:
        handler.call(this, arguments[1]);
        break;
      case 3:
        handler.call(this, arguments[1], arguments[2]);
        break;
      // slower
      default:
        len = arguments.length;
        args = new Array(len - 1);
        for (i = 1; i < len; i++)
          args[i - 1] = arguments[i];
        handler.apply(this, args);
    }
  } else if (isObject(handler)) {
    len = arguments.length;
    args = new Array(len - 1);
    for (i = 1; i < len; i++)
      args[i - 1] = arguments[i];

    listeners = handler.slice();
    len = listeners.length;
    for (i = 0; i < len; i++)
      listeners[i].apply(this, args);
  }

  return true;
};

EventEmitter.prototype.addListener = function(type, listener) {
  var m;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events)
    this._events = {};

  // To avoid recursion in the case that type === "newListener"! Before
  // adding it to the listeners, first emit "newListener".
  if (this._events.newListener)
    this.emit('newListener', type,
              isFunction(listener.listener) ?
              listener.listener : listener);

  if (!this._events[type])
    // Optimize the case of one listener. Don't need the extra array object.
    this._events[type] = listener;
  else if (isObject(this._events[type]))
    // If we've already got an array, just append.
    this._events[type].push(listener);
  else
    // Adding the second element, need to change to array.
    this._events[type] = [this._events[type], listener];

  // Check for listener leak
  if (isObject(this._events[type]) && !this._events[type].warned) {
    var m;
    if (!isUndefined(this._maxListeners)) {
      m = this._maxListeners;
    } else {
      m = EventEmitter.defaultMaxListeners;
    }

    if (m && m > 0 && this._events[type].length > m) {
      this._events[type].warned = true;
      console.error('(node) warning: possible EventEmitter memory ' +
                    'leak detected. %d listeners added. ' +
                    'Use emitter.setMaxListeners() to increase limit.',
                    this._events[type].length);
      if (typeof console.trace === 'function') {
        // not supported in IE 10
        console.trace();
      }
    }
  }

  return this;
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function(type, listener) {
  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  var fired = false;

  function g() {
    this.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  g.listener = listener;
  this.on(type, g);

  return this;
};

// emits a 'removeListener' event iff the listener was removed
EventEmitter.prototype.removeListener = function(type, listener) {
  var list, position, length, i;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events || !this._events[type])
    return this;

  list = this._events[type];
  length = list.length;
  position = -1;

  if (list === listener ||
      (isFunction(list.listener) && list.listener === listener)) {
    delete this._events[type];
    if (this._events.removeListener)
      this.emit('removeListener', type, listener);

  } else if (isObject(list)) {
    for (i = length; i-- > 0;) {
      if (list[i] === listener ||
          (list[i].listener && list[i].listener === listener)) {
        position = i;
        break;
      }
    }

    if (position < 0)
      return this;

    if (list.length === 1) {
      list.length = 0;
      delete this._events[type];
    } else {
      list.splice(position, 1);
    }

    if (this._events.removeListener)
      this.emit('removeListener', type, listener);
  }

  return this;
};

EventEmitter.prototype.removeAllListeners = function(type) {
  var key, listeners;

  if (!this._events)
    return this;

  // not listening for removeListener, no need to emit
  if (!this._events.removeListener) {
    if (arguments.length === 0)
      this._events = {};
    else if (this._events[type])
      delete this._events[type];
    return this;
  }

  // emit removeListener for all listeners on all events
  if (arguments.length === 0) {
    for (key in this._events) {
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }
    this.removeAllListeners('removeListener');
    this._events = {};
    return this;
  }

  listeners = this._events[type];

  if (isFunction(listeners)) {
    this.removeListener(type, listeners);
  } else {
    // LIFO order
    while (listeners.length)
      this.removeListener(type, listeners[listeners.length - 1]);
  }
  delete this._events[type];

  return this;
};

EventEmitter.prototype.listeners = function(type) {
  var ret;
  if (!this._events || !this._events[type])
    ret = [];
  else if (isFunction(this._events[type]))
    ret = [this._events[type]];
  else
    ret = this._events[type].slice();
  return ret;
};

EventEmitter.listenerCount = function(emitter, type) {
  var ret;
  if (!emitter._events || !emitter._events[type])
    ret = 0;
  else if (isFunction(emitter._events[type]))
    ret = 1;
  else
    ret = emitter._events[type].length;
  return ret;
};

function isFunction(arg) {
  return typeof arg === 'function';
}

function isNumber(arg) {
  return typeof arg === 'number';
}

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

function isUndefined(arg) {
  return arg === void 0;
}

},{}],152:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],153:[function(require,module,exports){
module.exports = Array.isArray || function (arr) {
  return Object.prototype.toString.call(arr) == '[object Array]';
};

},{}],154:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// Split a filename into [root, dir, basename, ext], unix version
// 'root' is just a slash, or nothing.
var splitPathRe =
    /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
var splitPath = function(filename) {
  return splitPathRe.exec(filename).slice(1);
};

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function(path) {
  var result = splitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
};


exports.basename = function(path, ext) {
  var f = splitPath(path)[2];
  // TODO: make this comparison case-insensitive on windows?
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};


exports.extname = function(path) {
  return splitPath(path)[3];
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

}).call(this,require('_process'))
},{"_process":155}],155:[function(require,module,exports){
// shim for using process in browser

var process = module.exports = {};
var queue = [];
var draining = false;

function drainQueue() {
    if (draining) {
        return;
    }
    draining = true;
    var currentQueue;
    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        var i = -1;
        while (++i < len) {
            currentQueue[i]();
        }
        len = queue.length;
    }
    draining = false;
}
process.nextTick = function (fun) {
    queue.push(fun);
    if (!draining) {
        setTimeout(drainQueue, 0);
    }
};

process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

// TODO(shtylman)
process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],156:[function(require,module,exports){
module.exports = require("./lib/_stream_duplex.js")

},{"./lib/_stream_duplex.js":157}],157:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.

module.exports = Duplex;

/*<replacement>*/
var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) keys.push(key);
  return keys;
}
/*</replacement>*/


/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

var Readable = require('./_stream_readable');
var Writable = require('./_stream_writable');

util.inherits(Duplex, Readable);

forEach(objectKeys(Writable.prototype), function(method) {
  if (!Duplex.prototype[method])
    Duplex.prototype[method] = Writable.prototype[method];
});

function Duplex(options) {
  if (!(this instanceof Duplex))
    return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false)
    this.readable = false;

  if (options && options.writable === false)
    this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false)
    this.allowHalfOpen = false;

  this.once('end', onend);
}

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended)
    return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  process.nextTick(this.end.bind(this));
}

function forEach (xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

}).call(this,require('_process'))
},{"./_stream_readable":159,"./_stream_writable":161,"_process":155,"core-util-is":162,"inherits":152}],158:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.

module.exports = PassThrough;

var Transform = require('./_stream_transform');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough))
    return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function(chunk, encoding, cb) {
  cb(null, chunk);
};

},{"./_stream_transform":160,"core-util-is":162,"inherits":152}],159:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Readable;

/*<replacement>*/
var isArray = require('isarray');
/*</replacement>*/


/*<replacement>*/
var Buffer = require('buffer').Buffer;
/*</replacement>*/

Readable.ReadableState = ReadableState;

var EE = require('events').EventEmitter;

/*<replacement>*/
if (!EE.listenerCount) EE.listenerCount = function(emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

var Stream = require('stream');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

var StringDecoder;

util.inherits(Readable, Stream);

function ReadableState(options, stream) {
  options = options || {};

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  var hwm = options.highWaterMark;
  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;

  // cast to ints.
  this.highWaterMark = ~~this.highWaterMark;

  this.buffer = [];
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = false;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // In streams that never have any data, and do push(null) right away,
  // the consumer can miss the 'end' event if they do some I/O before
  // consuming the stream.  So, we don't emit('end') until some reading
  // happens.
  this.calledRead = false;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, becuase any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;


  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // when piping, we only care about 'readable' events that happen
  // after read()ing all the bytes and not getting any pushback.
  this.ranOut = false;

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder)
      StringDecoder = require('string_decoder/').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  if (!(this instanceof Readable))
    return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  Stream.call(this);
}

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function(chunk, encoding) {
  var state = this._readableState;

  if (typeof chunk === 'string' && !state.objectMode) {
    encoding = encoding || state.defaultEncoding;
    if (encoding !== state.encoding) {
      chunk = new Buffer(chunk, encoding);
      encoding = '';
    }
  }

  return readableAddChunk(this, state, chunk, encoding, false);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function(chunk) {
  var state = this._readableState;
  return readableAddChunk(this, state, chunk, '', true);
};

function readableAddChunk(stream, state, chunk, encoding, addToFront) {
  var er = chunkInvalid(state, chunk);
  if (er) {
    stream.emit('error', er);
  } else if (chunk === null || chunk === undefined) {
    state.reading = false;
    if (!state.ended)
      onEofChunk(stream, state);
  } else if (state.objectMode || chunk && chunk.length > 0) {
    if (state.ended && !addToFront) {
      var e = new Error('stream.push() after EOF');
      stream.emit('error', e);
    } else if (state.endEmitted && addToFront) {
      var e = new Error('stream.unshift() after end event');
      stream.emit('error', e);
    } else {
      if (state.decoder && !addToFront && !encoding)
        chunk = state.decoder.write(chunk);

      // update the buffer info.
      state.length += state.objectMode ? 1 : chunk.length;
      if (addToFront) {
        state.buffer.unshift(chunk);
      } else {
        state.reading = false;
        state.buffer.push(chunk);
      }

      if (state.needReadable)
        emitReadable(stream);

      maybeReadMore(stream, state);
    }
  } else if (!addToFront) {
    state.reading = false;
  }

  return needMoreData(state);
}



// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended &&
         (state.needReadable ||
          state.length < state.highWaterMark ||
          state.length === 0);
}

// backwards compatibility.
Readable.prototype.setEncoding = function(enc) {
  if (!StringDecoder)
    StringDecoder = require('string_decoder/').StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
};

// Don't raise the hwm > 128MB
var MAX_HWM = 0x800000;
function roundUpToNextPowerOf2(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2
    n--;
    for (var p = 1; p < 32; p <<= 1) n |= n >> p;
    n++;
  }
  return n;
}

function howMuchToRead(n, state) {
  if (state.length === 0 && state.ended)
    return 0;

  if (state.objectMode)
    return n === 0 ? 0 : 1;

  if (n === null || isNaN(n)) {
    // only flow one buffer at a time
    if (state.flowing && state.buffer.length)
      return state.buffer[0].length;
    else
      return state.length;
  }

  if (n <= 0)
    return 0;

  // If we're asking for more than the target buffer level,
  // then raise the water mark.  Bump up to the next highest
  // power of 2, to prevent increasing it excessively in tiny
  // amounts.
  if (n > state.highWaterMark)
    state.highWaterMark = roundUpToNextPowerOf2(n);

  // don't have that much.  return null, unless we've ended.
  if (n > state.length) {
    if (!state.ended) {
      state.needReadable = true;
      return 0;
    } else
      return state.length;
  }

  return n;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function(n) {
  var state = this._readableState;
  state.calledRead = true;
  var nOrig = n;
  var ret;

  if (typeof n !== 'number' || n > 0)
    state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 &&
      state.needReadable &&
      (state.length >= state.highWaterMark || state.ended)) {
    emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    ret = null;

    // In cases where the decoder did not receive enough data
    // to produce a full chunk, then immediately received an
    // EOF, state.buffer will contain [<Buffer >, <Buffer 00 ...>].
    // howMuchToRead will see this and coerce the amount to
    // read to zero (because it's looking at the length of the
    // first <Buffer > in state.buffer), and we'll end up here.
    //
    // This can only happen via state.decoder -- no other venue
    // exists for pushing a zero-length chunk into state.buffer
    // and triggering this behavior. In this case, we return our
    // remaining data and end the stream, if appropriate.
    if (state.length > 0 && state.decoder) {
      ret = fromList(n, state);
      state.length -= ret.length;
    }

    if (state.length === 0)
      endReadable(this);

    return ret;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;

  // if we currently have less than the highWaterMark, then also read some
  if (state.length - n <= state.highWaterMark)
    doRead = true;

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading)
    doRead = false;

  if (doRead) {
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0)
      state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
  }

  // If _read called its callback synchronously, then `reading`
  // will be false, and we need to re-evaluate how much data we
  // can return to the user.
  if (doRead && !state.reading)
    n = howMuchToRead(nOrig, state);

  if (n > 0)
    ret = fromList(n, state);
  else
    ret = null;

  if (ret === null) {
    state.needReadable = true;
    n = 0;
  }

  state.length -= n;

  // If we have nothing in the buffer, then we want to know
  // as soon as we *do* get something into the buffer.
  if (state.length === 0 && !state.ended)
    state.needReadable = true;

  // If we happened to read() exactly the remaining amount in the
  // buffer, and the EOF has been seen at this point, then make sure
  // that we emit 'end' on the very next tick.
  if (state.ended && !state.endEmitted && state.length === 0)
    endReadable(this);

  return ret;
};

function chunkInvalid(state, chunk) {
  var er = null;
  if (!Buffer.isBuffer(chunk) &&
      'string' !== typeof chunk &&
      chunk !== null &&
      chunk !== undefined &&
      !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}


function onEofChunk(stream, state) {
  if (state.decoder && !state.ended) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // if we've ended and we have some data left, then emit
  // 'readable' now to make sure it gets picked up.
  if (state.length > 0)
    emitReadable(stream);
  else
    endReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (state.emittedReadable)
    return;

  state.emittedReadable = true;
  if (state.sync)
    process.nextTick(function() {
      emitReadable_(stream);
    });
  else
    emitReadable_(stream);
}

function emitReadable_(stream) {
  stream.emit('readable');
}


// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    process.nextTick(function() {
      maybeReadMore_(stream, state);
    });
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended &&
         state.length < state.highWaterMark) {
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;
    else
      len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function(n) {
  this.emit('error', new Error('not implemented'));
};

Readable.prototype.pipe = function(dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;

  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&
              dest !== process.stdout &&
              dest !== process.stderr;

  var endFn = doEnd ? onend : cleanup;
  if (state.endEmitted)
    process.nextTick(endFn);
  else
    src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable) {
    if (readable !== src) return;
    cleanup();
  }

  function onend() {
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  function cleanup() {
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', cleanup);

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (!dest._writableState || dest._writableState.needDrain)
      ondrain();
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    unpipe();
    dest.removeListener('error', onerror);
    if (EE.listenerCount(dest, 'error') === 0)
      dest.emit('error', er);
  }
  // This is a brutally ugly hack to make sure that our error handler
  // is attached before any userland ones.  NEVER DO THIS.
  if (!dest._events || !dest._events.error)
    dest.on('error', onerror);
  else if (isArray(dest._events.error))
    dest._events.error.unshift(onerror);
  else
    dest._events.error = [onerror, dest._events.error];



  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    // the handler that waits for readable events after all
    // the data gets sucked out in flow.
    // This would be easier to follow with a .once() handler
    // in flow(), but that is too slow.
    this.on('readable', pipeOnReadable);

    state.flowing = true;
    process.nextTick(function() {
      flow(src);
    });
  }

  return dest;
};

function pipeOnDrain(src) {
  return function() {
    var dest = this;
    var state = src._readableState;
    state.awaitDrain--;
    if (state.awaitDrain === 0)
      flow(src);
  };
}

function flow(src) {
  var state = src._readableState;
  var chunk;
  state.awaitDrain = 0;

  function write(dest, i, list) {
    var written = dest.write(chunk);
    if (false === written) {
      state.awaitDrain++;
    }
  }

  while (state.pipesCount && null !== (chunk = src.read())) {

    if (state.pipesCount === 1)
      write(state.pipes, 0, null);
    else
      forEach(state.pipes, write);

    src.emit('data', chunk);

    // if anyone needs a drain, then we have to wait for that.
    if (state.awaitDrain > 0)
      return;
  }

  // if every destination was unpiped, either before entering this
  // function, or in the while loop, then stop flowing.
  //
  // NB: This is a pretty rare edge case.
  if (state.pipesCount === 0) {
    state.flowing = false;

    // if there were data event listeners added, then switch to old mode.
    if (EE.listenerCount(src, 'data') > 0)
      emitDataEvents(src);
    return;
  }

  // at this point, no one needed a drain, so we just ran out of data
  // on the next readable event, start it over again.
  state.ranOut = true;
}

function pipeOnReadable() {
  if (this._readableState.ranOut) {
    this._readableState.ranOut = false;
    flow(this);
  }
}


Readable.prototype.unpipe = function(dest) {
  var state = this._readableState;

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0)
    return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes)
      return this;

    if (!dest)
      dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    this.removeListener('readable', pipeOnReadable);
    state.flowing = false;
    if (dest)
      dest.emit('unpipe', this);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    this.removeListener('readable', pipeOnReadable);
    state.flowing = false;

    for (var i = 0; i < len; i++)
      dests[i].emit('unpipe', this);
    return this;
  }

  // try to find the right one.
  var i = indexOf(state.pipes, dest);
  if (i === -1)
    return this;

  state.pipes.splice(i, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1)
    state.pipes = state.pipes[0];

  dest.emit('unpipe', this);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function(ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  if (ev === 'data' && !this._readableState.flowing)
    emitDataEvents(this);

  if (ev === 'readable' && this.readable) {
    var state = this._readableState;
    if (!state.readableListening) {
      state.readableListening = true;
      state.emittedReadable = false;
      state.needReadable = true;
      if (!state.reading) {
        this.read(0);
      } else if (state.length) {
        emitReadable(this, state);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function() {
  emitDataEvents(this);
  this.read(0);
  this.emit('resume');
};

Readable.prototype.pause = function() {
  emitDataEvents(this, true);
  this.emit('pause');
};

function emitDataEvents(stream, startPaused) {
  var state = stream._readableState;

  if (state.flowing) {
    // https://github.com/isaacs/readable-stream/issues/16
    throw new Error('Cannot switch to old mode now.');
  }

  var paused = startPaused || false;
  var readable = false;

  // convert to an old-style stream.
  stream.readable = true;
  stream.pipe = Stream.prototype.pipe;
  stream.on = stream.addListener = Stream.prototype.on;

  stream.on('readable', function() {
    readable = true;

    var c;
    while (!paused && (null !== (c = stream.read())))
      stream.emit('data', c);

    if (c === null) {
      readable = false;
      stream._readableState.needReadable = true;
    }
  });

  stream.pause = function() {
    paused = true;
    this.emit('pause');
  };

  stream.resume = function() {
    paused = false;
    if (readable)
      process.nextTick(function() {
        stream.emit('readable');
      });
    else
      this.read(0);
    this.emit('resume');
  };

  // now make it start, just in case it hadn't already.
  stream.emit('readable');
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function(stream) {
  var state = this._readableState;
  var paused = false;

  var self = this;
  stream.on('end', function() {
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length)
        self.push(chunk);
    }

    self.push(null);
  });

  stream.on('data', function(chunk) {
    if (state.decoder)
      chunk = state.decoder.write(chunk);

    // don't skip over falsy values in objectMode
    //if (state.objectMode && util.isNullOrUndefined(chunk))
    if (state.objectMode && (chunk === null || chunk === undefined))
      return;
    else if (!state.objectMode && (!chunk || !chunk.length))
      return;

    var ret = self.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (typeof stream[i] === 'function' &&
        typeof this[i] === 'undefined') {
      this[i] = function(method) { return function() {
        return stream[method].apply(stream, arguments);
      }}(i);
    }
  }

  // proxy certain important events.
  var events = ['error', 'close', 'destroy', 'pause', 'resume'];
  forEach(events, function(ev) {
    stream.on(ev, self.emit.bind(self, ev));
  });

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  self._read = function(n) {
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return self;
};



// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
function fromList(n, state) {
  var list = state.buffer;
  var length = state.length;
  var stringMode = !!state.decoder;
  var objectMode = !!state.objectMode;
  var ret;

  // nothing in the list, definitely empty.
  if (list.length === 0)
    return null;

  if (length === 0)
    ret = null;
  else if (objectMode)
    ret = list.shift();
  else if (!n || n >= length) {
    // read it all, truncate the array.
    if (stringMode)
      ret = list.join('');
    else
      ret = Buffer.concat(list, length);
    list.length = 0;
  } else {
    // read just some of it.
    if (n < list[0].length) {
      // just take a part of the first list item.
      // slice is the same for buffers and strings.
      var buf = list[0];
      ret = buf.slice(0, n);
      list[0] = buf.slice(n);
    } else if (n === list[0].length) {
      // first list is a perfect match
      ret = list.shift();
    } else {
      // complex case.
      // we have enough to cover it, but it spans past the first buffer.
      if (stringMode)
        ret = '';
      else
        ret = new Buffer(n);

      var c = 0;
      for (var i = 0, l = list.length; i < l && c < n; i++) {
        var buf = list[0];
        var cpy = Math.min(n - c, buf.length);

        if (stringMode)
          ret += buf.slice(0, cpy);
        else
          buf.copy(ret, c, 0, cpy);

        if (cpy < buf.length)
          list[0] = buf.slice(cpy);
        else
          list.shift();

        c += cpy;
      }
    }
  }

  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0)
    throw new Error('endReadable called on non-empty stream');

  if (!state.endEmitted && state.calledRead) {
    state.ended = true;
    process.nextTick(function() {
      // Check that we didn't get one last unshift.
      if (!state.endEmitted && state.length === 0) {
        state.endEmitted = true;
        stream.readable = false;
        stream.emit('end');
      }
    });
  }
}

function forEach (xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

function indexOf (xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}

}).call(this,require('_process'))
},{"_process":155,"buffer":9,"core-util-is":162,"events":151,"inherits":152,"isarray":153,"stream":167,"string_decoder/":168}],160:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.


// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.

module.exports = Transform;

var Duplex = require('./_stream_duplex');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(Transform, Duplex);


function TransformState(options, stream) {
  this.afterTransform = function(er, data) {
    return afterTransform(stream, er, data);
  };

  this.needTransform = false;
  this.transforming = false;
  this.writecb = null;
  this.writechunk = null;
}

function afterTransform(stream, er, data) {
  var ts = stream._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb)
    return stream.emit('error', new Error('no writecb in Transform class'));

  ts.writechunk = null;
  ts.writecb = null;

  if (data !== null && data !== undefined)
    stream.push(data);

  if (cb)
    cb(er);

  var rs = stream._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    stream._read(rs.highWaterMark);
  }
}


function Transform(options) {
  if (!(this instanceof Transform))
    return new Transform(options);

  Duplex.call(this, options);

  var ts = this._transformState = new TransformState(options, this);

  // when the writable side finishes, then flush out anything remaining.
  var stream = this;

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  this.once('finish', function() {
    if ('function' === typeof this._flush)
      this._flush(function(er) {
        done(stream, er);
      });
    else
      done(stream);
  });
}

Transform.prototype.push = function(chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function(chunk, encoding, cb) {
  throw new Error('not implemented');
};

Transform.prototype._write = function(chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform ||
        rs.needReadable ||
        rs.length < rs.highWaterMark)
      this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function(n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};


function done(stream, er) {
  if (er)
    return stream.emit('error', er);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  var ws = stream._writableState;
  var rs = stream._readableState;
  var ts = stream._transformState;

  if (ws.length)
    throw new Error('calling transform done when ws.length != 0');

  if (ts.transforming)
    throw new Error('calling transform done when still transforming');

  return stream.push(null);
}

},{"./_stream_duplex":157,"core-util-is":162,"inherits":152}],161:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// A bit simpler than readable streams.
// Implement an async ._write(chunk, cb), and it'll handle all
// the drain event emission and buffering.

module.exports = Writable;

/*<replacement>*/
var Buffer = require('buffer').Buffer;
/*</replacement>*/

Writable.WritableState = WritableState;


/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

var Stream = require('stream');

util.inherits(Writable, Stream);

function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
}

function WritableState(options, stream) {
  options = options || {};

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  var hwm = options.highWaterMark;
  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;

  // cast to ints.
  this.highWaterMark = ~~this.highWaterMark;

  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, becuase any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function(er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;

  this.buffer = [];

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;
}

function Writable(options) {
  var Duplex = require('./_stream_duplex');

  // Writable ctor is applied to Duplexes, though they're not
  // instanceof Writable, they're instanceof Readable.
  if (!(this instanceof Writable) && !(this instanceof Duplex))
    return new Writable(options);

  this._writableState = new WritableState(options, this);

  // legacy.
  this.writable = true;

  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function() {
  this.emit('error', new Error('Cannot pipe. Not readable.'));
};


function writeAfterEnd(stream, state, cb) {
  var er = new Error('write after end');
  // TODO: defer error events consistently everywhere, not just the cb
  stream.emit('error', er);
  process.nextTick(function() {
    cb(er);
  });
}

// If we get something that is not a buffer, string, null, or undefined,
// and we're not in objectMode, then that's an error.
// Otherwise stream chunks are all considered to be of length=1, and the
// watermarks determine how many objects to keep in the buffer, rather than
// how many bytes or characters.
function validChunk(stream, state, chunk, cb) {
  var valid = true;
  if (!Buffer.isBuffer(chunk) &&
      'string' !== typeof chunk &&
      chunk !== null &&
      chunk !== undefined &&
      !state.objectMode) {
    var er = new TypeError('Invalid non-string/buffer chunk');
    stream.emit('error', er);
    process.nextTick(function() {
      cb(er);
    });
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function(chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (Buffer.isBuffer(chunk))
    encoding = 'buffer';
  else if (!encoding)
    encoding = state.defaultEncoding;

  if (typeof cb !== 'function')
    cb = function() {};

  if (state.ended)
    writeAfterEnd(this, state, cb);
  else if (validChunk(this, state, chunk, cb))
    ret = writeOrBuffer(this, state, chunk, encoding, cb);

  return ret;
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode &&
      state.decodeStrings !== false &&
      typeof chunk === 'string') {
    chunk = new Buffer(chunk, encoding);
  }
  return chunk;
}

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, chunk, encoding, cb) {
  chunk = decodeChunk(state, chunk, encoding);
  if (Buffer.isBuffer(chunk))
    encoding = 'buffer';
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret)
    state.needDrain = true;

  if (state.writing)
    state.buffer.push(new WriteReq(chunk, encoding, cb));
  else
    doWrite(stream, state, len, chunk, encoding, cb);

  return ret;
}

function doWrite(stream, state, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  if (sync)
    process.nextTick(function() {
      cb(er);
    });
  else
    cb(er);

  stream._writableState.errorEmitted = true;
  stream.emit('error', er);
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er)
    onwriteError(stream, state, sync, er, cb);
  else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(stream, state);

    if (!finished && !state.bufferProcessing && state.buffer.length)
      clearBuffer(stream, state);

    if (sync) {
      process.nextTick(function() {
        afterWrite(stream, state, finished, cb);
      });
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished)
    onwriteDrain(stream, state);
  cb();
  if (finished)
    finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}


// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;

  for (var c = 0; c < state.buffer.length; c++) {
    var entry = state.buffer[c];
    var chunk = entry.chunk;
    var encoding = entry.encoding;
    var cb = entry.callback;
    var len = state.objectMode ? 1 : chunk.length;

    doWrite(stream, state, len, chunk, encoding, cb);

    // if we didn't call the onwrite immediately, then
    // it means that we need to wait until it does.
    // also, that means that the chunk and cb are currently
    // being processed, so move the buffer counter past them.
    if (state.writing) {
      c++;
      break;
    }
  }

  state.bufferProcessing = false;
  if (c < state.buffer.length)
    state.buffer = state.buffer.slice(c);
  else
    state.buffer.length = 0;
}

Writable.prototype._write = function(chunk, encoding, cb) {
  cb(new Error('not implemented'));
};

Writable.prototype.end = function(chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (typeof chunk !== 'undefined' && chunk !== null)
    this.write(chunk, encoding);

  // ignore unnecessary end() calls.
  if (!state.ending && !state.finished)
    endWritable(this, state, cb);
};


function needFinish(stream, state) {
  return (state.ending &&
          state.length === 0 &&
          !state.finished &&
          !state.writing);
}

function finishMaybe(stream, state) {
  var need = needFinish(stream, state);
  if (need) {
    state.finished = true;
    stream.emit('finish');
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished)
      process.nextTick(cb);
    else
      stream.once('finish', cb);
  }
  state.ended = true;
}

}).call(this,require('_process'))
},{"./_stream_duplex":157,"_process":155,"buffer":9,"core-util-is":162,"inherits":152,"stream":167}],162:[function(require,module,exports){
(function (Buffer){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

function isBuffer(arg) {
  return Buffer.isBuffer(arg);
}
exports.isBuffer = isBuffer;

function objectToString(o) {
  return Object.prototype.toString.call(o);
}
}).call(this,require("buffer").Buffer)
},{"buffer":9}],163:[function(require,module,exports){
module.exports = require("./lib/_stream_passthrough.js")

},{"./lib/_stream_passthrough.js":158}],164:[function(require,module,exports){
var Stream = require('stream'); // hack to fix a circular dependency issue when used with browserify
exports = module.exports = require('./lib/_stream_readable.js');
exports.Stream = Stream;
exports.Readable = exports;
exports.Writable = require('./lib/_stream_writable.js');
exports.Duplex = require('./lib/_stream_duplex.js');
exports.Transform = require('./lib/_stream_transform.js');
exports.PassThrough = require('./lib/_stream_passthrough.js');

},{"./lib/_stream_duplex.js":157,"./lib/_stream_passthrough.js":158,"./lib/_stream_readable.js":159,"./lib/_stream_transform.js":160,"./lib/_stream_writable.js":161,"stream":167}],165:[function(require,module,exports){
module.exports = require("./lib/_stream_transform.js")

},{"./lib/_stream_transform.js":160}],166:[function(require,module,exports){
module.exports = require("./lib/_stream_writable.js")

},{"./lib/_stream_writable.js":161}],167:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Stream;

var EE = require('events').EventEmitter;
var inherits = require('inherits');

inherits(Stream, EE);
Stream.Readable = require('readable-stream/readable.js');
Stream.Writable = require('readable-stream/writable.js');
Stream.Duplex = require('readable-stream/duplex.js');
Stream.Transform = require('readable-stream/transform.js');
Stream.PassThrough = require('readable-stream/passthrough.js');

// Backwards-compat with node 0.4.x
Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};

},{"events":151,"inherits":152,"readable-stream/duplex.js":156,"readable-stream/passthrough.js":163,"readable-stream/readable.js":164,"readable-stream/transform.js":165,"readable-stream/writable.js":166}],168:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var Buffer = require('buffer').Buffer;

var isBufferEncoding = Buffer.isEncoding
  || function(encoding) {
       switch (encoding && encoding.toLowerCase()) {
         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;
         default: return false;
       }
     }


function assertEncoding(encoding) {
  if (encoding && !isBufferEncoding(encoding)) {
    throw new Error('Unknown encoding: ' + encoding);
  }
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters. CESU-8 is handled as part of the UTF-8 encoding.
//
// @TODO Handling all encodings inside a single object makes it very difficult
// to reason about this code, so it should be split up in the future.
// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code
// points as used by CESU-8.
var StringDecoder = exports.StringDecoder = function(encoding) {
  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');
  assertEncoding(encoding);
  switch (this.encoding) {
    case 'utf8':
      // CESU-8 represents each of Surrogate Pair by 3-bytes
      this.surrogateSize = 3;
      break;
    case 'ucs2':
    case 'utf16le':
      // UTF-16 represents each of Surrogate Pair by 2-bytes
      this.surrogateSize = 2;
      this.detectIncompleteChar = utf16DetectIncompleteChar;
      break;
    case 'base64':
      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.
      this.surrogateSize = 3;
      this.detectIncompleteChar = base64DetectIncompleteChar;
      break;
    default:
      this.write = passThroughWrite;
      return;
  }

  // Enough space to store all bytes of a single character. UTF-8 needs 4
  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).
  this.charBuffer = new Buffer(6);
  // Number of bytes received for the current incomplete multi-byte character.
  this.charReceived = 0;
  // Number of bytes expected for the current incomplete multi-byte character.
  this.charLength = 0;
};


// write decodes the given buffer and returns it as JS string that is
// guaranteed to not contain any partial multi-byte characters. Any partial
// character found at the end of the buffer is buffered up, and will be
// returned when calling write again with the remaining bytes.
//
// Note: Converting a Buffer containing an orphan surrogate to a String
// currently works, but converting a String to a Buffer (via `new Buffer`, or
// Buffer#write) will replace incomplete surrogates with the unicode
// replacement character. See https://codereview.chromium.org/121173009/ .
StringDecoder.prototype.write = function(buffer) {
  var charStr = '';
  // if our last write ended with an incomplete multibyte character
  while (this.charLength) {
    // determine how many remaining bytes this buffer has to offer for this char
    var available = (buffer.length >= this.charLength - this.charReceived) ?
        this.charLength - this.charReceived :
        buffer.length;

    // add the new bytes to the char buffer
    buffer.copy(this.charBuffer, this.charReceived, 0, available);
    this.charReceived += available;

    if (this.charReceived < this.charLength) {
      // still not enough chars in this buffer? wait for more ...
      return '';
    }

    // remove bytes belonging to the current character from the buffer
    buffer = buffer.slice(available, buffer.length);

    // get the character that was split
    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);

    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
    var charCode = charStr.charCodeAt(charStr.length - 1);
    if (charCode >= 0xD800 && charCode <= 0xDBFF) {
      this.charLength += this.surrogateSize;
      charStr = '';
      continue;
    }
    this.charReceived = this.charLength = 0;

    // if there are no more bytes in this buffer, just emit our char
    if (buffer.length === 0) {
      return charStr;
    }
    break;
  }

  // determine and set charLength / charReceived
  this.detectIncompleteChar(buffer);

  var end = buffer.length;
  if (this.charLength) {
    // buffer the incomplete character bytes we got
    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);
    end -= this.charReceived;
  }

  charStr += buffer.toString(this.encoding, 0, end);

  var end = charStr.length - 1;
  var charCode = charStr.charCodeAt(end);
  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
  if (charCode >= 0xD800 && charCode <= 0xDBFF) {
    var size = this.surrogateSize;
    this.charLength += size;
    this.charReceived += size;
    this.charBuffer.copy(this.charBuffer, size, 0, size);
    buffer.copy(this.charBuffer, 0, 0, size);
    return charStr.substring(0, end);
  }

  // or just emit the charStr
  return charStr;
};

// detectIncompleteChar determines if there is an incomplete UTF-8 character at
// the end of the given buffer. If so, it sets this.charLength to the byte
// length that character, and sets this.charReceived to the number of bytes
// that are available for this character.
StringDecoder.prototype.detectIncompleteChar = function(buffer) {
  // determine how many bytes we have to check at the end of this buffer
  var i = (buffer.length >= 3) ? 3 : buffer.length;

  // Figure out if one of the last i bytes of our buffer announces an
  // incomplete char.
  for (; i > 0; i--) {
    var c = buffer[buffer.length - i];

    // See http://en.wikipedia.org/wiki/UTF-8#Description

    // 110XXXXX
    if (i == 1 && c >> 5 == 0x06) {
      this.charLength = 2;
      break;
    }

    // 1110XXXX
    if (i <= 2 && c >> 4 == 0x0E) {
      this.charLength = 3;
      break;
    }

    // 11110XXX
    if (i <= 3 && c >> 3 == 0x1E) {
      this.charLength = 4;
      break;
    }
  }
  this.charReceived = i;
};

StringDecoder.prototype.end = function(buffer) {
  var res = '';
  if (buffer && buffer.length)
    res = this.write(buffer);

  if (this.charReceived) {
    var cr = this.charReceived;
    var buf = this.charBuffer;
    var enc = this.encoding;
    res += buf.slice(0, cr).toString(enc);
  }

  return res;
};

function passThroughWrite(buffer) {
  return buffer.toString(this.encoding);
}

function utf16DetectIncompleteChar(buffer) {
  this.charReceived = buffer.length % 2;
  this.charLength = this.charReceived ? 2 : 0;
}

function base64DetectIncompleteChar(buffer) {
  this.charReceived = buffer.length % 3;
  this.charLength = this.charReceived ? 3 : 0;
}

},{"buffer":9}],169:[function(require,module,exports){
var indexOf = require('indexof');

var Object_keys = function (obj) {
    if (Object.keys) return Object.keys(obj)
    else {
        var res = [];
        for (var key in obj) res.push(key)
        return res;
    }
};

var forEach = function (xs, fn) {
    if (xs.forEach) return xs.forEach(fn)
    else for (var i = 0; i < xs.length; i++) {
        fn(xs[i], i, xs);
    }
};

var defineProp = (function() {
    try {
        Object.defineProperty({}, '_', {});
        return function(obj, name, value) {
            Object.defineProperty(obj, name, {
                writable: true,
                enumerable: false,
                configurable: true,
                value: value
            })
        };
    } catch(e) {
        return function(obj, name, value) {
            obj[name] = value;
        };
    }
}());

var globals = ['Array', 'Boolean', 'Date', 'Error', 'EvalError', 'Function',
'Infinity', 'JSON', 'Math', 'NaN', 'Number', 'Object', 'RangeError',
'ReferenceError', 'RegExp', 'String', 'SyntaxError', 'TypeError', 'URIError',
'decodeURI', 'decodeURIComponent', 'encodeURI', 'encodeURIComponent', 'escape',
'eval', 'isFinite', 'isNaN', 'parseFloat', 'parseInt', 'undefined', 'unescape'];

function Context() {}
Context.prototype = {};

var Script = exports.Script = function NodeScript (code) {
    if (!(this instanceof Script)) return new Script(code);
    this.code = code;
};

Script.prototype.runInContext = function (context) {
    if (!(context instanceof Context)) {
        throw new TypeError("needs a 'context' argument.");
    }
    
    var iframe = document.createElement('iframe');
    if (!iframe.style) iframe.style = {};
    iframe.style.display = 'none';
    
    document.body.appendChild(iframe);
    
    var win = iframe.contentWindow;
    var wEval = win.eval, wExecScript = win.execScript;

    if (!wEval && wExecScript) {
        // win.eval() magically appears when this is called in IE:
        wExecScript.call(win, 'null');
        wEval = win.eval;
    }
    
    forEach(Object_keys(context), function (key) {
        win[key] = context[key];
    });
    forEach(globals, function (key) {
        if (context[key]) {
            win[key] = context[key];
        }
    });
    
    var winKeys = Object_keys(win);

    var res = wEval.call(win, this.code);
    
    forEach(Object_keys(win), function (key) {
        // Avoid copying circular objects like `top` and `window` by only
        // updating existing context properties or new properties in the `win`
        // that was only introduced after the eval.
        if (key in context || indexOf(winKeys, key) === -1) {
            context[key] = win[key];
        }
    });

    forEach(globals, function (key) {
        if (!(key in context)) {
            defineProp(context, key, win[key]);
        }
    });
    
    document.body.removeChild(iframe);
    
    return res;
};

Script.prototype.runInThisContext = function () {
    return eval(this.code); // maybe...
};

Script.prototype.runInNewContext = function (context) {
    var ctx = Script.createContext(context);
    var res = this.runInContext(ctx);

    forEach(Object_keys(ctx), function (key) {
        context[key] = ctx[key];
    });

    return res;
};

forEach(Object_keys(Script.prototype), function (name) {
    exports[name] = Script[name] = function (code) {
        var s = Script(code);
        return s[name].apply(s, [].slice.call(arguments, 1));
    };
});

exports.createScript = function (code) {
    return exports.Script(code);
};

exports.createContext = Script.createContext = function (context) {
    var copy = new Context();
    if(typeof context === 'object') {
        forEach(Object_keys(context), function (key) {
            copy[key] = context[key];
        });
    }
    return copy;
};

},{"indexof":170}],170:[function(require,module,exports){

var indexOf = [].indexOf;

module.exports = function(arr, obj){
  if (indexOf) return arr.indexOf(obj);
  for (var i = 0; i < arr.length; ++i) {
    if (arr[i] === obj) return i;
  }
  return -1;
};
},{}]},{},[6]);
